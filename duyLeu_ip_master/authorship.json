[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"# DukePro","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"\u003e ‚ÄúYour mind is for having ideas, not holding them.‚Äù ‚Äì David Allen","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"**DukePro frees your mind of having to remember things you need to do. It\u0027s,**","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"- text-based","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"- easy to learn","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"- ***FAST. SUPER FAST*** to use","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"All you need to do is,","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"1. download it from [here](https://github.com/duyLeu/ip/releases/tag/A-Jar).","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"2. double-click it.","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"3. add your *tasks*.","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"4. let it manage your tasks for you üòâ","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"And it is **FREE!**","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"## Features:","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"- [X] Managing tasks","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"- [X] Managing deadlines (coming soon)","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"- [X] Reminders (coming soon)","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"If you are a Java programmer, you can use it to practice Java too. Here\u0027s the main method:","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"```java","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"public class Main {","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"```","lastModifiedDate":"2025-09-11T11:37:20","isFullCredit":false}],"authorContributionMap":{"duyLeu":27,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"plugins {","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"    id \u0027java\u0027","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"    id \u0027application\u0027","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"repositories {","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"    mavenCentral()","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"dependencies {","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-20T18:51:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-17T21:14:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"test {","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"    useJUnitPlatform()","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"    testLogging {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"        showExceptions \u003d true","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"        exceptionFormat \u003d \"full\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"        showCauses \u003d true","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"        showStackTraces \u003d true","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"application {","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"    mainClass.set(\u0027moon.Launcher\u0027)","lastModifiedDate":"2025-09-11T11:24:19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-11T11:24:19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-11T11:24:19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"shadowJar {","lastModifiedDate":"2025-09-11T11:24:19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"    archiveFileName \u003d \u0027moon.jar\u0027","lastModifiedDate":"2025-09-11T11:24:19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"duyLeu"},"content":"checkstyle {","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"duyLeu"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"duyLeu"},"content":"    configFile \u003d file(\"config/checkstyle/checkstyle.xml\")","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-09T18:00:10","isFullCredit":false}],"authorContributionMap":{"duyLeu":57}},{"path":"src/main/java/moon/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon;","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-23T10:13:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":" * Entry point of the program.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" * Delegates to {@link Main}, which is the actual JavaFX {@link Application}.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" * This indirection avoids classpath issues with JavaFX when packaging with Gradle.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"public class Launcher {","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"     * Launches the JavaFX application.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"     * @param args command-line arguments","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-21T18:26:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-21T18:26:40","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-08-21T18:26:40","isFullCredit":false}],"authorContributionMap":{"duyLeu":20}},{"path":"src/main/java/moon/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import java.net.URL;","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"import moon.logic.Moon;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"import moon.ui.MainWindow;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":" * Main JavaFX application class.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":" * Loads the FXML layout, wires it to the {@link MainWindow} controller,","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":" * and injects the {@link Moon} chatbot instance. Also sets up the primary stage.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"    private final Moon moon \u003d new Moon();","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"     * Starts the JavaFX application by loading {@code MainWindow.fxml},","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"     * attaching the controller, and showing the primary stage.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"     * @param stage the primary JavaFX stage","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"        try {","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"            URL fxml \u003d Main.class.getResource(\"/view/MainWindow.fxml\");","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(fxml);","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"            AnchorPane root \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"            MainWindow controller \u003d fxmlLoader.getController();","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"            controller.setMoon(moon); // inject chatbot logic","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"            Scene scene \u003d new Scene(root);","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"            stage.setTitle(\"Moon\");","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"            stage.show();","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"            controller.showGreeting();","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"            controller.showInitialStorage();","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false}],"authorContributionMap":{"duyLeu":52}},{"path":"src/main/java/moon/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.commands;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.models.Task;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":" * Abstract base class for commands that add new tasks.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" * Provides a helper method to append a task to the current task list.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"public abstract class AddCommand extends BaseCommand {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"     * Adds the given task to the task list.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"     * @param task Task to add","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"    public void addToStorage(Task task) {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"        super.getList().add(task);","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false}],"authorContributionMap":{"duyLeu":20}},{"path":"src/main/java/moon/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.commands;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.commands.enums.Command;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.models.Deadline;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import moon.ui.UiMessages;","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" * Command to add a {@link Deadline} task to the task list.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"    /** Associated command keyword and status code. */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"    public static final Command COMMAND \u003d Command.DEADLINE;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"    /** The deadline task to be added. */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"    public final Deadline deadline;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"     * Creates a new AddDeadlineCommand.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"     * @param deadline The deadline task to add","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"    public AddDeadlineCommand(Deadline deadline) {","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"     * Adds the deadline to the task list and shows a confirmation message.","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"     * @return confirmation message to be displayed to the user","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"    public String execute() {","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"        addToStorage(deadline);","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"        return UiMessages.showAddTaskMessage(deadline);","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false}],"authorContributionMap":{"duyLeu":36}},{"path":"src/main/java/moon/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.commands;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.commands.enums.Command;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.models.Event;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import moon.ui.UiMessages;","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" * Command to add an {@link Event} task to the task list.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"    /** Associated command keyword and status code. */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"    public static final Command COMMAND \u003d Command.EVENT;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"    /** The event task to be added. */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"    public final Event event;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"     * Creates a new AddEventCommand.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"     * @param event The event task to add","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"    public AddEventCommand(Event event) {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"        this.event \u003d event;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"     * Adds the event to the task list and shows a confirmation message.","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"     * @return confirmation message to be displayed to the user","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"    public String execute() {","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"        addToStorage(event);","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"        return UiMessages.showAddTaskMessage(event);","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false}],"authorContributionMap":{"duyLeu":36}},{"path":"src/main/java/moon/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.commands;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.commands.enums.Command;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.models.Todo;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import moon.ui.UiMessages;","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" * Command to add a {@link Todo} task to the task list.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"public class AddTodoCommand extends AddCommand {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"    /** Associated command keyword and status code. */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"    public static final Command COMMAND \u003d Command.TODO;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"    /** The todo task to be added. */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"    public final Todo todo;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"     * Creates a new AddTodoCommand.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"     * @param todo The todo task to add","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"    public AddTodoCommand(Todo todo) {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"        this.todo \u003d todo;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"     * Adds the todo to the task list and shows a confirmation message.","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"     * @return confirmation message to be displayed to the user","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"    public String execute() {","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"        addToStorage(todo);","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"        return UiMessages.showAddTaskMessage(todo);","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false}],"authorContributionMap":{"duyLeu":36}},{"path":"src/main/java/moon/commands/BaseCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.commands;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.models.TaskList;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.ParseException;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":" * Abstract base class for all commands in the Moon chatbot.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" * Provides common metadata (task list and UI) and a shared error code.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" * Each concrete command must implement {@link #execute()}.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"public abstract class BaseCommand {","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"    private TaskList list;","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"     * Executes this command.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"     * @return confirmation message to be displayed to the user","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"     * @throws ParseException If the input could not be parsed properly","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"    public abstract String execute() throws ParseException;","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"     * Sets metadata needed by this command before execution.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"     * @param list The current task list","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"    public void setMetaData(TaskList list) {","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"        this.list \u003d list;","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"     * Returns the task list associated with this command.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"     * @return Task list","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"    public TaskList getList() {","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"        return this.list;","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false}],"authorContributionMap":{"duyLeu":40}},{"path":"src/main/java/moon/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.commands;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.commands.enums.Command;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.models.Task;","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.InvalidIndexException;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"import moon.parser.util.FormatChecker;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"import moon.ui.UiMessages;","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" * Command to delete a {@link Task} task from the task list.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"public class DeleteCommand extends BaseCommand {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"    /** Associated command keyword and status code. */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"    public static final Command COMMAND \u003d Command.DELETE;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"    /** Index of the task to be deleted */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"    public final int deletedIndex;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"     * Creates a new DeleteCommand.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"     * @param index Index of the task to be deleted","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"        this.deletedIndex \u003d index;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"     * Executes the delete command.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"     * Removes the specified task from the task list and shows a confirmation message.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"     * @return confirmation message of the deleted task to be displayed to the user","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"     * @throws InvalidIndexException If the provided index is out of range","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"    public String execute() throws InvalidIndexException {","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"        FormatChecker.throwExceptionIfOutOfIndex(deletedIndex, getList());","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"        Task deletedTask \u003d this.getList().delete(deletedIndex);","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"        return UiMessages.showDeleteTaskMessage(deletedTask);","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false}],"authorContributionMap":{"duyLeu":42}},{"path":"src/main/java/moon/commands/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.commands;","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import java.util.List;","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import moon.commands.enums.Command;","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"import moon.models.Task;","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"import moon.models.TaskMatch;","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"import moon.ui.UiMessages;","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":" * Command to find {@link Task} in the task list with matching names.","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"public class FindTaskCommand extends BaseCommand {","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"    private static final Command COMMAND \u003d Command.FIND;","lastModifiedDate":"2025-09-10T12:43:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"    private final String keyword;","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"    public FindTaskCommand(String keyword) {","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"     * Executes the find task command to find all the tasks with","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"     * matching name in the task list.","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"     * @return list of tasks found to be displayed to the user","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"    public String execute() {","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"        List\u003cTaskMatch\u003e matchingTasks \u003d this.getList().findByName(this.keyword);","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"        return UiMessages.showTasksMatchedMessage(matchingTasks, this.keyword);","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false}],"authorContributionMap":{"duyLeu":32}},{"path":"src/main/java/moon/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.commands;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.commands.enums.Command;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.models.Task;","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import moon.ui.UiMessages;","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" * Command to find a {@link Task} in the task list.","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"public class ListCommand extends BaseCommand {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"    /** Associated command keyword and status code. */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"    public static final Command COMMAND \u003d Command.LIST;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"     * Executes the list command to show all the tasks in the task list.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"     * @return confirmation message and the task list to be displayed to the user","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"    public String execute() {","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"        return UiMessages.showListMessage(getList());","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false}],"authorContributionMap":{"duyLeu":23}},{"path":"src/main/java/moon/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.commands;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.commands.enums.Command;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.models.Task;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.InvalidIndexException;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"import moon.parser.util.FormatChecker;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"import moon.ui.UiMessages;","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" * Command to mark a {@link Task} in the task list as \u003cb\u003edone\u003c/b\u003e.","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"public class MarkCommand extends BaseCommand {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"    /** Associated command keyword and status code. */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"    public static final Command COMMAND \u003d Command.MARK;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"    /** Index of the task to be marked as \u003cb\u003edone\u003c/b\u003e. */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"    public final int markedIndex;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"     * Creates a new MarkCommand.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"     * @param index Index of the task to be marked \u003cb\u003edone\u003c/b\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"        this.markedIndex \u003d index;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"     * Marks the specified task in the task list as \u003cb\u003edone\u003c/b\u003e.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003eIf the index is invalid, an {@link InvalidIndexException} is thrown.\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003eIf the task is already marked, an informational message is shown.\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003eIf the task is successfully marked, a confirmation message is shown.\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"     * @return message of the marked task to be displayed to the user","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"     * @throws InvalidIndexException If the provided index is out of range","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"    public String execute() throws InvalidIndexException {","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"        FormatChecker.throwExceptionIfOutOfIndex(markedIndex, getList());","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"        Task taskToMark \u003d getList().get(markedIndex);","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"        if (taskToMark.isDone()) {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"            return UiMessages.showAlreadyMarkedMessage(taskToMark);","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"        } else {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"            taskToMark.setDone(true);","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"            return UiMessages.showMarkedSuccessfulMessage(taskToMark);","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false}],"authorContributionMap":{"duyLeu":51}},{"path":"src/main/java/moon/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.commands;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.commands.enums.Command;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.models.Task;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.InvalidIndexException;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"import moon.parser.util.FormatChecker;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"import moon.ui.UiMessages;","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" * Command to mark a {@link Task} in the task list as \u003cb\u003enot done\u003c/b\u003e.","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"public class UnmarkCommand extends BaseCommand {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"    /** Associated command keyword and status code. */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"    public static final Command COMMAND \u003d Command.UNMARK;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"    /** Index of the task to be marked as \u003cb\u003enot done\u003c/b\u003e. */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"    public final int unmarkedIndex;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"     * Creates a new UnmarkCommand.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"     * @param index Index of the task to be marked \u003cb\u003enot done\u003c/b\u003e.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"        this.unmarkedIndex \u003d index;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"     * Marks the specified task in the task list as \u003cb\u003enot done\u003c/b\u003e.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003eIf the index is invalid, an {@link InvalidIndexException} is thrown.\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003eIf the task is already unmarked, an informational message is shown.\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003eIf the task is successfully unmarked, a confirmation message is shown.\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"     * @return message of the unmarked task to be displayed to the user","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"     * @throws InvalidIndexException If the provided index is out of range","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"    public String execute() throws InvalidIndexException {","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"        FormatChecker.throwExceptionIfOutOfIndex(unmarkedIndex, getList());","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"        Task taskToUnmark \u003d getList().get(unmarkedIndex);","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"        if (!taskToUnmark.isDone()) {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"            return UiMessages.showAlreadyUnmarkedMessage(taskToUnmark);","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"        } else {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"            taskToUnmark.setDone(false);","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"            return UiMessages.showUnmarkedSuccessfulMessage(taskToUnmark);","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false}],"authorContributionMap":{"duyLeu":51}},{"path":"src/main/java/moon/commands/enums/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.commands.enums;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-23T10:13:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":" * Represents all supported commands in the Moon chatbot.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" * Each command has:","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" *   \u003cli\u003ea keyword entered by the user,\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":" *   \u003cli\u003ea usage format string (for error/help messages), and\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" *   \u003cli\u003ea status code returned to the backend for control flow.\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"public enum Command {","lastModifiedDate":"2025-08-21T23:50:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"    /** List all current tasks. */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"    LIST(\"list\", \"list\", 2),","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"    /** Mark a task as done. */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"    MARK(\"mark\", \"mark {task number}\", 4),","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"    /** Mark a task as not done. */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"    UNMARK(\"unmark\", \"unmark {task number}\", 5),","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"    /** Add a todo task. */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"    TODO(\"todo\", \"todo {task description}\", 6),","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"    /** Add a deadline task with a due time. */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"    DEADLINE(\"deadline\",","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"            \"deadline {task description} /by dd/mm/yyyy HHMM {deadline time}\",","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"            7),","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"    /** Add an event task with start and end times. */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"    EVENT(\"event\",","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"            \"event {task description} /from dd/mm/yyyy HHMM {start time} /by dd/mm/yyyy HHMM {end time}\",","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"            8),","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"    /** Delete a task by its index. */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"    DELETE(\"delete\", \"delete {task number}\", 9),","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-08T20:22:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"    /** Find a task using keywords. */","lastModifiedDate":"2025-09-08T20:22:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"    FIND(\"find\", \"find {keyword}\", 10);","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-21T23:50:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"    private final String keyword;","lastModifiedDate":"2025-08-21T23:50:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"    private final String format;","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"    private final int statusCode;","lastModifiedDate":"2025-08-22T00:55:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-21T23:50:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"     * Constructs a command enum constant.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"duyLeu"},"content":"     * @param keyword    User input keyword that triggers this command","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"duyLeu"},"content":"     * @param format     Usage format shown in error/help messages","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"duyLeu"},"content":"     * @param statusCode Status code returned after executing this command","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"duyLeu"},"content":"    Command(String keyword, String format, int statusCode) {","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"duyLeu"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-08-21T23:50:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"duyLeu"},"content":"        this.format \u003d format;","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"duyLeu"},"content":"        this.statusCode \u003d statusCode;","lastModifiedDate":"2025-08-22T00:55:21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-21T23:50:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-21T23:50:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"duyLeu"},"content":"     * Returns the keyword used to trigger this command.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"duyLeu"},"content":"     * @return Keyword string","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"duyLeu"},"content":"    public String getKeyword() {","lastModifiedDate":"2025-08-21T23:50:08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"duyLeu"},"content":"        return this.keyword;","lastModifiedDate":"2025-08-21T23:50:08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-21T23:50:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-21T23:50:08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"duyLeu"},"content":"     * Returns the usage format for this command.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"duyLeu"},"content":"     * @return Format string","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"duyLeu"},"content":"    public String getFormat() {","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"duyLeu"},"content":"        return this.format;","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"duyLeu"},"content":"     * Returns the status code associated with this command.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"duyLeu"},"content":"     * @return Status code integer","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"duyLeu"},"content":"    public int getStatusCode() {","lastModifiedDate":"2025-08-22T00:55:21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"duyLeu"},"content":"        return this.statusCode;","lastModifiedDate":"2025-08-22T00:55:21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-22T00:55:21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-22T00:55:21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"duyLeu"},"content":"     * Returns a stream of all defined commands.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"duyLeu"},"content":"     * @return Stream of {@link Command} values","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"duyLeu"},"content":"    // return a stream version of the list of Command objects.","lastModifiedDate":"2025-08-22T19:28:10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"duyLeu"},"content":"    public static Stream\u003cCommand\u003e getCommandStream() {","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"duyLeu"},"content":"        return Arrays.stream(Command.values());","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-08-21T23:50:08","isFullCredit":false}],"authorContributionMap":{"duyLeu":98}},{"path":"src/main/java/moon/commands/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.commands.exceptions;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-23T10:13:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.commands.enums.Command;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.ParseException;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-23T10:13:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":" * Exception thrown when the user enters an unrecognised command keyword.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" * For example, typing {@code todone} instead of {@code todo}.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" * The exception stores the invalid command string and attempts","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":" * to suggest a similar valid command in its error message.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"public class InvalidCommandException extends ParseException {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"    /** Invalid command keyword entered by the user. */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"    private final String invalidCommand;","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"     * Creates an InvalidCommandException with the given invalid keyword and message.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"     * @param invalidCommand The unrecognised command keyword.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"     * @param message        Description of the error.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"    public InvalidCommandException(String invalidCommand, String message) {","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"        super(message);","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"        this.invalidCommand \u003d invalidCommand;","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"     * Attempts to find a similar valid command to suggest to the user.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"     * Current implementation is primitive: it compares the first letter","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"     * of the invalid keyword with the first letters of all known commands.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"     * @return A suggestion string if a similar command is found,","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"     *         or an empty string otherwise.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"    private String findSimilarCommand() {","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"        return Command.getCommandStream()","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"                .map(Command::getKeyword)","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"                .filter(c -\u003e c.startsWith(this.invalidCommand.substring(0, 1)))","lastModifiedDate":"2025-08-22T19:28:10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"                .findFirst()","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"                .map(c -\u003e String.format(\" Do you mean \u0027%s\u0027?\", c))","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"                .orElse(\"\");","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"     * Returns the formatted error message including the invalid keyword","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"     * and, if applicable, a suggested valid command.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"     * @return Detailed error message with the invalid command and suggestion.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"duyLeu"},"content":"    public String getMessage() {","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"duyLeu"},"content":"        return String.format(\"%s: \u0027%s\u0027.%s\",","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"duyLeu"},"content":"                super.getMessage(), this.invalidCommand, this.findSimilarCommand());","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false}],"authorContributionMap":{"duyLeu":58}},{"path":"src/main/java/moon/logic/Moon.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.logic;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-23T10:13:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-10T12:43:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2025-09-10T12:43:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-10T12:43:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"import moon.commands.BaseCommand;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"import moon.logic.exceptions.MoonException;","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"import moon.models.TaskList;","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"import moon.parser.usercommand.UserInputParser;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"import moon.storage.Storage;","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"import moon.ui.UiMessages;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T01:17:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":" * Main logic class of the Moon chatbot.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":" * Passes data between the UI, storage, and the commands.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"public class Moon {","lastModifiedDate":"2025-08-21T18:06:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"    private static final String DEFAULT_FILEPATH \u003d \"src/data/storage.txt\";","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"    private final String filepath;","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-21T23:17:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"     * Class constructor. Creates a new Moon chatbot with the given storage file path.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"     * @param filepath Path to the storage file","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"    public Moon(String filepath) {","lastModifiedDate":"2025-09-04T10:37:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"     * Creates a new Moon chatbot using the default storage file path.","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"    public Moon() {","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"        this(DEFAULT_FILEPATH);","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"     * Generates a chatbot response for the user\u0027s message.","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"     * @param input the raw text entered by the user","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"     * @return the chatbot\u0027s reply as a string","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"        return processUserInput(input);","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"     * Initialises the storage and loads tasks from file.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"duyLeu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"duyLeu"},"content":"     * If loading fails, a new empty task list is created instead.","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"duyLeu"},"content":"     * @return a message indicating whether the storage was loaded successfully","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"duyLeu"},"content":"    public String initiateStorage() {","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"duyLeu"},"content":"        try {","lastModifiedDate":"2025-09-04T10:37:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"duyLeu"},"content":"            this.storage \u003d new Storage(filepath);","lastModifiedDate":"2025-09-04T10:37:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"duyLeu"},"content":"            taskList \u003d storage.load();","lastModifiedDate":"2025-09-04T10:37:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"duyLeu"},"content":"            if (taskList.isEmpty()) {","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"duyLeu"},"content":"                return UiMessages.showEmptyInitialStorageMessage();","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"duyLeu"},"content":"            } else {","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"duyLeu"},"content":"                return UiMessages.showLoadStorageSuccessfulMessage(this.taskList);","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"duyLeu"},"content":"            }","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"duyLeu"},"content":"        } catch (IOException | MoonException e) {","lastModifiedDate":"2025-09-04T10:37:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"duyLeu"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2025-09-04T10:37:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"duyLeu"},"content":"            return UiMessages.showLoadStorageUnsuccessfulMessage();","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-04T10:37:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-21T18:26:40","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-21T18:26:40","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"duyLeu"},"content":"     * Processes a user input string by parsing it into a command,","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"duyLeu"},"content":"     * executing the command, and updating the storage.","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"duyLeu"},"content":"     * @param userInput the text input entered by the user","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"duyLeu"},"content":"     * @return the response message to display to the user","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"duyLeu"},"content":"    public String processUserInput(String userInput) {","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"duyLeu"},"content":"        try {","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"duyLeu"},"content":"            BaseCommand c \u003d UserInputParser.parse(userInput);","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"duyLeu"},"content":"            assert c !\u003d null : \"Parser must return a non-null command.\";","lastModifiedDate":"2025-09-21T10:28:15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-21T10:28:15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"duyLeu"},"content":"            c.setMetaData(this.taskList);","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"duyLeu"},"content":"            String response \u003d c.execute();","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"duyLeu"},"content":"            this.storage.rewrite(this.taskList);","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"duyLeu"},"content":"            return response;","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"duyLeu"},"content":"        } catch (MoonException e) {","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"duyLeu"},"content":"            // exceptions returned by parser/commands","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"duyLeu"},"content":"            return UiMessages.showExceptionMessage(e.getMessage());","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-21T10:37:45","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"duyLeu"},"content":"        } catch (NoSuchElementException | IOException e) {","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"duyLeu"},"content":"            // exceptions returned by scanner or storage","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"duyLeu"},"content":"            return UiMessages.showGeneralErrorMessage();","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"duyLeu"},"content":"     * Checks whether the given message is an exit command.","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"duyLeu"},"content":"     * @param message the user input to check","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"duyLeu"},"content":"     * @return true if the message equals \"bye\" (case-insensitive), false otherwise","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:01:09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"duyLeu"},"content":"    public boolean isExitCommand(String message) {","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"duyLeu"},"content":"        return message.equalsIgnoreCase(\"bye\");","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-21T18:06:55","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-04T10:37:00","isFullCredit":false}],"authorContributionMap":{"duyLeu":109}},{"path":"src/main/java/moon/logic/exceptions/MoonException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.logic.exceptions;","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":" * General exception for all errors thrown by the Moon chatbot.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"public class MoonException extends Exception {","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"     * Creates a new MoonException with the specified detail message.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"     * @param message Description of the error","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"    public MoonException(String message) {","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"        super(message);","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false}],"authorContributionMap":{"duyLeu":15}},{"path":"src/main/java/moon/models/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.models;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-23T10:13:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":" * Represents a deadline task with a description and a due time.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":" * Inherits the name and done status from {@link Task}.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"    private final MoonDateTime dueTime;","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"     * Creates a new deadline task.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"     * @param name     Description of the deadline","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"     * @param dueTime  Due time of the deadline","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"    public Deadline(String name, MoonDateTime dueTime) {","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"        super(name);","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"        this.dueTime \u003d dueTime;","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"    private String getDueTime() {","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"        return this.dueTime.toString();","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"     * Converts this deadline to its storage string representation.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"     * Format: {@code D | doneFlag | name | dueTime}","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003e{@code D} \u003d deadline identifier\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003e{@code doneFlag} \u003d {@code 1} if done, {@code 0} otherwise\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003e{@code name} \u003d description\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003e{@code dueTime} \u003d deadline due time\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"     * @return Storage string for this deadline","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"    public String toStorageString() {","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"        return String.join(\" | \",","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"                \"D\",","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"                this.isDone() ? \"1\" : \"0\",","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"                getName(),","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"                this.getDueTime());","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"     * Returns the string representation of this deadline for user display.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"     * Format: {@code [E][X] name (by: dueTime)}","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"duyLeu"},"content":"     * @return Formatted string for display","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"duyLeu"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"duyLeu"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.getDueTime());","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false}],"authorContributionMap":{"duyLeu":59}},{"path":"src/main/java/moon/models/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.models;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-23T10:13:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":" * Represents an event task with a description and start/end times.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":" * Inherits the name and done status from {@link Task}.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"    private final MoonDateTime fromTime;","lastModifiedDate":"2025-09-04T12:46:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"    private final MoonDateTime toTime;","lastModifiedDate":"2025-09-04T12:46:50","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"     * Creates a new event task.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"     * @param name     Description of the event","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"     * @param fromTime Start time of the event","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"     * @param toTime   End time of the event","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"    public Event(String name, MoonDateTime fromTime, MoonDateTime toTime) {","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"        super(name);","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"        this.fromTime \u003d fromTime;","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"        this.toTime \u003d toTime;","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"    private String getFromTime() {","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"        return this.fromTime.toString();","lastModifiedDate":"2025-09-04T12:46:50","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"    private String getToTime() {","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"        return this.toTime.toString();","lastModifiedDate":"2025-09-04T12:46:50","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"     * Converts this event to its storage string representation.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"     * Format: {@code E | doneFlag | name | fromTime | toTime}","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003e{@code E} \u003d event identifier\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003e{@code doneFlag} \u003d {@code 1} if done, {@code 0} otherwise\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003e{@code name} \u003d description\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003e{@code fromTime}, {@code toTime} \u003d event times\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"     * @return Storage string for this event","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"    public String toStorageString() {","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"        return String.join(\" | \",","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"                \"E\",","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"                this.isDone() ? \"1\" : \"0\",","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"                getName(),","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"duyLeu"},"content":"                this.getFromTime(),","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"duyLeu"},"content":"                this.getToTime());","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"duyLeu"},"content":"     * Returns the string representation of this event for user display.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"duyLeu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"duyLeu"},"content":"     * Format: {@code [E][X] name (from: fromTime to: toTime)}","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"duyLeu"},"content":"     * @return Formatted string for display","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"duyLeu"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"duyLeu"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"duyLeu"},"content":"                super.toString(), this.getFromTime(), this.getToTime());","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false}],"authorContributionMap":{"duyLeu":68}},{"path":"src/main/java/moon/models/MoonDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.models;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"import java.util.Optional;","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" * Represents a date with an optional time, used for tasks in the Moon chatbot.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" * Provides factory methods to create either:","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" *   \u003cli\u003ea date-only value, or\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":" *   \u003cli\u003ea date with an associated time.\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":" * The string representation is formatted for display to the user.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"public class MoonDateTime {","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"    private final LocalDate date;","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"    private final Optional\u003cLocalTime\u003e time;","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"    private MoonDateTime(LocalDate date, Optional\u003cLocalTime\u003e time) {","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"        this.time \u003d time;","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"     * Creates a MoonDateTime with both a date and a time.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"     * @param d The date","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"     * @param t The time","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"     * @return A MoonDateTime representing the given date and time","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"    public static MoonDateTime of(LocalDate d, LocalTime t) {","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"        return new MoonDateTime(d, Optional.of(t));","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"     * Creates a MoonDateTime with only a date (no time component).","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"     * @param d The date","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"     * @return A MoonDateTime representing the given date only","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"    public static MoonDateTime ofDate(LocalDate d) {","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"        return new MoonDateTime(d, Optional.empty());","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"     * Returns the formatted date component.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"duyLeu"},"content":"     * @return A string in the format {@code \"MMM d yyyy\"} (e.g. \"Sep 6 2025\")","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"duyLeu"},"content":"    private String getDate() {","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"duyLeu"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"duyLeu"},"content":"     * Returns the formatted time component if present.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"duyLeu"},"content":"     * @return A string in the format {@code \" HH:mm\"} (e.g. \" 14:30\"),","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"duyLeu"},"content":"     *         or an empty string if no time is set","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"duyLeu"},"content":"    private String getTime() {","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"duyLeu"},"content":"        return this.time","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"duyLeu"},"content":"                .map(t -\u003e \" \" + t.format(DateTimeFormatter.ofPattern(\"HH:mm\")))","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"duyLeu"},"content":"                .orElse(\"\");","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"duyLeu"},"content":"     * Returns the string representation of this MoonDateTime for display.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"duyLeu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"duyLeu"},"content":"     * Format:","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"duyLeu"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003e{@code \"MMM d yyyy HH:mm\"} if time is present.\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003e{@code \"MMM d yyyy\"} if no time is present.\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"duyLeu"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"duyLeu"},"content":"     * @return Formatted string of the date (and optional time)","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"duyLeu"},"content":"    public String toString() {","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"duyLeu"},"content":"        return this.getDate() + this.getTime();","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false}],"authorContributionMap":{"duyLeu":85}},{"path":"src/main/java/moon/models/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.models;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-23T10:13:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":" * Abstract base class representing a task in the Moon chatbot.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":" * A task has a name (description) and a done status.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":" * Subclasses provide their own storage format and string","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" * representation.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"public abstract class Task {","lastModifiedDate":"2025-09-04T01:17:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"    private final String name;","lastModifiedDate":"2025-08-21T23:50:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"    private boolean done;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-21T23:33:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"     * Creates a new task with the given name.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"     * The task is initially not marked as done.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"     * @param name Description of the task","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"    public Task(String name) {","lastModifiedDate":"2025-08-21T23:33:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-08-21T23:33:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"        this.done \u003d false;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-21T23:33:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-21T23:33:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"     * Returns the name (description) of this task.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"     * @return Task description","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"    public String getName() {","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"        return this.name;","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-21T23:33:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-21T23:33:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"     * Returns whether this task is marked as done.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"     * @return {@code true} if done, {@code false} otherwise","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"        return this.done;","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-21T23:33:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-21T23:33:04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"     * Sets the done status of this task.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"     * @param b {@code true} to mark as done, {@code false} to mark as not done","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"    public void setDone(boolean b) {","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"        this.done \u003d b;","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-21T23:33:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-21T23:33:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"duyLeu"},"content":"     * Converts this task to its string representation used for persistent storage.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"duyLeu"},"content":"     * @return Storage string in the format specific to the subclass","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"duyLeu"},"content":"    public abstract String toStorageString();","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"duyLeu"},"content":"     * Returns the string representation of this task for user display.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"duyLeu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"duyLeu"},"content":"     * Format:","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"duyLeu"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003e{@code [X] name} if done\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003e{@code [ ] name} if not done\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"duyLeu"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"duyLeu"},"content":"     * @return Formatted string for display","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-08-21T23:33:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"duyLeu"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T23:33:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"duyLeu"},"content":"        return this.isDone()","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"duyLeu"},"content":"                ? \"[X] \" + this.name","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"duyLeu"},"content":"                : \"[ ] \" + this.name;","lastModifiedDate":"2025-08-22T00:55:21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-21T23:33:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-08-21T23:33:04","isFullCredit":false}],"authorContributionMap":{"duyLeu":76}},{"path":"src/main/java/moon/models/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.models;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T03:51:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import java.util.List;","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" * Represents a list of {@link Task} objects.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" * Provides basic operations for adding, retrieving, deleting,","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":" * and checking tasks. Serves as the in-memory storage structure","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" * for the Moon chatbot.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":" *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":" * @see Task","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":" * @see Todo","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":" * @see Deadline","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":" * @see Event","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"public class TaskList {","lastModifiedDate":"2025-09-04T03:51:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"     * Creates an empty task list.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"    public TaskList() {","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"     * Appends the specified task to the end of this task list.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"     * @param task Task to be appended","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"    public void add(Task task) {","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"        tasks.add(task);","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"     * Returns the task at the specified position in this list.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"     * @param index Zero-based index of the task to return","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"     * @return Task at the specified position","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index out of bounds in TaskList.get()\";","lastModifiedDate":"2025-09-21T10:28:15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"duyLeu"},"content":"     * Removes the task at the specified position in this list.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"duyLeu"},"content":"     * @param index Zero-based index of the task to remove","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"duyLeu"},"content":"     * @return The removed task","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"duyLeu"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"duyLeu"},"content":"    public Task delete(int index) {","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"duyLeu"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index out of bounds in TaskList.delete()\";","lastModifiedDate":"2025-09-21T10:28:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"duyLeu"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"duyLeu"},"content":"     * Returns the number of tasks in this list.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"duyLeu"},"content":"     * @return Number of tasks","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"duyLeu"},"content":"    public int size() {","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"duyLeu"},"content":"        return tasks.size();","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"duyLeu"},"content":"     * Returns whether this task list is empty.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"duyLeu"},"content":"     * @return {@code true} if the list contains no tasks, {@code false} otherwise","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"duyLeu"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"duyLeu"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"duyLeu"},"content":"     * Finds all tasks whose names contain the given substring, ignoring case.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"duyLeu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"duyLeu"},"content":"     * This method returns a list of {@link TaskMatch} objects, where each match","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"duyLeu"},"content":"     * contains both the original 1-based index of the task in the list and the task itself.","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"duyLeu"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003eIf the search string is empty, an empty list is returned.\u003c/li\u003e","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003eMatching is performed case-insensitively by converting both the","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"duyLeu"},"content":"     *   task name and the query to lowercase.\u003c/li\u003e","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"duyLeu"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"duyLeu"},"content":"     * @param s the substring to search for","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"duyLeu"},"content":"     * @return a list of {@link TaskMatch} objects representing tasks whose names include {@code s}","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"duyLeu"},"content":"    public List\u003cTaskMatch\u003e findByName(String s) {","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"duyLeu"},"content":"        String query \u003d s.toLowerCase();","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"duyLeu"},"content":"        List\u003cTaskMatch\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"duyLeu"},"content":"        if (s.isEmpty()) {","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"duyLeu"},"content":"            return matches;","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"duyLeu"},"content":"        return IntStream.range(0, this.size())","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"duyLeu"},"content":"                .filter(i -\u003e this.get(i).getName().toLowerCase().contains(query))","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"duyLeu"},"content":"                .mapToObj(i -\u003e new TaskMatch(i + 1, tasks.get(i)))","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"duyLeu"},"content":"                .toList();","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"duyLeu"},"content":"     * Formats a list of {@link TaskMatch} objects into a user-readable string.","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"duyLeu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"duyLeu"},"content":"     * Each task is displayed on its own line, showing its original index","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"duyLeu"},"content":"     * and the task details (via {@link TaskMatch#toString()}).","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"duyLeu"},"content":"     * If no matches are provided, a default \"not found\" message is returned.","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"duyLeu"},"content":"     * @param matches the list of matches to format","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"duyLeu"},"content":"     * @return a formatted string representation of the matches, or a \"not found\" message if empty","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"duyLeu"},"content":"    public static String formatTaskMatchList(List\u003cTaskMatch\u003e matches) {","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"duyLeu"},"content":"        if (matches.isEmpty()) {","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"duyLeu"},"content":"            return \"No matching tasks found.\";","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"duyLeu"},"content":"        return matches.stream()","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"duyLeu"},"content":"                .map(TaskMatch::toString)","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"duyLeu"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"duyLeu"},"content":"     * Returns a formatted string representation of this task list","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"duyLeu"},"content":"     * for display to the user.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"duyLeu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"duyLeu"},"content":"     * Format:","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"duyLeu"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"duyLeu"},"content":"     *   1. [T][ ] read book","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"duyLeu"},"content":"     *   2. [D][X] return book (by: June 6th)","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"duyLeu"},"content":"     *   3. [E][ ] project meeting (from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"duyLeu"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"duyLeu"},"content":"     * @return Formatted string of tasks with indices","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"duyLeu"},"content":"    public String toString() {","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"duyLeu"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"duyLeu"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"duyLeu"},"content":"            output.append(String.format(\"  %d. %s\\n\", i + 1, tasks.get(i)));","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"duyLeu"},"content":"        return output.toString();","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-04T03:51:32","isFullCredit":false}],"authorContributionMap":{"duyLeu":149}},{"path":"src/main/java/moon/models/TaskMatch.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.models;","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":" * Represents a match between a task and its index in the original task list.","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":" * Useful for search results where both the task itself and its position","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":" * in the full list are needed.","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" *","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" * @param index the 1-based index of the task in the original list","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" * @param task  the matched {@link Task}","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"public record TaskMatch(int index, Task task) {","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"    public String toString() {","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"        return String.format(\"  %d. %s\", index, task);","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false}],"authorContributionMap":{"duyLeu":17}},{"path":"src/main/java/moon/models/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.models;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-23T10:13:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":" * Represents a deadline task with a description.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":" * Inherits the name and done status from {@link Task}.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"     * Creates a new todo task.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"     * @param name     Description of the todo task.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"    public Todo(String name) {","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"        super(name);","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"     * Converts this todo task to its storage string representation.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"     * Format: {@code T | doneFlag | name}","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003e{@code T} \u003d todo identifier\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003e{@code doneFlag} \u003d {@code 1} if done, {@code 0} otherwise\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003e{@code name} \u003d description\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"     * @return Storage string for this todo task.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"    public String toStorageString() {","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"        return String.join(\" | \",","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"                \"T\",","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"                this.isDone() ? \"1\" : \"0\",","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"                getName());","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"     * Returns the string representation of this todo for user display.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"     * Format: {@code [E][X] name}","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"     * @return Formatted string for display.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-08-22T01:11:16","isFullCredit":false}],"authorContributionMap":{"duyLeu":50}},{"path":"src/main/java/moon/parser/exceptions/EmptyArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.parser.exceptions;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-23T10:13:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.commands.enums.Command;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-23T10:13:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":" * Exception thrown when a required argument for a command is missing or empty.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" * For example:","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" *   \u003cli\u003e{@code todo} without a task name.\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" *   \u003cli\u003e{@code deadline} without a \"/by\" value.\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"public class EmptyArgumentException extends ParseException {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"     * Creates an EmptyArgumentException with a message.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"     * @param message Description of the error.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"    public EmptyArgumentException(String message) {","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"        super(message);","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"     * Creates an EmptyArgumentException for a specific command.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"     * @param command The command with missing arguments.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"     * @param message Description of the error.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"    public EmptyArgumentException(Command command, String message) {","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"        super(command, message);","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false}],"authorContributionMap":{"duyLeu":33}},{"path":"src/main/java/moon/parser/exceptions/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.parser.exceptions;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.commands.enums.Command;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":" * Exception thrown when a task index is invalid.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" * This occurs if:","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" *   \u003cli\u003eThe index is not an integer.\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" *   \u003cli\u003eThe index is out of range for the current task list.\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"public class InvalidIndexException extends ParseException {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"     * Creates an InvalidIndexException with a message.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"     * @param message Description of the error.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"    public InvalidIndexException(String message) {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"        super(message);","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"     * Creates an InvalidIndexException for a specific command.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"     * @param command The command where the invalid index was found.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"     * @param message Description of the error.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"    public InvalidIndexException(Command command, String message) {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"        super(command, message);","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false}],"authorContributionMap":{"duyLeu":33}},{"path":"src/main/java/moon/parser/exceptions/ParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.parser.exceptions;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-23T10:13:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.commands.enums.Command;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.logic.exceptions.MoonException;","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-23T10:13:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":" * Exception thrown when user input cannot be parsed into a valid command.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" * Examples include:","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" *   \u003cli\u003eMissing flags or separators (e.g. \"/by\", \"/from\").\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":" *   \u003cli\u003eTypos in keywords.\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" *   \u003cli\u003eInvalid or malformed arguments.\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"public class ParseException extends MoonException {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"    private String parseError;","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"    private Command command;","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"     * Creates a ParseException with only an error message.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"     * @param message Description of the parsing error.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"    public ParseException(String message) {","lastModifiedDate":"2025-09-04T12:46:50","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"        super(message);","lastModifiedDate":"2025-09-04T12:46:50","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T12:46:50","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T12:46:50","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"     * Creates a ParseException for a specific command type.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"     * @param errorCommandType The command that failed to parse.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"     * @param message          Description of the parsing error.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"    public ParseException(Command errorCommandType, String message) {","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"        super(message);","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"        this.command \u003d errorCommandType;","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"     * Creates a ParseException with more detailed error information.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"     * @param parseError       Specific problematic input.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"     * @param errorCommandType The command that failed to parse.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"     * @param message          Description of the parsing error.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"    public ParseException(String parseError, Command errorCommandType, String message) {","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"        super(message);","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"        this.command \u003d errorCommandType;","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"        this.parseError \u003d parseError;","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"duyLeu"},"content":"     * Returns the specific erroneous input that caused the parse failure, if available.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"duyLeu"},"content":"     * @return Erroneous input string, or {@code null} if not provided.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"duyLeu"},"content":"    public String getParseError() {","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"duyLeu"},"content":"        return this.parseError;","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"duyLeu"},"content":"     * Returns the command type that failed to parse, if available.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"duyLeu"},"content":"     * @return The {@link Command}, or {@code null} if not provided.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"duyLeu"},"content":"    public Command getErrorCommandType() {","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"duyLeu"},"content":"        return this.command;","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"duyLeu"},"content":"    public String getMessage() {","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"duyLeu"},"content":"        if (command !\u003d null) {","lastModifiedDate":"2025-09-21T10:28:15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"duyLeu"},"content":"            return super.getMessage() + \" You should follow this syntax: \" + command.getFormat();","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"duyLeu"},"content":"        } else {","lastModifiedDate":"2025-09-21T10:28:15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"duyLeu"},"content":"            return super.getMessage();","lastModifiedDate":"2025-08-22T16:55:37","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-08-22T10:37:42","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-21T10:28:15","isFullCredit":false}],"authorContributionMap":{"duyLeu":79}},{"path":"src/main/java/moon/parser/storage/AddFromStorageParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.parser.storage;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.models.Task;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.ParseException;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":" * Dispatches parsing of storage strings to the appropriate task-specific parser.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" * The first element of the split input string determines the task type:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" *   \u003cli\u003e\"T\" ‚Üí {@link TodoStorageParser}\u003c/li\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":" *   \u003cli\u003e\"D\" ‚Üí {@link DeadlineStorageParser}\u003c/li\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" *   \u003cli\u003e\"E\" ‚Üí {@link EventStorageParser}\u003c/li\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"public class AddFromStorageParser {","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"     * Parses a raw storage line into the corresponding {@link Task}.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"     * @param input the storage line (e.g., {@code \"D | 1 | return book | June 6th\"})","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"     * @return the reconstructed task","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"     * @throws ParseException if the task type is unrecognised or the line is malformed","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"    public static Task parse(String input) throws ParseException {","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"        String[] inputList \u003d input.split(\" \\\\| \");","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"        StorageParser\u003c? extends Task\u003e p \u003d switch (inputList[0]) {","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"        case \"T\" -\u003e new TodoStorageParser();","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"        case \"D\" -\u003e new DeadlineStorageParser();","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"        case \"E\" -\u003e new EventStorageParser();","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"        default -\u003e throw new ParseException(\"Unrecognised command in storage.\");","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"        };","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"        return p.parse(inputList);","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false}],"authorContributionMap":{"duyLeu":35}},{"path":"src/main/java/moon/parser/storage/DeadlineStorageParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.parser.storage;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.models.Deadline;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.models.MoonDateTime;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.ParseException;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"import moon.parser.util.DateTimeParser;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" * Parser for reconstructing {@link Deadline} tasks from storage.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" * Expected storage format:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":" * {@code D | \u003cdone-flag\u003e | \u003cname\u003e | \u003cby-time\u003e}","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"public class DeadlineStorageParser implements StorageParser\u003cDeadline\u003e {","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"     * Parses the given storage fields into a {@link Deadline} task.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"     * @param inputs the split storage line (must contain 4 fields)","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"     * @return the reconstructed {@link Deadline}","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"     * @throws ParseException if the date/time cannot be parsed","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"    public Deadline parse(String[] inputs) throws ParseException {","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"        String name \u003d inputs[2];","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"        boolean done \u003d inputs[1].equals(\"1\");","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"        MoonDateTime deadlineTime \u003d DateTimeParser.parse(inputs[3], true);","lastModifiedDate":"2025-09-21T10:28:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"        assert deadlineTime !\u003d null : \"DateTimeParser should always return a MoonDateTime or throw\";","lastModifiedDate":"2025-09-21T10:28:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"        Deadline deadline \u003d new Deadline(name, deadlineTime);","lastModifiedDate":"2025-09-21T10:28:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"        deadline.setDone(done);","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"        return deadline;","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false}],"authorContributionMap":{"duyLeu":34}},{"path":"src/main/java/moon/parser/storage/EventStorageParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.parser.storage;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.models.Event;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.models.MoonDateTime;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.ParseException;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"import moon.parser.util.DateTimeParser;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" * Parser for reconstructing {@link Event} tasks from storage.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" * Expected storage format:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":" * {@code E | \u003cdone-flag\u003e | \u003cname\u003e | \u003cfrom-time\u003e | \u003cto-time\u003e}","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"public class EventStorageParser implements StorageParser\u003cEvent\u003e {","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"     * Parses the given storage fields into an {@link Event} task.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"     * @param inputs the split storage line (must contain 5 fields)","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"     * @return the reconstructed {@link Event}","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"     * @throws ParseException if either date/time cannot be parsed","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"    public Event parse(String[] inputs) throws ParseException {","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"        String name \u003d inputs[2];","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"        boolean done \u003d inputs[1].equals(\"1\");","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"        MoonDateTime fromTime \u003d DateTimeParser.parse(inputs[3], true);","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"        MoonDateTime toTime \u003d DateTimeParser.parse(inputs[4], true);","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"        assert fromTime !\u003d null \u0026\u0026 toTime !\u003d null : \"DateTimeParser should always return a MoonDateTime or throw\";","lastModifiedDate":"2025-09-21T10:28:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"        Event event \u003d new Event(name, fromTime, toTime);","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"        event.setDone(done);","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"        return event;","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false}],"authorContributionMap":{"duyLeu":35}},{"path":"src/main/java/moon/parser/storage/StorageParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.parser.storage;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.models.Task;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.ParseException;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":" * A generic parser for reconstructing {@link Task} objects from storage.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" * @param \u003cT\u003e the type of task produced by this parser","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"public interface StorageParser\u003cT extends Task\u003e {","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"     * Parses a string array representing a task in storage format and","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"     * reconstructs the corresponding task object.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"     * @param inputs the split storage line (e.g., {\"T\", \"0\", \"read book\"})","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"     * @return the reconstructed task","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"     * @throws ParseException if the input cannot be parsed into a valid task","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"    T parse(String[] inputs) throws ParseException;","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false}],"authorContributionMap":{"duyLeu":21}},{"path":"src/main/java/moon/parser/storage/TodoStorageParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.parser.storage;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.models.Todo;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.ParseException;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":" * Parser for reconstructing {@link Todo} tasks from storage.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" * Expected storage format:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" * {@code T | \u003cdone-flag\u003e | \u003cname\u003e}","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"public class TodoStorageParser implements StorageParser\u003cTodo\u003e {","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"     * Parses the given storage fields into a {@link Todo} task.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"     * @param inputs the split storage line (must contain 3 fields)","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"     * @return the reconstructed {@link Todo}","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"    public Todo parse(String[] inputs) throws ParseException {","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"        String name \u003d inputs[2];","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"        boolean done \u003d inputs[1].equals(\"1\");","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"        Todo todo \u003d new Todo(name);","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"        todo.setDone(done);","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"        return todo;","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false}],"authorContributionMap":{"duyLeu":29}},{"path":"src/main/java/moon/parser/usercommand/AddDeadlineCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.parser.usercommand;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.commands.AddDeadlineCommand;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.commands.enums.Command;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import moon.models.Deadline;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"import moon.models.MoonDateTime;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.ParseException;","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"import moon.parser.util.DateTimeParser;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"import moon.parser.util.ExtractString;","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"import moon.parser.util.FormatChecker;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" * Parser for the {@link Command#DEADLINE} command.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":" * Expected format:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":" *   deadline {description} /by {deadline time}","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":" * Example:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":" *   deadline return book /by 25/12/2025 1800","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"public class AddDeadlineCommandParser implements CommandParser\u003cAddDeadlineCommand\u003e {","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"    private static final Command COMMAND \u003d Command.DEADLINE;","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"    private static final String PREFIX_BY \u003d \"by\";","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-10T12:43:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"     * Parses a user input string into an {@link AddDeadlineCommand}.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"     * @param input the raw user input","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"     * @return an {@link AddDeadlineCommand} containing the new {@link Deadline}","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"     * @throws ParseException if the input is malformed","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"     *                        (e.g. missing description, missing \"/by\" keyword, or invalid date/time format)","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"    public AddDeadlineCommand parse(String input) throws ParseException {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"        String[] inputList \u003d input.split(\" /\");","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"        // All FormatCheck methods throw a ParseException if the check is false, return nothing if true","lastModifiedDate":"2025-09-21T10:37:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"        FormatChecker.checkEmptyParameter(inputList[0], COMMAND, true);","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"        FormatChecker.checkCommandFormat(inputList, COMMAND);","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"        String deadlineName \u003d ExtractString.extract(inputList[0], COMMAND.getKeyword());","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"        String byKeyword \u003d inputList[1].split(\"\\\\s+\")[0];","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"        FormatChecker.checkKeyword(byKeyword, PREFIX_BY, COMMAND);","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"        FormatChecker.checkEmptyParameter(inputList[1], COMMAND, false);","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"        MoonDateTime deadlineTime \u003d DateTimeParser.parse(","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"                ExtractString.extract(inputList[1], PREFIX_BY),","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"duyLeu"},"content":"                false);","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"duyLeu"},"content":"        assert deadlineTime !\u003d null : \"DateTimeParser should always return a MoonDateTime or throw\";","lastModifiedDate":"2025-09-21T10:28:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"duyLeu"},"content":"        Deadline newDeadline \u003d new Deadline(deadlineName, deadlineTime);","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"duyLeu"},"content":"        return new AddDeadlineCommand(newDeadline);","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false}],"authorContributionMap":{"duyLeu":58}},{"path":"src/main/java/moon/parser/usercommand/AddEventCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.parser.usercommand;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.commands.AddEventCommand;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.commands.enums.Command;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import moon.models.Event;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"import moon.models.MoonDateTime;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.ParseException;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"import moon.parser.util.DateTimeParser;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"import moon.parser.util.ExtractString;","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"import moon.parser.util.FormatChecker;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" * Parser for the {@link Command#EVENT} command.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":" * Expected format:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":" *   event {description} /from {start time} /to {end time}","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":" * Example:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":" *   event project meeting /from 12/12/2025 1800 /to 12/12/2025 2000","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"public class AddEventCommandParser implements CommandParser\u003cAddEventCommand\u003e {","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"    private static final Command COMMAND \u003d Command.EVENT;","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"    private static final String PREFIX_FROM \u003d \"from\";","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"    private static final String PREFIX_TO \u003d \"to\";","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"     * Parses a user input string into an {@link AddEventCommand}.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"     * @param input the raw user input","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"     * @return an {@link AddEventCommand} containing the new {@link Event}","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"     * @throws ParseException if the input is malformed (e.g. missing keywords, empty fields, or invalid date/time)","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"    public AddEventCommand parse(String input) throws ParseException {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"        String[] inputList \u003d input.split(\" /\");","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"        // All FormatCheck methods throw a ParseException if the check is false, return nothing if true","lastModifiedDate":"2025-09-21T10:37:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"        FormatChecker.checkEmptyParameter(inputList[0], COMMAND, true);","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"        FormatChecker.checkCommandFormat(inputList, COMMAND);","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"        String eventName \u003d ExtractString.extract(inputList[0], COMMAND.getKeyword());","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"        String fromKeyword \u003d inputList[1].split(\"\\\\s+\")[0];","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"        String toKeyword \u003d inputList[2].split(\"\\\\s+\")[0];","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"        FormatChecker.checkKeyword(fromKeyword, PREFIX_FROM, COMMAND);","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"        FormatChecker.checkKeyword(toKeyword, PREFIX_TO, COMMAND);","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"        FormatChecker.checkEmptyParameter(inputList[1], COMMAND, false);","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"        FormatChecker.checkEmptyParameter(inputList[2], COMMAND, false);","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"duyLeu"},"content":"        MoonDateTime fromTime \u003d DateTimeParser.parse(","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"duyLeu"},"content":"                ExtractString.extract(inputList[1], PREFIX_FROM),","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"duyLeu"},"content":"                false);","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"duyLeu"},"content":"        MoonDateTime toTime \u003d DateTimeParser.parse(","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"duyLeu"},"content":"                ExtractString.extract(inputList[2], PREFIX_TO),","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"duyLeu"},"content":"                false);","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"duyLeu"},"content":"        assert fromTime !\u003d null \u0026\u0026 toTime !\u003d null : \"DateTimeParser should always return a MoonDateTime or throw\";","lastModifiedDate":"2025-09-21T10:28:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-21T10:28:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"duyLeu"},"content":"        Event newEvent \u003d new Event(eventName, fromTime, toTime);","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"duyLeu"},"content":"        return new AddEventCommand(newEvent);","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false}],"authorContributionMap":{"duyLeu":65}},{"path":"src/main/java/moon/parser/usercommand/AddTodoCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.parser.usercommand;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.commands.AddTodoCommand;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.commands.enums.Command;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import moon.models.Todo;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.ParseException;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"import moon.parser.util.ExtractString;","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"import moon.parser.util.FormatChecker;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" * Parser for the {@link Command#TODO} command.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" * Expected format:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":" *   todo {task description}","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":" * Example:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":" *   todo read book","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"public class AddTodoCommandParser implements CommandParser\u003cAddTodoCommand\u003e {","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"    private static final Command COMMAND \u003d Command.TODO;","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"     * Parses a user input string into an {@link AddTodoCommand}.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"     * @param input the raw user input","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"     * @return an {@link AddTodoCommand} containing the new {@link Todo}","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"     * @throws ParseException if the task description is missing or empty","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"    public AddTodoCommand parse(String input) throws ParseException {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"        // All FormatCheck methods throw a ParseException if the check is false, return nothing if true","lastModifiedDate":"2025-09-21T10:37:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"        FormatChecker.checkEmptyParameter(input, COMMAND, false);","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"        String todoName \u003d ExtractString.extract(input, COMMAND.getKeyword());","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"        Todo newTodo \u003d new Todo(todoName);","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"        return new AddTodoCommand(newTodo);","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false}],"authorContributionMap":{"duyLeu":41}},{"path":"src/main/java/moon/parser/usercommand/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.parser.usercommand;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.commands.BaseCommand;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.ParseException;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":" * Generic interface for all user command parsers.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" * Each parser is responsible for converting raw user input into","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" * a specific {@link BaseCommand} instance.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":" * @param \u003cT\u003e the type of {@link BaseCommand} produced by this parser","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"public interface CommandParser\u003cT extends BaseCommand\u003e {","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"     * Parses the given raw user input into a command object.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"     * @param input the user input string","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"     * @return a command instance ready for execution","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"     * @throws ParseException if the input format is invalid or incomplete","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"    T parse(String input) throws ParseException;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false}],"authorContributionMap":{"duyLeu":24}},{"path":"src/main/java/moon/parser/usercommand/DeleteCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.parser.usercommand;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.commands.DeleteCommand;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.commands.enums.Command;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.InvalidIndexException;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" * Parser for the {@link Command#DELETE} command.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" * Expected format:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":" *   delete {task number}","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":" * Example:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":" *   delete 2","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"public class DeleteCommandParser implements CommandParser\u003cDeleteCommand\u003e {","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"     * Parses a user input string into a {@link DeleteCommand}.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"     * @param input the raw user input","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"     * @return a {@link DeleteCommand} targeting the specified task index","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"     * @throws InvalidIndexException if the index is missing, not an integer,","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"     *                               or cannot be parsed","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"    public DeleteCommand parse(String input) throws InvalidIndexException {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"        try {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"            // splits the input string then check for the second element for the list index","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"            int taskIndex \u003d Integer.parseInt(input.split(\"\\\\s+\")[1]) - 1;","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"            return new DeleteCommand(taskIndex);","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"            throw new InvalidIndexException(Command.DELETE,","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"                    \"Meow! I don\u0027t think you put in an integer?\");","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false}],"authorContributionMap":{"duyLeu":40}},{"path":"src/main/java/moon/parser/usercommand/FindTaskCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.parser.usercommand;","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.commands.FindTaskCommand;","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":" * Parser for the {@code find} command.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" * Expected format:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" *   find {keyword}","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":" * Example:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":" *   find book","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"public class FindTaskCommandParser implements CommandParser\u003cFindTaskCommand\u003e {","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"     * Parses a user input string into a {@link FindTaskCommand}.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"     * @param input the raw user input","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"     * @return a {@link FindTaskCommand} containing the search keyword","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"    public FindTaskCommand parse(String input) {","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"        String keyword \u003d input.split(\"\\\\s+\", 2)[1];","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"        return new FindTaskCommand(keyword);","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false}],"authorContributionMap":{"duyLeu":30}},{"path":"src/main/java/moon/parser/usercommand/ListCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.parser.usercommand;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.commands.ListCommand;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":" * Parser for the {@code list} command.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" * Expected format:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" *   list","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":" * Produces a {@link ListCommand} with no arguments.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"public class ListCommandParser implements CommandParser\u003cListCommand\u003e {","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"     * Parses a user input string into a {@link ListCommand}.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"     * @param input the raw user input (ignored since {@code list} has no arguments)","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"     * @return a new {@link ListCommand}","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"    public ListCommand parse(String input) {","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"        return new ListCommand();","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false}],"authorContributionMap":{"duyLeu":26}},{"path":"src/main/java/moon/parser/usercommand/MarkCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.parser.usercommand;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.commands.MarkCommand;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.commands.enums.Command;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.InvalidIndexException;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" * Parser for the {@link Command#MARK} command.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" * Expected format:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":" *   mark {task number}","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":" * Example:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":" *   mark 3","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"public class MarkCommandParser implements CommandParser\u003cMarkCommand\u003e {","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"     * Parses a user input string into a {@link MarkCommand}.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"     * @param input the raw user input","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"     * @return a {@link MarkCommand} targeting the specified task index","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"     * @throws InvalidIndexException if the index is missing, not an integer,","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"     *                               or cannot be parsed","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"    public MarkCommand parse(String input) throws InvalidIndexException {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"        try {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"            int taskIndex \u003d Integer.parseInt(input.split(\"\\\\s+\")[1].trim()) - 1;","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"            return new MarkCommand(taskIndex);","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"            throw new InvalidIndexException(Command.MARK,","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"                    \"Meow! I don\u0027t think you put in an integer?\");","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false}],"authorContributionMap":{"duyLeu":39}},{"path":"src/main/java/moon/parser/usercommand/UnmarkCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.parser.usercommand;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.commands.UnmarkCommand;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.commands.enums.Command;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.InvalidIndexException;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" * Parser for the {@link Command#UNMARK} command.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" * Expected format:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":" *   unmark {task number}","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":" * Example:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":" *   unmark 3","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"public class UnmarkCommandParser implements CommandParser\u003cUnmarkCommand\u003e {","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"     * Parses a user input string into an {@link UnmarkCommand}.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"     * @param input the raw user input","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"     * @return an {@link UnmarkCommand} targeting the specified task index","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"     * @throws InvalidIndexException if the index is missing, not an integer,","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"     *                               or cannot be parsed","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"    @Override","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"    public UnmarkCommand parse(String input) throws InvalidIndexException {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"        try {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"            int taskIndex \u003d Integer.parseInt(input.split(\"\\\\s+\")[1]) - 1;","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"            return new UnmarkCommand(taskIndex);","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"            throw new InvalidIndexException(Command.UNMARK,","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"                    \"Meow! I don\u0027t think you put in an integer?\");","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false}],"authorContributionMap":{"duyLeu":39}},{"path":"src/main/java/moon/parser/usercommand/UserInputParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.parser.usercommand;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.commands.BaseCommand;","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.commands.enums.Command;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import moon.commands.exceptions.InvalidCommandException;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.ParseException;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" * Central parser that routes user input to the appropriate {@link CommandParser}.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" * This class:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" *   \u003cli\u003eExtracts the command keyword from user input\u003c/li\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":" *   \u003cli\u003eMatches it against the list of supported {@link Command} values\u003c/li\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":" *   \u003cli\u003eDelegates parsing of arguments to the corresponding command parser\u003c/li\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"public class UserInputParser {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"     * Parses raw user input into an executable {@link BaseCommand}.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"     * @param input the full user input string (e.g. {@code \"deadline return book /by 6pm\"})","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"     * @return a {@link BaseCommand} representing the action to execute","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"     * @throws ParseException if the command is unrecognised or arguments are invalid","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"    public static BaseCommand parse(String input) throws ParseException {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"        Command command \u003d findMatchingCommand(input);","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"        // Switch-case ensures clear routing to the correct parser","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"        CommandParser\u003c? extends BaseCommand\u003e p \u003d switch (command) {","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"        case LIST -\u003e new ListCommandParser();","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"        case MARK -\u003e new MarkCommandParser();","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"        case UNMARK -\u003e new UnmarkCommandParser();","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"        case TODO -\u003e new AddTodoCommandParser();","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"        case DEADLINE -\u003e new AddDeadlineCommandParser();","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"        case EVENT -\u003e new AddEventCommandParser();","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"        case DELETE -\u003e new DeleteCommandParser();","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"        case FIND -\u003e new FindTaskCommandParser();","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"        };","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"        return p.parse(input);","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"     * Finds the {@link Command} matching the keyword in the given user input.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"     * The keyword is assumed to be the first token (before the first space).","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"     * @param input the full user input string","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"     * @return the matching {@link Command}","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"     * @throws InvalidCommandException if no matching command keyword is found","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"duyLeu"},"content":"    public static Command findMatchingCommand(String input) throws InvalidCommandException {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"duyLeu"},"content":"        String inputKeyword \u003d input.split(\" \")[0];","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"duyLeu"},"content":"        return Command.getCommandStream()","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"duyLeu"},"content":"                .parallel() // parallel for potential speedup when scanning all enums","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"duyLeu"},"content":"                .filter(c -\u003e c.getKeyword().equals(inputKeyword))","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"duyLeu"},"content":"                .findFirst()","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"duyLeu"},"content":"                .orElseThrow(() -\u003e new InvalidCommandException(","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"duyLeu"},"content":"                        inputKeyword,","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"duyLeu"},"content":"                        \"Meow! I couldn\u0027t find any matching command.\"","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"duyLeu"},"content":"                ));","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false}],"authorContributionMap":{"duyLeu":65}},{"path":"src/main/java/moon/parser/util/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.parser.util;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"import java.util.Optional;","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"import moon.models.MoonDateTime;","lastModifiedDate":"2025-09-10T12:43:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.ParseException;","lastModifiedDate":"2025-09-10T12:43:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-10T12:43:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" * Utility class for parsing date and time strings into {@link MoonDateTime} objects.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":" * Supports two contexts:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":" *   \u003cli\u003e\u003cb\u003eUser input\u003c/b\u003e: expects {@code dd/MM/yyyy HHmm} or {@code dd/MM/yyyy}\u003c/li\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":" *   \u003cli\u003e\u003cb\u003eStorage\u003c/b\u003e: expects {@code MMM d yyyy HH:mm} or {@code MMM d yyyy}\u003c/li\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":" * If both date-time and date-only parsing fail, a {@link ParseException} is thrown.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"public class DateTimeParser {","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"    private static final DateTimeFormatter DATE \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"    private static final DateTimeFormatter DATETIME \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"    private static final DateTimeFormatter MOONDATE \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2025-09-04T12:46:50","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"    private static final DateTimeFormatter MOONDATETIME \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2025-09-04T12:46:50","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"     * Parses a string into a {@link MoonDateTime}.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"     * Tries date-time first, then falls back to date-only parsing.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"     * @param input        the string to parse","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"     * @param isFromStorage true if the input string comes from storage (already formatted),","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"     *                      false if the input comes directly from user input","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"     * @return a {@link MoonDateTime} representing the parsed date or date-time","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"     * @throws ParseException if the input cannot be parsed into either a date or a date-time","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"    public static MoonDateTime parse(String input, boolean isFromStorage) throws ParseException {","lastModifiedDate":"2025-09-04T12:46:50","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"        return tryParseDateTime(input, isFromStorage)","lastModifiedDate":"2025-09-04T12:46:50","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"                .map(dt -\u003e MoonDateTime.of(dt.toLocalDate(), dt.toLocalTime()))","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"                .or(() -\u003e tryParseDate(input, isFromStorage).map(MoonDateTime::ofDate))","lastModifiedDate":"2025-09-04T12:46:50","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"                .orElseThrow(() -\u003e new ParseException(\"Could not parse date/time: \" + input));","lastModifiedDate":"2025-09-04T12:46:50","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"     * Attempts to parse a full date-time string into a {@link LocalDateTime}.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"     * @param s             the string to parse","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"     * @param isFromStorage true if the input string comes from storage, false if from user input","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"     * @return an {@link Optional} containing the parsed {@link LocalDateTime}, or empty if parsing fails","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"duyLeu"},"content":"    private static Optional\u003cLocalDateTime\u003e tryParseDateTime(String s, boolean isFromStorage) {","lastModifiedDate":"2025-09-04T12:46:50","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"duyLeu"},"content":"        DateTimeFormatter format \u003d isFromStorage ? MOONDATETIME : DATETIME;","lastModifiedDate":"2025-09-04T12:46:50","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"duyLeu"},"content":"        try {","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"duyLeu"},"content":"            LocalDateTime dt \u003d LocalDateTime.parse(s, format);","lastModifiedDate":"2025-09-04T12:46:50","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"duyLeu"},"content":"            return Optional.of(dt);","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"duyLeu"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"duyLeu"},"content":"            return Optional.empty();","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"duyLeu"},"content":"     * Attempts to parse a date-only string into a {@link LocalDate}.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"duyLeu"},"content":"     * @param s             the string to parse","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"duyLeu"},"content":"     * @param isFromStorage true if the input string comes from storage, false if from user input","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"duyLeu"},"content":"     * @return an {@link Optional} containing the parsed {@link LocalDate}, or empty if parsing fails","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"duyLeu"},"content":"    private static Optional\u003cLocalDate\u003e tryParseDate(String s, boolean isFromStorage) {","lastModifiedDate":"2025-09-04T12:46:50","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"duyLeu"},"content":"        DateTimeFormatter format \u003d isFromStorage ? MOONDATE : DATE;","lastModifiedDate":"2025-09-04T12:46:50","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"duyLeu"},"content":"        try {","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"duyLeu"},"content":"            LocalDate d \u003d LocalDate.parse(s, format);","lastModifiedDate":"2025-09-04T12:46:50","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"duyLeu"},"content":"            return Optional.of(d);","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"duyLeu"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"duyLeu"},"content":"            return Optional.empty();","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-04T12:15:07","isFullCredit":false}],"authorContributionMap":{"duyLeu":79}},{"path":"src/main/java/moon/parser/util/ExtractString.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.parser.util;","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":" * Utility class for string manipulation.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":" * Provides a method to extract all tokens from an input string except for a specified one.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"public class ExtractString {","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"     * Returns a new string consisting of all words from {@code input} except those","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"     * equal to {@code exclude}.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"     * Words are split on whitespace. The result is trimmed of leading and trailing spaces.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"     * Example:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"     *   input   \u003d \"delete 2\"","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"     *   exclude \u003d \"delete\"","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"     *   result  \u003d \"2\"","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"     * @param input   the original string","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"     * @param exclude the word to filter out","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"     * @return a new string with {@code exclude} removed","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"    public static String extract(String input, String exclude) {","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"        return Arrays.stream(input.split(\"\\\\s+\"))","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"                .filter(s -\u003e !s.equals(exclude))","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"                .reduce(\"\", (s1, s2) -\u003e s1 + \" \" + s2)","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"                .trim();","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false}],"authorContributionMap":{"duyLeu":35}},{"path":"src/main/java/moon/parser/util/FormatChecker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.parser.util;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import moon.commands.enums.Command;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import moon.models.TaskList;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.EmptyArgumentException;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.InvalidIndexException;","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.ParseException;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" * Utility class that provides validation checks for command formats and arguments.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":" * Used by the parser layer to ensure user input adheres to the expected syntax","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" * before command execution.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"public class FormatChecker {","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"     * Validates that the number of parameters for a command matches its expected format.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"     * Expected number of parameters:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003e{@link Command#TODO} ‚Üí 1\u003c/li\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003e{@link Command#DEADLINE} ‚Üí 2\u003c/li\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"     *   \u003cli\u003e{@link Command#EVENT} ‚Üí 3\u003c/li\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"     * @param inputList the split user input","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"     * @param command   the command being validated","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"     * @throws ParseException if the number of parameters is less or more than expected","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"    public static void checkCommandFormat(String[] inputList, Command command) throws ParseException {","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"        int numOfParameters \u003d switch (command) {","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"        case TODO -\u003e 1;","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"        case DEADLINE -\u003e 2;","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"        case EVENT -\u003e 3;","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"        default -\u003e throw new ParseException(command,","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"                \"Meow! Are you sure you have the correct command?\");","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"        };","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"        if (inputList.length \u003c numOfParameters) {","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"            throw new ParseException(command,","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"                    \"Meow! Are you missing a dash \u0027/\u0027 or a command somewhere?\");","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"        } else if (inputList.length \u003e numOfParameters) {","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"            throw new ParseException(command,","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"                    \"Meow! Are you sure you have the correct command?\");","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"     * Validates that the argument for a task or time is not empty.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"duyLeu"},"content":"     * @param inputString the full user input string","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"duyLeu"},"content":"     * @param command     the command being validated","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"duyLeu"},"content":"     * @param isTaskName  true if checking for an empty task name,","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"duyLeu"},"content":"     *                    false if checking for a time argument","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"duyLeu"},"content":"     * @throws EmptyArgumentException if the required argument is empty","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"duyLeu"},"content":"     * @throws ParseException         if the command type is unsupported","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"duyLeu"},"content":"    public static void checkEmptyParameter(String inputString, Command command, boolean isTaskName)","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"duyLeu"},"content":"            throws ParseException {","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"duyLeu"},"content":"        String exceptionMessage;","lastModifiedDate":"2025-09-21T10:37:45","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-21T10:37:45","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"duyLeu"},"content":"        if (isTaskName) {","lastModifiedDate":"2025-09-21T10:37:45","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"duyLeu"},"content":"            exceptionMessage \u003d \"Meow! Your task name cannot be empty!\";","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"duyLeu"},"content":"        } else {","lastModifiedDate":"2025-09-21T10:37:45","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"duyLeu"},"content":"            exceptionMessage \u003d switch (command) {","lastModifiedDate":"2025-09-21T10:37:45","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"duyLeu"},"content":"            case DEADLINE -\u003e \"Meow! Your deadline time cannot be empty!\";","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"duyLeu"},"content":"            case EVENT -\u003e \"Meow! Both your start and end time cannot be empty!\";","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"duyLeu"},"content":"            default -\u003e throw new ParseException(command,","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"duyLeu"},"content":"                    \"Meow! Are you sure you have the correct command?\");","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"duyLeu"},"content":"            };","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-21T10:37:45","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"duyLeu"},"content":"        if (inputString.split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"duyLeu"},"content":"            System.out.println(inputString);","lastModifiedDate":"2025-09-06T00:46:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"duyLeu"},"content":"            throw new EmptyArgumentException(command, exceptionMessage);","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"duyLeu"},"content":"     * Validates that an input keyword matches the expected keyword for a command.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"duyLeu"},"content":"     * @param actualInput   the keyword provided by the user","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"duyLeu"},"content":"     * @param expectedInput the expected keyword","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"duyLeu"},"content":"     * @param command       the command being validated","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"duyLeu"},"content":"     * @throws ParseException if the actual keyword does not match the expected one","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"duyLeu"},"content":"    public static void checkKeyword(String actualInput, String expectedInput, Command command) throws ParseException {","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"duyLeu"},"content":"        if (!actualInput.equals(expectedInput)) {","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"duyLeu"},"content":"            throw new ParseException(command,","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"duyLeu"},"content":"                    String.format(\"Meow! I think you make a mistake here: \u0027%s\u0027.\", actualInput));","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"duyLeu"},"content":"     * Throws an exception if the given index is out of bounds for the task list.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"duyLeu"},"content":"     * @param index the index to check","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"duyLeu"},"content":"     * @param list  the task list being accessed","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"duyLeu"},"content":"     * @throws InvalidIndexException if the index is negative or greater than/equal to the list size","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"duyLeu"},"content":"    public static void throwExceptionIfOutOfIndex(int index, TaskList list) throws InvalidIndexException {","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"duyLeu"},"content":"        if (index \u003c 0 || index \u003e\u003d list.size()) {","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"duyLeu"},"content":"            throw new InvalidIndexException(Command.DELETE,","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"duyLeu"},"content":"                    \"Meow! Your index is out of range!\");","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-04T02:32:06","isFullCredit":false}],"authorContributionMap":{"duyLeu":108}},{"path":"src/main/java/moon/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.storage;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T03:30:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-09-04T03:30:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-09-04T03:30:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-09-04T03:30:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2025-09-04T10:37:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"import java.util.List;","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"import moon.models.Task;","lastModifiedDate":"2025-09-10T12:43:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"import moon.models.TaskList;","lastModifiedDate":"2025-09-10T12:43:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.ParseException;","lastModifiedDate":"2025-09-10T12:43:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"import moon.parser.storage.AddFromStorageParser;","lastModifiedDate":"2025-09-10T12:43:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-10T12:43:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":" * Handles persistent storage of tasks for the Moon chatbot.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":" * The {@code Storage} class is responsible for:","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":" *   \u003cli\u003eEnsuring the storage file and parent directories exist.\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":" *   \u003cli\u003eLoading tasks from the storage file into a {@link TaskList}.\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":" *   \u003cli\u003eRewriting the storage file with the current tasks.\u003c/li\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"public class Storage {","lastModifiedDate":"2025-09-04T03:30:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"    private final Path storageFile;","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T03:30:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"     * Creates a {@code Storage} instance for the specified file path.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"     * Ensures the storage file exists, creating directories and the file if necessary.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"     * @param filepath Path to the storage file","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"     * @throws IOException If the file or directories cannot be created","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"    public Storage(String filepath) throws IOException {","lastModifiedDate":"2025-09-04T03:30:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"        this.storageFile \u003d Paths.get(filepath);","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"        initialiseStorageIfNotExist();","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T03:30:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T03:30:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"     * Ensures the storage file and its parent directories exist.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"     * If the parent directory does not exist, it is created. If the storage","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"     * file does not exist, an empty file is created.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"     * @throws IOException If the file or directories cannot be created","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"    public void initialiseStorageIfNotExist() throws IOException {","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"        // Ensure parent folder exists","lastModifiedDate":"2025-09-04T03:30:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"        if (this.storageFile.getParent() !\u003d null) {","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"duyLeu"},"content":"            Files.createDirectories(this.storageFile.getParent());","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-04T03:30:41","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T03:30:41","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"duyLeu"},"content":"        // If the file doesn‚Äôt exist, create an empty one","lastModifiedDate":"2025-09-04T03:30:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"duyLeu"},"content":"        if (Files.notExists(this.storageFile)) {","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"duyLeu"},"content":"            Files.createFile(this.storageFile);","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-04T03:30:41","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T03:30:41","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T03:30:41","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"duyLeu"},"content":"     * Loads all tasks from the storage file into a {@link TaskList}.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"duyLeu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"duyLeu"},"content":"     * Each non-blank line is parsed into a {@link Task} using","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"duyLeu"},"content":"     * {@code AddFromStorageParser}.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"duyLeu"},"content":"     * @return A {@code TaskList} containing tasks from storage","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"duyLeu"},"content":"     * @throws IOException     If the storage file cannot be read","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"duyLeu"},"content":"     * @throws ParseException  If any line cannot be parsed into a valid task","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"duyLeu"},"content":"    public TaskList load() throws IOException, ParseException {","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"duyLeu"},"content":"        initialiseStorageIfNotExist();","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"duyLeu"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(storageFile);","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"duyLeu"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"duyLeu"},"content":"        for (String line : lines) {","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"duyLeu"},"content":"            if (!line.isBlank()) {","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"duyLeu"},"content":"                Task t \u003d AddFromStorageParser.parse(line);","lastModifiedDate":"2025-09-21T10:28:15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"duyLeu"},"content":"                assert t !\u003d null : \"Parsed task should not be null\";","lastModifiedDate":"2025-09-21T10:28:15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"duyLeu"},"content":"                tasks.add(t);","lastModifiedDate":"2025-09-21T10:28:15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"duyLeu"},"content":"            }","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"duyLeu"},"content":"        return tasks;","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T03:30:41","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"duyLeu"},"content":"     * Rewrites the storage file with the given list of tasks.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"duyLeu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"duyLeu"},"content":"     * Existing content is truncated before writing. Each task is","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"duyLeu"},"content":"     * converted into its storage string using {@link Task#toStorageString()}.","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"duyLeu"},"content":"     * @param tasks The task list to save","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"duyLeu"},"content":"     * @throws IOException If the file cannot be written to","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-06T12:04:00","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"duyLeu"},"content":"    public void rewrite(TaskList tasks) throws IOException {","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"duyLeu"},"content":"        initialiseStorageIfNotExist();","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"duyLeu"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"duyLeu"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"duyLeu"},"content":"            lines.add(tasks.get(i).toStorageString());","lastModifiedDate":"2025-09-05T19:54:49","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"duyLeu"},"content":"        Files.write(this.storageFile, lines,","lastModifiedDate":"2025-09-04T10:37:00","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"duyLeu"},"content":"                StandardOpenOption.CREATE,","lastModifiedDate":"2025-09-04T10:37:00","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"duyLeu"},"content":"                StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2025-09-04T10:37:00","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T10:14:58","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-04T03:30:41","isFullCredit":false}],"authorContributionMap":{"duyLeu":104}},{"path":"src/main/java/moon/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.ui;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2025-09-17T22:57:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":" * A chat bubble with an avatar and a text label.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":" * Loaded via FXML and used by {@link MainWindow} for both user and bot messages.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":" * The user bubble keeps the avatar on the right; the bot bubble is flipped so the avatar is on the left.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"    @FXML private Label dialog;","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"    @FXML private ImageView displayPicture;","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"     * Creates a dialog bubble showing the given text and image.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"     * The FXML is loaded and injected before UI properties are set.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"     *","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"     * @param text message text for the bubble","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"     * @param img  avatar image","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"        try {","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(DialogBox.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-17T22:57:57","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"        dialog.setWrapText(true);","lastModifiedDate":"2025-09-17T22:57:57","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2025-09-17T22:57:57","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"        dialog.maxWidthProperty().bind(this.widthProperty().subtract(100)); // leave room for avatar/padding","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"duyLeu"},"content":"     * Flips order so avatar is on the left and text on the right; also applies a reply style.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"duyLeu"},"content":"    private void flip() {","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"duyLeu"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"duyLeu"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"duyLeu"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"duyLeu"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"duyLeu"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"duyLeu"},"content":"     * Factory for a user dialog bubble.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"duyLeu"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"duyLeu"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"duyLeu"},"content":"     * Factory for a bot dialog bubble. The bubble is flipped so the avatar appears on the left.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"duyLeu"},"content":"    public static DialogBox getMoonDialog(String text, Image img) {","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"duyLeu"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"duyLeu"},"content":"        db.flip();","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"duyLeu"},"content":"        return db;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false}],"authorContributionMap":{"duyLeu":78}},{"path":"src/main/java/moon/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.ui;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2025-09-20T18:51:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-09-20T18:51:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"import moon.logic.Moon;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":" * JavaFX controller for the main chat window.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":" * Manages message flow between the text field and the {@link Moon} logic, and renders","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":" * conversation bubbles into a scrollable container.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"    @FXML private ScrollPane scrollPane;","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"    @FXML private VBox dialogContainer;","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"    @FXML private TextField userInput;","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"    @FXML private Button sendButton;","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"    private Moon moon;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserPic.jpg\"));","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"    private final Image moonImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/BotPic.jpg\"));","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"     * Initializes scrolling and width behavior after FXML injection.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"    @FXML","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"        dialogContainer.setFillWidth(true);","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"    /** Injects the {@link Moon} chatbot instance. */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"    public void setMoon(Moon moon) {","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"        this.moon \u003d moon;","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"    /** Shows the initial greeting from the bot and focuses the input field. */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"    public void showGreeting() {","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"        addMoonMessage(UiMessages.showGreetingMessage());","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"        userInput.requestFocus();","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"duyLeu"},"content":"    /** Shows the storage load result (success/empty/failure). */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"duyLeu"},"content":"    public void showInitialStorage() {","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"duyLeu"},"content":"        addMoonMessage(moon.initiateStorage());","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"duyLeu"},"content":"        userInput.requestFocus();","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"duyLeu"},"content":"    /**","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"duyLeu"},"content":"     * Handles a user submission: renders the user message, obtains the bot response,","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"duyLeu"},"content":"     * renders it, and optionally exits after the farewell.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"duyLeu"},"content":"     */","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"duyLeu"},"content":"    @FXML","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"duyLeu"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"duyLeu"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"duyLeu"},"content":"        String response \u003d this.moon.getResponse(input);","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"duyLeu"},"content":"        if (moon.isExitCommand(input)) {","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"duyLeu"},"content":"            addUserMessage(input);","lastModifiedDate":"2025-09-20T18:51:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"duyLeu"},"content":"            addMoonMessage(UiMessages.showExitMessage());","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"duyLeu"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(1.5));","lastModifiedDate":"2025-09-20T18:51:48","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"duyLeu"},"content":"            pause.setOnFinished(e -\u003e Platform.exit());","lastModifiedDate":"2025-09-20T18:51:48","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"duyLeu"},"content":"            pause.play();","lastModifiedDate":"2025-09-20T18:51:48","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"duyLeu"},"content":"            return;","lastModifiedDate":"2025-09-20T18:51:48","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"duyLeu"},"content":"        addUserMessage(input);","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"duyLeu"},"content":"        addMoonMessage(response);","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"duyLeu"},"content":"        addMoonMessage(UiMessages.showAskingMessage());","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"duyLeu"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"duyLeu"},"content":"    /** Appends a bot message bubble to the dialog container. */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"duyLeu"},"content":"    public void addMoonMessage(String message) {","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"duyLeu"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"duyLeu"},"content":"                DialogBox.getMoonDialog(message, moonImage));","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"duyLeu"},"content":"    /** Appends a user message bubble to the dialog container. */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"duyLeu"},"content":"    public void addUserMessage(String message) {","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"duyLeu"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"duyLeu"},"content":"                DialogBox.getUserDialog(message, userImage));","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false}],"authorContributionMap":{"duyLeu":94}},{"path":"src/main/java/moon/ui/UiMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package moon.ui;","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import java.util.List;","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import moon.models.Task;","lastModifiedDate":"2025-09-10T12:43:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"import moon.models.TaskList;","lastModifiedDate":"2025-09-10T12:43:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"import moon.models.TaskMatch;","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-10T12:43:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"/**","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":" * Centralized message templates used by the GUI and logic.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":" * All methods are stateless and return a formatted string ready for display.","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":" */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"public final class UiMessages {","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"    private UiMessages() { /* no instances */ }","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"    /** @return the greeting banner/message shown at startup */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"    public static String showGreetingMessage() {","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"        String logo \u003d \"\"\"","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"                 __  __   ____    ____    _   _","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"                |  \\\\/  | / __ \\\\  / __ \\\\  | \\\\ | |     __      _","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"                | |\\\\/| || |  | || | () | |  \\\\| |   o\u0027\u0027)}____//","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"                | |  | || |__| || @ . o| | |\\\\  |    `_/      )","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"                |_|  |_| \\\\____/  \\\\____/  |_| \\\\_|    (_(_/-(_/","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"                \"\"\";","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"        // The logo is not included because it renders terrible in the GUI:","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"        return \"Meooowww! I\u0027m Moon! Your personal assistant!\";","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"    /** @return the farewell message before exiting */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"    public static String showExitMessage() {","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"        return \"Byeee! Hope to see you again! Meooowww!\";","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"    /** @return the generic prompt asking for the next command */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"    public static String showAskingMessage() {","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"        return \"How may I help you?\";","lastModifiedDate":"2025-09-17T22:08:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"    /** @return a formatted exception message to display to the user */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"    public static String showExceptionMessage(String s) {","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"        return s;","lastModifiedDate":"2025-09-17T22:57:57","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"    /** @return a generic error message for unexpected I/O or system errors */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"    public static String showGeneralErrorMessage() {","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"        return \"Sorryyy! I incurred some error while trying to add this task.\\nWould you mind trying again? Meow!\";","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"    /** @return a message indicating that a previous task list was loaded successfully */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"duyLeu"},"content":"    public static String showLoadStorageSuccessfulMessage(TaskList list) {","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"duyLeu"},"content":"        return String.format(\"I have retrieved your previous task list!\\n%s  Meow!\", list);","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"duyLeu"},"content":"    /** @return a message indicating that storage could not be loaded */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"duyLeu"},"content":"    public static String showLoadStorageUnsuccessfulMessage() {","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"duyLeu"},"content":"        return \"I couldn\u0027t retrieve your previous task. No worries! Let\u0027s start again! Meow!\";","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T18:44:03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"duyLeu"},"content":"    /** @return a message indicating that storage was empty on first run */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"duyLeu"},"content":"    public static String showEmptyInitialStorageMessage() {","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"duyLeu"},"content":"        return \"Time to start tasking! Meooowww!\";","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"duyLeu"},"content":"    /** @return a confirmation message for adding a task */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"duyLeu"},"content":"    public static String showAddTaskMessage(Task addedTask) {","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"duyLeu"},"content":"        return String.format(\"Copy that! I\u0027ve added this task!\\n\\t%s\\n\", addedTask);","lastModifiedDate":"2025-09-17T22:57:57","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T10:00:33","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"duyLeu"},"content":"    /** @return a confirmation message for deleting a task */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"duyLeu"},"content":"    public static String showDeleteTaskMessage(Task deletedTask) {","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"duyLeu"},"content":"        return String.format(\"Copy that! I\u0027ve deleted this task! Woof!\\n\\t%s\\n\", deletedTask);","lastModifiedDate":"2025-09-17T22:57:57","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"duyLeu"},"content":"    /** @return a formatted list message (or encouragement when empty) */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"duyLeu"},"content":"    public static String showListMessage(TaskList list) {","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"duyLeu"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"duyLeu"},"content":"            return \"You haven\u0027t added anything to your list yet. Time to start tasking! Meooowww!\";","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"duyLeu"},"content":"        } else {","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"duyLeu"},"content":"            return String.format(\"Here are the items in your list!\\n%s  Meow!\\n\", list);","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"duyLeu"},"content":"    /** @return a message for trying to mark an already-done task */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"duyLeu"},"content":"    public static String showAlreadyMarkedMessage(Task alreadyMarkedTask) {","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"duyLeu"},"content":"        return String.format(\"I see you have already marked this task!\\n  %s\\n\", alreadyMarkedTask);","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"duyLeu"},"content":"    /** @return a message for trying to unmark an already-not-done task */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"duyLeu"},"content":"    public static String showAlreadyUnmarkedMessage(Task alreadyUnmarkedTask) {","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"duyLeu"},"content":"        return String.format(\"I see you have already unmarked this task!\\n  %s\\n\", alreadyUnmarkedTask);","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"duyLeu"},"content":"    /** @return a success message for marking a task done */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"duyLeu"},"content":"    public static String showMarkedSuccessfulMessage(Task markedTask) {","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"duyLeu"},"content":"        return String.format(\"Nicely done! I\u0027ve pawed this as done! Meow!\\n\\t  %s\\n\", markedTask);","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-05T17:54:44","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"duyLeu"},"content":"    /** @return a success message for unmarking a task */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"duyLeu"},"content":"    public static String showUnmarkedSuccessfulMessage(Task unmarkedTask) {","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"duyLeu"},"content":"        return String.format(\"No worries! I\u0027ve pawed this as not done! You can do it! Meow!\\n  %s\\n\", unmarkedTask);","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"duyLeu"},"content":"    /** @return a message listing matched tasks for a keyword, or a miss message if empty */","lastModifiedDate":"2025-09-20T19:35:29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"duyLeu"},"content":"    public static String showTasksMatchedMessage(List\u003cTaskMatch\u003e matchedTasks, String keyword) {","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"duyLeu"},"content":"        if (matchedTasks.isEmpty()) {","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"duyLeu"},"content":"            return String.format(\"I can\u0027t find any tasks matching your keyword: %s . Meow:(\\n\", keyword);","lastModifiedDate":"2025-09-18T00:00:53","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"duyLeu"},"content":"        } else {","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"duyLeu"},"content":"            return String.format(\"I found these tasks matching your keyword!\\n%s  Meow!\\n\",","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"duyLeu"},"content":"                    TaskList.formatTaskMatchList(matchedTasks));","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-08T20:14:06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-04T16:03:41","isFullCredit":false}],"authorContributionMap":{"duyLeu":114}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"         stylesheets\u003d\"@/css/dialog-box.css\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"        \u003cLabel fx:id\u003d\"dialog\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"               text\u003d\"Label\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"               wrapText\u003d\"true\"","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"               maxWidth\u003d\"360\"","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"               textOverrun\u003d\"CLIP\"\u003e","lastModifiedDate":"2025-09-17T22:40:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"                \u003cInsets left\u003d\"7.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"                        right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"                \u003cInsets bottom\u003d\"6.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"                        left\u003d\"6.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"                        right\u003d\"6.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"                        top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"                   fitHeight\u003d\"99.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"                   fitWidth\u003d\"99.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"                   pickOnBounds\u003d\"true\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"                   preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false}],"authorContributionMap":{"duyLeu":45}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"            stylesheets\u003d\"@/css/main.css\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"            xmlns\u003d\"http://javafx.com/javafx/20.0.1\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"            fx:controller\u003d\"moon.ui.MainWindow\"\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"                   AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"                   AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"                text\u003d\"Send\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"                AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"                AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"                    fitToWidth\u003d\"true\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"                    vvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"                    AnchorPane.bottomAnchor\u003d\"43.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"                    AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"duyLeu"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"duyLeu"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"duyLeu"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"duyLeu"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"duyLeu"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"duyLeu"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-13T00:46:18","isFullCredit":false}],"authorContributionMap":{"duyLeu":58}},{"path":"src/test/java/parser/AddDeadlineCommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package parser;","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.ParseException;","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"import moon.parser.usercommand.AddDeadlineCommandParser;","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"public class AddDeadlineCommandParserTest {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"    @Test","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"    public void parse_emptyNameArgument_exceptionThrown() {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"        try {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"            AddDeadlineCommandParser parser \u003d new AddDeadlineCommandParser();","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"            parser.parse(\"deadline \");","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"            assertEquals(\"Meow! Your task name cannot be empty! \"","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"                    + \"You should follow this syntax: \"","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"                    + \"deadline {task description} /by dd/mm/yyyy HHMM {deadline time}\",","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"                    e.getMessage());","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"    @Test","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"    public void parse_emptyTimeArgument_exceptionThrown() {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"        try {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"            AddDeadlineCommandParser parser \u003d new AddDeadlineCommandParser();","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"            parser.parse(\"deadline read books /by\");","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"            assertEquals(\"Meow! Your deadline time cannot be empty! \"","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"                    + \"You should follow this syntax: \"","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"                    + \"deadline {task description} /by dd/mm/yyyy HHMM {deadline time}\",","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"                    e.getMessage());","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"    @Test","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"    public void parse_wrongByKeyword_exceptionThrown() {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"        try {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"            AddDeadlineCommandParser parser \u003d new AddDeadlineCommandParser();","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"            parser.parse(\"deadline read books /bo 15/03/2025\");","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"            assertEquals(\"Meow! I think you make a mistake here: \u0027bo\u0027. \"","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"                    + \"You should follow this syntax: \"","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"                    + \"deadline {task description} /by dd/mm/yyyy HHMM {deadline time}\",","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"                    e.getMessage());","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"    @Test","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"    public void parse_wrongTimeFormat_exceptionThrown() {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"duyLeu"},"content":"        try {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"duyLeu"},"content":"            AddDeadlineCommandParser parser \u003d new AddDeadlineCommandParser();","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"duyLeu"},"content":"            parser.parse(\"deadline read books /by 2025-03-15\");","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"duyLeu"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"duyLeu"},"content":"            assertEquals(\"Could not parse date/time: 2025-03-15\", e.getMessage());","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false}],"authorContributionMap":{"duyLeu":59}},{"path":"src/test/java/parser/AddEventCommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"package parser;","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"import moon.parser.exceptions.ParseException;","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"import moon.parser.usercommand.AddEventCommandParser;","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"public class AddEventCommandParserTest {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"    @Test","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"    public void parse_emptyNameArgument_exceptionThrown() {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"        try {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"            AddEventCommandParser parser \u003d new AddEventCommandParser();","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"            parser.parse(\"event \");","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"            assertEquals(\"Meow! Your task name cannot be empty! \"","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"                    + \"You should follow this syntax: \"","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"                    + \"event {task description} /from dd/mm/yyyy HHMM {start time} /by dd/mm/yyyy HHMM {end time}\",","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"                    e.getMessage());","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"    @Test","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"    public void parse_emptyTimeArgument_exceptionThrown() {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"        try {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"            AddEventCommandParser parser \u003d new AddEventCommandParser();","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"            parser.parse(\"event holiday /from 15/03/2025 /to\");","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"            assertEquals(\"Meow! Both your start and end time cannot be empty! \"","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"                    + \"You should follow this syntax: \"","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"                    + \"event {task description} /from dd/mm/yyyy HHMM {start time} /by dd/mm/yyyy HHMM {end time}\",","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"                    e.getMessage());","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"    @Test","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"    public void parse_missingArgument_exceptionThrown() {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"duyLeu"},"content":"        try {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"duyLeu"},"content":"            AddEventCommandParser parser \u003d new AddEventCommandParser();","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"duyLeu"},"content":"            parser.parse(\"event holiday /to 15/03/2025\");","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"duyLeu"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"duyLeu"},"content":"            assertEquals(\"Meow! Are you missing a dash \u0027/\u0027 or a command somewhere? \"","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"duyLeu"},"content":"                    + \"You should follow this syntax: \"","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"duyLeu"},"content":"                    + \"event {task description} /from dd/mm/yyyy HHMM {start time} /by dd/mm/yyyy HHMM {end time}\",","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"duyLeu"},"content":"                    e.getMessage());","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"duyLeu"},"content":"    @Test","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"duyLeu"},"content":"    public void parse_wrongTimeKeyword_exceptionThrown() {","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"duyLeu"},"content":"        try {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"duyLeu"},"content":"            AddEventCommandParser parser \u003d new AddEventCommandParser();","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"duyLeu"},"content":"            parser.parse(\"deadline read books /fro 15/03/2025 /to 26/4/2025\");","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"duyLeu"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"duyLeu"},"content":"            assertEquals(\"Meow! I think you make a mistake here: \u0027fro\u0027.\"","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"duyLeu"},"content":"                    + \" You should follow this syntax:\"","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"duyLeu"},"content":"                    + \" event {task description} /from dd/mm/yyyy HHMM {start time} /by dd/mm/yyyy HHMM {end time}\",","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"duyLeu"},"content":"                    e.getMessage());","lastModifiedDate":"2025-09-21T11:52:14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"duyLeu"},"content":"","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"duyLeu"},"content":"    @Test","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"duyLeu"},"content":"    public void parse_wrongTimeFormat_exceptionThrown() {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"duyLeu"},"content":"        try {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"duyLeu"},"content":"            AddEventCommandParser parser \u003d new AddEventCommandParser();","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"duyLeu"},"content":"            parser.parse(\"deadline read books /from 2025-03-15 /to 2025-04-26\");","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"duyLeu"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"duyLeu"},"content":"            assertEquals(\"Could not parse date/time: 2025-03-15\", e.getMessage());","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"duyLeu"},"content":"        }","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"duyLeu"},"content":"    }","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"duyLeu"},"content":"}","lastModifiedDate":"2025-09-10T13:16:39","isFullCredit":false}],"authorContributionMap":{"duyLeu":72}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"duyLeu"},"content":"lst","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"duyLeu"},"content":"list","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"duyLeu"},"content":"todone","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"duyLeu"},"content":"todo","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"duyLeu"},"content":"todo read books","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"duyLeu"},"content":"dead line buy lunch /by 2pm today","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"duyLeu"},"content":"deadline /by 2pm","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"duyLeu"},"content":"deadline buy lunch","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"duyLeu"},"content":"deadline buy lunch /from 2pm","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"duyLeu"},"content":"deadline buy lunch /by","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"duyLeu"},"content":"deadline buy lunch /by 2pm today","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"duyLeu"},"content":"evernt workshop /from 2pm /to 3pm today","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"duyLeu"},"content":"event /by 2","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"duyLeu"},"content":"event /from 2pm /to 3pm today","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"duyLeu"},"content":"event class /from 2pm /to","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"event class /from 2pm /to 3pm today","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"duyLeu"},"content":"list","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"duyLeu"},"content":"event class /from 2pm /to 3pm today","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"duyLeu"},"content":"mark 0","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"duyLeu"},"content":"mark 1.0","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"duyLeu"},"content":"mark -1","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"duyLeu"},"content":"mark 1","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"mark 1","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"duyLeu"},"content":"mark 6","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"duyLeu"},"content":"list","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"duyLeu"},"content":"unmark 0","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"duyLeu"},"content":"unmark 1.0","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"duyLeu"},"content":"unmark -1","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"duyLeu"},"content":"unmark 2","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"duyLeu"},"content":"unmark 1","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"duyLeu"},"content":"unmark 6","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"duyLeu"},"content":"list","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"duyLeu"},"content":"delete 0","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"duyLeu"},"content":"delete 1.0","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"duyLeu"},"content":"delete -1","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"duyLeu"},"content":"delete 2","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"duyLeu"},"content":"list","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"duyLeu"},"content":"bye","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false}],"authorContributionMap":{"duyLeu":38}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"duyLeu"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/app/*.java ../src/main/java/exception/*.java","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"duyLeu"},"content":"java -classpath ../bin app.Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-23T11:50:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"duyLeu":2,"-":36}}]
