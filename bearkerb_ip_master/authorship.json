[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"# AI used","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"ChatGPT, to refactor readData() in the Storage class for better SLAP. - 18 September 2025","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":"ChatGPT, to refactor and improve JUnit tests. - 18 September 2025","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false}],"authorContributionMap":{"bearkerb":4}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"# Lucid User Guide","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"Lucid is a chatbot with a GUI that helps you manage simple daily tasks. It allows creating, viewing, deleting tasks, as","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":"well as marking them as complete and not complete. Users can also search for tasks by name. Task data is saved to an","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":"automatically created file for storage.","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"## Quick start","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"Prerequisites","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"- Java 17 installed","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bearkerb"},"content":"How to run","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bearkerb"},"content":"1. Download the latest jar file from [here](https://github.com/bearkerb/ip/releases)","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bearkerb"},"content":"2. Copy the file to the folder you wish to use as the home folder","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bearkerb"},"content":"3. Open a terminal, navigate to the folder with the jar file and use `java -jar lucid.jar` to run the application","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bearkerb"},"content":"4. Type your command in the message box at the bottom and press enter to execute it.","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bearkerb"},"content":"5. You\u0027re good to go!","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bearkerb"},"content":"## Features","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bearkerb"},"content":"- Simple GUI","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bearkerb"},"content":"- Add different task types (Todo, Deadline, Event)","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bearkerb"},"content":"- View all tasks","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bearkerb"},"content":"- Mark tasks as complete or not complete","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bearkerb"},"content":"- Delete tasks","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bearkerb"},"content":"- Find tasks","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bearkerb"},"content":"## Notes about command format","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bearkerb"},"content":"- The chatbot does not accept the use of the `|` character.","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bearkerb"},"content":"- Extraneous parameters will not be ignored, and will not be accepted.","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bearkerb"},"content":"- Parameters for commands like `event ... /from ... /to ...` must be in the correct order.","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bearkerb"},"content":"- Dates `yyyy-mm-dd` can be substituted with `yyyy-mm-dd-xxxx` to specify times.","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bearkerb"},"content":"## Getting help","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bearkerb"},"content":"Displays a message showing all available commands and their usages  ","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bearkerb"},"content":"Format: `help`","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bearkerb"},"content":"## Adding todos: `todo`","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bearkerb"},"content":"Format: `todo \u003cname\u003e`  ","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bearkerb"},"content":"Example: `todo read book` adds a todo called `read book` to the task list.","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bearkerb"},"content":"## Adding deadlines: `deadline`","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bearkerb"},"content":"Format: `deadline \u003cname\u003e /by \u003cyyyy-mm-dd\u003e (or \u003cyyyy-mm-dd-xxxx)`  ","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bearkerb"},"content":"Example: `deadline return book /by 2025-09-20-1200` adds a deadline called `return book` with a due date of","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bearkerb"},"content":"`20th September 2025 1200` to the task list.","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bearkerb"},"content":"## Adding events: `event`","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bearkerb"},"content":"Format: `event \u003cname\u003e /from \u003cyyyy-mm-dd\u003e /to \u003cyyyy-mm-dddd\u003e (\u003cyyyy-mm-dd-xxxx\u003e can be used to specify timings\u003e`  ","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bearkerb"},"content":"Example: `event math tutorial /from 2025-09-18-0800 /to 2025-09-18-0900` adds an event called `math tutorial` starting on `18th September 2025 0800` and ending at `18th September 2025 0900`","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bearkerb"},"content":"## Showing all tasks: `list`","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bearkerb"},"content":"Shows all tasks in the task list  ","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bearkerb"},"content":"Format: `list`","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bearkerb"},"content":"## Completing a task: `mark`","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bearkerb"},"content":"Marks a specified task as complete  ","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bearkerb"},"content":"Format: `mark \u003cindex\u003e`","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bearkerb"},"content":"- The task must not be completed yet","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bearkerb"},"content":"- The index must be a positive integer, and less than or equal to number of tasks currently in the list","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bearkerb"},"content":"- The index refers to the number shown beside the task when using the `list` command","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bearkerb"},"content":"## Un-completing a task: `unmark`","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bearkerb"},"content":"Marks a specified task as not complete  ","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bearkerb"},"content":"Format: `unmark \u003cindex\u003e`","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bearkerb"},"content":"- The task must be completed","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bearkerb"},"content":"- The index must be a positive integer, and less than or equal to number of tasks currently in the list","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bearkerb"},"content":"- The index refers to the number shown beside the task when using the `list` command","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bearkerb"},"content":"## Deleting a task: `delete`","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bearkerb"},"content":"Deletes the task at the specified index from the task list  ","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bearkerb"},"content":"Format: `delete \u003cindex\u003e`","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bearkerb"},"content":"- The index must be a positive integer, and less than or equal to number of tasks currently in the list","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bearkerb"},"content":"- The index refers to the number shown beside the task when using the `list` command","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bearkerb"},"content":"## Finding tasks: `find`","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bearkerb"},"content":"Finds all tasks containing a specified keyword  ","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bearkerb"},"content":"Format: `find \u003ckeyword\u003e` searches and prints all tasks that contain the `keyword` substring","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bearkerb"},"content":"## Closing the application: `bye`","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bearkerb"},"content":"Closes the application with a goodbye message  ","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bearkerb"},"content":"Format: `bye`","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bearkerb"},"content":"# AI Usage","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bearkerb"},"content":"ChatGPT - 18 September 2025","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bearkerb"},"content":"- Refactor readData() in Storage class for better SLAP","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bearkerb"},"content":"- Refactor and improve JUnit tests ","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false}],"authorContributionMap":{"bearkerb":87}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bearkerb"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bearkerb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bearkerb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bearkerb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bearkerb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bearkerb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bearkerb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bearkerb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bearkerb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bearkerb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bearkerb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bearkerb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bearkerb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bearkerb"},"content":"    mainClass.set(\"lucid.Launcher\")","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bearkerb"},"content":"    archiveFileName \u003d \u0027lucid.jar\u0027","lastModifiedDate":"2025-08-28T21:47:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bearkerb"},"content":"    archiveBaseName \u003d \"lucid\"","lastModifiedDate":"2025-08-28T21:47:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bearkerb"},"content":"checkstyle {","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bearkerb"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false}],"authorContributionMap":{"bearkerb":23,"-":39}},{"path":"data/Lucid.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"T | DONE | borrow book","lastModifiedDate":"2025-09-21T23:57:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"D | NOT DONE | return book | 2019-10-15","lastModifiedDate":"2025-09-19T23:20:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"E | NOT DONE | project meeting | 2020-10-13-1900 | 2024-11-10-0000","lastModifiedDate":"2025-09-19T23:20:45","isFullCredit":false}],"authorContributionMap":{"bearkerb":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"# Lucid User Guide","lastModifiedDate":"2025-09-18T17:39:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"![Product Screenshot](./Ui.png)","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":"Lucid is a chatbot with a GUI that helps you manage simple daily tasks. It allows creating, viewing, deleting tasks, as ","lastModifiedDate":"2025-09-18T17:39:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"well as marking them as complete and not complete. Users can also search for tasks by name. Task data is saved to an ","lastModifiedDate":"2025-09-18T17:39:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"automatically created file for storage.","lastModifiedDate":"2025-09-18T17:39:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"## Quick start","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bearkerb"},"content":"Prerequisites","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bearkerb"},"content":"- Java version 17  ","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bearkerb"},"content":"How to run","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bearkerb"},"content":"1. Download the latest jar file from [here](https://github.com/bearkerb/ip/releases)","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bearkerb"},"content":"2. Copy the file to the folder you wish to use as the home folder","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bearkerb"},"content":"3. Open a terminal, navigate to the folder with the jar file and use `java -jar lucid.jar` to run the application","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bearkerb"},"content":"4. Type your command in the message box at the bottom and press enter to execute it.","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bearkerb"},"content":"5. You\u0027re good to go!","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bearkerb"},"content":"## Features","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bearkerb"},"content":"- Simple GUI","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bearkerb"},"content":"- Add different task types (Todo, Deadline, Event)","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bearkerb"},"content":"- View all tasks","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bearkerb"},"content":"- Mark tasks as complete or not complete","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bearkerb"},"content":"- Delete tasks","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bearkerb"},"content":"- Find tasks","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bearkerb"},"content":"## Notes about command format","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bearkerb"},"content":"- The chatbot does not accept the use of the `|` character.","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bearkerb"},"content":"- Extraneous parameters will not be ignored, and will not be accepted.","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bearkerb"},"content":"- Parameters for commands like `event ... /from ... /to ...` must be in the correct order.","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bearkerb"},"content":"- Dates `yyyy-mm-dd` can be substituted with `yyyy-mm-dd-xxxx` to specify times.","lastModifiedDate":"2025-09-18T19:33:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bearkerb"},"content":"## Getting help","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bearkerb"},"content":"Displays a message showing all available commands and their usages  ","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bearkerb"},"content":"Format: `help`","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bearkerb"},"content":"## Adding todos: `todo`","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bearkerb"},"content":"Format: `todo \u003cname\u003e`  ","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bearkerb"},"content":"Example: `todo read book` adds a todo called `read book` to the task list.","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bearkerb"},"content":"## Adding deadlines: `deadline`","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bearkerb"},"content":"Format: `deadline \u003cname\u003e /by \u003cyyyy-mm-dd\u003e (or \u003cyyyy-mm-dd-xxxx)`  ","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bearkerb"},"content":"Example: `deadline return book /by 2025-09-20-1200` adds a deadline called `return book` with a due date of ","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bearkerb"},"content":"`20th September 2025 1200` to the task list.","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bearkerb"},"content":"## Adding events: `event`","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bearkerb"},"content":"Format: `event \u003cname\u003e /from \u003cyyyy-mm-dd\u003e /to \u003cyyyy-mm-dddd\u003e (\u003cyyyy-mm-dd-xxxx\u003e can be used to specify timings\u003e`  ","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bearkerb"},"content":"Example: `event math tutorial /from 2025-09-18-0800 /to 2025-09-18-0900` adds an event called `math tutorial` starting on `18th September 2025 0800` and ending at `18th September 2025 0900`  ","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bearkerb"},"content":"## Showing all tasks: `list`","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bearkerb"},"content":"Shows all tasks in the task list  ","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bearkerb"},"content":"Format: `list`","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bearkerb"},"content":"## Completing a task: `mark`","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bearkerb"},"content":"Marks a specified task as complete  ","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bearkerb"},"content":"Format: `mark \u003cindex\u003e`","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bearkerb"},"content":"- The task must not be completed yet","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bearkerb"},"content":"- The index must be a positive integer, and less than or equal to number of tasks currently in the list","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bearkerb"},"content":"- The index refers to the number shown beside the task when using the `list` command","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bearkerb"},"content":"## Un-completing a task: `unmark`","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bearkerb"},"content":"Marks a specified task as not complete  ","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bearkerb"},"content":"Format: `unmark \u003cindex\u003e`","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bearkerb"},"content":"- The task must be completed","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bearkerb"},"content":"- The index must be a positive integer, and less than or equal to number of tasks currently in the list","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bearkerb"},"content":"- The index refers to the number shown beside the task when using the `list` command","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bearkerb"},"content":"## Deleting a task: `delete`","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bearkerb"},"content":"Deletes the task at the specified index from the task list  ","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bearkerb"},"content":"Format: `delete \u003cindex\u003e`","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bearkerb"},"content":"- The index must be a positive integer, and less than or equal to number of tasks currently in the list","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bearkerb"},"content":"- The index refers to the number shown beside the task when using the `list` command","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bearkerb"},"content":"## Finding tasks: `find`","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bearkerb"},"content":"Finds all tasks containing a specified keyword  ","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bearkerb"},"content":"Format: `find \u003ckeyword\u003e` searches and prints all tasks that contain the `keyword` substring","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bearkerb"},"content":"## Closing the application: `bye`","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bearkerb"},"content":"Closes the application with a goodbye message  ","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bearkerb"},"content":"Format: `bye`","lastModifiedDate":"2025-09-18T19:08:21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bearkerb"},"content":"# AI Usage","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bearkerb"},"content":"ChatGPT - 18 September 2025","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bearkerb"},"content":"- Refactor readData() in Storage class for better SLAP","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bearkerb"},"content":"- Refactor and improve JUnit tests ","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false}],"authorContributionMap":{"bearkerb":74,"-":15}},{"path":"src/main/java/lucid/DateTimeParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":" * Exception resulting from error parsing date and time","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"public class DateTimeParseException extends LucidException {","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"    public DateTimeParseException() {","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"        super(\"I\u0027m sorry! Something went wrong with the date and time\");","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false}],"authorContributionMap":{"bearkerb":10}},{"path":"src/main/java/lucid/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":" * A task with a deadline, represented by a LocalDate and LocalTime (if needed)","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bearkerb"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bearkerb"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bearkerb"},"content":"    private LocalTime dueTime;","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bearkerb"},"content":"     * Creates a deadline with the specified characteristics","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bearkerb"},"content":"     * @param name String containing name of the deadline","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bearkerb"},"content":"     * @param dueDate String containing formation of the due date","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bearkerb"},"content":"    public Deadline(String name, String dueDate) {","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bearkerb"},"content":"        super(name);","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bearkerb"},"content":"        this.dueDate \u003d LocalDate.parse(dueDate);","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bearkerb"},"content":"     * Creates a deadline with the specified characteristics","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bearkerb"},"content":"     * @param name String containing name of the deadline","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bearkerb"},"content":"     * @param dueDate String containing the due date","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bearkerb"},"content":"     * @param dueTime String containing the due time","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bearkerb"},"content":"    public Deadline(String name, String dueDate, String dueTime) {","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bearkerb"},"content":"        super(name);","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bearkerb"},"content":"        this.dueDate \u003d LocalDate.parse(dueDate);","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bearkerb"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bearkerb"},"content":"        this.dueTime \u003d LocalTime.parse(dueTime, timeFormatter);","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bearkerb"},"content":"     * Returns a string representing the deadline","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bearkerb"},"content":"     * @return String representation including type, completion status, name and due date (and time if it exists)","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bearkerb"},"content":"    @Override","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bearkerb"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bearkerb"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.dueDate.getMonth() + \" \" + this.dueDate.getDayOfMonth()","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bearkerb"},"content":"                + \" \" + this.dueDate.getYear() + (this.dueTime \u003d\u003d null ? \"\" : \" \" + this.dueTime) + \")\";","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bearkerb"},"content":"     * Returns a string representing the deadline suitable for input to a data file","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bearkerb"},"content":"     * @return String including type, completion status, name, due date (and time if it exists)","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bearkerb"},"content":"    @Override","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bearkerb"},"content":"    public String toDataString() {","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bearkerb"},"content":"        return Storage.TYPE_DEADLINE + \" | \" + (this.isComplete() ? Storage.STATUS_DONE : Storage.STATUS_NOT_DONE)","lastModifiedDate":"2025-09-19T19:39:54","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bearkerb"},"content":"                + \" | \" + this.getName() + \" | \" + this.dueDate + (this.dueTime \u003d\u003d null ? \"\" : \"-\"","lastModifiedDate":"2025-09-19T19:39:54","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bearkerb"},"content":"                + this.dueTime.format(DateTimeFormatter.ofPattern(\"HHmm\"))) + \"\\n\";","lastModifiedDate":"2025-09-19T19:39:54","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false}],"authorContributionMap":{"bearkerb":58}},{"path":"src/main/java/lucid/DeadlineUsageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":" * Exception resulting from incorrect usage of the deadline command","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"public class DeadlineUsageException extends LucidException {","lastModifiedDate":"2025-08-22T02:03:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"     * Constructor for exception, with message informing user of the correct usage method","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"    public DeadlineUsageException() {","lastModifiedDate":"2025-08-22T02:03:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bearkerb"},"content":"        super(\"Looks like you\u0027ve used the deadline command incorrectly!\\n\"","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bearkerb"},"content":"                + \"Proper usage: deadline \u003cname\u003e /by yyyy-mm-dd (or yyyy-mm-dd-xxxx to include a timing)\");","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-22T02:03:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-08-22T02:03:45","isFullCredit":false}],"authorContributionMap":{"bearkerb":14}},{"path":"src/main/java/lucid/DeleteUsageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":" * Exception resulting from incorrect usage of the delete command","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"public class DeleteUsageException extends LucidException {","lastModifiedDate":"2025-08-22T02:24:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"    public DeleteUsageException() {","lastModifiedDate":"2025-08-22T02:24:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"        super(\"You need to tell me the number of the task you want me to delete!!\");","lastModifiedDate":"2025-08-22T02:24:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-22T02:24:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-08-22T02:24:39","isFullCredit":false}],"authorContributionMap":{"bearkerb":10}},{"path":"src/main/java/lucid/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"// Reused from JavaFX tutorial","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bearkerb"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bearkerb"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bearkerb"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bearkerb"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bearkerb"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bearkerb"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bearkerb"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bearkerb"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bearkerb"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bearkerb"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bearkerb"},"content":"    @FXML","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bearkerb"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bearkerb"},"content":"    @FXML","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bearkerb"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bearkerb"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bearkerb"},"content":"        try {","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bearkerb"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bearkerb"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bearkerb"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bearkerb"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bearkerb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bearkerb"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bearkerb"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bearkerb"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bearkerb"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bearkerb"},"content":"    private void flip() {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bearkerb"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bearkerb"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bearkerb"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bearkerb"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bearkerb"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bearkerb"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bearkerb"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bearkerb"},"content":"    public static DialogBox getLucidDialog(String text, Image img) {","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bearkerb"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bearkerb"},"content":"        db.flip();","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bearkerb"},"content":"        return db;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false}],"authorContributionMap":{"bearkerb":63}},{"path":"src/main/java/lucid/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":" * An event with a start and an end, represented by two LocalDates for start and end dates","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":" * and two LocalTimes if needed for start and end timings","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bearkerb"},"content":"    private LocalDate startDate;","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bearkerb"},"content":"    private LocalDate endDate;","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bearkerb"},"content":"    private LocalTime startTime;","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bearkerb"},"content":"    private LocalTime endTime;","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bearkerb"},"content":"     * Creates an event with the specified characteristics","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bearkerb"},"content":"     * @param name String containing name of the event","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bearkerb"},"content":"     * @param start String specifying event start date and time","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bearkerb"},"content":"     * @param end String specifying event end date and time","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bearkerb"},"content":"    public Event(String name, String start, String end) {","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bearkerb"},"content":"        super(name);","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bearkerb"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bearkerb"},"content":"        try {","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bearkerb"},"content":"            String[] startDateTime \u003d Parser.parseDateTimeString(start);","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bearkerb"},"content":"            String[] endDateTime \u003d Parser.parseDateTimeString(end);","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bearkerb"},"content":"            this.startDate \u003d LocalDate.parse(startDateTime[0]);","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bearkerb"},"content":"            this.endDate \u003d LocalDate.parse(endDateTime[0]);","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bearkerb"},"content":"            if (startDateTime[1] !\u003d null) {","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bearkerb"},"content":"                this.startTime \u003d LocalTime.parse(startDateTime[1], timeFormatter);","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bearkerb"},"content":"            }","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bearkerb"},"content":"            if (endDateTime[1] !\u003d null) {","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bearkerb"},"content":"                this.endTime \u003d LocalTime.parse(endDateTime[1], timeFormatter);","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bearkerb"},"content":"            }","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bearkerb"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bearkerb"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bearkerb"},"content":"    @Override","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bearkerb"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bearkerb"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + dateTimeToString(startDate, startTime) + \" to: \"","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bearkerb"},"content":"                + dateTimeToString(endDate, endTime) + \")\";","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bearkerb"},"content":"    @Override","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bearkerb"},"content":"    public String toDataString() {","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bearkerb"},"content":"        return Storage.TYPE_EVENT + \" | \" + (this.isComplete() ? Storage.STATUS_DONE : Storage.STATUS_NOT_DONE) + \" | \"","lastModifiedDate":"2025-09-19T19:39:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bearkerb"},"content":"                + this.getName() + \" | \" + this.startDate + (this.startTime \u003d\u003d null ? \"\" : \"-\"","lastModifiedDate":"2025-09-19T19:39:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bearkerb"},"content":"                + this.startTime.format(DateTimeFormatter.ofPattern(\"HHmm\"))) + \" | \"","lastModifiedDate":"2025-09-19T19:39:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bearkerb"},"content":"                + this.endDate + (this.endTime \u003d\u003d null ? \"\" : \"-\"","lastModifiedDate":"2025-09-19T19:39:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bearkerb"},"content":"                + this.endTime.format(DateTimeFormatter.ofPattern(\"HHmm\"))) + \"\\n\";","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bearkerb"},"content":"     * Returns string representation of date and time parameters","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bearkerb"},"content":"     * @param date date to convert to string","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bearkerb"},"content":"     * @param time time to convert to string","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bearkerb"},"content":"     * @return string representation of date and time together","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bearkerb"},"content":"    public String dateTimeToString(LocalDate date, LocalTime time) {","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bearkerb"},"content":"        return date.getMonth() + \" \" + date.getDayOfMonth() + \" \" + date.getYear() + (time \u003d\u003d null ? \"\" : \" \" + time);","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false}],"authorContributionMap":{"bearkerb":66}},{"path":"src/main/java/lucid/EventUsageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":" * Exception resulting from incorrect usage of the event command","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"public class EventUsageException extends LucidException {","lastModifiedDate":"2025-08-22T02:03:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"     * Constructor for exception, with message informing user of the correct usage method","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"    public EventUsageException() {","lastModifiedDate":"2025-08-22T02:03:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bearkerb"},"content":"        super(\"Looks like you\u0027ve used the event command incorrectly!\\n\"","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bearkerb"},"content":"                + \"Proper usage: event \u003cname\u003e /from yyyy-mm-dd /to yyyy-mm-dd \"","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bearkerb"},"content":"                + \"(or yyyy-mm-dd-xxxx to include a timing)\");","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-22T02:03:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-08-22T02:03:45","isFullCredit":false}],"authorContributionMap":{"bearkerb":15}},{"path":"src/main/java/lucid/FindUsageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":" * Exception resulting from using the find command incorrectly","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"public class FindUsageException extends LucidException {","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"    public FindUsageException() {","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"        super(\"Something went wrong! Try using it like this: find \u003cname\u003e\");","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false}],"authorContributionMap":{"bearkerb":10}},{"path":"src/main/java/lucid/IncorrectDataFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":" * Exception resulting from detection of invalid data retrieved from data file","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"public class IncorrectDataFormatException extends LucidException {","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"    public IncorrectDataFormatException() {","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"        super(\"Oh no! Something went wrong with reading the data file!\");","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false}],"authorContributionMap":{"bearkerb":10}},{"path":"src/main/java/lucid/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":" * Exception resulting from detection of invalid date time string","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"public class InvalidDateTimeException extends LucidException {","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"    public InvalidDateTimeException() {","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"        super(\"Your date is invalid. Enter a real date! (Up to 12 months and not exceeding the days for that month)\");","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false}],"authorContributionMap":{"bearkerb":10}},{"path":"src/main/java/lucid/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"public class Launcher {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false}],"authorContributionMap":{"bearkerb":12}},{"path":"src/main/java/lucid/Lucid.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-20T12:37:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":" * Main class, entry point of the progrma","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"public class Lucid {","lastModifiedDate":"2025-08-20T12:22:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bearkerb"},"content":"     * Method that starts the chatbot","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bearkerb"},"content":"    // Adapted from JavaFX tutorial","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bearkerb"},"content":"    public void start() {","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bearkerb"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bearkerb"},"content":"        while (true) {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bearkerb"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bearkerb"},"content":"            String reply \u003d getResponseForGui(userInput);","lastModifiedDate":"2025-09-10T17:33:17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bearkerb"},"content":"            System.out.println(reply);","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bearkerb"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bearkerb"},"content":"                scanner.close();","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bearkerb"},"content":"                return;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bearkerb"},"content":"            }","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-20T12:22:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bearkerb"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bearkerb"},"content":"    public String getResponseForGui(String input) {","lastModifiedDate":"2025-09-10T17:33:17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bearkerb"},"content":"        return Parser.parse(input);","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bearkerb"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bearkerb"},"content":"        new Lucid().start();","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-08-20T12:22:22","isFullCredit":false}],"authorContributionMap":{"bearkerb":38}},{"path":"src/main/java/lucid/LucidException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":" * General exception for all exceptions created for the chatbot. Superclass of all other created exceptions","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"public class LucidException extends Exception {","lastModifiedDate":"2025-08-22T01:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"    public LucidException(String message) {","lastModifiedDate":"2025-08-22T01:49:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"        super(message);","lastModifiedDate":"2025-08-22T01:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-22T01:49:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-08-22T01:49:07","isFullCredit":false}],"authorContributionMap":{"bearkerb":10}},{"path":"src/main/java/lucid/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"// Reused from JavaFX tutorial","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bearkerb"},"content":" * Class to start JavaFX GUI","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bearkerb"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bearkerb"},"content":"    private Lucid lucid \u003d new Lucid();","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bearkerb"},"content":"    @Override","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bearkerb"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bearkerb"},"content":"        try {","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bearkerb"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bearkerb"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bearkerb"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bearkerb"},"content":"            stage.setTitle(\"Lucid\");","lastModifiedDate":"2025-09-18T17:39:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bearkerb"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bearkerb"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bearkerb"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bearkerb"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setLucid(lucid); // inject the Lucid instance","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bearkerb"},"content":"            stage.show();","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bearkerb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bearkerb"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false}],"authorContributionMap":{"bearkerb":35}},{"path":"src/main/java/lucid/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"// Reused from JavaFX tutorial","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bearkerb"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bearkerb"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bearkerb"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bearkerb"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bearkerb"},"content":" * Class that controls layout and handles user inputs in the GUI","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bearkerb"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bearkerb"},"content":"    @FXML","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bearkerb"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bearkerb"},"content":"    @FXML","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bearkerb"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bearkerb"},"content":"    @FXML","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bearkerb"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bearkerb"},"content":"    @FXML","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bearkerb"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bearkerb"},"content":"    private Lucid lucid;","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bearkerb"},"content":"    // User image by Streamline, https://www.streamlinehq.com/emojis/download/smiling-face-with-sunglasses--31896","lastModifiedDate":"2025-09-18T21:45:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bearkerb"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bearkerb"},"content":"    // Image by Nexon, retrieved from Maplestory Wiki, https://maplestorywiki.net/w/Lucid","lastModifiedDate":"2025-09-18T21:45:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bearkerb"},"content":"    private Image lucidImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Lucid.png\"));","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bearkerb"},"content":"    @FXML","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bearkerb"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bearkerb"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bearkerb"},"content":"     * Injects lucid instance","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bearkerb"},"content":"     * @param l lucid instance","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bearkerb"},"content":"    public void setLucid(Lucid l) {","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bearkerb"},"content":"        lucid \u003d l;","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bearkerb"},"content":"        DialogBox greeting \u003d DialogBox.getLucidDialog(Ui.introduction(), lucidImage);","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bearkerb"},"content":"        dialogContainer.getChildren().addAll(greeting);","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bearkerb"},"content":"    @FXML","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bearkerb"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bearkerb"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bearkerb"},"content":"        String lucidText \u003d lucid.getResponseForGui(userInput.getText());","lastModifiedDate":"2025-09-10T17:33:17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bearkerb"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bearkerb"},"content":"                DialogBox.getUserDialog(userText, userImage),","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bearkerb"},"content":"                DialogBox.getLucidDialog(lucidText, lucidImage)","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bearkerb"},"content":"        );","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bearkerb"},"content":"        if (userText.equals(\"bye\")) {","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bearkerb"},"content":"            // Pause for 1 second after displaying farewell message before closing application","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bearkerb"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bearkerb"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bearkerb"},"content":"            delay.play();","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bearkerb"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false}],"authorContributionMap":{"bearkerb":69}},{"path":"src/main/java/lucid/MarkUsageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":" * Exception resulting from incorrect usage of the mark command","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"public class MarkUsageException extends LucidException {","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"    public MarkUsageException() {","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"        super(\"That\u0027s not how you do it! Try: mark \u003cindex\u003e instead.\");","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false}],"authorContributionMap":{"bearkerb":10}},{"path":"src/main/java/lucid/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":" * Class with static fields and methods to handle the retrieval and interpretation of user inputs","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":" * Contains a TaskList to store information on existing tasks","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bearkerb"},"content":"public class Parser {","lastModifiedDate":"2025-08-20T22:23:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bearkerb"},"content":"    private static final String DATE_FORMAT \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}\";","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bearkerb"},"content":"    private static final String DATETIME_FORMAT \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}-\\\\d{4}\";","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bearkerb"},"content":"    private static final String FLAG_BY \u003d \"/by\";","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bearkerb"},"content":"    private static final String FLAG_FROM \u003d \"/from\";","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bearkerb"},"content":"    private static final String FLAG_TO \u003d \"/to\";","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bearkerb"},"content":"    private static final Character SPACE_CHAR \u003d \u0027 \u0027;","lastModifiedDate":"2025-09-19T19:44:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bearkerb"},"content":"    private static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bearkerb"},"content":"     * Retrieves user input and processes it, calling appropriate function to handle it","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bearkerb"},"content":"    public static String parse(String userInput) {","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bearkerb"},"content":"        try {","lastModifiedDate":"2025-08-22T01:49:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bearkerb"},"content":"            if (userInput.contains(\"|\")) {","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bearkerb"},"content":"                return Ui.invalidCharacterDetectedMessage();","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bearkerb"},"content":"            }","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bearkerb"},"content":"            String firstWord \u003d userInput.split(\" \")[0];","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bearkerb"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2025-08-20T22:23:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bearkerb"},"content":"                return Ui.farewell();","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bearkerb"},"content":"            } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bearkerb"},"content":"                return taskList.printTasks();","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bearkerb"},"content":"            } else if (userInput.equals(\"help\")) {","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bearkerb"},"content":"                return Ui.printHelpSheet();","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bearkerb"},"content":"            } else if (firstWord.equals(\"mark\")) {","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bearkerb"},"content":"                return handleMarkCommand(userInput);","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bearkerb"},"content":"            } else if (firstWord.equals(\"unmark\")) {","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bearkerb"},"content":"                return handleUnmarkCommand(userInput);","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bearkerb"},"content":"            } else if (firstWord.equals(\"find\")) {","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bearkerb"},"content":"                return handleFindCommand(userInput);","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bearkerb"},"content":"            } else if (firstWord.equals(\"todo\")) {","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bearkerb"},"content":"                return handleToDoCommand(userInput);","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bearkerb"},"content":"            } else if (firstWord.equals(\"deadline\")) {","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bearkerb"},"content":"                return handleDeadlineCommand(userInput);","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bearkerb"},"content":"            } else if (firstWord.equals(\"event\")) {","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bearkerb"},"content":"                return handleEventCommand(userInput);","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bearkerb"},"content":"            } else if (firstWord.equals(\"delete\")) {","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bearkerb"},"content":"                return handleDeleteCommand(userInput);","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bearkerb"},"content":"            } else {","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bearkerb"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bearkerb"},"content":"            }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bearkerb"},"content":"        } catch (LucidException e) {","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bearkerb"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bearkerb"},"content":"            return e.getMessage();","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bearkerb"},"content":"     * Returns a String array containing separated date and time string representations of the input string","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bearkerb"},"content":"     * If input string has no time information included, index 1 of returned array is null","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bearkerb"},"content":"     *","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bearkerb"},"content":"     * @param dateTimeString String containing date and time information retrieved from data file","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bearkerb"},"content":"     *                       Has form yyyy-mm-dd (or yyyy-mm-dd-xxxx to include time)","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bearkerb"},"content":"     * @return String array where index 0 contains date string, index 1 contains time string if any","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bearkerb"},"content":"     * @throws DateTimeParseException if input string does not adhere to expected format","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bearkerb"},"content":"    public static String[] parseDateTimeString(String dateTimeString) throws DateTimeParseException {","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bearkerb"},"content":"        String[] dateAndTime;","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bearkerb"},"content":"        if (dateTimeString.matches(DATE_FORMAT)) {","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bearkerb"},"content":"            dateAndTime \u003d new String[]{dateTimeString, null};","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bearkerb"},"content":"        } else if (dateTimeString.matches(DATETIME_FORMAT)) {","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bearkerb"},"content":"            dateAndTime \u003d new String[]{dateTimeString.substring(0, 10), dateTimeString.substring(11)};","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bearkerb"},"content":"        } else {","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bearkerb"},"content":"            throw new DateTimeParseException();","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bearkerb"},"content":"        return dateAndTime;","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bearkerb"},"content":"     * Marks appropriate indexed task as complete","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bearkerb"},"content":"     *","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bearkerb"},"content":"     * @param userInput contains keyword \"mark\" and index of task to mark as complete","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bearkerb"},"content":"    public static String handleMarkCommand(String userInput) throws MarkUsageException {","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bearkerb"},"content":"        int firstSpaceIndex \u003d userInput.indexOf(SPACE_CHAR);","lastModifiedDate":"2025-09-19T19:44:23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bearkerb"},"content":"        String remainingInput \u003d userInput.substring(firstSpaceIndex + 1).trim();","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bearkerb"},"content":"        verifyMarkInput(remainingInput);","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bearkerb"},"content":"        return taskList.markTaskAsComplete(Integer.parseInt(remainingInput));","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bearkerb"},"content":"     * Verifies validity of user input for mark command","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bearkerb"},"content":"     * @param remainingInput user input substring after mark","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"bearkerb"},"content":"     * @throws MarkUsageException if the input is invalid","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"bearkerb"},"content":"    private static void verifyMarkInput(String remainingInput) throws MarkUsageException {","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"bearkerb"},"content":"        if (remainingInput.equals(\"mark\") || remainingInput.isEmpty()) {","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"bearkerb"},"content":"            throw new MarkUsageException();","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"bearkerb"},"content":"        try {","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"bearkerb"},"content":"            Integer.parseInt(remainingInput);","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"bearkerb"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"bearkerb"},"content":"            throw new MarkUsageException();","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"bearkerb"},"content":"     * Marks appropriate indexed task as not complete","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"bearkerb"},"content":"     *","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"bearkerb"},"content":"     * @param userInput contains keyword \"unmark\" and index of task to mark as complete","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"bearkerb"},"content":"    public static String handleUnmarkCommand(String userInput) throws UnmarkUsageException {","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"bearkerb"},"content":"        int firstSpaceIndex \u003d userInput.indexOf(SPACE_CHAR);","lastModifiedDate":"2025-09-19T19:44:23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"bearkerb"},"content":"        String remainingInput \u003d userInput.substring(firstSpaceIndex + 1).trim();","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"bearkerb"},"content":"        verifyUnmarkInput(remainingInput);","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"bearkerb"},"content":"        return taskList.markTaskAsNotComplete(Integer.parseInt(remainingInput));","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"bearkerb"},"content":"     * Verifies validity of user input for unmark command","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"bearkerb"},"content":"     * @param remainingInput user input substring after unmark","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"bearkerb"},"content":"     * @throws UnmarkUsageException if the input is invalid","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"bearkerb"},"content":"    private static void verifyUnmarkInput(String remainingInput) throws UnmarkUsageException {","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"bearkerb"},"content":"        if (remainingInput.equals(\"unmark\") || remainingInput.isEmpty()) {","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"bearkerb"},"content":"            throw new UnmarkUsageException();","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"bearkerb"},"content":"        try {","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"bearkerb"},"content":"            Integer.parseInt(remainingInput);","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"bearkerb"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"bearkerb"},"content":"            throw new UnmarkUsageException();","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"bearkerb"},"content":"     * Adds a todo to list of tasks","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"bearkerb"},"content":"     *","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"bearkerb"},"content":"     * @param userInput String containing command and name of task","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"bearkerb"},"content":"     * @throws ToDoEmptyException Exception resulting from incorrect string format","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"bearkerb"},"content":"    public static String handleToDoCommand(String userInput) throws ToDoEmptyException {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"bearkerb"},"content":"        int firstSpaceIndex \u003d userInput.indexOf(SPACE_CHAR);","lastModifiedDate":"2025-09-19T19:44:23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"bearkerb"},"content":"        String remainingInput \u003d userInput.substring(firstSpaceIndex + 1).trim();","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"bearkerb"},"content":"        if (remainingInput.equals(\"todo\") || remainingInput.isEmpty()) {","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"bearkerb"},"content":"            throw new ToDoEmptyException();","lastModifiedDate":"2025-08-22T02:03:45","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-22T01:49:07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"bearkerb"},"content":"        return taskList.addTask(new ToDo(remainingInput));","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"bearkerb"},"content":"     * Adds a deadline to list of tasks","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"bearkerb"},"content":"     * @param userInput String containing command and information of deadline task","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"bearkerb"},"content":"     * @throws DeadlineUsageException Exception resulting from incorrect string format","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"bearkerb"},"content":"    public static String handleDeadlineCommand(String userInput) throws DeadlineUsageException,","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"bearkerb"},"content":"            InvalidDateTimeException {","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"bearkerb"},"content":"        String[] args \u003d getDeadlineArgs(userInput);","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"bearkerb"},"content":"        String name \u003d args[0];","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"bearkerb"},"content":"        String due \u003d args[1];","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"bearkerb"},"content":"        if (due.matches(DATE_FORMAT)) {","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"bearkerb"},"content":"            return taskList.addTask(new Deadline(name, due));","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"bearkerb"},"content":"        } else if (due.matches(DATETIME_FORMAT)) {","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"bearkerb"},"content":"            return taskList.addTask((new Deadline(name, due.substring(0, 10), due.substring(11))));","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"bearkerb"},"content":"        } else {","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"bearkerb"},"content":"            throw new DeadlineUsageException();","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"bearkerb"},"content":"     * Verifies and extracts arguments from userInput for the handleDeadlineCommand function","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"bearkerb"},"content":"     * @param userInput String containing command and information of deadline task","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"bearkerb"},"content":"     * @return String array with first element name, second element due","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"bearkerb"},"content":"     * @throws DeadlineUsageException","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"bearkerb"},"content":"    private static String[] getDeadlineArgs(String userInput) throws DeadlineUsageException, InvalidDateTimeException {","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"bearkerb"},"content":"        if (!userInput.contains(FLAG_BY)) {","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"bearkerb"},"content":"            throw new DeadlineUsageException();","lastModifiedDate":"2025-08-22T02:03:45","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-22T02:03:45","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"bearkerb"},"content":"        int firstSpaceIndex \u003d userInput.indexOf(SPACE_CHAR);","lastModifiedDate":"2025-09-19T19:44:23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"bearkerb"},"content":"        String remainingInput \u003d userInput.substring(firstSpaceIndex + 1);","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"bearkerb"},"content":"        String[] args \u003d remainingInput.split(FLAG_BY);","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"bearkerb"},"content":"        if (args.length \u003d\u003d 0 || args.length \u003d\u003d 1) {","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"bearkerb"},"content":"            throw new DeadlineUsageException();","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"bearkerb"},"content":"        String name \u003d args[0].trim();","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"bearkerb"},"content":"        String due \u003d args[1].trim();","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"bearkerb"},"content":"        if (name.isEmpty() || !isCorrectDateTimeFormat(due)) {","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"bearkerb"},"content":"            throw new DeadlineUsageException();","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"bearkerb"},"content":"        checkDateTimeValidity(due);","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"bearkerb"},"content":"        return new String[] {name, due};","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"bearkerb"},"content":"     * Adds an event to list of tasks","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"bearkerb"},"content":"     * @param userInput String containing command and information of event task","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"bearkerb"},"content":"     * @throws EventUsageException Exception resulting from incorrect string format","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"bearkerb"},"content":"     * @throws InvalidDateTimeException if valid string format, but invalid date detected","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"bearkerb"},"content":"    public static String handleEventCommand(String userInput) throws EventUsageException, InvalidDateTimeException {","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"bearkerb"},"content":"        String[] args \u003d getEventArgs(userInput);","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"bearkerb"},"content":"        String name \u003d args[0];","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"bearkerb"},"content":"        String start \u003d args[1];","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"bearkerb"},"content":"        String end \u003d args[2];","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"bearkerb"},"content":"        checkDateTimeValidity(start);","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"bearkerb"},"content":"        checkDateTimeValidity(end);","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"bearkerb"},"content":"        return taskList.addTask((new Event(name, start, end)));","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"bearkerb"},"content":"     * Verifies and extracts arguments from userInput for the handleEventCommand function","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"bearkerb"},"content":"     * @param userInput String containing command and information of event task","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"bearkerb"},"content":"     * @return String array with first element name, second element start, third element end","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"bearkerb"},"content":"     * @throws EventUsageException if any invalid name or non-matching string format detected","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"bearkerb"},"content":"    private static String[] getEventArgs(String userInput) throws EventUsageException {","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"bearkerb"},"content":"        if (!userInput.contains(FLAG_FROM) || !userInput.contains(FLAG_TO)) {","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"bearkerb"},"content":"            throw new EventUsageException();","lastModifiedDate":"2025-08-22T02:03:45","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-22T02:03:45","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"bearkerb"},"content":"        int firstSpaceIndex \u003d userInput.indexOf(SPACE_CHAR);","lastModifiedDate":"2025-09-19T19:44:23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"bearkerb"},"content":"        String remainingInput \u003d userInput.substring(firstSpaceIndex + 1);","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"bearkerb"},"content":"        String[] args \u003d remainingInput.split(FLAG_FROM);","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"bearkerb"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"bearkerb"},"content":"            throw new EventUsageException();","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"bearkerb"},"content":"        String name \u003d args[0].trim();","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"bearkerb"},"content":"        String[] times \u003d args[1].split(FLAG_TO);","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"bearkerb"},"content":"        if (times.length \u003c 2) {","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"bearkerb"},"content":"            throw new EventUsageException();","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-10T17:33:17","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"bearkerb"},"content":"        String start \u003d times[0].trim();","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"bearkerb"},"content":"        String end \u003d times[1].trim();","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"bearkerb"},"content":"        if ((name.isEmpty()) || !isCorrectDateTimeFormat(start) || !isCorrectDateTimeFormat(end)) {","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"bearkerb"},"content":"            throw new EventUsageException();","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"bearkerb"},"content":"        return new String[] {name, start, end};","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"bearkerb"},"content":"     * Deletes a task from the list of tasks","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"bearkerb"},"content":"     *","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"bearkerb"},"content":"     * @param userInput index of task (according to list) to delete","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"bearkerb"},"content":"     * @throws DeleteUsageException Exception resulting from incorrect usage","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"bearkerb"},"content":"    public static String handleDeleteCommand(String userInput) throws DeleteUsageException {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"bearkerb"},"content":"        int firstSpaceIndex \u003d userInput.indexOf(SPACE_CHAR);","lastModifiedDate":"2025-09-19T19:44:23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"bearkerb"},"content":"        String remainingInput \u003d userInput.substring(firstSpaceIndex + 1);","lastModifiedDate":"2025-09-10T17:33:17","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"bearkerb"},"content":"        verifyDeleteInput(remainingInput);","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"bearkerb"},"content":"        return taskList.deleteTask(Integer.parseInt(remainingInput));","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"bearkerb"},"content":"     * Verifies validity of user input for delete command","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"bearkerb"},"content":"     * @param remainingInput user input substring after delete","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"bearkerb"},"content":"     * @throws DeleteUsageException if the input is invalid","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"bearkerb"},"content":"    private static void verifyDeleteInput(String remainingInput) throws DeleteUsageException {","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"bearkerb"},"content":"        if (remainingInput.equals(\"delete\") || remainingInput.isEmpty()) {","lastModifiedDate":"2025-09-10T17:33:17","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"bearkerb"},"content":"            throw new DeleteUsageException();","lastModifiedDate":"2025-08-22T02:24:39","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-22T02:24:39","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"bearkerb"},"content":"        try {","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"bearkerb"},"content":"            Integer.parseInt(remainingInput);","lastModifiedDate":"2025-09-10T18:19:24","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"bearkerb"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"bearkerb"},"content":"            throw new DeleteUsageException();","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"bearkerb"},"content":"     * Searches and prints tasks that suit the user input","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"bearkerb"},"content":"     *","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"bearkerb"},"content":"     * @param userInput String containing command and name substring to search for","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"bearkerb"},"content":"     * @throws FindUsageException","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"bearkerb"},"content":"    public static String handleFindCommand(String userInput) throws FindUsageException {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"bearkerb"},"content":"        int firstSpaceIndex \u003d userInput.indexOf(SPACE_CHAR);","lastModifiedDate":"2025-09-19T19:44:23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"bearkerb"},"content":"        String remainingInput \u003d userInput.substring(firstSpaceIndex + 1).trim();","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"bearkerb"},"content":"        if (remainingInput.equals(\"find\") || remainingInput.isEmpty()) {","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"bearkerb"},"content":"            throw new FindUsageException();","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"bearkerb"},"content":"        return taskList.findAndPrintTasks(remainingInput.trim());","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"bearkerb"},"content":"     * Checks if a string is appropriately formatted for event and deadline creation","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"bearkerb"},"content":"     * @param s String containing date and time information","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"bearkerb"},"content":"     * @return true if proper format, false otherwise","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"bearkerb"},"content":"    public static boolean isCorrectDateTimeFormat(String s) {","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"bearkerb"},"content":"        if (s.matches(DATE_FORMAT) || (s.matches(DATETIME_FORMAT))) {","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"bearkerb"},"content":"            return true;","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"bearkerb"},"content":"        } else {","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"bearkerb"},"content":"            return false;","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"bearkerb"},"content":"     * Checks if a dateTime string represents a valid date and time","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"bearkerb"},"content":"     * @param s dateTime string","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"bearkerb"},"content":"     * @throws InvalidDateTimeException if string does not represent a valid date and time","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"bearkerb"},"content":"    private static void checkDateTimeValidity(String s) throws InvalidDateTimeException {","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"bearkerb"},"content":"        try {","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"bearkerb"},"content":"            if (s.matches(DATE_FORMAT)) {","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"bearkerb"},"content":"                LocalDate.parse(s);","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"bearkerb"},"content":"            } else {","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"bearkerb"},"content":"                LocalDate.parse(s.substring(0, 10));","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"bearkerb"},"content":"                DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"bearkerb"},"content":"                LocalTime.parse(s.substring(11), timeFormatter);","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"bearkerb"},"content":"            }","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"bearkerb"},"content":"        } catch (java.time.format.DateTimeParseException e) {","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"bearkerb"},"content":"            throw new InvalidDateTimeException();","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-08-20T22:23:39","isFullCredit":false}],"authorContributionMap":{"bearkerb":317}},{"path":"src/main/java/lucid/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-08-28T22:59:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":"import java.io.File;","lastModifiedDate":"2025-08-28T22:59:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-08-28T22:59:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-28T22:59:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T22:59:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"import java.nio.file.StandardCopyOption;","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bearkerb"},"content":" * Class to handle the saving and updating of data when changes are made to the task list","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bearkerb"},"content":"public class Storage {","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bearkerb"},"content":"    public static final String TYPE_TODO \u003d \"T\";","lastModifiedDate":"2025-09-19T19:39:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bearkerb"},"content":"    public static final String TYPE_DEADLINE \u003d \"D\";","lastModifiedDate":"2025-09-19T19:39:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bearkerb"},"content":"    public static final String TYPE_EVENT \u003d \"E\";","lastModifiedDate":"2025-09-19T19:39:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bearkerb"},"content":"    public static final String STATUS_DONE \u003d \"DONE\";","lastModifiedDate":"2025-09-19T19:39:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bearkerb"},"content":"    public static final String STATUS_NOT_DONE \u003d \"NOT DONE\";","lastModifiedDate":"2025-09-19T19:39:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-19T19:39:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bearkerb"},"content":"    private static final String SPLITTER_REGEX \u003d \"\\\\|\";","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bearkerb"},"content":"    private File data;","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bearkerb"},"content":"     * Constructor to initialize the storage, creates a new data folder for data file if it does not already exist","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bearkerb"},"content":"    public Storage() {","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bearkerb"},"content":"        this.data \u003d new File(\"./data/Lucid.txt\");","lastModifiedDate":"2025-09-18T14:05:36","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bearkerb"},"content":"        if (!this.data.exists()) {","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bearkerb"},"content":"            try {","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bearkerb"},"content":"                if (!this.data.getParentFile().exists()) {","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bearkerb"},"content":"                    Ui.firstTimeUserMessage();","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bearkerb"},"content":"                    boolean successfulDirectoryCreation \u003d this.data.getParentFile().mkdirs();","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bearkerb"},"content":"                    assert successfulDirectoryCreation : \"parent directory should be created\";","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bearkerb"},"content":"                }","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bearkerb"},"content":"                boolean successfulFileCreation \u003d this.data.createNewFile();","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bearkerb"},"content":"                assert successfulFileCreation : \"data file should be created\";","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bearkerb"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bearkerb"},"content":"                System.out.println(\"IOException: \" + e.getMessage());","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bearkerb"},"content":"            }","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bearkerb"},"content":"     * Appends task to data file after conversion to correct format","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bearkerb"},"content":"     * @param t Task to append to data file","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bearkerb"},"content":"    public void appendTaskData(Task t) {","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bearkerb"},"content":"        try {","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bearkerb"},"content":"            FileWriter writer;","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bearkerb"},"content":"            writer \u003d new FileWriter(this.data, true);","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bearkerb"},"content":"            writer.append(t.toDataString());","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bearkerb"},"content":"            writer.close();","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bearkerb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bearkerb"},"content":"            System.out.println(\"Error creating FileWriter / writing to file, IOException: \" + e.getMessage());","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bearkerb"},"content":"     * Deletes a task from the data file","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bearkerb"},"content":"     * @param index Position of task in list or row of data file to delete","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bearkerb"},"content":"    public void deleteTaskData(int index) {","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bearkerb"},"content":"        File tempFile \u003d new File(\"tempFile.txt\");","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bearkerb"},"content":"        assert tempFile.exists() : \"cannot write to null tempFile\";","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bearkerb"},"content":"        try {","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bearkerb"},"content":"            deleteTaskFromFile(index, tempFile);","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bearkerb"},"content":"            Files.deleteIfExists(this.data.toPath());","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bearkerb"},"content":"            Files.move(tempFile.toPath(), this.data.toPath(), StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bearkerb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bearkerb"},"content":"            System.out.println(\"Error creating FileWriter / editing to file, IOException: \" + e.getMessage());","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bearkerb"},"content":"     * Deletes task at specified index from file","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bearkerb"},"content":"     * @param index of task to delete","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bearkerb"},"content":"     * @param tempFile temporary file to rewrite file","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bearkerb"},"content":"     * @throws IOException for error creating FileWriter or editing file","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bearkerb"},"content":"    private void deleteTaskFromFile(int index, File tempFile) throws IOException {","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bearkerb"},"content":"        FileWriter tempFileWriter \u003d new FileWriter(tempFile, true);","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bearkerb"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(this.data));","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bearkerb"},"content":"        int row \u003d 1;","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bearkerb"},"content":"        String currentLine;","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bearkerb"},"content":"        while ((currentLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bearkerb"},"content":"            if (row \u003d\u003d index) {","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bearkerb"},"content":"                row++;","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bearkerb"},"content":"                continue;","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bearkerb"},"content":"            }","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bearkerb"},"content":"            tempFileWriter.append(currentLine + \"\\n\");","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"bearkerb"},"content":"            row++;","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"bearkerb"},"content":"        tempFileWriter.close();","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"bearkerb"},"content":"        reader.close();","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"bearkerb"},"content":"     * Edits data file to mark task as complete","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"bearkerb"},"content":"     * @param index Position of task in list or row of data file to mark as complete","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"bearkerb"},"content":"    public void markTaskDataComplete(int index) {","lastModifiedDate":"2025-09-10T17:33:17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"bearkerb"},"content":"        File tempFile \u003d new File(\"tempFile.txt\");","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"bearkerb"},"content":"        try {","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"bearkerb"},"content":"            markTaskCompleteInFile(tempFile, index);","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"bearkerb"},"content":"            Files.deleteIfExists(this.data.toPath());","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"bearkerb"},"content":"            Files.move(tempFile.toPath(), this.data.toPath(), StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"bearkerb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"bearkerb"},"content":"            System.out.println(\"Error creating FileWriter / editing to file, IOException: \" + e.getMessage());","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"bearkerb"},"content":"    private void markTaskCompleteInFile(File tempFile, int index) throws IOException {","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"bearkerb"},"content":"        FileWriter tempFileWriter \u003d new FileWriter(tempFile, true);","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"bearkerb"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(this.data));","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"bearkerb"},"content":"        int row \u003d 1;","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"bearkerb"},"content":"        String currentLine;","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"bearkerb"},"content":"        while ((currentLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"bearkerb"},"content":"            if (row \u003d\u003d index) {","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"bearkerb"},"content":"                currentLine \u003d currentLine.replaceFirst(STATUS_NOT_DONE, STATUS_DONE);","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"bearkerb"},"content":"            }","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"bearkerb"},"content":"            tempFileWriter.append(currentLine + \"\\n\");","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"bearkerb"},"content":"            row++;","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"bearkerb"},"content":"        tempFileWriter.close();","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"bearkerb"},"content":"        reader.close();","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"bearkerb"},"content":"     * Edits data file to mark task as uncomplete","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"bearkerb"},"content":"     * @param index Position of task in list or row of data file to uncomplete","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"bearkerb"},"content":"    public void markTaskDataNotComplete(int index) {","lastModifiedDate":"2025-09-10T17:33:17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"bearkerb"},"content":"        File tempFile \u003d new File(\"tempFile.txt\");","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"bearkerb"},"content":"        try {","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"bearkerb"},"content":"            markTaskNotCompleteInFile(tempFile, index);","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"bearkerb"},"content":"            Files.deleteIfExists(this.data.toPath());","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"bearkerb"},"content":"            Files.move(tempFile.toPath(), this.data.toPath(), StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"bearkerb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"bearkerb"},"content":"            System.out.println(\"Error creating FileWriter / editing to file, IOException: \" + e.getMessage());","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"bearkerb"},"content":"    private void markTaskNotCompleteInFile(File tempFile, int index) throws IOException {","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"bearkerb"},"content":"        FileWriter tempFileWriter \u003d new FileWriter(tempFile, true);","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"bearkerb"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(this.data));","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"bearkerb"},"content":"        int row \u003d 1;","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"bearkerb"},"content":"        String currentLine;","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"bearkerb"},"content":"        while ((currentLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"bearkerb"},"content":"            if (row \u003d\u003d index) {","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"bearkerb"},"content":"                currentLine \u003d currentLine.replaceFirst(STATUS_DONE, STATUS_NOT_DONE);","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"bearkerb"},"content":"            }","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"bearkerb"},"content":"            tempFileWriter.append(currentLine + \"\\n\");","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"bearkerb"},"content":"            row++;","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"bearkerb"},"content":"        tempFileWriter.close();","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"bearkerb"},"content":"        reader.close();","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"bearkerb"},"content":"     * Returns ArrayList containing tasks based on data file","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"bearkerb"},"content":"     * @return ArrayList of existing tasks","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"bearkerb"},"content":"    // Refactored using ChatGPT to improve SLAP","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"bearkerb"},"content":"    public ArrayList\u003cTask\u003e readData() {","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"bearkerb"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"bearkerb"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(this.data))) {","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"bearkerb"},"content":"            String currentLine;","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"bearkerb"},"content":"            while ((currentLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"bearkerb"},"content":"                Task task \u003d parseLineToTask(currentLine);","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"bearkerb"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"bearkerb"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"bearkerb"},"content":"                }","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"bearkerb"},"content":"            }","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"bearkerb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"bearkerb"},"content":"            System.out.println(\"Error reading file, IOException: \" + e.getMessage());","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"bearkerb"},"content":"        } catch (LucidException e) {","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"bearkerb"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"bearkerb"},"content":"        return tasks;","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"bearkerb"},"content":"     * Checks type of task line is representing, and calls appropriate function to convert line to that task","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"bearkerb"},"content":"     * @param line Line representing task from data file","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"bearkerb"},"content":"     * @return Task represented by line","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"bearkerb"},"content":"    // Extracted from readData() using ChatGPT to improve SLAP","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"bearkerb"},"content":"    private Task parseLineToTask(String line) throws IncorrectDataFormatException {","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"bearkerb"},"content":"        String[] args \u003d line.split(SPLITTER_REGEX);","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"bearkerb"},"content":"        String type \u003d args[0].trim();","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"bearkerb"},"content":"        switch (type) {","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"bearkerb"},"content":"        case TYPE_TODO:","lastModifiedDate":"2025-09-19T19:39:54","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"bearkerb"},"content":"            return parseTodo(args, line);","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"bearkerb"},"content":"        case TYPE_DEADLINE:","lastModifiedDate":"2025-09-19T19:39:54","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"bearkerb"},"content":"            return parseDeadline(args, line);","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"bearkerb"},"content":"        case TYPE_EVENT:","lastModifiedDate":"2025-09-19T19:39:54","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"bearkerb"},"content":"            return parseEvent(args, line);","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"bearkerb"},"content":"        default:","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"bearkerb"},"content":"            Ui.readDataErrorMessage();","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"bearkerb"},"content":"            return null;","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"bearkerb"},"content":"     * Checks correct number of arguments for task type, then calls function to convert line to Todo","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"bearkerb"},"content":"     * @param args Array obtained by splitting line using \u0027|\u0027","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"bearkerb"},"content":"     * @param line Line representing task from data file","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"bearkerb"},"content":"     * @return Todo represented by line","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"bearkerb"},"content":"    // Extracted from readData() using ChatGPT to improve SLAP","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"bearkerb"},"content":"    private Task parseTodo(String[] args, String line) throws IncorrectDataFormatException {","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"bearkerb"},"content":"        if (args.length !\u003d 3) {","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"bearkerb"},"content":"            Ui.readDataErrorMessage();","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"bearkerb"},"content":"            return null;","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"bearkerb"},"content":"        return lineToTodo(line);","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"bearkerb"},"content":"     * Checks correct number of arguments for task type, then calls function to convert line to Deadline","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"bearkerb"},"content":"     * @param args Array obtained by splitting line using \u0027|\u0027","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"bearkerb"},"content":"     * @param line Line representing task from data file","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"bearkerb"},"content":"     * @return Deadline represented by line","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"bearkerb"},"content":"    // Extracted from readData() using ChatGPT to improve SLAP","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"bearkerb"},"content":"    private Task parseDeadline(String[] args, String line) throws IncorrectDataFormatException {","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"bearkerb"},"content":"        if (args.length !\u003d 4) {","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"bearkerb"},"content":"            Ui.readDataErrorMessage();","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"bearkerb"},"content":"            return null;","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"bearkerb"},"content":"        return lineToDeadline(line);","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"bearkerb"},"content":"     * Checks correct number of arguments for task type, then calls function to convert line to Event","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"bearkerb"},"content":"     * @param args Array obtained by splitting line using \u0027|\u0027","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"bearkerb"},"content":"     * @param line Line representing task from data file","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"bearkerb"},"content":"     * @return Event represented by line","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"bearkerb"},"content":"    // Extracted from readData() using ChatGPT to improve SLAP","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"bearkerb"},"content":"    private Task parseEvent(String[] args, String line) throws IncorrectDataFormatException {","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"bearkerb"},"content":"        if (args.length !\u003d 5) {","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"bearkerb"},"content":"            Ui.readDataErrorMessage();","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"bearkerb"},"content":"            return null;","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"bearkerb"},"content":"        return lineToEvent(line);","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"bearkerb"},"content":"     * Converts line from data file to ToDo object","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"bearkerb"},"content":"     * @param line Line from data file","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"bearkerb"},"content":"     * @return Todo object","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"bearkerb"},"content":"    public ToDo lineToTodo(String line) throws IncorrectDataFormatException {","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"bearkerb"},"content":"        String[] args \u003d line.split(SPLITTER_REGEX);","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"bearkerb"},"content":"        if (args.length !\u003d 3) {","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"bearkerb"},"content":"            throw new IncorrectDataFormatException();","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T22:59:21","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"bearkerb"},"content":"        String taskName \u003d args[2].trim();","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"bearkerb"},"content":"        ToDo todo \u003d new ToDo(taskName);","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"bearkerb"},"content":"        if (args[1].trim().equals(STATUS_DONE)) {","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"bearkerb"},"content":"            todo.markAsComplete();","lastModifiedDate":"2025-09-10T17:33:17","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"bearkerb"},"content":"        return todo;","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"bearkerb"},"content":"     * Converts line from data file to Deadline object","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"bearkerb"},"content":"     * @param line Line from data file","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"bearkerb"},"content":"     * @return Deadline object","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"bearkerb"},"content":"    public Deadline lineToDeadline(String line) throws IncorrectDataFormatException {","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"bearkerb"},"content":"        String[] args \u003d line.split(SPLITTER_REGEX);","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"bearkerb"},"content":"        if (args.length !\u003d 4) {","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"bearkerb"},"content":"            throw new IncorrectDataFormatException();","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"bearkerb"},"content":"        String taskName \u003d args[2].trim();","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"bearkerb"},"content":"        String due \u003d args[3].trim();","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"bearkerb"},"content":"        Deadline deadline \u003d createDeadline(taskName, due);","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T22:59:21","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"bearkerb"},"content":"        if (args[1].trim().equals(STATUS_DONE)) {","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"bearkerb"},"content":"            deadline.markAsComplete();","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"bearkerb"},"content":"        return deadline;","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"bearkerb"},"content":"     * Creates a deadline, calling constructor depending on if due includes time representation","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"bearkerb"},"content":"     * @param name of deadline","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"bearkerb"},"content":"     * @param due when the deadline is due","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"bearkerb"},"content":"     * @return Deadline object created using information from name and due","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"bearkerb"},"content":"    private static Deadline createDeadline(String name, String due) {","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"bearkerb"},"content":"        Deadline deadline;","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"bearkerb"},"content":"        try {","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"bearkerb"},"content":"            String[] dateTime \u003d Parser.parseDateTimeString(due);","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"bearkerb"},"content":"            if (dateTime[1] \u003d\u003d null) {","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"bearkerb"},"content":"                deadline \u003d new Deadline(name, dateTime[0]);","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"bearkerb"},"content":"            } else {","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"bearkerb"},"content":"                deadline \u003d new Deadline(name, dateTime[0], dateTime[1]);","lastModifiedDate":"2025-09-19T18:44:42","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"bearkerb"},"content":"            }","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"bearkerb"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"bearkerb"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-28T14:51:33","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"bearkerb"},"content":"        return deadline;","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"bearkerb"},"content":"     * Converts line from data file to Event object","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"bearkerb"},"content":"     * @param line Line from data file","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"bearkerb"},"content":"     * @return Event object","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"bearkerb"},"content":"    public Event lineToEvent(String line) throws IncorrectDataFormatException {","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"bearkerb"},"content":"        String[] args \u003d line.split(SPLITTER_REGEX);","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"bearkerb"},"content":"        if (args.length !\u003d 5) {","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"bearkerb"},"content":"            throw new IncorrectDataFormatException();","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"bearkerb"},"content":"        assert args.length \u003d\u003d 5 : \"event data must have 5 parts\";","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"bearkerb"},"content":"        String taskName \u003d args[2].trim();","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"bearkerb"},"content":"        String start \u003d args[3].trim();","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"bearkerb"},"content":"        String end \u003d args[4].trim();","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T22:59:21","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"bearkerb"},"content":"        Event event \u003d new Event(taskName, start, end);","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"bearkerb"},"content":"        if (args[1].trim().equals(STATUS_DONE)) {","lastModifiedDate":"2025-09-19T19:31:00","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"bearkerb"},"content":"            event.markAsComplete();","lastModifiedDate":"2025-09-10T17:33:17","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"bearkerb"},"content":"        return event;","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false}],"authorContributionMap":{"bearkerb":336}},{"path":"src/main/java/lucid/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":" * Stores basic task information including name and completion status","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"public class Task {","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"    private String name;","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"    private boolean isDone;","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bearkerb"},"content":"     * Creates a incomplete task with the specified name","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bearkerb"},"content":"     * @param s String containing task name","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bearkerb"},"content":"    public Task(String s) {","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bearkerb"},"content":"        this.name \u003d s;","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bearkerb"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bearkerb"},"content":"    public String getName() {","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bearkerb"},"content":"        return this.name;","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bearkerb"},"content":"    public boolean isComplete() {","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bearkerb"},"content":"        return isDone;","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bearkerb"},"content":"    @Override","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bearkerb"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bearkerb"},"content":"        return \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.name;","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bearkerb"},"content":"    public String toDataString() {","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bearkerb"},"content":"        return \"placeholder\";","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bearkerb"},"content":"     * Marks task as complete","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bearkerb"},"content":"    public void markAsComplete() {","lastModifiedDate":"2025-09-10T17:33:17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bearkerb"},"content":"        if (isDone) {","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bearkerb"},"content":"            Ui.taskAlreadyCompletedMessage();","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bearkerb"},"content":"        } else {","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bearkerb"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bearkerb"},"content":"        assert this.isDone;","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bearkerb"},"content":"     * Marks task as not complete","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bearkerb"},"content":"    public void markAsNotComplete() {","lastModifiedDate":"2025-09-10T17:33:17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bearkerb"},"content":"        if (!isDone) {","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bearkerb"},"content":"            Ui.taskNotCompletedYetMessage();","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bearkerb"},"content":"            return;","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bearkerb"},"content":"        } else {","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bearkerb"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bearkerb"},"content":"        assert !this.isDone;","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false}],"authorContributionMap":{"bearkerb":60}},{"path":"src/main/java/lucid/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":" * Represents a list of Task objects, implemented with an ArrayList","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"public class TaskList {","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bearkerb"},"content":"     * Initialises the tasklist according to a data file. If no data file is present, creates a new empty task list","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bearkerb"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bearkerb"},"content":"        Storage data \u003d new Storage();","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bearkerb"},"content":"        this.tasks \u003d data.readData();","lastModifiedDate":"2025-08-28T00:05:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bearkerb"},"content":"     * Adds a task to the TaskList","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bearkerb"},"content":"     * @param task Task to add","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bearkerb"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bearkerb"},"content":"        tasks.add(task);","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bearkerb"},"content":"        String out \u003d \"\";","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bearkerb"},"content":"        out +\u003d Ui.taskAddedMessage(task);","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bearkerb"},"content":"        out +\u003d Ui.numberOfTasksMessage(tasks.size());","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T22:59:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bearkerb"},"content":"        Storage data \u003d new Storage();","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bearkerb"},"content":"        data.appendTaskData(task);","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bearkerb"},"content":"        return out;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bearkerb"},"content":"     * Prints all tasks currently in the list","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bearkerb"},"content":"    public String printTasks() {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bearkerb"},"content":"        int size \u003d this.tasks.size();","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bearkerb"},"content":"        String out \u003d \"Here are all your tasks:\\n\";","lastModifiedDate":"2025-09-18T14:18:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bearkerb"},"content":"        for (int i \u003d 1; i \u003c\u003d size; i++) {","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bearkerb"},"content":"            out +\u003d Ui.printTaskInFoundList(i, this.tasks.get(i - 1)) + \"\\n\";","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bearkerb"},"content":"        return out;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bearkerb"},"content":"     * Completes a task in the list","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bearkerb"},"content":"     * @param index Index of task to complete","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bearkerb"},"content":"    public String markTaskAsComplete(int index) {","lastModifiedDate":"2025-09-10T17:33:17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bearkerb"},"content":"        if (isInvalidIndex(index)) {","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bearkerb"},"content":"            return \"That\u0027s not a valid task index!\";","lastModifiedDate":"2025-09-18T17:39:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bearkerb"},"content":"        Task task \u003d this.tasks.get(index - 1);","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bearkerb"},"content":"        if (task.isComplete()) {","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bearkerb"},"content":"            return Ui.taskAlreadyCompletedMessage();","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bearkerb"},"content":"        } else {","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bearkerb"},"content":"            Storage data \u003d new Storage();","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bearkerb"},"content":"            task.markAsComplete();","lastModifiedDate":"2025-09-10T17:33:17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bearkerb"},"content":"            assert task.isComplete() : \"task should be complete\";","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bearkerb"},"content":"            data.markTaskDataComplete(index);","lastModifiedDate":"2025-09-10T17:33:17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bearkerb"},"content":"            return Ui.taskCompletedMessage(task);","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bearkerb"},"content":"     * Marks a task in the list as not complete","lastModifiedDate":"2025-09-10T17:33:17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bearkerb"},"content":"     * @param index Index of task to mark as not complete","lastModifiedDate":"2025-09-10T17:33:17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bearkerb"},"content":"    public String markTaskAsNotComplete(int index) {","lastModifiedDate":"2025-09-10T17:33:17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bearkerb"},"content":"        if (isInvalidIndex(index)) {","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bearkerb"},"content":"            return \"That\u0027s not a valid task index!\";","lastModifiedDate":"2025-09-18T17:39:43","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bearkerb"},"content":"        Task task \u003d this.tasks.get(index - 1);","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bearkerb"},"content":"        if (!task.isComplete()) {","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bearkerb"},"content":"            return Ui.taskNotCompletedYetMessage();","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bearkerb"},"content":"        } else {","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bearkerb"},"content":"            Storage data \u003d new Storage();","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bearkerb"},"content":"            task.markAsNotComplete();","lastModifiedDate":"2025-09-10T17:33:17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bearkerb"},"content":"            assert !task.isComplete() : \"task should be not complete\";","lastModifiedDate":"2025-09-10T16:42:53","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bearkerb"},"content":"            data.markTaskDataNotComplete(index);","lastModifiedDate":"2025-09-10T17:33:17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bearkerb"},"content":"            return Ui.taskUncompletedMessage(task);","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-28T00:27:09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-21T15:46:56","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-22T02:24:39","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bearkerb"},"content":"     * Deletes a task from the list","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bearkerb"},"content":"     * @param index Index of task to delete","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bearkerb"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bearkerb"},"content":"        if (isInvalidIndex(index)) {","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bearkerb"},"content":"            return \"That\u0027s not a valid task index!\";","lastModifiedDate":"2025-09-18T17:39:43","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bearkerb"},"content":"        String out \u003d \"\";","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"bearkerb"},"content":"        out +\u003d Ui.taskDeletedMessage(this.tasks.get(index - 1));","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"bearkerb"},"content":"        this.tasks.remove(index - 1);","lastModifiedDate":"2025-08-22T02:24:39","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"bearkerb"},"content":"        Storage data \u003d new Storage();","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"bearkerb"},"content":"        data.deleteTaskData(index);","lastModifiedDate":"2025-08-27T23:19:16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"bearkerb"},"content":"        out +\u003d Ui.numberOfTasksMessage(tasks.size());","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"bearkerb"},"content":"        return out;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"bearkerb"},"content":"     * Checks if the given index is valid for the current number of existing tasks","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"bearkerb"},"content":"     * @param index Index to check for validity","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"bearkerb"},"content":"     * @return false if index \u003c 0 or index \u003e TaskList size, true otherwise","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"bearkerb"},"content":"    public boolean isInvalidIndex(int index) {","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"bearkerb"},"content":"        if (index \u003e tasks.size() || index \u003c\u003d 0) {","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"bearkerb"},"content":"            Ui.invalidTaskIndexMessage();","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"bearkerb"},"content":"            return true;","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"bearkerb"},"content":"        return false;","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-22T02:24:39","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"bearkerb"},"content":"     * Finds task names containing a substring and prints them","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"bearkerb"},"content":"     * @param s Substring to search for in task names","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"bearkerb"},"content":"    public String findAndPrintTasks(String s) {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"bearkerb"},"content":"        int count \u003d 1;","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"bearkerb"},"content":"        String out \u003d \"\";","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"bearkerb"},"content":"        out +\u003d Ui.tasksFoundMessage();","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"bearkerb"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"bearkerb"},"content":"            if (t.getName().contains(s)) {","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"bearkerb"},"content":"                out +\u003d \"\\n\" + Ui.printTaskInFoundList(count, t);","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"bearkerb"},"content":"                count++;","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"bearkerb"},"content":"            }","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"bearkerb"},"content":"        }","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"bearkerb"},"content":"        return out;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-08-20T22:43:09","isFullCredit":false}],"authorContributionMap":{"bearkerb":132}},{"path":"src/main/java/lucid/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":" * Standard task with no extra fields","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"    public ToDo(String s) {","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"        super(s);","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bearkerb"},"content":"    @Override","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bearkerb"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bearkerb"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bearkerb"},"content":"    @Override","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bearkerb"},"content":"    public String toDataString() {","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bearkerb"},"content":"        return Storage.TYPE_TODO + \" | \" + (this.isComplete() ? Storage.STATUS_DONE : Storage.STATUS_NOT_DONE) + \" | \"","lastModifiedDate":"2025-09-19T23:20:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bearkerb"},"content":"                + this.getName() + \"\\n\";","lastModifiedDate":"2025-09-19T23:20:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-27T22:36:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-08-22T00:37:25","isFullCredit":false}],"authorContributionMap":{"bearkerb":21}},{"path":"src/main/java/lucid/ToDoEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":" * Exception resulting from incorrect usage of the todo command","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"public class ToDoEmptyException extends LucidException {","lastModifiedDate":"2025-08-22T01:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"    public ToDoEmptyException() {","lastModifiedDate":"2025-08-22T02:03:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"        super(\"You can\u0027t do that! A todo can\u0027t have an empty description!\");","lastModifiedDate":"2025-08-22T02:03:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-22T01:49:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-08-22T01:49:07","isFullCredit":false}],"authorContributionMap":{"bearkerb":10}},{"path":"src/main/java/lucid/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":" * Class to handle text output to user","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"public class Ui {","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"     * Greets user when launching the program","lastModifiedDate":"2025-09-18T17:39:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"     * @return String to print to greet user","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bearkerb"},"content":"    public static String introduction() {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bearkerb"},"content":"        System.out.println(\"Hello! I\u0027m Lucid.\\nHow can I help you?\");","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bearkerb"},"content":"        System.out.println(\"Just to let you know, I hate the \u0027|\u0027 character, so don\u0027t use it when talking to me!\");","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bearkerb"},"content":"        String out \u003d \"Hello! I\u0027m Lucid.\\nHow can I help you?\\n\"","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bearkerb"},"content":"                + \"Just to let you know, I hate the \u0027|\u0027 character, so don\u0027t use it when talking to me!\\n\"","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bearkerb"},"content":"                + \"Type \u0027help\u0027 to see all the commands you can use!\";","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bearkerb"},"content":"        return out;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bearkerb"},"content":"     * Bids farewell for user exiting program","lastModifiedDate":"2025-09-18T17:39:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bearkerb"},"content":"     * @return String to print for farewell","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bearkerb"},"content":"    public static String farewell() {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bearkerb"},"content":"        System.out.println(\"Goodbye. Until next time!\");","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bearkerb"},"content":"        return \"Goodbye. Until next time!\";","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bearkerb"},"content":"     * Notifies user of data file creation","lastModifiedDate":"2025-09-18T17:39:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bearkerb"},"content":"     * @return String to print for file creation","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bearkerb"},"content":"    public static String firstTimeUserMessage() {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bearkerb"},"content":"        System.out.println(\"Looks like it\u0027s your first time here!\\nLet me set up your data file for you.\");","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bearkerb"},"content":"        return \"Looks like it\u0027s your first time here!\\nLet me set up your data file for you.\";","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bearkerb"},"content":"     * Notifies user of invalid character usage","lastModifiedDate":"2025-09-18T17:39:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bearkerb"},"content":"     * @return String to print for invalid character detection","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bearkerb"},"content":"    public static String invalidCharacterDetectedMessage() {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bearkerb"},"content":"        System.out.println(\"Hey, I told you not to use the \u0027|\u0027 character!\");","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bearkerb"},"content":"        return \"Hey, I told you not to use the \u0027|\u0027 character!\";","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bearkerb"},"content":"     * Notifies user of error reading data","lastModifiedDate":"2025-09-18T17:39:43","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bearkerb"},"content":"     * @return String to print for data reading error","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bearkerb"},"content":"    public static String readDataErrorMessage() {","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bearkerb"},"content":"        System.out.println(\"Oh no! Something went wrong reading data...\");","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bearkerb"},"content":"        return \"Oh no! Something went wrong reading data...\";","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bearkerb"},"content":"     * Prints message when user tries completing an already complete task","lastModifiedDate":"2025-09-18T17:39:43","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bearkerb"},"content":"     * @return String to print","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bearkerb"},"content":"    public static String taskAlreadyCompletedMessage() {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bearkerb"},"content":"        System.out.println(\"You sure? This task is already complete!\");","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bearkerb"},"content":"        return \"You sure? This task is already complete!\";","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bearkerb"},"content":"     * Prints message when user tries unmarking a task not yet complete","lastModifiedDate":"2025-09-18T17:39:43","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bearkerb"},"content":"     * @return","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bearkerb"},"content":"    public static String taskNotCompletedYetMessage() {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bearkerb"},"content":"        System.out.println(\"Try again! This task isn\u0027t even complete!\");","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bearkerb"},"content":"        return \"Try again! This task isn\u0027t even complete!\";","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bearkerb"},"content":"     * Notifies user of addition of task to the task list","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bearkerb"},"content":"     * @param task Task added to list","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bearkerb"},"content":"     * @return String for task addition","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bearkerb"},"content":"    public static String taskAddedMessage(Task task) {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bearkerb"},"content":"        System.out.println(\"Added the following task:\");","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bearkerb"},"content":"        System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bearkerb"},"content":"        String out \u003d \"Added the following task:\\n\" + \"\\t\" + task.toString();","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bearkerb"},"content":"        return out;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bearkerb"},"content":"     * Notifies user of deletion of task from the task list","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bearkerb"},"content":"     * @param task Task deleted from list","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bearkerb"},"content":"     * @return String for task deletion","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bearkerb"},"content":"    public static String taskDeletedMessage(Task task) {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bearkerb"},"content":"        System.out.println(\"Got it! I\u0027ve removed this task for you:\");","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bearkerb"},"content":"        System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bearkerb"},"content":"        String out \u003d \"Got it! I\u0027ve removed this task for you:\\n\" + \"\\t\" + task.toString();","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"bearkerb"},"content":"        return out;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"bearkerb"},"content":"     * Notifies user of number of tasks in the list","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"bearkerb"},"content":"     * @param numOfTasks","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"bearkerb"},"content":"     * @return String for number of tasks","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"bearkerb"},"content":"    public static String numberOfTasksMessage(int numOfTasks) {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"bearkerb"},"content":"        System.out.println(\"You now have \" + numOfTasks + (numOfTasks \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in your list.\");","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"bearkerb"},"content":"        return \"\\nYou now have \" + numOfTasks + (numOfTasks \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in your list.\";","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"bearkerb"},"content":"     * Notifies user of successful marking of task as complete","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"bearkerb"},"content":"     * @param task Task to mark as complete","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"bearkerb"},"content":"     * @return String for task completion","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"bearkerb"},"content":"    public static String taskCompletedMessage(Task task) {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"bearkerb"},"content":"        System.out.println(\"Alright. I\u0027ve marked this task as completed for you:\");","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"bearkerb"},"content":"        System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"bearkerb"},"content":"        String out \u003d \"Alright. I\u0027ve marked this task as completed for you:\\n\" + \"\\t\" + task.toString();","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"bearkerb"},"content":"        return out;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"bearkerb"},"content":"     * Notifies user of successful marking of task as uncomplete","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"bearkerb"},"content":"     * @param task Task to mark as uncomplete","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"bearkerb"},"content":"     * @return String for task uncompletion","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"bearkerb"},"content":"    public static String taskUncompletedMessage(Task task) {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"bearkerb"},"content":"        System.out.println(\"No problem, I\u0027ve marked this task as uncompleted for you:\");","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"bearkerb"},"content":"        System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"bearkerb"},"content":"        String out \u003d \"No problem, I\u0027ve marked this task as uncompleted for you:\\n\" + \"\\t\" + task.toString();","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"bearkerb"},"content":"        return out;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"bearkerb"},"content":"     * Notifies user that they have entered an invalid task index","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"bearkerb"},"content":"     * @return String for usage of invalid task index","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-08-28T22:33:54","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"bearkerb"},"content":"    public static String invalidTaskIndexMessage() {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"bearkerb"},"content":"        System.out.println(\"I can\u0027t find the task you\u0027re talking about! Did you make a typo?\");","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"bearkerb"},"content":"        return \"I can\u0027t find the task you\u0027re talking about! Did you make a typo?\";","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"bearkerb"},"content":"     * Prints message to inform user of tasks they have searched for","lastModifiedDate":"2025-09-18T17:39:43","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"bearkerb"},"content":"     * @return String representing tasks found","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"bearkerb"},"content":"    public static String tasksFoundMessage() {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"bearkerb"},"content":"        System.out.println(\"Here are the tasks I\u0027ve found that match what you\u0027re looking for:\");","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"bearkerb"},"content":"        return \"Here are the tasks I\u0027ve found that match what you\u0027re looking for:\";","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T23:18:02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"bearkerb"},"content":"     * Prints found task","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"bearkerb"},"content":"     * @param index Position of task","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"bearkerb"},"content":"     * @param task Task to print","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"bearkerb"},"content":"     * @return String specifying task position in found tasks, and task information","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"bearkerb"},"content":"    public static String printTaskInFoundList(int index, Task task) {","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"bearkerb"},"content":"        System.out.println(index + \". \" + task.toString());","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"bearkerb"},"content":"        String out \u003d index + \". \" + task.toString();","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"bearkerb"},"content":"        return out;","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"bearkerb"},"content":"    /**","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"bearkerb"},"content":"     * Prints helpsheet containing documentation of all commands","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"bearkerb"},"content":"     * @return String containing information of all commands and their usage","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"bearkerb"},"content":"     */","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"bearkerb"},"content":"    public static String printHelpSheet() {","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"bearkerb"},"content":"        String out \u003d \"Here\u0027s a list of commands to get started!\\n\\n\"","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"bearkerb"},"content":"                + \"- help: Displays the list of available commands and how to use them\\n\\n\"","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"bearkerb"},"content":"                + \"- bye: Exits the application\\n\\n\"","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"bearkerb"},"content":"                + \"- todo \u003cname\u003e: Adds a task of type Todo to the task list\\n\\n\"","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"bearkerb"},"content":"                + \"- deadline \u003cname\u003e /by \u003cyyyy-mm-dd\u003e: Adds a Deadline to the task list\\n\"","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"bearkerb"},"content":"                + \"\\t(or \u003cyyyy-mm-dd-xxxx\u003e to specify a time too!)\\n\\n\"","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"bearkerb"},"content":"                + \"- event \u003cname\u003e /from \u003cyyyy-mm-dd\u003e /to \u003cyyyy-mm-dd\u003e: Adds an Event to the task list\\n\"","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"bearkerb"},"content":"                + \"\\t(or \u003cyyyy-mm-dd-xxxx\u003e to specify a timing for either dates)\\n\\n\"","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"bearkerb"},"content":"                + \"- list: Displays the tasks in the task list\\n\\n\"","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"bearkerb"},"content":"                + \"- mark \u003cindex\u003e: Set a task\u0027s status to complete\\n\\n\"","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"bearkerb"},"content":"                + \"- unmark \u003cindex\u003e: Set a task\u0027s status to not complete\\n\\n\"","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"bearkerb"},"content":"                + \"- delete \u003cindex\u003e: Deletes a task from the list\\n\\n\"","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"bearkerb"},"content":"                + \"- find \u003cname\u003e: Searches for tasks whose name contains the specified string\\n\\n\";","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"bearkerb"},"content":"        System.out.println(out);","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"bearkerb"},"content":"        return out;","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-10T19:04:10","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-08-28T19:31:21","isFullCredit":false}],"authorContributionMap":{"bearkerb":183}},{"path":"src/main/java/lucid/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":" * Exception when detecting a command that is not recognised.","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-09-02T21:53:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"public class UnknownCommandException extends LucidException {","lastModifiedDate":"2025-08-22T01:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2025-08-22T02:03:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"        super(\"Sorry, I can\u0027t understand you...\");","lastModifiedDate":"2025-08-22T02:03:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-22T01:49:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-08-22T01:49:07","isFullCredit":false}],"authorContributionMap":{"bearkerb":10}},{"path":"src/main/java/lucid/UnmarkUsageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"/**","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":" * Exception using from incorrect usage of the unmark exception","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":" */","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"public class UnmarkUsageException extends LucidException {","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"    public UnmarkUsageException() {","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"        super(\"That\u0027s not how you do it! Try: unmark \u003cindex\u003e instead.\");","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false}],"authorContributionMap":{"bearkerb":10}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"\u003c!-- Reused from JavaFX tutorial --\u003e","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/24.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bearkerb"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bearkerb"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bearkerb"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bearkerb"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bearkerb"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bearkerb"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bearkerb"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bearkerb"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bearkerb"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bearkerb"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bearkerb"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bearkerb"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false}],"authorContributionMap":{"bearkerb":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"\u003c!-- Reused from JavaFX tutorial --\u003e","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/24.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"lucid.MainWindow\"\u003e","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bearkerb"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bearkerb"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bearkerb"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bearkerb"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bearkerb"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-03T22:17:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bearkerb"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bearkerb"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bearkerb"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-03T20:04:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bearkerb"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-03T19:33:21","isFullCredit":false}],"authorContributionMap":{"bearkerb":19}},{"path":"src/test/java/lucid/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-18T14:33:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T14:33:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"// Improved using ChatGPT - 18 September 2025","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"public class ParserTest {","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bearkerb"},"content":"    // Split from original test success method using ChatGPT","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bearkerb"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bearkerb"},"content":"    public void parseDateAndTimeString_dateOnly_success() throws DateTimeParseException {","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bearkerb"},"content":"        assertArrayEquals(","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bearkerb"},"content":"                new String[]{\"2025-08-19\", null},","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bearkerb"},"content":"                Parser.parseDateTimeString(\"2025-08-19\")","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bearkerb"},"content":"        );","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bearkerb"},"content":"    // Split from original test success method using ChatGPT","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bearkerb"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bearkerb"},"content":"    public void parseDateAndTimeString_dateAndTime_success() throws DateTimeParseException {","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bearkerb"},"content":"        assertArrayEquals(","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bearkerb"},"content":"                new String[]{\"2025-11-24\", \"1735\"},","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bearkerb"},"content":"                Parser.parseDateTimeString(\"2025-11-24-1735\")","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bearkerb"},"content":"        );","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bearkerb"},"content":"    // Used ChatGPT to split from original test method, and use assertThrows instead of try-catch","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bearkerb"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bearkerb"},"content":"    public void parseDateAndTimeString_slashInsteadOfDash_exceptionThrown() {","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bearkerb"},"content":"        // CHECKSTYLE.OFF: SeparatorWrap","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bearkerb"},"content":"        DateTimeParseException e \u003d assertThrows(","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bearkerb"},"content":"                DateTimeParseException.class,","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bearkerb"},"content":"                () -\u003e Parser.parseDateTimeString(\"2025/08/19\")","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bearkerb"},"content":"        );","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bearkerb"},"content":"        // CHECKSTYLE.ON: SeparatorWrap","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bearkerb"},"content":"        assertEquals(\"I\u0027m sorry! Something went wrong with the date and time\", e.getMessage());","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bearkerb"},"content":"    // Used ChatGPT to split from original test method, and use assertThrows instead of try-catch","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bearkerb"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bearkerb"},"content":"    public void parseDateAndTimeString_invalidTimeFormat_exceptionThrown() {","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bearkerb"},"content":"        // CHECKSTYLE.OFF: SeparatorWrap","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bearkerb"},"content":"        DateTimeParseException e \u003d assertThrows(","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bearkerb"},"content":"                DateTimeParseException.class,","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bearkerb"},"content":"                () -\u003e Parser.parseDateTimeString(\"2025-11-24-99:99\")","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bearkerb"},"content":"        );","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bearkerb"},"content":"        // CHECKSTYLE.ON: SeparatorWrap","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bearkerb"},"content":"        assertEquals(\"I\u0027m sorry! Something went wrong with the date and time\", e.getMessage());","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bearkerb"},"content":"    // Used ChatGPT to improve test suite, identifying lack of testing for empty string input","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bearkerb"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bearkerb"},"content":"    public void parseDateAndTimeString_emptyString_exceptionThrown() {","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bearkerb"},"content":"        // CHECKSTYLE.OFF: SeparatorWrap","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bearkerb"},"content":"        assertThrows(DateTimeParseException.class,","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bearkerb"},"content":"                () -\u003e Parser.parseDateTimeString(\"\"));","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bearkerb"},"content":"        // CHECKSTYLE.ON: SeparatorWrap","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false}],"authorContributionMap":{"bearkerb":63}},{"path":"src/test/java/lucid/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"package lucid;","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-18T14:33:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T14:33:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"public class StorageTest {","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bearkerb"},"content":"    public void lineToEvent_success() throws IncorrectDataFormatException {","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bearkerb"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bearkerb"},"content":"        assertEquals(\"[E][ ] birthday party (from: DECEMBER 12 2025 12:00 to: DECEMBER 12 2025 16:30)\",","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bearkerb"},"content":"                storage.lineToEvent(\"E | NOT DONE | birthday party | 2025-12-12-1200 | 2025-12-12-1630\").toString());","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bearkerb"},"content":"        assertEquals(\"[E][X] birthday party (from: DECEMBER 12 2025 to: DECEMBER 12 2025)\",","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bearkerb"},"content":"                storage.lineToEvent(\"E | DONE | birthday party | 2025-12-12 | 2025-12-12\").toString());","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bearkerb"},"content":"    // Used ChatGPT to add this test to account for file corruption / unexpected 3rd party editing - 18 September 2025","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bearkerb"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bearkerb"},"content":"    public void lineToEvent_invalidLine_throwsException() {","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bearkerb"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bearkerb"},"content":"        String invalidLine \u003d \"E | DONE | birthday party | 2025-12-12\"; // only 4 parts","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bearkerb"},"content":"","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bearkerb"},"content":"        // CHECKSTYLE.OFF: SeparatorWrap","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bearkerb"},"content":"        IncorrectDataFormatException e \u003d assertThrows(","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bearkerb"},"content":"                IncorrectDataFormatException.class,","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bearkerb"},"content":"                () -\u003e storage.lineToEvent(invalidLine)","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bearkerb"},"content":"        );","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bearkerb"},"content":"        // CHECKSTYLE.ON: SeparatorWrap","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bearkerb"},"content":"    }","lastModifiedDate":"2025-09-18T20:40:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bearkerb"},"content":"}","lastModifiedDate":"2025-08-28T21:36:24","isFullCredit":false}],"authorContributionMap":{"bearkerb":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bearkerb"},"content":"todo borrow book","lastModifiedDate":"2025-08-22T01:13:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bearkerb"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-22T01:13:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bearkerb"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-22T01:13:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bearkerb"},"content":"mark 1","lastModifiedDate":"2025-08-22T01:13:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bearkerb"},"content":"mark 2","lastModifiedDate":"2025-08-22T01:13:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bearkerb"},"content":"list","lastModifiedDate":"2025-08-22T01:13:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bearkerb"},"content":"unmark 2","lastModifiedDate":"2025-08-22T01:13:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bearkerb"},"content":"list","lastModifiedDate":"2025-08-22T01:13:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bearkerb"},"content":"bye","lastModifiedDate":"2025-08-22T01:13:38","isFullCredit":false}],"authorContributionMap":{"bearkerb":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bearkerb"},"content":"java -classpath ..\\bin lucid.lucid \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-28T19:47:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"bearkerb":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bearkerb"},"content":"java -classpath ../bin Lucid \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-09-18T17:39:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"bearkerb":1,"-":37}}]
