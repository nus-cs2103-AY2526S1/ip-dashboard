{"authorDailyContributionsMap":{"ryantanzr":[{"date":"2025-08-14T00:00:00","commitResults":[{"hash":"fe3ceb3769c7205fe2317c23e7b3d9f184714243","isMergeCommit":false,"messageTitle":"Renamed chatbot to Kronos","messageBody":"Provided a greeting and exit message with dividers\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":10}}},{"hash":"fd41f6da7e5a48803ee05f2bca31975acb393440","isMergeCommit":false,"messageTitle":"Added a message handler function","messageBody":"Function echoes the user\u0027s request and prints a custom exit message\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":6}}},{"hash":"8231908b96c6e4a084fbb3d4fc62d54f953f9b7a","isMergeCommit":false,"messageTitle":"Added storage and listing functionality","messageBody":"Kronos is now able to store the given texts and list them out\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":2}}},{"hash":"5e7f5fa95f916a7146c6a8fe7e7b6fccefc90baa","isMergeCommit":false,"messageTitle":"Introduced Task Class","messageBody":"To allow for the encapsulation of task fields: description and isDone\n","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":0}}},{"hash":"86005a01356dd93b5889a4499a352762f8049fca","isMergeCommit":false,"messageTitle":"Added marking and unmarking functionality","messageBody":"Kronos is now able to mark tasks as completed and unmark completed tasks\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":7}}}]},{"date":"2025-08-15T00:00:00","commitResults":[{"hash":"b53370939a56f0525accb58bc9248ea571efa580","isMergeCommit":false,"messageTitle":"Added support for ToDos, Events and Deadlines","messageBody":"Kronos now uses inheritance and polymorphism to handle 3 subtypes with variance in data\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":96,"deletions":10}}},{"hash":"01ab50c1fc811e2d30690ba006acccf50a413170","isMergeCommit":false,"messageTitle":"Refactored Repetitive Code","messageBody":"Refactoring is done with respect to DRY principle to promote reusability and readability\n","fileTypesAndContributionMap":{"java":{"insertions":77,"deletions":56}}},{"hash":"d8b1a98ce7b481cab02ee695aec50bdd25d0679d","isMergeCommit":false,"messageTitle":"Introduced semi-automated testing for Kronos","messageBody":"Using I/O redirection, the file checks for the 3 event types, marking and unmarking, and exiting\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":0},"java":{"insertions":4,"deletions":3},"sh":{"insertions":2,"deletions":2}}},{"hash":"1d105c06117561feb0af482da642697e01f442bf","isMergeCommit":false,"messageTitle":"Introduced exception handling","messageBody":"Kronos now throws 2 kinds of exceptions: IllegalArgumentException for invalid commands and NullPointerException for missing fields\n","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":10}}},{"hash":"12f3b36f477f99d0dfa124508a77ff9f00176d98","isMergeCommit":false,"messageTitle":"Introduced deletion of tasks","messageBody":"Kronos now supports the deletion of 1 task. To better support this, the task storage is now a list instead of an array\n","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":10}}},{"hash":"011f9a7f25c108e32774bbe3914e1771b1a0dabe","isMergeCommit":false,"messageTitle":"Added additional comments for exception handling","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}}]},{"date":"2025-08-23T00:00:00","commitResults":[{"hash":"c8e26cd3f7d11ad13a6f0edd69503ed910e42737","isMergeCommit":false,"messageTitle":"Introduced data saving","messageBody":"Kronos now saves tasks to a csv file\n","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":2}}},{"hash":"a73b4244ecfcfd7c8f0318ffa28dba06e9fe2eaf","isMergeCommit":false,"messageTitle":"Addition of loading saved tasks","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":70,"deletions":0}}},{"hash":"1a3ad302644d3fc11f505bc59314434b7d3cd21f","isMergeCommit":false,"messageTitle":"Refactored dates to be stored as LocalDate","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":22}}},{"hash":"4cf63b77478af09d6f0e261fb6e4185fafc5b5bc","isMergeCommit":false,"messageTitle":"Extracted the task list into TaskList.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":18}}},{"hash":"a57772ab75c666e89b2632afc3e061f3ddd05c25","isMergeCommit":false,"messageTitle":"Extracted save/load code into Storage.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":116,"deletions":100}}},{"hash":"d974c9d47b82308233c52e12417e3082d1f1c050","isMergeCommit":false,"messageTitle":"Extracted ui code into Ui class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":31}}},{"hash":"3b977a7ebd35c79db5a65062884f620652b9d50e","isMergeCommit":false,"messageTitle":"Added TaskType Enum","messageBody":"To constrict the types of types one can create\n","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"e215a5b775ca6fcca00003abc2ae0d5fdc598474","isMergeCommit":false,"messageTitle":"Introduced initialisation function for TaskType","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":1}}},{"hash":"01a6238f3f121d6fe11c649f13cc17c472842cb3","isMergeCommit":false,"messageTitle":"Refactored Parsing and Command codes","messageBody":"- Parsing of user commands is inside Parser.java.\n- Command codes are in their respective command subclasses\n- Initialisation of command codes utilize the TaskType enum\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":314,"deletions":263}}},{"hash":"9b85e35c2446f2d16af82637071afa016b4483a8","isMergeCommit":false,"messageTitle":"Segmenting codes into packages","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":62,"deletions":0}}},{"hash":"5a998192ff745fb8076d33196a64e58f59b149e1","isMergeCommit":false,"messageTitle":"Fixed saving of task data","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}}]},{"date":"2025-08-24T00:00:00","commitResults":[{"hash":"ff0edb0ff4cfcfcb3d2e0fa182fe30975bf492f6","isMergeCommit":true,"messageTitle":"Merge remote-tracking branch \u0027upstream/add-gradle-support\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"eed2114da7e3a900f975240194ade562dcbbe30d","isMergeCommit":false,"messageTitle":"Added checkstyle files","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1}}},{"hash":"27e87695b765ee9c05a49942cb2e41a1b15fceff","isMergeCommit":false,"messageTitle":"Added junit tests for error-prone code","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":179,"deletions":0}}},{"hash":"eda69ed8965495dd2d775de21d2126f96a354a3f","isMergeCommit":false,"messageTitle":"Added versioning field to shadowJar","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1}}},{"hash":"5f90460cf42b1d3d7ad7655ec286db0c45a45223","isMergeCommit":false,"messageTitle":"Storage now initialises save data","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":3}}},{"hash":"e5db55736ce05495b4c24cb453f4b2305714ea28","isMergeCommit":false,"messageTitle":"Update Storage.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":27}}},{"hash":"d9e67a85f0c41c1d888cb7dfc4b0321b2d456173","isMergeCommit":false,"messageTitle":"Entire codebase includes JavaDoc comments","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":306,"deletions":144}}},{"hash":"9ea5bc73a22380d96ace156f3e813d159a924833","isMergeCommit":false,"messageTitle":"Test files pass the checkStyle conventions","messageBody":"","tags":["A-CodingStandard","A-CheckStyle"],"fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":32}}}]},{"date":"2025-08-25T00:00:00","commitResults":[{"hash":"02ce50cc6aeae8204686f286460d9e5b51f78a7c","isMergeCommit":false,"messageTitle":"Introduced search functionality","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":0}}}]},{"date":"2025-09-02T00:00:00","commitResults":[{"hash":"ee647e038657db0910734f078d8c8f9c79327fe2","isMergeCommit":false,"messageTitle":"Add header comment to Command class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"338973546e83d60a1bc958dac9072ad2d284d752","isMergeCommit":false,"messageTitle":"Add spacing between packages and imports","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"33163457469d994735541078b1e3a6bca137ffb9","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2025-09-04T00:00:00","commitResults":[{"hash":"fa9dd0a2c5bc61b0cc4ac33ab127b43cf160f01e","isMergeCommit":false,"messageTitle":"Add JavaFX GUI","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"gradle":{"insertions":17,"deletions":2},"fxml":{"insertions":65,"deletions":0},"java":{"insertions":247,"deletions":38}}},{"hash":"fa2cb220a22abdf93571a790b01eea446b53a36c","isMergeCommit":false,"messageTitle":"Separate JavaFX components into own package","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":6,"deletions":3}}}]},{"date":"2025-09-08T00:00:00","commitResults":[{"hash":"e24c144ff256b45b9bdb1a7203ab5b59686e97b1","isMergeCommit":false,"messageTitle":"Add assertions to switch statements","messageBody":"Switch statements currently throw exceptions in the default cases.\n\nLogical errors should terminate the program instead of continuing.\n\nLet\u0027s change the thrown exception with an appropriate assert statement.\n\nIt is more fitting to use assertion errors than throwing exceptions to handle logic errors.\n\nAssertions are a form of defensive programming that perform logic checks on your program. Code handling I/O operations is an example of using exceptions instead of assertions\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}},{"hash":"3c85ef1a4ccabacb2711c8fcf45022f000252549","isMergeCommit":false,"messageTitle":"Refactor long methods","messageBody":"Some functions are too long.\n\nLong methods are hard to read.\n\nLet\u0027s extract blocks of logic into their own functions and then add comments and adequate spaces on where they are called.\n\nBreaking down long methods and adding appropriate spaces and comments improves logical flow and readability of the code.\n","fileTypesAndContributionMap":{"java":{"insertions":148,"deletions":78}}},{"hash":"eccc11cf5093bb41679c7d12ba97fe7301b673c3","isMergeCommit":false,"messageTitle":"Refactor magic literals","messageBody":"There are magic strings present in some files.\n\nMagic literals have an unclear meaning.\n\nLet\u0027s assign them to variables with appropriate names.\n\nDoing so will make the code easier to understand.\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":6}}},{"hash":"4729f5b1226903589b2a77d40f2555eb50cbeef8","isMergeCommit":true,"messageTitle":"Merge pull request #1 from ryantanzr/branch-CodeQuality","messageBody":"Refactor long methods and magic literals","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{}},{"hash":"0d4050c2ea3748e84e15197315f223d0ed6cc48a","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-Assertions","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"db8386514bd4637f4eb548b5e18122d904a0a163","isMergeCommit":true,"messageTitle":"Merge pull request #2 from ryantanzr/branch-A-Assertions","messageBody":"Add assertions to switch statements","tags":["A-Assertions"],"fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"ryantanzr":{"java":1371,"md":0,"fxml":65,"sh":2,"bat":0,"gradle":20,"txt":9}},"authorContributionVariance":{"ryantanzr":66418.836},"authorDisplayNameMap":{"ryantanzr":"CS2103T-T11-1 RYAN..RONG"}}
