[{"path":"Pero_storage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darisusu"},"content":"E | 1 | eat at dining hall | 2025-02-12 2030 | 2025-02-12 2030","lastModifiedDate":"2025-09-01T04:17:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darisusu"},"content":"T | 0 | clean room","lastModifiedDate":"2025-09-01T04:17:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darisusu"},"content":"aknaelrfkrearg","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darisusu"},"content":"D | 1 | finish hw | 2025-01-09 2359","lastModifiedDate":"2025-09-01T04:17:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darisusu"},"content":"lreanllafkgmeapor","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darisusu"},"content":"T | 0 | brush teeth","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darisusu"},"content":"3 | 0 | brush teeth","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false}],"authorContributionMap":{"darisusu":8}},{"path":"src/main/java/pero/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darisusu"},"content":"package pero;","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darisusu"},"content":"/**","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darisusu"},"content":" * Command type","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darisusu"},"content":" */","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darisusu"},"content":"public class Command {","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darisusu"},"content":"    public final CommandType type;","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darisusu"},"content":"    public final int index;          // For MARK, UNMARK, DELETE","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darisusu"},"content":"    public final String taskInput;   // For TODO, DEADLINE, EVENT","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darisusu"},"content":"     * Constructor of command object","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darisusu"},"content":"     * @param type Command type : BYE, HELP, LIST, MARK, UNMARK, DELETE, TODO, DEADLINE, EVENT, INVALID.","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darisusu"},"content":"     * @param index Index of curr task in relation to raw task list.","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darisusu"},"content":"     * @param taskInput Current raw user line input.","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darisusu"},"content":"    public Command(CommandType type, int index, String taskInput) {","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darisusu"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darisusu"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darisusu"},"content":"        this.taskInput \u003d taskInput;","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darisusu"},"content":"    // For commands without index/taskInput","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darisusu"},"content":"    public Command(CommandType type) {","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darisusu"},"content":"        // calls constructor for normal indexed type, but with -1 as placeholder","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darisusu"},"content":"        this(type, -1, null);","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darisusu"},"content":"}","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false}],"authorContributionMap":{"darisusu":30}},{"path":"src/main/java/pero/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darisusu"},"content":"package pero;","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darisusu"},"content":"public enum CommandType {","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darisusu"},"content":"    BYE, HELP, LIST, MARK, UNMARK, DELETE, TODO, DEADLINE, EVENT, INVALID","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darisusu"},"content":"}","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false}],"authorContributionMap":{"darisusu":5}},{"path":"src/main/java/pero/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darisusu"},"content":"package pero;","lastModifiedDate":"2025-08-31T15:17:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T15:17:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darisusu"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darisusu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darisusu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darisusu"},"content":"/**","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darisusu"},"content":" * Represents deadline task with a specific deadline.","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darisusu"},"content":" * A Deadline has a description, completion status, and a due date and time.","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darisusu"},"content":" */","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darisusu"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-21T17:39:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darisusu"},"content":"    /** Date and time task has to be completed by */","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darisusu"},"content":"    protected LocalDateTime byTimeObj;","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darisusu"},"content":"    private static final String COMMAND_KEYWORD \u003d \"deadline\";","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darisusu"},"content":"    private static final String BY_SEPARATOR \u003d \" /by \";","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darisusu"},"content":"    private static final String WRONG_FORMAT_EXCEPTION \u003d","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darisusu"},"content":"            \"Oops! Deadline requires \u0027deadline [task] \u0027deadline [task] /by [YYYY-DD-MM HHmm]\u0027 format, try again!\";","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darisusu"},"content":"    private static final String DATE_TIME_PATTERN \u003d \"yyyy-dd-MM HHmm\"; //pattern used for INPUT and STORAGE formatter","lastModifiedDate":"2025-09-01T00:58:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darisusu"},"content":"    private static final DateTimeFormatter STORAGE_FORMATTER \u003d DateTimeFormatter.ofPattern(DATE_TIME_PATTERN);","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darisusu"},"content":"    private static final DateTimeFormatter FINAL_DISPLAY_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darisusu"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime byTimeObj){","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darisusu"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-28T01:03:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darisusu"},"content":"        this.byTimeObj \u003d byTimeObj;","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-21T17:39:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-21T17:39:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darisusu"},"content":"     * Returns new Deadline object.","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darisusu"},"content":"     * @param input Input from user.","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darisusu"},"content":"     * @return Deadline deadline.","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darisusu"},"content":"     * @throws PeroException if wrong format","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darisusu"},"content":"    */","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darisusu"},"content":"    public static Deadline fromInput(String input) throws PeroException{","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darisusu"},"content":"        if (input.equals(COMMAND_KEYWORD) || !input.contains(BY_SEPARATOR)) {","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darisusu"},"content":"            throw new PeroException(WRONG_FORMAT_EXCEPTION);","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darisusu"},"content":"        }","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darisusu"},"content":"        //starts at index 9, remove \"deadline \"","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darisusu"},"content":"        String[] taskDeadline \u003d input.substring(COMMAND_KEYWORD.length()+1).split(BY_SEPARATOR);","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darisusu"},"content":"        if (taskDeadline.length \u003c 2) {","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darisusu"},"content":"            throw new PeroException(WRONG_FORMAT_EXCEPTION);","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darisusu"},"content":"        }","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darisusu"},"content":"        String task \u003d taskDeadline[0].trim(); //trim leading/trailing spaces","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darisusu"},"content":"        if (task.isEmpty()) {","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darisusu"},"content":"            throw new PeroException(\"Task description cannot be empty, try again!\");","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darisusu"},"content":"        }","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darisusu"},"content":"        String by \u003d taskDeadline[1].trim();","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darisusu"},"content":"        LocalDateTime byTimeObj \u003d parseDateTime(by);","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darisusu"},"content":"        return new Deadline(task,false, byTimeObj);","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darisusu"},"content":"    @Override","lastModifiedDate":"2025-08-27T23:13:22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darisusu"},"content":"    public String toStorageString() {","lastModifiedDate":"2025-08-27T23:13:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darisusu"},"content":"        return \"D | \" + (isDone? \"1\" : \"0\") +","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darisusu"},"content":"                \" | \" + this.description + \" | \" +","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darisusu"},"content":"                this.byTimeObj.format(STORAGE_FORMATTER); // stores string with same pattern YYYY-DD-MM HHmm","lastModifiedDate":"2025-09-01T00:58:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-27T23:13:22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-27T23:13:22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darisusu"},"content":"    @Override","lastModifiedDate":"2025-08-21T17:39:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darisusu"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T17:39:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darisusu"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.byTimeObj.format(FINAL_DISPLAY_FORMATTER) + \")\";","lastModifiedDate":"2025-08-31T17:19:40","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-21T17:39:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darisusu"},"content":"}","lastModifiedDate":"2025-08-21T17:10:03","isFullCredit":false}],"authorContributionMap":{"darisusu":70}},{"path":"src/main/java/pero/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darisusu"},"content":"package pero;","lastModifiedDate":"2025-08-31T15:17:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T15:17:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darisusu"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darisusu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darisusu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darisusu"},"content":"/**","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darisusu"},"content":" * Represents event task with starting to end date and timing.","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darisusu"},"content":" * An event has a description, completion status, and start and end date+time.","lastModifiedDate":"2025-09-01T00:58:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darisusu"},"content":" */","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darisusu"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-21T17:39:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-21T17:39:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darisusu"},"content":"    /** Date+time that task starts */","lastModifiedDate":"2025-09-01T00:58:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darisusu"},"content":"    protected LocalDateTime fromTimeObj;","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darisusu"},"content":"    /** Date+time that task ends */","lastModifiedDate":"2025-09-01T00:58:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darisusu"},"content":"    protected LocalDateTime toTimeObj;","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darisusu"},"content":"    private static final String COMMAND_KEYWORD \u003d \"event\";","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darisusu"},"content":"    private static final String FROM_SEPARATOR \u003d \" /from \";","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darisusu"},"content":"    private static final String TO_SEPARATOR \u003d \" /to \";","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darisusu"},"content":"    private static final String WRONG_FORMAT_EXCEPTION \u003d","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darisusu"},"content":"            \"Oops! Event requires \u0027event [task] /from [YYYY-DD-MM HHmm] /to [YYYY-DD-MM HHmm]\u0027 format, try again!\";","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darisusu"},"content":"    private static final String DATE_TIME_PATTERN \u003d \"yyyy-dd-MM HHmm\";","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darisusu"},"content":"    private static final DateTimeFormatter STORAGE_FORMATTER \u003d DateTimeFormatter.ofPattern(DATE_TIME_PATTERN);","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darisusu"},"content":"    private static final DateTimeFormatter FINAL_DISPLAY_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darisusu"},"content":"    public Event(String description, boolean isDone, LocalDateTime fromTimeObj, LocalDateTime toTimeObj){","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darisusu"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-28T01:03:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darisusu"},"content":"        this.fromTimeObj \u003d fromTimeObj;","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darisusu"},"content":"        this.toTimeObj \u003d toTimeObj;","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-21T17:39:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-21T17:39:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darisusu"},"content":"     * Returns new Event object.","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darisusu"},"content":"     * @param input Input from user.","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darisusu"},"content":"     * @return Event.","lastModifiedDate":"2025-09-01T00:58:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darisusu"},"content":"     * @throws PeroException if wrong format","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darisusu"},"content":"    public static Event fromInput(String input) throws PeroException {","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darisusu"},"content":"        if (input.equals(COMMAND_KEYWORD) || !input.contains(FROM_SEPARATOR) || !input.contains(TO_SEPARATOR)) {","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darisusu"},"content":"            throw new PeroException(WRONG_FORMAT_EXCEPTION);","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darisusu"},"content":"        }","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darisusu"},"content":"        //starts at index 6, remove \"event \"","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darisusu"},"content":"        String[] taskEvent \u003d input.substring(COMMAND_KEYWORD.length() + 1).split(FROM_SEPARATOR);","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darisusu"},"content":"        if (taskEvent.length \u003c 2) {","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darisusu"},"content":"            throw new PeroException(WRONG_FORMAT_EXCEPTION);","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darisusu"},"content":"        }","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darisusu"},"content":"        String task \u003d taskEvent[0];","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darisusu"},"content":"        String[] time \u003d taskEvent[1].split(\" /to \");","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darisusu"},"content":"        if (time.length \u003c 2) {","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darisusu"},"content":"            throw new PeroException(WRONG_FORMAT_EXCEPTION);","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darisusu"},"content":"        }","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darisusu"},"content":"        String from \u003d time[0].trim();","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darisusu"},"content":"        LocalDateTime fromTimeObj \u003d parseDateTime(from);","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darisusu"},"content":"        String to \u003d time[1].trim();","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darisusu"},"content":"        LocalDateTime toTimeObj \u003d parseDateTime(to);","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darisusu"},"content":"        return new Event(task,false,fromTimeObj,toTimeObj);","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darisusu"},"content":"    @Override","lastModifiedDate":"2025-08-27T23:12:38","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darisusu"},"content":"    public String toStorageString() {","lastModifiedDate":"2025-08-27T23:12:38","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darisusu"},"content":"        return \"E | \" + (isDone? \"1\" : \"0\") +","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darisusu"},"content":"                \" | \" + this.description + \" | \"","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darisusu"},"content":"                + this.fromTimeObj.format(STORAGE_FORMATTER) + \" | \"","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darisusu"},"content":"                + this.toTimeObj.format(STORAGE_FORMATTER);","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-27T23:12:38","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-27T23:12:38","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darisusu"},"content":"    @Override","lastModifiedDate":"2025-08-21T17:39:33","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darisusu"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T17:39:33","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darisusu"},"content":"        return \"[E]\" + super.toString() +","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darisusu"},"content":"                \" (from: \" + this.fromTimeObj.format(FINAL_DISPLAY_FORMATTER) +","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darisusu"},"content":"                \" to: \" + this.toTimeObj.format(FINAL_DISPLAY_FORMATTER) + \")\";","lastModifiedDate":"2025-08-31T18:14:38","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-21T17:39:33","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-27T23:12:38","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-27T23:12:38","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darisusu"},"content":"}","lastModifiedDate":"2025-08-21T17:10:03","isFullCredit":false}],"authorContributionMap":{"darisusu":83}},{"path":"src/main/java/pero/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darisusu"},"content":"package pero;","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darisusu"},"content":"/** Takes raw user input and parses and returns objects or index*/","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darisusu"},"content":"public class Parser {","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darisusu"},"content":"     * Parses user input and extracts index used for mark/unmark/delete","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darisusu"},"content":"     * @param input User input line.","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darisusu"},"content":"     * @return Index of element of TaskList to be changed","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darisusu"},"content":"    public static int parseIndex(String input){","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darisusu"},"content":"        //parseInt converts extracted string to integer","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darisusu"},"content":"        //-1 to change to 0-based indexing","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darisusu"},"content":"        return Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darisusu"},"content":"    //detect what command inputted","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darisusu"},"content":"     * Converts user input line into command type","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darisusu"},"content":"     * @param input User input line.","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darisusu"},"content":"     * @return Command type object","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darisusu"},"content":"    public static Command parseInputCommand(String input) {","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darisusu"},"content":"        input \u003d input.trim();","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darisusu"},"content":"        // Tool commands","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darisusu"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darisusu"},"content":"            return new Command(CommandType.BYE);","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darisusu"},"content":"        } else if (input.equalsIgnoreCase(\"help\")) {","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darisusu"},"content":"            return new Command(CommandType.HELP);","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darisusu"},"content":"        } else if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darisusu"},"content":"            return new Command(CommandType.LIST);","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darisusu"},"content":"        // Split input and get second part, -1 to match 0 indexing","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darisusu"},"content":"        } else if (input.matches(\"mark (\\\\d+)\")) {","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darisusu"},"content":"            int index \u003d parseIndex(input);","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darisusu"},"content":"            return new Command(CommandType.MARK, index, null);","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darisusu"},"content":"        } else if (input.matches(\"unmark (\\\\d+)\")) {","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darisusu"},"content":"            int index \u003d parseIndex(input);","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darisusu"},"content":"            return new Command(CommandType.UNMARK, index, null);","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darisusu"},"content":"        } else if (input.matches(\"delete (\\\\d+)\")) {","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darisusu"},"content":"            int index \u003d parseIndex(input);","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darisusu"},"content":"            return new Command(CommandType.DELETE, index, null);","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darisusu"},"content":"        // Task type command","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darisusu"},"content":"        } else if (input.toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darisusu"},"content":"            return new Command(CommandType.TODO, -1, input);","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darisusu"},"content":"        } else if (input.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darisusu"},"content":"            return new Command(CommandType.DEADLINE, -1, input);","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darisusu"},"content":"        } else if (input.toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darisusu"},"content":"            return new Command(CommandType.EVENT, -1, input);","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darisusu"},"content":"        // If unrecognised command","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darisusu"},"content":"        } else {","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darisusu"},"content":"            return new Command(CommandType.INVALID);","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darisusu"},"content":"        }","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darisusu"},"content":"}","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false}],"authorContributionMap":{"darisusu":61}},{"path":"src/main/java/pero/Pero.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darisusu"},"content":"package pero;","lastModifiedDate":"2025-08-31T15:17:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T15:17:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darisusu"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-01T01:35:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darisusu"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-20T16:38:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-22T11:49:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darisusu"},"content":"public class Pero {","lastModifiedDate":"2025-08-20T16:25:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darisusu"},"content":"    private final Storage storage;","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darisusu"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darisusu"},"content":"    private final Ui ui;","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darisusu"},"content":"     * Constructor to initialise Pero: UI, Storage, TaskList.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darisusu"},"content":"     * If invalid filepath, just load empty tasklist","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darisusu"},"content":"     * @param filePath file path to storage.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darisusu"},"content":"    public Pero(String filePath) {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darisusu"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darisusu"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darisusu"},"content":"        // Temp task list so that it compiles w/o error:","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darisusu"},"content":"        // \"Variable \u0027tasks\u0027 might already have been assigned to\"","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darisusu"},"content":"        TaskList tasksTemp;","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T23:46:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darisusu"},"content":"        try {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darisusu"},"content":"            tasksTemp \u003d new TaskList(filePath);","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darisusu"},"content":"        } catch (IOException e) { //","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darisusu"},"content":"            this.ui.showExceptions(e.getMessage());","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darisusu"},"content":"            tasksTemp \u003d new TaskList();","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darisusu"},"content":"        }","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darisusu"},"content":"        this.tasks \u003d tasksTemp;","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-20T16:25:06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darisusu"},"content":"    public void run() {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darisusu"},"content":"        Scanner sc \u003d new Scanner(System.in);  // Create a Scanner object","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T01:35:10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darisusu"},"content":"        //opening messages","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darisusu"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darisusu"},"content":"        ui.showTaskList(tasks);","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-20T16:52:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darisusu"},"content":"        String input \u003d \"\"; //initialise input","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darisusu"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darisusu"},"content":"        while (isRunning) {","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darisusu"},"content":"            ui.showPrompt();","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darisusu"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2025-08-20T16:38:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-20T16:52:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darisusu"},"content":"            //find out what command type the input line is","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darisusu"},"content":"            Command cmd \u003d Parser.parseInputCommand(input);","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darisusu"},"content":"            try {","lastModifiedDate":"2025-08-22T11:49:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darisusu"},"content":"                switch (cmd.type) {","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darisusu"},"content":"                    case BYE -\u003e isRunning \u003d false; //break out of current loop","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darisusu"},"content":"                    case HELP -\u003e ui.showGuideLines();","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darisusu"},"content":"                    case LIST -\u003e ui.showTaskList(tasks);","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darisusu"},"content":"                    case MARK -\u003e ui.showMarkedTask(tasks.markTask(cmd.index));","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darisusu"},"content":"                    case UNMARK -\u003e ui.showUnmarkedTask(tasks.unmarkTask(cmd.index));","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darisusu"},"content":"                    case DELETE -\u003e {","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darisusu"},"content":"                        ui.showDelete(tasks.removeTask(cmd.index));","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darisusu"},"content":"                        ui.showTasksSize(tasks);","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darisusu"},"content":"                    }","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darisusu"},"content":"                    case TODO, DEADLINE, EVENT -\u003e {","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darisusu"},"content":"                        ui.showAddedTask(tasks.addTaskFromInput(input));","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darisusu"},"content":"                        ui.showTasksSize(tasks);","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darisusu"},"content":"                    }","lastModifiedDate":"2025-08-22T11:49:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darisusu"},"content":"                }","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darisusu"},"content":"            // unknown task type identified, print error","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darisusu"},"content":"            // go to next iteration: await next user input to scan","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darisusu"},"content":"            } catch (PeroException e) {","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darisusu"},"content":"                ui.showExceptions(e.getMessage());","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darisusu"},"content":"            }","lastModifiedDate":"2025-08-20T16:52:18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darisusu"},"content":"            ui.showEmptyLine();","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darisusu"},"content":"        }","lastModifiedDate":"2025-08-20T16:38:38","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T01:35:10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darisusu"},"content":"        //after ending loop of scanning when \"bye\" user input","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darisusu"},"content":"        try {","lastModifiedDate":"2025-09-01T01:35:10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darisusu"},"content":"            ui.showSavingToStorage(tasks, storage.getFilePath());","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darisusu"},"content":"            storage.saveList(tasks);","lastModifiedDate":"2025-09-01T01:35:10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darisusu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-01T01:35:10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darisusu"},"content":"            ui.showExceptions(e.getMessage());","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darisusu"},"content":"        }","lastModifiedDate":"2025-09-01T01:35:10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darisusu"},"content":"        ui.showExit();","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"darisusu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"darisusu"},"content":"        new Pero(\"Pero_storage.txt\").run();","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-20T16:25:06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"darisusu"},"content":"}","lastModifiedDate":"2025-08-20T16:25:06","isFullCredit":false}],"authorContributionMap":{"darisusu":90}},{"path":"src/main/java/pero/PeroException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darisusu"},"content":"package pero;","lastModifiedDate":"2025-08-31T15:17:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T15:17:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darisusu"},"content":"//checked exception","lastModifiedDate":"2025-08-22T11:51:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darisusu"},"content":"public class PeroException extends Exception {","lastModifiedDate":"2025-08-22T11:51:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darisusu"},"content":"    public PeroException(String message) {","lastModifiedDate":"2025-08-22T11:51:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darisusu"},"content":"        super(message);","lastModifiedDate":"2025-08-22T11:51:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-22T11:51:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darisusu"},"content":"}","lastModifiedDate":"2025-08-22T11:25:00","isFullCredit":false}],"authorContributionMap":{"darisusu":8}},{"path":"src/main/java/pero/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darisusu"},"content":"package pero;","lastModifiedDate":"2025-08-31T15:17:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T15:17:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darisusu"},"content":"import java.io.File;","lastModifiedDate":"2025-08-27T23:14:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darisusu"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darisusu"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-27T23:14:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darisusu"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T23:14:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darisusu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-01T00:58:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darisusu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darisusu"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T23:14:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darisusu"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-27T23:14:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-27T23:06:50","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darisusu"},"content":"/**","lastModifiedDate":"2025-09-01T00:58:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darisusu"},"content":" * Responsible for reading and writing to a file","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darisusu"},"content":" * Responsible for saving task to storage","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darisusu"},"content":" * Should not call UI","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darisusu"},"content":" */","lastModifiedDate":"2025-09-01T00:58:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darisusu"},"content":"public class Storage {","lastModifiedDate":"2025-08-27T23:06:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darisusu"},"content":"    private final String filePath;","lastModifiedDate":"2025-08-27T23:14:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-27T23:14:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darisusu"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-27T23:14:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darisusu"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-27T23:14:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-27T23:14:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-27T23:14:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darisusu"},"content":"    public String getFilePath() {","lastModifiedDate":"2025-09-01T02:32:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darisusu"},"content":"        return this.filePath;","lastModifiedDate":"2025-09-01T02:32:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-01T02:32:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T02:32:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darisusu"},"content":"     * Writes tasks from this session to Pero_storage to be stored","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darisusu"},"content":"     * @param tasks Task list of tasks accumulated from this session.","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darisusu"},"content":"     * @throws IOException If filePath used to write to is invalid","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darisusu"},"content":"    public void saveList(TaskList tasks) throws IOException {","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darisusu"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2025-08-27T23:14:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darisusu"},"content":"        for (Task t : tasks.getAllTasks()) {","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darisusu"},"content":"            fw.write(t.toStorageString() + \"\\n\");","lastModifiedDate":"2025-08-27T23:14:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darisusu"},"content":"        }","lastModifiedDate":"2025-08-27T23:14:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darisusu"},"content":"        fw.close();","lastModifiedDate":"2025-08-27T23:14:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-27T23:14:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-27T23:14:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darisusu"},"content":"     * Checks whether first char in line is either 1 or 0.","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darisusu"},"content":"     * If 1, marked.","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darisusu"},"content":"     * If 0, unmarked.","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darisusu"},"content":"     * @param oneZero First char: either 1 or 0.","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darisusu"},"content":"     * @return Whether task is marked or unmarked.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darisusu"},"content":"    private boolean isMarked(String oneZero) {","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darisusu"},"content":"        if (oneZero.equals(\"1\")) { // marked","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darisusu"},"content":"            return true;","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darisusu"},"content":"        } else if (oneZero.equals(\"0\")) { // unmarked","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darisusu"},"content":"            return false;","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darisusu"},"content":"        } else { // not 1 or 0","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darisusu"},"content":"            throw new IllegalArgumentException(\"Invalid marked value: \" + oneZero);","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darisusu"},"content":"        }","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darisusu"},"content":"     * Loads all the tasks from filePath storage","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darisusu"},"content":"     * Parse through each line and convert to task obj to add to task list.","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darisusu"},"content":"     * PeroExceptions (where line is invalid) are thrown and handled within loadList.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darisusu"},"content":"     * @return Task list object.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darisusu"},"content":"     * @throws IOException If file path cannot be found or read. (outside of control)","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darisusu"},"content":"    public TaskList loadList() throws IOException {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darisusu"},"content":"        // initialise empty task to add tasks read from storage","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darisusu"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darisusu"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darisusu"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darisusu"},"content":"            // return tasks; // return empty list if no file found","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darisusu"},"content":"            throw new IOException(\"No storage file found in filePath: \" + this.filePath);","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darisusu"},"content":"        }","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darisusu"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darisusu"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darisusu"},"content":"            String currTaskLine \u003d scanner.nextLine();","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darisusu"},"content":"            if (currTaskLine.isEmpty()) {","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darisusu"},"content":"                continue;","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"darisusu"},"content":"            }","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"darisusu"},"content":"            String[] parts \u003d currTaskLine.split(\" \\\\| \"); //split the line into parts","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"darisusu"},"content":"            String firstLetter \u003d parts[0];","lastModifiedDate":"2025-09-01T04:17:02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"darisusu"},"content":"            //if error then catch and go to next line (next iteration of loop)","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"darisusu"},"content":"            try {","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"darisusu"},"content":"                switch (firstLetter) {","lastModifiedDate":"2025-09-01T04:17:02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"darisusu"},"content":"                    case \"T\": { //pero.ToDo","lastModifiedDate":"2025-08-31T15:17:22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"darisusu"},"content":"                        if (parts.length !\u003d 3) { //wrong format","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"darisusu"},"content":"                            throw new PeroException(\"Invalid ToDo line from storage: \" + currTaskLine);","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"darisusu"},"content":"                        }","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"darisusu"},"content":"                        boolean isDone \u003d isMarked(parts[1]);","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"darisusu"},"content":"                        Task t \u003d new ToDo(parts[2], isDone);","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"darisusu"},"content":"                        tasks.addTask(t);","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"darisusu"},"content":"                        break;","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"darisusu"},"content":"                    }","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"darisusu"},"content":"                    case \"D\": { //Deadline","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"darisusu"},"content":"                        if (parts.length !\u003d 4) { //wrong format","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"darisusu"},"content":"                            throw new PeroException(\"Invalid Deadline line from storage: \" + currTaskLine);","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"darisusu"},"content":"                        }","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"darisusu"},"content":"                        boolean isDone \u003d isMarked(parts[1]);","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"darisusu"},"content":"                        LocalDateTime byTimeObj \u003d Task.parseDateTime(parts[3]);","lastModifiedDate":"2025-09-01T00:58:42","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"darisusu"},"content":"                        Task t \u003d new Deadline(parts[2], isDone, byTimeObj);","lastModifiedDate":"2025-09-01T00:58:42","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"darisusu"},"content":"                        tasks.addTask(t);","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"darisusu"},"content":"                        break;","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"darisusu"},"content":"                    }","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"darisusu"},"content":"                    case \"E\": { //Event","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"darisusu"},"content":"                        if (parts.length !\u003d 5) { //wrong format","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"darisusu"},"content":"                            throw new PeroException(\"Invalid Deadline line from storage: \" + currTaskLine);","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"darisusu"},"content":"                        }","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"darisusu"},"content":"                        boolean isDone \u003d isMarked(parts[1]);","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"darisusu"},"content":"                        LocalDateTime fromTimeObj \u003d Task.parseDateTime(parts[3]);","lastModifiedDate":"2025-09-01T00:58:42","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"darisusu"},"content":"                        LocalDateTime byTimeObj \u003d Task.parseDateTime(parts[4]);","lastModifiedDate":"2025-09-01T00:58:42","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"darisusu"},"content":"                        Task t \u003d new Event(parts[2], isDone, fromTimeObj, byTimeObj);","lastModifiedDate":"2025-09-01T00:58:42","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"darisusu"},"content":"                        tasks.addTask(t);","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"darisusu"},"content":"                        break;","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"darisusu"},"content":"                    }","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"darisusu"},"content":"                    default: // not any of the tasks","lastModifiedDate":"2025-09-01T00:58:42","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"darisusu"},"content":"                        throw new PeroException(\"Unknown task type line from storage: \" + currTaskLine);","lastModifiedDate":"2025-09-02T11:25:28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"darisusu"},"content":"                }","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"darisusu"},"content":"            } catch (PeroException e) {","lastModifiedDate":"2025-09-02T11:40:45","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"darisusu"},"content":"                //throw new PeroException(\"Skipping invalid line from storage: \" + currTaskLine);","lastModifiedDate":"2025-09-02T11:40:45","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"darisusu"},"content":"                System.out.println(\"Skipping invalid line: \" + currTaskLine); // how? if iw to remove all ui from storage","lastModifiedDate":"2025-09-02T11:40:45","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"darisusu"},"content":"            }","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"darisusu"},"content":"        }","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"darisusu"},"content":"        return tasks;","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-28T01:37:12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"darisusu"},"content":"}","lastModifiedDate":"2025-08-27T23:06:50","isFullCredit":false}],"authorContributionMap":{"darisusu":133}},{"path":"src/main/java/pero/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darisusu"},"content":"package pero;","lastModifiedDate":"2025-08-31T15:17:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T15:17:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darisusu"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darisusu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darisusu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darisusu"},"content":"/**","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darisusu"},"content":" * Generic task in task management system","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darisusu"},"content":" * Abstract base class for ToDo, Deadline, Event subclasses to extend","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darisusu"},"content":" */","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darisusu"},"content":"public abstract class Task {","lastModifiedDate":"2025-08-27T23:07:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darisusu"},"content":"    protected String description;","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darisusu"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darisusu"},"content":"    private static final String DATE_TIME_PATTERN \u003d \"yyyy-dd-MM HHmm\";","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darisusu"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(DATE_TIME_PATTERN);","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darisusu"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-08-28T01:03:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darisusu"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darisusu"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-08-28T01:03:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darisusu"},"content":"    //may not need to use","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darisusu"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-27T23:07:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darisusu"},"content":"        return this.description;","lastModifiedDate":"2025-08-27T23:07:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-27T23:07:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-27T23:07:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darisusu"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darisusu"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darisusu"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darisusu"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darisusu"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darisusu"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darisusu"},"content":"     * Parses string input of time and date to LocalDatetime datetime object","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darisusu"},"content":"     * @param input String date time format from storage.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darisusu"},"content":"     * @return LocalDateTime","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darisusu"},"content":"     * @throws PeroException If invalid date time format.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darisusu"},"content":"    protected static LocalDateTime parseDateTime(String input) throws PeroException {","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darisusu"},"content":"        try {","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darisusu"},"content":"            return LocalDateTime.parse(input, INPUT_FORMATTER);","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darisusu"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darisusu"},"content":"            throw new PeroException(\"Invalid datetime: \u0027\" + input + \"\u0027. Please follow format: YYYY-DD-MM HHmm\");","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darisusu"},"content":"        }","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T18:24:05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darisusu"},"content":"    @Override","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darisusu"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darisusu"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darisusu"},"content":"    public abstract String toStorageString();","lastModifiedDate":"2025-08-27T23:07:18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-27T23:07:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darisusu"},"content":"}","lastModifiedDate":"2025-08-20T17:57:08","isFullCredit":false}],"authorContributionMap":{"darisusu":66}},{"path":"src/main/java/pero/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darisusu"},"content":"package pero;","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darisusu"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darisusu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darisusu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darisusu"},"content":"import java.util.List;","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darisusu"},"content":"/**","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darisusu"},"content":" * Responsible for managing tasks in memory","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darisusu"},"content":" */","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darisusu"},"content":"public class TaskList {","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darisusu"},"content":"    /** Raw list of tasks within each TaskList instance. */","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darisusu"},"content":"    private final List\u003cTask\u003e rawTaskList; //the raw task list, not object","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darisusu"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darisusu"},"content":"     * Constructor: creates empty task list","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darisusu"},"content":"    public TaskList() {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darisusu"},"content":"        this.rawTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darisusu"},"content":"     * Constructor: Loads list from storage, and initialises taskList.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darisusu"},"content":"     * @param filePath Path of Pero_storage to load taskList from.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darisusu"},"content":"     * @throws IOException If file cannot be read.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darisusu"},"content":"    public TaskList(String filePath) throws IOException{","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darisusu"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darisusu"},"content":"        this.rawTaskList \u003d storage.loadList().getAllTasks();","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darisusu"},"content":"     * Returns all the tasks in a list.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darisusu"},"content":"     * @return Raw task list.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darisusu"},"content":"    public List\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darisusu"},"content":"        return rawTaskList;","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darisusu"},"content":"     * Add task from user input to TaskList tasks and returns the task.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darisusu"},"content":"     * @param input Current line being read from input.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darisusu"},"content":"     * @return Current task being added.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darisusu"},"content":"     * @throws PeroException If line starts with unknown task type.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darisusu"},"content":"    public Task addTaskFromInput(String input) throws PeroException {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darisusu"},"content":"        Task currTask;","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darisusu"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darisusu"},"content":"            currTask \u003d ToDo.fromInput(input);","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darisusu"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darisusu"},"content":"            currTask \u003d Deadline.fromInput(input);","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darisusu"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darisusu"},"content":"            currTask \u003d Event.fromInput(input);","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darisusu"},"content":"        } else {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darisusu"},"content":"            throw new PeroException(\"Unknown task type identified, pls try again.\");","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darisusu"},"content":"        }","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darisusu"},"content":"        rawTaskList.add(currTask);","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darisusu"},"content":"        return currTask;","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darisusu"},"content":"     * Mark current task as done, and return current task.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darisusu"},"content":"     * @param index Index to get current task in task list.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darisusu"},"content":"     * @return Current task.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darisusu"},"content":"    public Task markTask(int index) {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darisusu"},"content":"        Task currTask \u003d rawTaskList.get(index);","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darisusu"},"content":"        currTask.markAsDone();","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darisusu"},"content":"        return currTask;","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darisusu"},"content":"     * Mark current task as done, and return current task.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"darisusu"},"content":"     * @param index Index to get current task in task list.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"darisusu"},"content":"     * @return Current task.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"darisusu"},"content":"    public Task unmarkTask(int index) {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"darisusu"},"content":"        Task currTask \u003d rawTaskList.get(index);","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"darisusu"},"content":"        currTask.markAsUndone();","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"darisusu"},"content":"        return currTask;","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"darisusu"},"content":"     * Delete tasks and returns the deleted task.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"darisusu"},"content":"     * @param index Index of task being deleted.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"darisusu"},"content":"     * @return Deleted task.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"darisusu"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"darisusu"},"content":"        return rawTaskList.remove(index);","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"darisusu"},"content":"     * Adds a task directly to raw task list (used by Storage).","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"darisusu"},"content":"     * @param task Current task.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"darisusu"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"darisusu"},"content":"        rawTaskList.add(task);","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"darisusu"},"content":"}","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false}],"authorContributionMap":{"darisusu":111}},{"path":"src/main/java/pero/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darisusu"},"content":"package pero;","lastModifiedDate":"2025-08-31T15:17:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-31T15:17:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darisusu"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-08-21T17:39:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T00:58:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darisusu"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2025-08-28T01:03:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darisusu"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-28T01:03:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-21T17:39:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-21T17:39:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darisusu"},"content":"    public static ToDo fromInput(String input) throws PeroException {","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darisusu"},"content":"        if (input.equals(\"todo\")) {","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darisusu"},"content":"            throw new PeroException(\"Oops! pero.ToDo requires \u0027todo [task]\u0027 format, try again!\");","lastModifiedDate":"2025-08-31T15:17:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darisusu"},"content":"        }","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darisusu"},"content":"        String taskToDo \u003d input.substring(5); //starts at index 5, remove \"todo \"","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darisusu"},"content":"        if (taskToDo.isBlank()) {","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darisusu"},"content":"            throw new PeroException(\"Oops! pero.ToDo requires \u0027todo [task]\u0027 format, try again!\");","lastModifiedDate":"2025-08-31T15:17:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darisusu"},"content":"        }","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darisusu"},"content":"        return new ToDo(taskToDo, false);","lastModifiedDate":"2025-08-28T01:03:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-22T12:49:50","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darisusu"},"content":"    @Override","lastModifiedDate":"2025-08-27T23:10:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darisusu"},"content":"    public String toStorageString() {","lastModifiedDate":"2025-08-27T23:10:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darisusu"},"content":"        return \"T | \" + (isDone? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2025-08-27T23:10:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-27T23:10:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-08-27T23:10:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darisusu"},"content":"    @Override","lastModifiedDate":"2025-08-21T17:39:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darisusu"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T17:39:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darisusu"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-21T17:39:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-08-21T17:39:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darisusu"},"content":"}","lastModifiedDate":"2025-08-21T17:10:03","isFullCredit":false}],"authorContributionMap":{"darisusu":30}},{"path":"src/main/java/pero/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darisusu"},"content":"package pero;","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darisusu"},"content":"import java.util.List;","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darisusu"},"content":"/** Handles user-facing interactions.*/","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darisusu"},"content":"public class Ui {","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darisusu"},"content":"    /** Displays empty line/ buffer for visual spacing. */","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darisusu"},"content":"    public void showEmptyLine() {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darisusu"},"content":"        System.out.println();","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-01T04:17:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darisusu"},"content":"     * Displays an error message to the console.","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darisusu"},"content":"     * @param message Error message.","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-01T04:17:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darisusu"},"content":"    public void showExceptions(String message){","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darisusu"},"content":"        System.out.println(message);","lastModifiedDate":"2025-09-01T04:17:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-01T04:17:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T04:17:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darisusu"},"content":"    /** Displays welcome message.*/","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darisusu"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darisusu"},"content":"        System.out.println(\"Hello, I\u0027m Pero! I am here to track ur tasks. \" +","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darisusu"},"content":"                \"If anything unsure, input \u0027help\u0027 into command line\");","lastModifiedDate":"2025-09-03T03:59:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darisusu"},"content":"    /** Displays exit message. */","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darisusu"},"content":"    public void showExit() {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darisusu"},"content":"        System.out.println(\"Thankyou for using Pero, and ATB!! Exiting now...\");","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darisusu"},"content":"     * Displays stored tasks in list if there is.","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darisusu"},"content":"     * Else prompts users to start.","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darisusu"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darisusu"},"content":"    public void showTaskList(TaskList tasks) {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darisusu"},"content":"        if (!tasks.getAllTasks().isEmpty()) {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darisusu"},"content":"            System.out.println(\"Here are the stored tasks in your list:\");","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darisusu"},"content":"            for (int i \u003d 0; i \u003c tasks.getAllTasks().size(); i++) {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darisusu"},"content":"                System.out.println((i + 1) + \". \" + tasks.getAllTasks().get(i));","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darisusu"},"content":"            }","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darisusu"},"content":"        } else {","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darisusu"},"content":"            System.out.println(\"No stored tasks in your list yet. Start adding!\");","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darisusu"},"content":"        }","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darisusu"},"content":"        System.out.println();","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darisusu"},"content":"     * Starts users off with guide: possible inputs and explanations.","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darisusu"},"content":"    public void showGuideLines(){","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darisusu"},"content":"        System.out.println(\"Welcome to Pero! Here’s how to use me:\");","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darisusu"},"content":"        System.out.println();","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darisusu"},"content":"        System.out.println(\"Adding tasks:\");","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darisusu"},"content":"        System.out.println(\"- todo [description]                                    : Add a simple task\");","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darisusu"},"content":"        System.out.println(\"- deadline [description] /by [YYYY-DD-MM HHmm]          : Add a task with a deadline\");","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darisusu"},"content":"        System.out.println(\"- event [description] /from [YYYY-DD-MM HHmm] /to [YYYY-DD-MM HHmm] : Add an event with start and end times\");","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darisusu"},"content":"        System.out.println();","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darisusu"},"content":"        System.out.println(\"Managing tasks:\");","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darisusu"},"content":"        System.out.println(\"- list                                                  : Show all tasks\");","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darisusu"},"content":"        System.out.println(\"- mark [task number]                                    : Mark a task as done\");","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darisusu"},"content":"        System.out.println(\"- unmark [task number]                                  : Mark a task as not done\");","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darisusu"},"content":"        System.out.println(\"- delete [task number]                                  : Delete a task\");","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darisusu"},"content":"        System.out.println();","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darisusu"},"content":"        System.out.println(\"Exiting:\");","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darisusu"},"content":"        System.out.println(\"- bye                                                   : Exit Pero and saves tasks\");","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darisusu"},"content":"        System.out.println();","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darisusu"},"content":"        System.out.println(\"Note: Date/time format must be YYYY-MM-dd HH:mm (e.g. 2025-09-01 16:00)\");","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darisusu"},"content":"        System.out.printf(\"Now lets start!%n\");","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darisusu"},"content":"    /** Displays prompt for task.*/","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darisusu"},"content":"    public void showPrompt(){","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darisusu"},"content":"        System.out.print(\"What do you want to do?\\n\");","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darisusu"},"content":"     * Displays confirmation that task has been marked done.","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darisusu"},"content":"     * @param task the current task.","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darisusu"},"content":"    public void showMarkedTask(Task task) {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"darisusu"},"content":"        System.out.println(\"Ok marked done: \" + task);","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"darisusu"},"content":"     * Displays confirmation that task has been marked undone.","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"darisusu"},"content":"     * @param task the current task.","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"darisusu"},"content":"    public void showUnmarkedTask(Task task) {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"darisusu"},"content":"        System.out.println(\"Ok marked undone: \" + task);","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"darisusu"},"content":"     * Displays current number of tasks in task list.","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"darisusu"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"darisusu"},"content":"    public void showTasksSize(TaskList tasks) {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"darisusu"},"content":"        System.out.println(\"Now, you have \" + tasks.getAllTasks().size() + \" tasks in your list.\");","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"darisusu"},"content":"     * Displays confirmation that task is being deleted from the list.","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"darisusu"},"content":"     * @param deletedTask The task that is being deleted.","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"darisusu"},"content":"    public void showDelete(Task deletedTask) {","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"darisusu"},"content":"        System.out.print(\"Noted, now removing task: \");","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"darisusu"},"content":"        System.out.println(deletedTask.description);","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"darisusu"},"content":"     * Displays confirmation that a new task has been added.","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"darisusu"},"content":"     * @param currTask the newly added task.","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"darisusu"},"content":"    public void showAddedTask(Task currTask){","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"darisusu"},"content":"        System.out.println(\"Got it. I\u0027ve added task:\");","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"darisusu"},"content":"        System.out.println(currTask);","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"darisusu"},"content":"     * Displays confirmation that tasks are being saved to storage.","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"darisusu"},"content":"     * @param tasks the list of tasks being saved/","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"darisusu"},"content":"     * @param filePath the file path where tasks will be stored at.","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"darisusu"},"content":"    public void showSavingToStorage(TaskList tasks, String filePath){","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"darisusu"},"content":"        System.out.printf(\"Saving %d tasks into %s%n\", tasks.getAllTasks().size(), filePath);","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"darisusu"},"content":"    /**","lastModifiedDate":"2025-09-01T04:17:02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"darisusu"},"content":"     * Display warning that current task line being read from storage has wrong format.","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"darisusu"},"content":"     *","lastModifiedDate":"2025-09-01T04:17:02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"darisusu"},"content":"     * @param firstLetter the first letter of line which indicates what task type.","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"darisusu"},"content":"     * @param currTaskLine the full line of text read from storage.","lastModifiedDate":"2025-09-01T23:40:28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"darisusu"},"content":"     */","lastModifiedDate":"2025-09-01T04:17:02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"darisusu"},"content":"    public void showWrongFormat(String firstLetter, String currTaskLine){","lastModifiedDate":"2025-09-03T01:50:03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"darisusu"},"content":"        String taskType \u003d switch (firstLetter) {","lastModifiedDate":"2025-09-01T04:17:02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"darisusu"},"content":"            case \"T\" -\u003e \"ToDo\";","lastModifiedDate":"2025-09-01T04:17:02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"darisusu"},"content":"            case \"D\" -\u003e \"Deadline\";","lastModifiedDate":"2025-09-01T04:17:02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"darisusu"},"content":"            case \"E\" -\u003e \"Event\";","lastModifiedDate":"2025-09-01T04:17:02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"darisusu"},"content":"            default -\u003e \"Unknown Task\";","lastModifiedDate":"2025-09-01T04:17:02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"darisusu"},"content":"        };","lastModifiedDate":"2025-09-01T04:17:02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"darisusu"},"content":"        System.out.println(\"Skipped invalid \" + taskType + \" line: \" + currTaskLine);","lastModifiedDate":"2025-09-01T04:17:02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"darisusu"},"content":"    }","lastModifiedDate":"2025-09-01T04:17:02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"darisusu"},"content":"}","lastModifiedDate":"2025-09-01T03:47:00","isFullCredit":false}],"authorContributionMap":{"darisusu":152}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darisusu"},"content":"todo","lastModifiedDate":"2025-08-22T11:50:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darisusu"},"content":"todo borrow book","lastModifiedDate":"2025-08-21T21:05:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T02:43:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darisusu"},"content":"deadline","lastModifiedDate":"2025-08-22T11:50:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darisusu"},"content":"deadline return book","lastModifiedDate":"2025-08-22T11:50:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darisusu"},"content":"deadline return book /by June 23th","lastModifiedDate":"2025-09-01T02:43:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darisusu"},"content":"deadline return book /by 2025-23-06 2359","lastModifiedDate":"2025-09-01T02:43:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T02:43:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darisusu"},"content":"event","lastModifiedDate":"2025-08-22T11:50:17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darisusu"},"content":"event project meeting","lastModifiedDate":"2025-08-22T11:50:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darisusu"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2025-08-21T21:05:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darisusu"},"content":"event project meeting /from 2025-06-08 1400 /to 2025-06-08 1600","lastModifiedDate":"2025-09-01T02:43:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darisusu"},"content":"","lastModifiedDate":"2025-09-01T02:43:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darisusu"},"content":"todo read book","lastModifiedDate":"2025-08-21T21:05:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darisusu"},"content":"mark 1","lastModifiedDate":"2025-08-21T21:05:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darisusu"},"content":"mark 3","lastModifiedDate":"2025-08-21T21:05:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darisusu"},"content":"list","lastModifiedDate":"2025-08-21T21:05:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darisusu"},"content":"unmark 3","lastModifiedDate":"2025-08-21T21:05:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darisusu"},"content":"delete","lastModifiedDate":"2025-08-22T12:23:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darisusu"},"content":"delete 4","lastModifiedDate":"2025-08-22T12:23:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darisusu"},"content":"list","lastModifiedDate":"2025-08-21T21:05:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darisusu"},"content":"bye","lastModifiedDate":"2025-08-21T21:05:08","isFullCredit":false}],"authorContributionMap":{"darisusu":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darisusu"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\pero\\*.java","lastModifiedDate":"2025-09-01T01:22:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"darisusu":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darisusu"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/pero/*.java","lastModifiedDate":"2025-09-01T01:22:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darisusu"},"content":"java -classpath ../bin Pero \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-21T21:05:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"darisusu":2,"-":36}}]
