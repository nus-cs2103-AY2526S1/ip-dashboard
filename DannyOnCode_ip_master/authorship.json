[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-03T23:34:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DannyOnCode"},"content":"//    mainClass.set(\"aura.Aura\")","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DannyOnCode"},"content":"    mainClass.set(\"aura.gui.Launcher\")","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DannyOnCode"},"content":"    archiveBaseName \u003d \"aura\"","lastModifiedDate":"2025-08-28T10:53:11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DannyOnCode"},"content":"    archiveFileName \u003d \u0027aura.jar\u0027","lastModifiedDate":"2025-08-28T13:43:06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DannyOnCode"},"content":"checkstyle {","lastModifiedDate":"2025-09-03T23:34:11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DannyOnCode"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-09-03T23:34:11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-09-03T23:34:11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-03T23:34:11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":24,"-":39}},{"path":"src/main/java/aura/Aura.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura;","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"import aura.command.Command;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"import aura.io.Parser;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"import aura.io.Ui;","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":"import aura.storage.Storage;","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":"import aura.task.TaskList;","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":" * The main class for the Aura application.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":" * This class initializes the application and manages the main run loop.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"public class Aura {","lastModifiedDate":"2025-08-20T06:35:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"    private final Ui ui;","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"    private final Storage storage;","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-08-27T23:42:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-20T06:35:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs an Aura object.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"     * Initializes the UI, storage, and task list components.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"    public Aura(String filePath) {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"        try {","lastModifiedDate":"2025-08-27T16:59:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"            this.tasks.loadTask(storage);","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-27T16:59:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DannyOnCode"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DannyOnCode"},"content":"        }","lastModifiedDate":"2025-08-27T16:59:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-20T06:35:19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-20T06:35:19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DannyOnCode"},"content":"     * Starts the main run loop of the application when used in CLI.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DannyOnCode"},"content":"     * It processes user commands until the \"bye\" command is entered.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DannyOnCode"},"content":"    public void run() {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DannyOnCode"},"content":"        System.out.println(ui.greeting());","lastModifiedDate":"2025-09-04T16:40:03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DannyOnCode"},"content":"        String input;","lastModifiedDate":"2025-08-20T07:02:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DannyOnCode"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2025-08-28T20:44:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DannyOnCode"},"content":"        while (isRunning) {","lastModifiedDate":"2025-08-28T20:44:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DannyOnCode"},"content":"            input \u003d this.ui.getInput();","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DannyOnCode"},"content":"            if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DannyOnCode"},"content":"                ui.replyPrint(ui.exitMessage());","lastModifiedDate":"2025-09-04T16:40:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DannyOnCode"},"content":"                isRunning \u003d false;","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DannyOnCode"},"content":"            }","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DannyOnCode"},"content":"            ui.replyPrint(handleUserCommand(input));","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DannyOnCode"},"content":"        }","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-20T07:02:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DannyOnCode"},"content":"     * Parses user input, executes the corresponding command, and returns a response string.","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DannyOnCode"},"content":"     * Saves tasks to storage on modification.","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DannyOnCode"},"content":"     * @param input The full command string from the user.","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DannyOnCode"},"content":"     * @return A string containing the result of the command, e.g., a confirmation or an error.","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DannyOnCode"},"content":"    public String handleUserCommand(String input) {","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DannyOnCode"},"content":"        String returnText \u003d \"\";","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DannyOnCode"},"content":"        Command command \u003d Parser.parseInput(input);","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DannyOnCode"},"content":"        returnText \u003d command.execute(tasks, storage, ui);","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-20T14:24:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DannyOnCode"},"content":"        if (!returnText.toLowerCase().contains(\"error\")) {","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DannyOnCode"},"content":"            returnText +\u003d \u0027\\n\u0027 + this.tasks.saveFile(storage);","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DannyOnCode"},"content":"        }","lastModifiedDate":"2025-08-20T09:00:06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DannyOnCode"},"content":"        return returnText;","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T16:59:13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-04T14:10:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DannyOnCode"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2025-09-04T14:10:12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-04T14:10:12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DannyOnCode"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-04T14:10:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DannyOnCode"},"content":"        return handleUserCommand(input);","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-04T14:10:12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T14:10:12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DannyOnCode"},"content":"     * The main entry point of the Aura application.","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DannyOnCode"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DannyOnCode"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DannyOnCode"},"content":"        new Aura(\"./data/Aura.txt\").run();","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-08-20T06:35:19","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":89}},{"path":"src/main/java/aura/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.command;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import aura.io.Ui;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"import aura.storage.Storage;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"import aura.task.TaskList;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":" * Represents the command to exit the application.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs a ByeCommand.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"     * @param input The user input string, which is typically \"bye\".","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"    public ByeCommand(String input) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"        super(input);","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"     * Executes the exit command, returning a goodbye message.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"     * @param taskList The list of tasks (not used in this command).","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"     * @param ui The user interface to get the exit message from.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"     * @return The farewell message to be displayed to the user.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"    @Override","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"        return ui.exitMessage();","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":32}},{"path":"src/main/java/aura/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.command;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import aura.io.Ui;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"import aura.storage.Storage;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"import aura.task.TaskList;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":" * Represents an abstract command. All specific command classes inherit from this class.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"public abstract class Command {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"    private final String input;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs a new command with the given user input.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"     * @param input The user-provided input string for the command.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"    public Command(String input) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"     * Gets the input string associated with this command.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"     * @return The raw input string.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"    public String getInput() {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"        return this.input;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"     * Executes the command. This method is intended to be overridden by subclasses.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DannyOnCode"},"content":"     * @param taskList The TaskList to be modified by the command.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DannyOnCode"},"content":"     * @param storage The Storage to save changes to.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DannyOnCode"},"content":"     * @param ui The Ui to interact with the user.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DannyOnCode"},"content":"     * @return A string representing the result of the command execution.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DannyOnCode"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DannyOnCode"},"content":"        return \"Unused Command\";","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:22:39","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":42}},{"path":"src/main/java/aura/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.command;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import aura.io.Ui;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"import aura.storage.Storage;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"import aura.task.TaskList;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":" * Represents the command to add a new deadline task.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs a DeadlineCommand.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"     * @param input The user input string containing the deadline\u0027s description and due date.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"    public DeadlineCommand(String input) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"        super(input);","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"     * Executes the command to add a deadline task to the list.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"     * @param tasks The TaskList to add the new deadline to.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"     * @param storage The storage handler to save the updated list.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"     * @return A confirmation message.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"    @Override","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"        return tasks.addDeadline(super.getInput());","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":32}},{"path":"src/main/java/aura/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.command;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import aura.io.Ui;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"import aura.storage.Storage;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"import aura.task.TaskList;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":" * Represents the command to delete a task from the list.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs a DeleteCommand.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"     * @param input The user input string, typically the index of the task to delete.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"        super(input);","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"     * Executes the command to delete a task from the list.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"     * @param tasks The TaskList to delete the task from.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"     * @param storage The storage handler to save the updated list.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"     * @return A confirmation message.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"    @Override","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"        return tasks.deleteTask(super.getInput());","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":32}},{"path":"src/main/java/aura/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.command;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import aura.io.Ui;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"import aura.storage.Storage;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"import aura.task.TaskList;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":" * Represents the command to add a new event task.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs an EventCommand.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"     * @param input The user input string containing the event\u0027s description, start time, and end time.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"    public EventCommand(String input) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"        super(input);","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"     * Executes the command to add an event task to the list.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"     * @param tasks The TaskList to add the new event to.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"     * @param storage The storage handler to save the updated list.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"     * @return A confirmation message.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"    @Override","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"        return tasks.addEvent(super.getInput());","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":32}},{"path":"src/main/java/aura/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.command;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import aura.io.Ui;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"import aura.storage.Storage;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"import aura.task.TaskList;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":" * Represents the command to find tasks by keyword.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs a FindCommand.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"     * @param input The keyword to search for within the task descriptions.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"        super(input);","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"     * Executes the command to find and list tasks containing the specified keyword.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"     * @param tasks The TaskList to search within.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"     * @return A string containing the list of matching tasks.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"    @Override","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"        return tasks.getTasksWithKeyword(super.getInput());","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":32}},{"path":"src/main/java/aura/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.command;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import aura.io.Ui;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"import aura.storage.Storage;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"import aura.task.TaskList;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":" * Represents the command to list all tasks.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs a ListCommand.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"     * @param input The user input string, which is typically \"list\".","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"    public ListCommand(String input) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"        super(input);","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"     * Executes the command to display all tasks in the list.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"     * @param tasks The TaskList to be displayed.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"     * @return A string containing the formatted list of all tasks.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"    @Override","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"        return tasks.printList();","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":32}},{"path":"src/main/java/aura/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.command;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import aura.io.Ui;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"import aura.storage.Storage;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"import aura.task.TaskList;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":" * Represents the command to mark a task as done.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs a MarkCommand.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"     * @param input The user input string, typically the index of the task to mark.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"        super(input);","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"     * Executes the command to mark a specified task as complete.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"     * @param tasks The TaskList containing the task to be marked.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"     * @param storage The storage handler to save the updated list.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"     * @return A confirmation message.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"    @Override","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"        return tasks.markTask(super.getInput());","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":32}},{"path":"src/main/java/aura/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.command;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import aura.io.Ui;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"import aura.storage.Storage;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"import aura.task.TaskList;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":" * Represents the command to add a new todo task.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs a TodoCommand.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"     * @param input The user input string containing the todo\u0027s description.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"    public TodoCommand(String input) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"        super(input);","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"     * Executes the command to add a todo task to the list.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"     * @param tasks The TaskList to add the new todo to.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"     * @param storage The storage handler to save the updated list.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"     * @return A confirmation message.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"    @Override","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"        return tasks.addToDo(super.getInput());","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":32}},{"path":"src/main/java/aura/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.command;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import java.util.List;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"import aura.io.Ui;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"import aura.storage.Storage;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"import aura.task.TaskList;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":" * Represents a command that is not recognized or is invalid.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs an UnknownCommand.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"     * @param input The invalid user input string.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"    public UnknownCommand(String input) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"        super(input);","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"     * Executes the unknown command by returning an appropriate error message.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"     * @param tasks The list of tasks (not used in this command).","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"     * @param ui The user interface (not used in this command).","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"     * @return A string containing an error message.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"    @Override","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"        String error;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DannyOnCode"},"content":"        List\u003cString\u003e commands \u003d List.of(\"mark\", \"unmark\", \"todo\", \"deadline\", \"event\", \"delete\");","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DannyOnCode"},"content":"        if (commands.contains(super.getInput())) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DannyOnCode"},"content":"            error \u003d String.format(\"ERROR: The description of the command %s cannot be empty.\",","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DannyOnCode"},"content":"                    super.getInput());","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DannyOnCode"},"content":"        } else {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DannyOnCode"},"content":"            error \u003d \"ERROR: Your input was invalid, make sure to include a valid command\";","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DannyOnCode"},"content":"        }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DannyOnCode"},"content":"        return error;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":42}},{"path":"src/main/java/aura/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.command;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import aura.io.Ui;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"import aura.storage.Storage;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"import aura.task.TaskList;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":" * Represents the command to mark a task as not done.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs an UnmarkCommand.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"     * @param input The user input string, typically the index of the task to unmark.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"        super(input);","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"     * Executes the command to mark a specified task as not complete.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"     * @param tasks The TaskList containing the task to be unmarked.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"     * @param storage The storage handler to save the updated list.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"     * @return A confirmation message.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"    @Override","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"        return tasks.unMarkTask(super.getInput());","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":32}},{"path":"src/main/java/aura/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.gui;","lastModifiedDate":"2025-09-04T13:50:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T13:50:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-04T13:50:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-04T13:50:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-04T13:50:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-04T13:50:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-04T13:50:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T13:50:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-09-04T13:50:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-09-04T13:50:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-04T13:50:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"    @FXML","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"    @FXML","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-04T13:50:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T13:50:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"        try {","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DannyOnCode"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DannyOnCode"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DannyOnCode"},"content":"        }","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DannyOnCode"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DannyOnCode"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-04T13:50:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DannyOnCode"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-04T13:50:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DannyOnCode"},"content":"    private void flip() {","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DannyOnCode"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DannyOnCode"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DannyOnCode"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DannyOnCode"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DannyOnCode"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-09-04T15:22:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T13:50:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DannyOnCode"},"content":"     * Creates a DialogBox for a user message. The image is on the right by default.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DannyOnCode"},"content":"     * @param text The text from the user.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DannyOnCode"},"content":"     * @param img The user\u0027s display picture.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DannyOnCode"},"content":"     * @return A new DialogBox instance configured for a user message.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DannyOnCode"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DannyOnCode"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T13:50:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DannyOnCode"},"content":"     * Creates a DialogBox for an Aura message. The layout is flipped so the image is on the left.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DannyOnCode"},"content":"     * @param text The response text from Aura.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DannyOnCode"},"content":"     * @param img Aura\u0027s display picture.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DannyOnCode"},"content":"     * @return A new DialogBox instance configured for Aura message.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DannyOnCode"},"content":"    public static DialogBox getAuraDialog(String text, Image img) {","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DannyOnCode"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DannyOnCode"},"content":"        db.flip();","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DannyOnCode"},"content":"        return db;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-04T13:50:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-09-04T13:50:37","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":75}},{"path":"src/main/java/aura/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.gui;","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":" * Launcher for main class","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":"public class Launcher {","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":12}},{"path":"src/main/java/aura/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.gui;","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"import aura.Aura;","lastModifiedDate":"2025-09-04T13:50:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-04T13:50:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":" * A GUI for Aura using FXML.","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"    private final Aura aura \u003d new Aura(\"./data/Aura.txt\");","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"    @Override","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"        try {","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-04T14:10:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-09-04T15:22:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-09-04T15:22:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setAura(aura);","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"            stage.show();","lastModifiedDate":"2025-09-04T14:10:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"        }","lastModifiedDate":"2025-09-04T14:10:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-09-04T13:15:05","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":33}},{"path":"src/main/java/aura/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.gui;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import aura.Aura;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"import aura.io.Ui;","lastModifiedDate":"2025-09-04T16:40:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"    @FXML","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"    @FXML","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"    @FXML","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"    @FXML","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2025-09-04T16:40:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"    private Aura aura;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"    private final Image auraImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-04T16:40:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"     * Initialises the bot and sends a greeting message","lastModifiedDate":"2025-09-04T16:40:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-04T16:40:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DannyOnCode"},"content":"    @FXML","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DannyOnCode"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DannyOnCode"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-04T16:40:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DannyOnCode"},"content":"                DialogBox.getAuraDialog(ui.greeting(), auraImage)","lastModifiedDate":"2025-09-04T16:40:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DannyOnCode"},"content":"        );","lastModifiedDate":"2025-09-04T16:40:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DannyOnCode"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DannyOnCode"},"content":"    /** Injects the Aura instance */","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DannyOnCode"},"content":"    public void setAura(Aura aura) {","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DannyOnCode"},"content":"        this.aura \u003d aura;","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DannyOnCode"},"content":"     * Creates a dialog box containing user input, and appends it to","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DannyOnCode"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DannyOnCode"},"content":"    @FXML","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DannyOnCode"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DannyOnCode"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DannyOnCode"},"content":"        String response \u003d aura.getResponse(input);","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DannyOnCode"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DannyOnCode"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DannyOnCode"},"content":"                DialogBox.getAuraDialog(response, auraImage)","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DannyOnCode"},"content":"        );","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DannyOnCode"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":61}},{"path":"src/main/java/aura/io/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.io;","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":"import aura.command.ByeCommand;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":"import aura.command.Command;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"import aura.command.DeadlineCommand;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"import aura.command.DeleteCommand;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"import aura.command.EventCommand;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"import aura.command.FindCommand;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"import aura.command.ListCommand;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"import aura.command.MarkCommand;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"import aura.command.TodoCommand;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"import aura.command.UnknownCommand;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"import aura.command.UnmarkCommand;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":" * Handles parsing of user input and date-time strings.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"public class Parser {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs a Parser object.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"     * Initializes a scanner to read from standard input.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"    public Parser() {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DannyOnCode"},"content":"     * Reads a line of input from the user.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DannyOnCode"},"content":"     * @return The user\u0027s input string.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DannyOnCode"},"content":"    public String getInput() {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DannyOnCode"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DannyOnCode"},"content":"     * Parses a date-time string into a LocalDateTime object.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DannyOnCode"},"content":"     * @param dateTime The date-time string in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DannyOnCode"},"content":"     * @return The parsed LocalDateTime object, or null if parsing fails.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DannyOnCode"},"content":"    public static LocalDateTime parseStringToDate(String dateTime) {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DannyOnCode"},"content":"        try {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DannyOnCode"},"content":"            DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DannyOnCode"},"content":"            return LocalDateTime.parse(dateTime, inputFormatter);","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DannyOnCode"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DannyOnCode"},"content":"            return null;","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DannyOnCode"},"content":"        }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DannyOnCode"},"content":"     * Parses the raw user input string and returns the corresponding Command object.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DannyOnCode"},"content":"     * This method acts as a factory for creating command objects based on the input keyword.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DannyOnCode"},"content":"     * @param input The full command string entered by the user.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DannyOnCode"},"content":"     * @return The specific Command object (e.g., TodoCommand, MarkCommand) to be executed.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DannyOnCode"},"content":"     *          Returns an UnknownCommand if the input does not match any known command format.","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DannyOnCode"},"content":"     **/","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DannyOnCode"},"content":"    public static Command parseInput(String input) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DannyOnCode"},"content":"        Command command;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DannyOnCode"},"content":"        switch (input.toLowerCase()) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DannyOnCode"},"content":"            case \"bye\" -\u003e {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DannyOnCode"},"content":"                command \u003d new ByeCommand(input);","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DannyOnCode"},"content":"            }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DannyOnCode"},"content":"            case \"list\" -\u003e {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DannyOnCode"},"content":"                command \u003d new ListCommand(input);","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DannyOnCode"},"content":"            }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DannyOnCode"},"content":"            default -\u003e {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DannyOnCode"},"content":"                if (input.toLowerCase().startsWith(\"mark \")) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DannyOnCode"},"content":"                    assert input.toLowerCase().contains(\"mark\") : \"Entered mark but no \\\"mark\\\"\";","lastModifiedDate":"2025-09-13T12:18:23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DannyOnCode"},"content":"                    command \u003d new MarkCommand(input);","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DannyOnCode"},"content":"                } else if (input.toLowerCase().startsWith(\"unmark \")) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DannyOnCode"},"content":"                    assert input.toLowerCase().contains(\"unmark\") : \"Entered unmark but no \\\"unmark\\\"\";","lastModifiedDate":"2025-09-13T12:18:23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DannyOnCode"},"content":"                    command \u003d new UnmarkCommand(input);","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DannyOnCode"},"content":"                } else if (input.toLowerCase().startsWith(\"todo \")) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DannyOnCode"},"content":"                    assert input.toLowerCase().contains(\"todo\") : \"Entered todo but no \\\"todo\\\"\";","lastModifiedDate":"2025-09-13T12:18:23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DannyOnCode"},"content":"                    command \u003d new TodoCommand(input);","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DannyOnCode"},"content":"                } else if (input.toLowerCase().startsWith(\"deadline \")) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DannyOnCode"},"content":"                    assert input.toLowerCase().contains(\"deadline\") : \"Entered deadline but no \\\"deadline\\\"\";","lastModifiedDate":"2025-09-13T12:18:23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DannyOnCode"},"content":"                    command \u003d new DeadlineCommand(input);","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DannyOnCode"},"content":"                } else if (input.toLowerCase().startsWith(\"event \")) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DannyOnCode"},"content":"                    assert input.toLowerCase().contains(\"event\") : \"Entered event but no \\\"event\\\"\";","lastModifiedDate":"2025-09-13T12:18:23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DannyOnCode"},"content":"                    command \u003d new EventCommand(input);","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DannyOnCode"},"content":"                } else if (input.toLowerCase().startsWith(\"delete \")) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DannyOnCode"},"content":"                    assert input.toLowerCase().contains(\"delete\") : \"Entered delete but no \\\"delete\\\"\";","lastModifiedDate":"2025-09-13T12:18:23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DannyOnCode"},"content":"                    command \u003d new DeleteCommand(input);","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DannyOnCode"},"content":"                } else if (input.toLowerCase().startsWith(\"find \")) {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DannyOnCode"},"content":"                    assert input.toLowerCase().contains(\"find\") : \"Entered find but no \\\"find\\\"\";","lastModifiedDate":"2025-09-13T12:18:23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DannyOnCode"},"content":"                    command \u003d new FindCommand(input);","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DannyOnCode"},"content":"                } else {","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DannyOnCode"},"content":"                    command \u003d new UnknownCommand(input);","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DannyOnCode"},"content":"                }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DannyOnCode"},"content":"            }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DannyOnCode"},"content":"        }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DannyOnCode"},"content":"        return command;","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":104}},{"path":"src/main/java/aura/io/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.io;","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import java.util.List;","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"import aura.task.Task;","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":" * Handles all user interface interactions.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":" * This class is responsible for displaying messages to the user and reading user input.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"public class Ui {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"    private static final String ASSISTANCE_NAME \u003d \"Aura\";","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"    private static final String LOGO \u003d \"\"\"","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"                _","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"               / \\\\  _   _ _ __ __ _","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"              / _ \\\\| | | | \u0027__/ _` |","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"             / ___ \\\\ |_| | | | (_| |","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"            /_/   \\\\_\\\\__,_|_|  \\\\__,_|","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"            \"\"\";","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"    private final Parser parser;","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs a Ui object.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"     * Initializes the parser for reading user input.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"    public Ui() {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"     * Displays the welcome message to the user.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DannyOnCode"},"content":"    public String greeting() {","lastModifiedDate":"2025-09-04T16:40:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DannyOnCode"},"content":"        return (LOGO","lastModifiedDate":"2025-09-04T16:40:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DannyOnCode"},"content":"                + \"Hello! I\u0027m \" + ASSISTANCE_NAME + \"\\n\"","lastModifiedDate":"2025-09-04T16:40:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DannyOnCode"},"content":"                + \"What can I do for you?\");","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DannyOnCode"},"content":"     * Displays the exit message to the user.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DannyOnCode"},"content":"    public String exitMessage() {","lastModifiedDate":"2025-09-04T16:40:03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DannyOnCode"},"content":"        return \"Bye Bye my friend\";","lastModifiedDate":"2025-09-04T16:40:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DannyOnCode"},"content":"     * Prints a divider line to the console for better readability.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DannyOnCode"},"content":"    public void printDivider() {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DannyOnCode"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DannyOnCode"},"content":"     * Prints a formatted reply to the user.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DannyOnCode"},"content":"     * @param text The text to be printed.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DannyOnCode"},"content":"    public void replyPrint(String text) {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DannyOnCode"},"content":"        System.out.println(\"\\t\" + text);","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DannyOnCode"},"content":"     * Displays an error message when loading from the save file fails.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DannyOnCode"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DannyOnCode"},"content":"        replyPrint(\"There seems to have been an error in loading the file\");","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DannyOnCode"},"content":"     * Reads and returns the user\u0027s input from the console.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DannyOnCode"},"content":"     * @return The user\u0027s input as a String.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DannyOnCode"},"content":"    public String getInput() {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DannyOnCode"},"content":"        return this.parser.getInput();","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T21:54:02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DannyOnCode"},"content":"     * Displays a given list of tasks to the user in a numbered format.","lastModifiedDate":"2025-08-28T21:54:02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T21:54:02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DannyOnCode"},"content":"     * @param taskList The list of tasks to be displayed.","lastModifiedDate":"2025-08-28T21:54:02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DannyOnCode"},"content":"     * @return String to be given to GUI","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T21:54:02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DannyOnCode"},"content":"    public String displayGivenList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DannyOnCode"},"content":"        StringBuilder returnString \u003d new StringBuilder();","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DannyOnCode"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DannyOnCode"},"content":"            returnString.append(String.format(\"%d. %s\\n\", (i + 1), taskList.get(i)));","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DannyOnCode"},"content":"        }","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DannyOnCode"},"content":"        return returnString.toString();","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":91}},{"path":"src/main/java/aura/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.storage;","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import java.io.File;","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"import aura.task.Deadlines;","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"import aura.task.Events;","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"import aura.task.Task;","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"import aura.task.ToDos;","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":" * Handles loading tasks from and saving tasks to a file.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"public class Storage {","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"    private final String filePath;","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs a Storage object with a default file path.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"    public Storage() {","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"        this.filePath \u003d \"./data/aura.txt\";","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs a Storage object with a specified file path.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DannyOnCode"},"content":"     * @param filePath The path to the storage file.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DannyOnCode"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DannyOnCode"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DannyOnCode"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DannyOnCode"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DannyOnCode"},"content":"     * @throws IOException If an error occurs during file reading.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DannyOnCode"},"content":"    public List\u003cTask\u003e loadTasks() throws IOException {","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DannyOnCode"},"content":"        File taskFile \u003d new File(this.filePath);","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DannyOnCode"},"content":"        taskFile.getParentFile().mkdir();","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DannyOnCode"},"content":"        taskFile.createNewFile();","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DannyOnCode"},"content":"        Scanner scanFile \u003d new Scanner(taskFile);","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DannyOnCode"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DannyOnCode"},"content":"        String[] taskParts;","lastModifiedDate":"2025-08-28T20:44:16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DannyOnCode"},"content":"        while (scanFile.hasNext()) {","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DannyOnCode"},"content":"            String nextLine \u003d scanFile.nextLine();","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DannyOnCode"},"content":"            taskParts \u003d nextLine.split(\"\\\\|\");","lastModifiedDate":"2025-08-28T20:44:16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DannyOnCode"},"content":"            switch (taskParts[0]) {","lastModifiedDate":"2025-08-28T20:44:16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DannyOnCode"},"content":"                case \"T\" -\u003e tasks.add(new ToDos(taskParts[1], taskParts[2].equals(\"1\")));","lastModifiedDate":"2025-08-28T20:44:16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DannyOnCode"},"content":"                case \"D\" -\u003e tasks.add(new Deadlines(taskParts[1], taskParts[2].equals(\"1\"),","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DannyOnCode"},"content":"                        parseStringToDate(taskParts[3])));","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DannyOnCode"},"content":"                case \"E\" -\u003e tasks.add(new Events(taskParts[1], taskParts[2].equals(\"1\"),","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DannyOnCode"},"content":"                        parseStringToDate(taskParts[3]), parseStringToDate(taskParts[4])));","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DannyOnCode"},"content":"                default -\u003e System.out.println(\"A line was corrupted :\" + Arrays.toString(taskParts));","lastModifiedDate":"2025-08-28T20:44:16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DannyOnCode"},"content":"            }","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DannyOnCode"},"content":"        }","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DannyOnCode"},"content":"        return tasks;","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DannyOnCode"},"content":"     * Saves the list of tasks to the storage file.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DannyOnCode"},"content":"     * @param taskList The list of tasks to be saved.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DannyOnCode"},"content":"     * @return A confirmation message.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DannyOnCode"},"content":"    public String saveTasks(List\u003cTask\u003e taskList) {","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DannyOnCode"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(this.filePath)) {","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DannyOnCode"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DannyOnCode"},"content":"                fileWriter.write(task.getSaveLineFormat());","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DannyOnCode"},"content":"            }","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DannyOnCode"},"content":"            return \"Updated save file at \" + this.filePath;","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DannyOnCode"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DannyOnCode"},"content":"            System.out.println(\"There seems to have been an issue saving the tasks\");","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DannyOnCode"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DannyOnCode"},"content":"        }","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DannyOnCode"},"content":"     * Parses a date-time string into a LocalDateTime object.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DannyOnCode"},"content":"     * @param dateTime The date-time string to parse.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DannyOnCode"},"content":"     * @return The parsed LocalDateTime object, or null if parsing fails.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DannyOnCode"},"content":"    private static LocalDateTime parseStringToDate(String dateTime) {","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DannyOnCode"},"content":"        try {","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DannyOnCode"},"content":"            DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DannyOnCode"},"content":"            return LocalDateTime.parse(dateTime, inputFormatter);","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DannyOnCode"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DannyOnCode"},"content":"            return null;","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DannyOnCode"},"content":"        }","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":108}},{"path":"src/main/java/aura/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.task;","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":" * Represents a task with a deadline. A `Deadlines` object includes a description and a \"by\" date-time.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs a new `Deadlines` task.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"     * @param by          The deadline date and time.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"    public Deadlines(String description, LocalDateTime by) {","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"        super(description);","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs a `Deadlines` task with a specific completion status.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"     * @param by          The deadline date and time.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"    public Deadlines(String description, boolean isDone, LocalDateTime by) {","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-27T15:53:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-27T15:53:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T15:53:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T15:53:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DannyOnCode"},"content":"     * Converts a LocalDateTime object to a formatted string for display.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DannyOnCode"},"content":"     * @param date The date to format.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DannyOnCode"},"content":"     * @return The formatted date string (e.g., \"Aug 28 2025, 2:09 pm\").","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DannyOnCode"},"content":"    private String convertDateToString(LocalDateTime date) {","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DannyOnCode"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DannyOnCode"},"content":"        return date.format(dateTimeFormatter);","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DannyOnCode"},"content":"     * Converts a LocalDateTime object to a formatted string for saving.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DannyOnCode"},"content":"     * @param date The date to format.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DannyOnCode"},"content":"     * @return The formatted date string (e.g., \"2025-08-28 1409\").","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DannyOnCode"},"content":"    private String convertDateToSave(LocalDateTime date) {","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DannyOnCode"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DannyOnCode"},"content":"        return date.format(dateTimeFormatter);","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DannyOnCode"},"content":"     * Returns the string representation of the task for saving to a file.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DannyOnCode"},"content":"     * @return A formatted string for file storage (e.g., \"D|Submit CS2103|1|2025-08-28 1409\").","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DannyOnCode"},"content":"    @Override","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DannyOnCode"},"content":"    public String getSaveLineFormat() {","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DannyOnCode"},"content":"        return String.format(\"D|%s|%s\\n\", super.getSaveLineFormat(), convertDateToSave(this.by));","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DannyOnCode"},"content":"     * Returns the string representation of the task for display.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DannyOnCode"},"content":"     * @return A formatted string for displaying to the user (e.g., [D][X] Submit CS2103 (by Aug 28 2025 2:09 pm).","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DannyOnCode"},"content":"    @Override","lastModifiedDate":"2025-08-20T12:05:48","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DannyOnCode"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DannyOnCode"},"content":"        return String.format(\"[D]%s (by %s)\",","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DannyOnCode"},"content":"                super.toString(), convertDateToString(this.by));","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":77}},{"path":"src/main/java/aura/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.task;","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":" * Represents an event task. An `Events` object includes a description, a \"from\" date-time, and a \"to\" date-time.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":"public class Events extends Task {","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs a new `Events` task.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"     * @param from        The start date and time of the event.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"     * @param to          The end date and time of the event.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"    public Events(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"        super(description);","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs an `Events` task with a specific completion status.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"     * @param from        The start date and time of the event.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"     * @param to          The end date and time of the event.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DannyOnCode"},"content":"    public Events(String description, boolean isDone, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DannyOnCode"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-27T15:53:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DannyOnCode"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-08-27T15:53:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DannyOnCode"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-08-27T15:53:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T15:53:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T15:53:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DannyOnCode"},"content":"     * Converts a LocalDateTime object to a formatted string for display.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DannyOnCode"},"content":"     * @param date The date to format.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DannyOnCode"},"content":"     * @return The formatted date string (e.g., \"Aug 28 2025, 2:09 PM\").","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DannyOnCode"},"content":"    private String convertDateToString(LocalDateTime date) {","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DannyOnCode"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DannyOnCode"},"content":"        return date.format(dateTimeFormatter);","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DannyOnCode"},"content":"     * Converts a LocalDateTime object to a formatted string for saving.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DannyOnCode"},"content":"     * @param date The date to format.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DannyOnCode"},"content":"     * @return The formatted date string (e.g., \"2025-08-28 1409\").","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DannyOnCode"},"content":"    private String convertDateToSave(LocalDateTime date) {","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DannyOnCode"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DannyOnCode"},"content":"        return date.format(dateTimeFormatter);","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T20:53:07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DannyOnCode"},"content":"     * Returns the string representation of the task for saving to a file.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DannyOnCode"},"content":"     * @return A formatted string for file storage (e.g., \"E|Submit CS2103|1|2025-08-28 1409|2025-08-28 1420\").","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DannyOnCode"},"content":"    @Override","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DannyOnCode"},"content":"    public String getSaveLineFormat() {","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DannyOnCode"},"content":"        return String.format(\"E|%s|%s|%s\\n\", super.getSaveLineFormat(),","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DannyOnCode"},"content":"                convertDateToSave(this.from),","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DannyOnCode"},"content":"                convertDateToSave(this.to));","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DannyOnCode"},"content":"     * Returns the string representation of the task for display.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DannyOnCode"},"content":"     * @return A formatted string for displaying to the user","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DannyOnCode"},"content":"     *      (e.g., [E][X] Submit CS2103 (from Aug 28 2025 2:09 pm to Aug 28 2025 2:20 pm).","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DannyOnCode"},"content":"    @Override","lastModifiedDate":"2025-08-20T12:05:48","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DannyOnCode"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DannyOnCode"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DannyOnCode"},"content":"                super.toString(), convertDateToString(this.from),","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DannyOnCode"},"content":"                convertDateToString(this.to));","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":86}},{"path":"src/main/java/aura/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.task;","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":" * Represents a task in the Aura application.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":" * This is an abstract class that serves as the base for different types of tasks.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"public abstract class Task {","lastModifiedDate":"2025-08-20T12:05:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":"    protected String description;","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs a task with the given description.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs a task with a given description and completion status.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-08-27T15:53:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-27T15:53:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-08-27T15:53:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T15:53:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T15:53:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DannyOnCode"},"content":"     * Returns the status icon for the task.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DannyOnCode"},"content":"     * @return \"X\" if the task is done, \" \" (a space) otherwise.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DannyOnCode"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DannyOnCode"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DannyOnCode"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DannyOnCode"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DannyOnCode"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DannyOnCode"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DannyOnCode"},"content":"    public void markAsUnDone() {","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DannyOnCode"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DannyOnCode"},"content":"     * Returns a string representation of the task for saving to a file.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DannyOnCode"},"content":"     * @return A formatted string for file storage.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DannyOnCode"},"content":"    public String getSaveLineFormat() {","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DannyOnCode"},"content":"        return String.format(\"%s|%s\", this.description, this.isDone ? \"1\" : \"0\");","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T22:05:29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DannyOnCode"},"content":"     * Returns a boolean value representing if task description contains specified keyword.","lastModifiedDate":"2025-08-28T22:05:29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DannyOnCode"},"content":"     * This comparison is case-sensitive.","lastModifiedDate":"2025-08-28T22:05:29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T22:05:29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DannyOnCode"},"content":"     * @param keyword The keyword to be matched","lastModifiedDate":"2025-08-28T22:06:56","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DannyOnCode"},"content":"     * @return true if the keyword is found, false otherwise.","lastModifiedDate":"2025-08-28T22:05:29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T22:05:29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DannyOnCode"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DannyOnCode"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T22:05:29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DannyOnCode"},"content":"     * Returns a string representation of the task for display.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DannyOnCode"},"content":"     * @return A formatted string for displaying to the user.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DannyOnCode"},"content":"    @Override","lastModifiedDate":"2025-08-20T12:05:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DannyOnCode"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DannyOnCode"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), this.description);","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-08-20T08:13:26","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":85}},{"path":"src/main/java/aura/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.task;","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":"import aura.io.Parser;","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":"import aura.io.Ui;","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"import aura.storage.Storage;","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":" * Manages a list of tasks, providing methods to add, delete, and modify them.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"public class TaskList {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-28T20:44:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"    private final Ui ui;","lastModifiedDate":"2025-08-27T23:42:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs a TaskList object, initializing an empty list and a UI for interaction.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T20:44:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"     * Loads tasks from a storage file into the list.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"     * @param storage The storage handler to load tasks from.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"     * @throws IOException If an error occurs during file reading.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DannyOnCode"},"content":"    public void loadTask(Storage storage) throws IOException {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DannyOnCode"},"content":"        this.tasks \u003d storage.loadTasks();","lastModifiedDate":"2025-08-28T20:44:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DannyOnCode"},"content":"     * Saves the current task list to the storage file.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DannyOnCode"},"content":"     * @param storage The storage handler to save tasks to.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DannyOnCode"},"content":"     * @return A confirmation message.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DannyOnCode"},"content":"    public String saveFile(Storage storage) {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DannyOnCode"},"content":"        return storage.saveTasks(this.tasks);","lastModifiedDate":"2025-08-28T20:44:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DannyOnCode"},"content":"     * Formats and returns a string representation of all tasks in the list.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DannyOnCode"},"content":"     * @return A string listing all tasks.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DannyOnCode"},"content":"    public String printList() {","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DannyOnCode"},"content":"        return ui.displayGivenList(this.tasks);","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DannyOnCode"},"content":"     * Adds a single task to the list and returns a confirmation message.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DannyOnCode"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DannyOnCode"},"content":"     * @return A string confirming the addition and showing the new task count.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DannyOnCode"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DannyOnCode"},"content":"        int sizeBeforeInsert \u003d tasks.size();","lastModifiedDate":"2025-09-12T17:16:36","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DannyOnCode"},"content":"        this.tasks.add(task);","lastModifiedDate":"2025-08-28T20:44:16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DannyOnCode"},"content":"        assert tasks.size() \u003d\u003d sizeBeforeInsert + 1","lastModifiedDate":"2025-09-12T17:16:36","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DannyOnCode"},"content":"                : \"Successfully inserted by list size did not increase\";","lastModifiedDate":"2025-09-12T17:16:36","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DannyOnCode"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DannyOnCode"},"content":"                + String.format(\"  %s\\n\", task)","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DannyOnCode"},"content":"                + String.format(\"Now you have %d tasks in the list.\", this.tasks.size());","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DannyOnCode"},"content":"     * Deletes a task by its index from user input. Handles invalid input or index out of bounds.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DannyOnCode"},"content":"     * @param input The user command string (e.g., \"delete 1\").","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DannyOnCode"},"content":"     * @return A confirmation message on success or an error message on failure.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DannyOnCode"},"content":"    public String deleteTask(String input) {","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DannyOnCode"},"content":"        try {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DannyOnCode"},"content":"            String trimmedIndex \u003d input.substring(7).trim();","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DannyOnCode"},"content":"            int index \u003d Integer.parseInt(trimmedIndex);","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DannyOnCode"},"content":"            Task task \u003d this.tasks.get(index - 1);","lastModifiedDate":"2025-08-28T20:44:16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DannyOnCode"},"content":"            this.tasks.remove(index - 1);","lastModifiedDate":"2025-08-28T20:44:16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DannyOnCode"},"content":"            return \"Understood Sir, I have removed the task: \\n\"","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DannyOnCode"},"content":"                    + String.format(\"  %s\\n\", task)","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DannyOnCode"},"content":"                    + String.format(\"Now you have %d tasks in the list.\", this.tasks.size());","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DannyOnCode"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DannyOnCode"},"content":"            return \"You\u0027ve used the command delete but the index is invalid.\";","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DannyOnCode"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DannyOnCode"},"content":"            return \"WHAT? Your input index was not in the list\";","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DannyOnCode"},"content":"        }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DannyOnCode"},"content":"     * Marks a task as complete by its index from user input.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DannyOnCode"},"content":"     * @param input The user command string (e.g., \"mark 1\").","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DannyOnCode"},"content":"     * @return A success message or an error message if the index is invalid.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DannyOnCode"},"content":"    public String markTask(String input) {","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DannyOnCode"},"content":"        try {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DannyOnCode"},"content":"            String trimmedIndex \u003d input.substring(5).trim();","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DannyOnCode"},"content":"            int index \u003d Integer.parseInt(trimmedIndex);","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DannyOnCode"},"content":"            Task task \u003d this.tasks.get(index - 1);","lastModifiedDate":"2025-08-28T20:44:16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DannyOnCode"},"content":"            task.markAsDone();","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DannyOnCode"},"content":"            return \"Well Done sir! I\u0027ve marked this task as done: \\n\"","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DannyOnCode"},"content":"                    + String.format(\"%s\", task);","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DannyOnCode"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DannyOnCode"},"content":"            return \"ERROR: You\u0027ve used the command mark but the index is invalid.\\n\"","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DannyOnCode"},"content":"                    + \"If this was intended, please use a different keyword (e.g \\\"check\\\")\";","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DannyOnCode"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"DannyOnCode"},"content":"            return \"ERROR: WHAT? Your input index was not in the list\";","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DannyOnCode"},"content":"        }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"DannyOnCode"},"content":"     * Marks a task as not complete by its index from user input.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"DannyOnCode"},"content":"     * @param input The user command string (e.g., \"unmark 1\").","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"DannyOnCode"},"content":"     * @return A success message or an error message.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"DannyOnCode"},"content":"    public String unMarkTask(String input) {","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"DannyOnCode"},"content":"        try {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"DannyOnCode"},"content":"            String trimmedIndex \u003d input.substring(7).trim();","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"DannyOnCode"},"content":"            int index \u003d Integer.parseInt(trimmedIndex);","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"DannyOnCode"},"content":"            Task task \u003d this.tasks.get(index - 1);","lastModifiedDate":"2025-08-28T20:44:16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"DannyOnCode"},"content":"            task.markAsUnDone();","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"DannyOnCode"},"content":"            return \"Alright, I\u0027ve marked this task as not done: \\n\"","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"DannyOnCode"},"content":"                    + String.format(\"%s\", task);","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"DannyOnCode"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"DannyOnCode"},"content":"            ui.printDivider();","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"DannyOnCode"},"content":"            ui.replyPrint(\"\");","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"DannyOnCode"},"content":"            ui.replyPrint(\"\");","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"DannyOnCode"},"content":"            ui.printDivider();","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"DannyOnCode"},"content":"            return \"ERROR: You\u0027ve used the command unmark but the index is invalid.\\n\"","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"DannyOnCode"},"content":"                    + \"If this was intended, please use a different keyword (e.g \\\"uncheck\\\")\";","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"DannyOnCode"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"DannyOnCode"},"content":"            return \"ERROR: WHAT? Your input index was not in the list\";","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"DannyOnCode"},"content":"        }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"DannyOnCode"},"content":"     * Parses input to create and add a ToDo task.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"DannyOnCode"},"content":"     * @param input The command string (e.g., \"todo read book\").","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"DannyOnCode"},"content":"     * @return A confirmation message or an error.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"DannyOnCode"},"content":"    public String addToDo(String input) {","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"DannyOnCode"},"content":"        try {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"DannyOnCode"},"content":"            String trimmedTask \u003d input.substring(5).trim();","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"DannyOnCode"},"content":"            return addTask(new ToDos(trimmedTask));","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"DannyOnCode"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"DannyOnCode"},"content":"            return \"ERROR: Please follow the format \\\"todo [Task]\\\"\";","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"DannyOnCode"},"content":"        }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"DannyOnCode"},"content":"     * Parses input to create and add a Deadline task.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"DannyOnCode"},"content":"     * @param input The command string (e.g., \"deadline submit report /by 2025-10-26 1800\").","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"DannyOnCode"},"content":"     * @return A confirmation message or an error.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"DannyOnCode"},"content":"    public String addDeadline(String input) {","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"DannyOnCode"},"content":"        try {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"DannyOnCode"},"content":"            String trimmedTask \u003d input.substring(9).trim();","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"DannyOnCode"},"content":"            String[] splitDeadline \u003d trimmedTask.split(\"/by\");","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"DannyOnCode"},"content":"            LocalDateTime byDate \u003d Parser.parseStringToDate(splitDeadline[1].trim());","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"DannyOnCode"},"content":"            if (byDate !\u003d null) {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"DannyOnCode"},"content":"                return addTask(new Deadlines(splitDeadline[0].trim(), byDate));","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"DannyOnCode"},"content":"            } else {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"DannyOnCode"},"content":"                return \"ERROR: Please follow the format yyyy-mm-dd HHmm and ensure the date is correct\";","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"DannyOnCode"},"content":"            }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"DannyOnCode"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"DannyOnCode"},"content":"            return \"ERROR: Please follow the format \\\"deadline [Task] /by [Due date]\\\"\";","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"DannyOnCode"},"content":"        }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"DannyOnCode"},"content":"     * Parses input to create and add an Event task.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"DannyOnCode"},"content":"     * @param input The command string (e.g., \"event team meeting /from 2025-10-26 1400 /to 2025-10-26 1500\").","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"DannyOnCode"},"content":"     * @return A confirmation message or an error.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"DannyOnCode"},"content":"    public String addEvent(String input) {","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"DannyOnCode"},"content":"        try {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"DannyOnCode"},"content":"            String trimmedTask \u003d input.substring(6).trim();","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"DannyOnCode"},"content":"            String[] splitEvent \u003d trimmedTask.split(\"/from\");","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"DannyOnCode"},"content":"            String[] splitDateRange \u003d splitEvent[1].split(\"/to\");","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"DannyOnCode"},"content":"            LocalDateTime fromDate \u003d Parser.parseStringToDate(splitDateRange[0].trim());","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"DannyOnCode"},"content":"            LocalDateTime toDate \u003d Parser.parseStringToDate(splitDateRange[1].trim());","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"DannyOnCode"},"content":"            if (fromDate !\u003d null \u0026\u0026 toDate !\u003d null) {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"DannyOnCode"},"content":"                return addTask(new Events(splitEvent[0].trim(), fromDate, toDate));","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"DannyOnCode"},"content":"            } else {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"DannyOnCode"},"content":"                return \"ERROR: Please follow the format yyyy-mm-dd HHmm and ensure the date is correct\";","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"DannyOnCode"},"content":"            }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"DannyOnCode"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"DannyOnCode"},"content":"            return \"ERROR: Please follow the format \\\"event [Task] \"","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"DannyOnCode"},"content":"                    + \"/from [Start date] /to [End date]\\\"\";","lastModifiedDate":"2025-09-12T19:21:52","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"DannyOnCode"},"content":"        }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T21:54:02","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"DannyOnCode"},"content":"     * Finds tasks containing a specific keyword and returns a list of them.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T21:54:02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"DannyOnCode"},"content":"     * @param input The user command (e.g., \"find report\").","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"DannyOnCode"},"content":"     * @return A string listing matching tasks or an error if the input is invalid.","lastModifiedDate":"2025-09-04T17:00:09","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T21:54:02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"DannyOnCode"},"content":"    public String getTasksWithKeyword(String input) {","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"DannyOnCode"},"content":"        try {","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"DannyOnCode"},"content":"            String trimmedKeyword \u003d input.substring(5).trim();","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"DannyOnCode"},"content":"            List\u003cTask\u003e filteredTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"DannyOnCode"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-08-28T22:00:22","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"DannyOnCode"},"content":"                if (task.containsKeyword(trimmedKeyword)) {","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"DannyOnCode"},"content":"                    filteredTask.add(task);","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"DannyOnCode"},"content":"                }","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"DannyOnCode"},"content":"            }","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"DannyOnCode"},"content":"            return ui.displayGivenList(filteredTask);","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"DannyOnCode"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"DannyOnCode"},"content":"            return \"ERROR: Please enter a valid keyword\";","lastModifiedDate":"2025-09-04T16:21:09","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"DannyOnCode"},"content":"        }","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:00","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-08-27T23:40:05","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":228}},{"path":"src/main/java/aura/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.task;","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":" * Represents a to-do task. A `ToDos` object corresponds to a task without any date/time attached.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"public class ToDos extends Task {","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs a new `ToDos` task.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"    public ToDos(String description) {","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"        super(description);","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"     * Constructs a `ToDos` task with a specific completion status.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"    public ToDos(String description, boolean isDone) {","lastModifiedDate":"2025-08-27T15:53:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-27T15:53:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T15:53:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T15:53:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"     * Returns the string representation of the task for saving to a file.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"     * @return A formatted string for file storage.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"    public String getSaveLineFormat() {","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"        return String.format(\"T|%s\\n\", super.getSaveLineFormat());","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-27T16:53:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DannyOnCode"},"content":"     * Returns the string representation of the task for display.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DannyOnCode"},"content":"     *","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DannyOnCode"},"content":"     * @return A formatted string for displaying to the user.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DannyOnCode"},"content":"    @Override","lastModifiedDate":"2025-08-20T12:05:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DannyOnCode"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DannyOnCode"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-08-20T11:32:03","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":44}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-04T15:22:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-09-04T15:22:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-09-04T15:22:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-09-04T15:22:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2025-09-04T15:22:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-09-04T15:22:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-09-04T15:22:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2025-09-04T15:22:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"aura.gui.MainWindow\"\u003e","lastModifiedDate":"2025-09-04T15:22:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-09-04T15:22:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-09-04T15:22:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-09-04T15:22:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-04T15:22:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-04T14:46:56","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":19}},{"path":"src/test/java/aura/task/DeadlinesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.task;","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":" * Test class for the Deadlines class.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"public class DeadlinesTest {","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"     * Tests the toString() method to ensure it formats the deadline details correctly","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"     * for display, including the 12-hour AM/PM time format.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"    public void toString_formatForDisplay_correctFormat() {","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2025, 8, 27, 18, 0); // 6:00 PM on Aug 27, 2025","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"        Deadlines deadline \u003d new Deadlines(\"Finish CS2103 IP\", dateTime);","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"        String expected \u003d \"[D][ ] Finish CS2103 IP (by Aug 27 2025, 6:00 pm)\";","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"     * Tests the getSaveLineFormat() method to ensure it formats the deadline details","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"     * correctly for saving to a file, including the 24-hour time format.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DannyOnCode"},"content":"    public void getSaveLineFormat_formatForSaving_correctFormat() {","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DannyOnCode"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2025, 8, 27, 18, 0); // 6:00 PM","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DannyOnCode"},"content":"        Deadlines deadline \u003d new Deadlines(\"Submit report\", dateTime);","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DannyOnCode"},"content":"        deadline.markAsDone();","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DannyOnCode"},"content":"        String expected \u003d \"D|Submit report|1|2025-08-27 1800\\n\";","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DannyOnCode"},"content":"        assertEquals(expected, deadline.getSaveLineFormat());","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DannyOnCode"},"content":"     * Tests the constructor that accepts a completion status to ensure the","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DannyOnCode"},"content":"     * object is created correctly with the status marked as done.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DannyOnCode"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DannyOnCode"},"content":"    public void constructor_withIsDoneTrue_taskIsMarkedAsDone() {","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DannyOnCode"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2025, 9, 1, 9, 30);","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DannyOnCode"},"content":"        Deadlines deadline \u003d new Deadlines(\"Project presentation\", true, dateTime);","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DannyOnCode"},"content":"        String expected \u003d \"[D][X] Project presentation (by Sep 01 2025, 9:30 am)\";","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DannyOnCode"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-08-28T12:46:46","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":57}},{"path":"src/test/java/aura/task/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"package aura.task;","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":"/**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":" * Test class for the ToDos class.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":" */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"public class ToDosTest {","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"     * Tests the toString() method to ensure it formats the to-do details correctly for display.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"    public void toString_formatForDisplay_correctFormat() {","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"        ToDos todo \u003d new ToDos(\"Submit CS2103 IP\");","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"        assertEquals(\"[T][ ] Submit CS2103 IP\", todo.toString());","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"     * Tests the getSaveLineFormat() method to ensure it formats the to-do details","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"     * correctly for saving to a file.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"    public void getSaveLineFormat_formatForSaving_correctFormat() {","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"        ToDos todo \u003d new ToDos(\"Shower\");","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DannyOnCode"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DannyOnCode"},"content":"        assertEquals(\"T|Shower|1\\n\", todo.getSaveLineFormat());","lastModifiedDate":"2025-09-03T23:35:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DannyOnCode"},"content":"    /**","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DannyOnCode"},"content":"     * Tests the constructor that accepts a completion status to ensure the","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DannyOnCode"},"content":"     * object is created correctly with the status marked as done.","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DannyOnCode"},"content":"     */","lastModifiedDate":"2025-08-28T20:23:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DannyOnCode"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DannyOnCode"},"content":"    public void constructor_withIsDoneTrue_taskIsMarkedAsDone() {","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DannyOnCode"},"content":"        ToDos todo \u003d new ToDos(\"Cry about CS2103\", true);","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DannyOnCode"},"content":"        assertEquals(\"[T][X] Cry about CS2103\", todo.toString());","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DannyOnCode"},"content":"    }","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DannyOnCode"},"content":"}","lastModifiedDate":"2025-08-28T12:46:36","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DannyOnCode"},"content":"todo study for final exam","lastModifiedDate":"2025-08-20T13:29:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DannyOnCode"},"content":"deadline CS2103 project /by 2025-10-30 2359","lastModifiedDate":"2025-08-27T21:14:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DannyOnCode"},"content":"event group meeting /from 2025-10-30 0200 /to 2035-05-22 2359","lastModifiedDate":"2025-08-27T21:14:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DannyOnCode"},"content":"todo prepare for presentation","lastModifiedDate":"2025-08-20T13:29:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DannyOnCode"},"content":"mark 1","lastModifiedDate":"2025-08-20T13:29:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DannyOnCode"},"content":"list","lastModifiedDate":"2025-08-20T13:29:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DannyOnCode"},"content":"unmark 1","lastModifiedDate":"2025-08-20T13:29:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DannyOnCode"},"content":"list","lastModifiedDate":"2025-08-20T13:29:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DannyOnCode"},"content":"delete 2","lastModifiedDate":"2025-08-20T14:26:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"delete 3","lastModifiedDate":"2025-08-20T14:26:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"list","lastModifiedDate":"2025-08-20T14:26:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DannyOnCode"},"content":"todo","lastModifiedDate":"2025-08-20T13:29:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DannyOnCode"},"content":"deadline","lastModifiedDate":"2025-08-20T13:29:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"event","lastModifiedDate":"2025-08-20T13:29:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DannyOnCode"},"content":"mark","lastModifiedDate":"2025-08-20T13:29:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DannyOnCode"},"content":"delete","lastModifiedDate":"2025-08-20T14:26:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DannyOnCode"},"content":"wrongcommand todo item","lastModifiedDate":"2025-08-20T13:29:27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DannyOnCode"},"content":"deadline finish homework /by","lastModifiedDate":"2025-08-20T13:29:27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"event concert /from /to","lastModifiedDate":"2025-08-20T13:29:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DannyOnCode"},"content":"mark abc","lastModifiedDate":"2025-08-20T13:29:27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DannyOnCode"},"content":"unmark 99","lastModifiedDate":"2025-08-20T13:29:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DannyOnCode"},"content":"unmark -1","lastModifiedDate":"2025-08-20T13:29:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DannyOnCode"},"content":"delete -49","lastModifiedDate":"2025-08-20T14:26:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DannyOnCode"},"content":"delete 12317","lastModifiedDate":"2025-08-20T14:26:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DannyOnCode"},"content":"delete hello","lastModifiedDate":"2025-08-20T14:26:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DannyOnCode"},"content":"delete 1","lastModifiedDate":"2025-08-27T21:14:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DannyOnCode"},"content":"delete 1","lastModifiedDate":"2025-08-27T21:14:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DannyOnCode"},"content":"list","lastModifiedDate":"2025-08-20T13:29:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DannyOnCode"},"content":"bye","lastModifiedDate":"2025-08-20T13:29:27","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":29}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DannyOnCode"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\aura\\*.java","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DannyOnCode"},"content":"","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DannyOnCode"},"content":"    exit /b 1D","lastModifiedDate":"2025-08-28T01:15:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DannyOnCode"},"content":"java -classpath ..\\bin Aura \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-20T13:29:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"DannyOnCode":4,"-":18}}]
