[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"## AI Usage Log","lastModifiedDate":"2025-09-16T21:58:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"- 19/09/25: Used GPT-5 to debug missing storage file issue.","lastModifiedDate":"2025-09-19T12:19:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"- 19/09/25: Used GPT-5 to add JavaDoc comments.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"- 19/09/25: Used GPT-5 to improve code quality by reformatting code.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"- 04/09/25: Used GPT-5 to suggest ideas for JUnit tests","lastModifiedDate":"2025-09-16T22:12:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"- 04/09/25: Used GPT-5 to improve CSS","lastModifiedDate":"2025-09-16T21:58:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"- 30/08/25: Used GPT-5 to generate JavaDoc comments","lastModifiedDate":"2025-09-16T21:58:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"- 28/08/25: Used GPT-5 to generate ideas on how to improve my use of OOP","lastModifiedDate":"2025-09-16T21:58:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-16T21:58:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"## Problems Encountered","lastModifiedDate":"2025-09-16T21:58:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"- 19/09/25: The generated JavaDoc comments did not follow the Java coding standards, so tweaking was necessary.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"- 30/08/25: The JavaDoc comments did not follow the Java coding standards, so I had to tweak the comments generated.","lastModifiedDate":"2025-09-16T21:58:46","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":12}},{"path":"CONTRIBUTORS.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributors","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"| Display                                                      |        Name         |            Github Profile             |                      Homepage                      |","lastModifiedDate":"2025-08-21T00:22:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"| ------------------------------------------------------------ | :-----------------: | :-----------------------------------: | :------------------------------------------------: |","lastModifiedDate":"2025-08-21T00:22:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"| ![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) |     Jeffry Lum      |  [Github](https://github.com/j-lum/)  |        [Homepage](https://se.kasugano.moe)         |","lastModifiedDate":"2025-08-21T00:22:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"| ![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100)  | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/) |","lastModifiedDate":"2025-08-21T00:22:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-21T00:22:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"# I would like to join this list. How can I help the project","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/).","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":5,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"checkstyle {","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kimberlee97"},"content":"    mainClass.set(\"lumi.ui.Launcher\")","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kimberlee97"},"content":"    archiveBaseName \u003d \"lumi\"","lastModifiedDate":"2025-08-29T16:27:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":22,"-":39}},{"path":"data/bob.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":1}},{"path":"data/lumi.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"[T][X] SEP research","lastModifiedDate":"2025-09-19T11:42:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"[T][ ] research","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"[T][ ] homeowrk","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"[D][ ] homework|By: 01 01 2026 16:00","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"# Lumi User Guide","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"![Screenshot of the Lumi app](Ui.png)","lastModifiedDate":"2025-09-19T15:50:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"LUMI (˶ˆᗜˆ˵) is a one-of-a-kind chatbot to help you manage your tasks.","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"It supports **todo**, **event** and **deadline** tasks, plus find, mark/unmark and delete!","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"## Viewing list","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"Prints out the list of tasks.","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"**Command**","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"`list`","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"**Example \u0026 Expected Output**","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"Returns the list of tasks in the order they were added.  ","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"Each task is shown with its type, status, and details.","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"Expected output:","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"```","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"1.[T][ ] buy milk","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"2.[D][ ] CS2101 presentation|By: 15 10 2025, 10:00","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"3.[E][X] CS2100 lab|From: 15 10 2025, 15:00|To: 15 10 2025, 17:00","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"```","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"Creates a deadline task.","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"**Command**","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kimberlee97"},"content":"`deadline \u003ctask description\u003e /by \u003cdate and time\u003e`","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kimberlee97"},"content":"**Supported DateTime Formats**","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kimberlee97"},"content":"1. dd MM yyyy HH:mm","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kimberlee97"},"content":"2. dd/MM/yyyy HH:mm","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kimberlee97"},"content":"**Example \u0026 Expected Output**","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kimberlee97"},"content":"If the task is added successfully, it will appear in the task list","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kimberlee97"},"content":"as an unmarked deadline task, and a success message will be returned.","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kimberlee97"},"content":"Example: `deadline homework /by 01/01/2026 16:00`","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kimberlee97"},"content":"Expected output:","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kimberlee97"},"content":"```","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kimberlee97"},"content":"Task Added: [D][ ] homework|By: 01 01 2026 16:00","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kimberlee97"},"content":"```","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kimberlee97"},"content":"## Adding events","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kimberlee97"},"content":"Creates an event task.","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kimberlee97"},"content":"**Command**","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kimberlee97"},"content":"`event \u003ctask description\u003e /from \u003cdate and time\u003e /to \u003cdate and time\u003e`","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kimberlee97"},"content":"**Supported DateTime Formats**","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kimberlee97"},"content":"1. dd MM yyyy HH:mm","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kimberlee97"},"content":"2. dd/MM/yyyy HH:mm","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kimberlee97"},"content":"**Example \u0026 Expected Output**","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kimberlee97"},"content":"If the task is added successfully, it will appear in the task list","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kimberlee97"},"content":"as an unmarked event task, and a success message will be returned.","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kimberlee97"},"content":"Example: `event party /from 01/01/2026 16:00 /to 01/01/2026 17:00`","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kimberlee97"},"content":"Expected output:","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kimberlee97"},"content":"Task Added: [E][ ] party|From: 01 01 2026 16:00|To: 01 01 2026 17:00","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kimberlee97"},"content":"## Adding todo","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kimberlee97"},"content":"Creates a todo task.","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kimberlee97"},"content":"**Command**","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kimberlee97"},"content":"`todo \u003cdescription\u003e`","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kimberlee97"},"content":"**Example \u0026 Expected Output**","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kimberlee97"},"content":"If the task is added successfully, it will appear in the task list","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kimberlee97"},"content":"as an unmarked todo task, and a success message will be returned.","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kimberlee97"},"content":"Example: `todo homework`","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kimberlee97"},"content":"Expected output:","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kimberlee97"},"content":"```","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kimberlee97"},"content":"Task Added: [T][ ] homework","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kimberlee97"},"content":"```","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kimberlee97"},"content":"## Deleting tasks","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kimberlee97"},"content":"Deletes the task at the given index.","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kimberlee97"},"content":"**Command**","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kimberlee97"},"content":"`delete \u003cindex\u003e`","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kimberlee97"},"content":"**Example \u0026 Expected Output**","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kimberlee97"},"content":"If the deletion is successful, the task will no longer appear in the task list","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Kimberlee97"},"content":"and a success message will be returned.","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Kimberlee97"},"content":"Example: `delete 1`","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Kimberlee97"},"content":"Expected output:","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Kimberlee97"},"content":"```","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Kimberlee97"},"content":"This task has been deleted: \u003ctask description\u003e","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Kimberlee97"},"content":"```","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Kimberlee97"},"content":"## Finding tasks","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Kimberlee97"},"content":"Finds a task containing the given keyword.","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Kimberlee97"},"content":"**Command**","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Kimberlee97"},"content":"`find \u003ckeyword\u003e`","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Kimberlee97"},"content":"**Example \u0026 Expected Output**","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Kimberlee97"},"content":"Tasks containing the given keyword will be printed. Otherwise, the message","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Kimberlee97"},"content":"`I couldn\u0027t find any matching tasks :\u003c` will be returned.","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Kimberlee97"},"content":"Example: `find i`","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Kimberlee97"},"content":"Expected output:","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Kimberlee97"},"content":"```","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Kimberlee97"},"content":"Here\u0027s the tasks I found \u003e\u003c","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Kimberlee97"},"content":"[T][ ] assignment","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Kimberlee97"},"content":"```","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Kimberlee97"},"content":"## Marking tasks","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Kimberlee97"},"content":"Marks the task at the given index as done.","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Kimberlee97"},"content":"**Command**","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Kimberlee97"},"content":"`mark \u003cindex\u003e`","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Kimberlee97"},"content":"**Example \u0026 Expected Output**","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Kimberlee97"},"content":"If the task is not already marked as done, a success message will be returned and","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Kimberlee97"},"content":"the task will be marked as done. Otherwise, the message `This task has already been","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Kimberlee97"},"content":"marked done` will be returned.","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Kimberlee97"},"content":"Example: `mark 1`","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Kimberlee97"},"content":"Expected output:","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Kimberlee97"},"content":"Yay! I\u0027ve marked your task as done: [T][X] homework","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Kimberlee97"},"content":"## Unmarking tasks","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Kimberlee97"},"content":"Unmarks the task at the given index.","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Kimberlee97"},"content":"**Command**","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Kimberlee97"},"content":"`unmark \u003cindex\u003e`","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Kimberlee97"},"content":"**Example \u0026 Expected Output**","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Kimberlee97"},"content":"If the task is marked as done, a success message will be returned and","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Kimberlee97"},"content":"the task will be unmarked. Otherwise, the message `This task has already been","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Kimberlee97"},"content":"marked undone` will be returned.","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Kimberlee97"},"content":"Example: `unmark 1`","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Kimberlee97"},"content":"Expected output:","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Kimberlee97"},"content":"```","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Kimberlee97"},"content":"Oki, I\u0027ve marked your task undone: [T][ ] homework","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Kimberlee97"},"content":"```","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Kimberlee97"},"content":"## Getting help","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Kimberlee97"},"content":"Returns a list of command descriptions.","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Kimberlee97"},"content":"**Command**","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Kimberlee97"},"content":"`help`","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Kimberlee97"},"content":"# Resources","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Kimberlee97"},"content":"**Pink Jellyfish Icon:**","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Kimberlee97"},"content":"https://pin.it/1mbvEZdY8","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Kimberlee97"},"content":"**Blue Jellyfish Icon:**","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Kimberlee97"},"content":"https://pin.it/1mbvEZdY8","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Kimberlee97"},"content":"**Beach Background Image:**","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Kimberlee97"},"content":"https://pin.it/4hGIHKhPt","lastModifiedDate":"2025-09-19T11:34:11","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":171,"-":25}},{"path":"src/main/java/lumi/Lumi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi;","lastModifiedDate":"2025-08-29T16:27:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-09-19T13:48:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"import lumi.exceptions.LumiException;","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"import lumi.storage.Storage;","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"import lumi.tasks.Task;","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"import lumi.tasks.TaskList;","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"import lumi.ui.Dialogue;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":" * The main controller for the Lumi task manager chatbot.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":" * This class facilitates interactions between the user and the chatbot through command-line commands.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"public class Lumi {","lastModifiedDate":"2025-08-18T17:06:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"    private static final String DEFAULT_FILE_PATH \u003d \"./data/lumi.txt\";","lastModifiedDate":"2025-09-05T09:48:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"    private Dialogue dialogue;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-18T17:06:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-05T09:48:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"     * Creates a {@code Lumi} instance using the default file path.","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-05T09:48:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"    public Lumi() {","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"        this.dialogue \u003d new Dialogue();","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"        this.storage \u003d new Storage(DEFAULT_FILE_PATH);","lastModifiedDate":"2025-09-05T09:48:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"        loadTasksOrInitializeEmpty();","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-05T09:48:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"     * Parses and executes a user command, returning a user-facing message.","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"     * Any {@link LumiException} raised during handling is converted into a","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kimberlee97"},"content":"     * message and returned to the caller.","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kimberlee97"},"content":"     *","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kimberlee97"},"content":"     * @param input The raw user input.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kimberlee97"},"content":"     * @return The user-facing message describing the effect or error.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-05T09:48:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kimberlee97"},"content":"    public String processInput(String input) {","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kimberlee97"},"content":"        try {","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kimberlee97"},"content":"            if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kimberlee97"},"content":"                throw new LumiException(\"Please type a command.\");","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kimberlee97"},"content":"            String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-09-11T16:40:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kimberlee97"},"content":"            String command \u003d parts[0];","lastModifiedDate":"2025-09-11T16:40:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kimberlee97"},"content":"            String args \u003d (parts.length \u003e 1) ? parts[1].trim() : \"\";","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kimberlee97"},"content":"            String output \u003d routeCommand(command, args);","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kimberlee97"},"content":"            persistIfChanged(command);","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kimberlee97"},"content":"            return output;","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kimberlee97"},"content":"        } catch (LumiException e) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kimberlee97"},"content":"            return e.getMessage();","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-18T17:25:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kimberlee97"},"content":"     * Routes a parsed command to its specific handler.","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kimberlee97"},"content":"     *","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kimberlee97"},"content":"     * @param command The command.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kimberlee97"},"content":"     * @param args The remainder of the user input.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kimberlee97"},"content":"     * @return The user-facing message.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the command is invalid or arguments are missing.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kimberlee97"},"content":"    private String routeCommand(String command, String args) throws LumiException {","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kimberlee97"},"content":"        return switch (command) {","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kimberlee97"},"content":"            case \"bye\" -\u003e handleBye();","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kimberlee97"},"content":"            case \"help\" -\u003e handleHelp();","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kimberlee97"},"content":"            case \"list\" -\u003e handleList();","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kimberlee97"},"content":"            case \"delete\" -\u003e handleDelete(args);","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kimberlee97"},"content":"            case \"find\" -\u003e handleFind(args);","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kimberlee97"},"content":"            case \"mark\", \"unmark\" -\u003e handleMarkUnmark(command, args);","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kimberlee97"},"content":"            case \"todo\", \"event\", \"deadline\" -\u003e handleAdd(command, args);","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kimberlee97"},"content":"            default -\u003e throw new LumiException(\"Sorry! I\u0027m not sure what you mean \u003e\u003c\");","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kimberlee97"},"content":"        };","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kimberlee97"},"content":"     * Handles the {@code bye} command.","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kimberlee97"},"content":"     *","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kimberlee97"},"content":"     * @return The farewell message.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kimberlee97"},"content":"    private String handleBye() {","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kimberlee97"},"content":"        String message \u003d dialogue.sendGoodbye();","lastModifiedDate":"2025-09-19T13:48:15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kimberlee97"},"content":"        Platform.exit();","lastModifiedDate":"2025-09-19T13:48:15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kimberlee97"},"content":"        return message;","lastModifiedDate":"2025-09-19T13:48:15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kimberlee97"},"content":"     * Handles the {@code help} command.","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kimberlee97"},"content":"     *","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kimberlee97"},"content":"     * @return The help dialogue.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kimberlee97"},"content":"    private String handleHelp() {","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kimberlee97"},"content":"        return dialogue.showHelpDialogue();","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kimberlee97"},"content":"     * Handles the {@code list} command.","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kimberlee97"},"content":"     *","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kimberlee97"},"content":"     * @return The formatted list of tasks or an empty message.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kimberlee97"},"content":"    private String handleList() {","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kimberlee97"},"content":"        return tasks.printList();","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Kimberlee97"},"content":"     * Handles the {@code find} command.","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Kimberlee97"},"content":"     *","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Kimberlee97"},"content":"     * @param args The keywords to search for.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Kimberlee97"},"content":"     * @return The matching tasks, if any.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If {@code args} are missing.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Kimberlee97"},"content":"    private String handleFind(String args) throws LumiException {","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Kimberlee97"},"content":"        ensureArgsProvided(args, \"Please provide all the necessary details\");","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Kimberlee97"},"content":"        return tasks.find(args);","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Kimberlee97"},"content":"     * Handles the {@code todo}/{@code event}/{@code deadline} commands.","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Kimberlee97"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Kimberlee97"},"content":"     * Reconstructs the original input so the {@link TaskList} parser","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Kimberlee97"},"content":"     * can determine the exact task subtype and validate its fields.","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Kimberlee97"},"content":"     *","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Kimberlee97"},"content":"     * @param command The command.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Kimberlee97"},"content":"     * @param args The remainder of the user input.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Kimberlee97"},"content":"     * @return The confirmation message upon successful add.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the task cannot be created.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Kimberlee97"},"content":"    private String handleAdd(String command, String args) throws LumiException {","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Kimberlee97"},"content":"        String raw \u003d command + (args.isEmpty() ? \"\" : \" \" + args);","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Kimberlee97"},"content":"        return tasks.add(raw);","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Kimberlee97"},"content":"     * Handles the {@code delete} command (1-based index in UI).","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Kimberlee97"},"content":"     *","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Kimberlee97"},"content":"     * @param args The user-supplied index.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Kimberlee97"},"content":"     * @return The confirmation message upon successful deletion.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the index is invalid or missing.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Kimberlee97"},"content":"    private String handleDelete(String args) throws LumiException {","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Kimberlee97"},"content":"        ensureArgsProvided(args, \"Please provide all the necessary details\");","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Kimberlee97"},"content":"        Task removed \u003d tasks.delete(args); // TaskList handles index parsing/validation","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Kimberlee97"},"content":"        return dialogue.printDeleteMessage(removed);","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Kimberlee97"},"content":"     * Handles the {@code mark}/{@code unmark} commands (1-based index in UI).","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Kimberlee97"},"content":"     *","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Kimberlee97"},"content":"     * @param command Either {@code \"mark\"} or {@code \"unmark\"}.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Kimberlee97"},"content":"     * @param args The user-supplied index.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Kimberlee97"},"content":"     * @return A confirmation message if successful.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the index is invalid or missing.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Kimberlee97"},"content":"    private String handleMarkUnmark(String command, String args) throws LumiException {","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Kimberlee97"},"content":"        ensureArgsProvided(args, \"Please provide a task number\");","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Kimberlee97"},"content":"        try {","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Kimberlee97"},"content":"            int index \u003d Integer.parseInt(args) - 1;","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Kimberlee97"},"content":"            if (index \u003c 0 || index \u003e\u003d tasks.getList().size()) {","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Kimberlee97"},"content":"                throw new LumiException(\"Please add a valid task number\");","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Kimberlee97"},"content":"            Task t \u003d tasks.getList().get(index);","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Kimberlee97"},"content":"            Task updated \u003d \"unmark\".equals(command) ? t.unmark() : t.mark();","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Kimberlee97"},"content":"            return \"unmark\".equals(command)","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Kimberlee97"},"content":"                    ? dialogue.printUnmarkMessage(updated)","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Kimberlee97"},"content":"                    : dialogue.printMarkMessage(updated);","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Kimberlee97"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(\"Please enter a number after mark / unmark\");","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Kimberlee97"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(\"Please add a valid task number\");","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Kimberlee97"},"content":"     * Loads tasks from storage; if loading fails, initializes an empty list and","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Kimberlee97"},"content":"     * shows a loading error via {@link Dialogue}.","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Kimberlee97"},"content":"    private void loadTasksOrInitializeEmpty() {","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Kimberlee97"},"content":"        try {","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Kimberlee97"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Kimberlee97"},"content":"        } catch (IOException | LumiException e) {","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Kimberlee97"},"content":"            new Dialogue().showLoadingError(e);","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Kimberlee97"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Kimberlee97"},"content":"     * Ensures that a command that requires arguments actually received them.","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Kimberlee97"},"content":"     *","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Kimberlee97"},"content":"     * @param args The argument string.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Kimberlee97"},"content":"     * @param message The error message to show if missing.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If no arguments were provided.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Kimberlee97"},"content":"    private void ensureArgsProvided(String args, String message) throws LumiException {","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Kimberlee97"},"content":"        if (args \u003d\u003d null || args.isEmpty()) {","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(message);","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Kimberlee97"},"content":"     * Persists the current state of the task list to disk for mutating commands.","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Kimberlee97"},"content":"     *","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Kimberlee97"},"content":"     * @param command The executed command.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If saving fails.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Kimberlee97"},"content":"    private void persistIfChanged(String command) throws LumiException {","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Kimberlee97"},"content":"        if (command.equals(\"todo\")","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Kimberlee97"},"content":"                || command.equals(\"event\")","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Kimberlee97"},"content":"                || command.equals(\"deadline\")","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Kimberlee97"},"content":"                || command.equals(\"delete\")","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Kimberlee97"},"content":"                || command.equals(\"mark\")","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Kimberlee97"},"content":"                || command.equals(\"unmark\")) {","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Kimberlee97"},"content":"            try {","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Kimberlee97"},"content":"                storage.updateFile();","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Kimberlee97"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Kimberlee97"},"content":"                throw new LumiException(\"I couldn\u0027t save your tasks. Please try again.\");","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-09-19T01:39:29","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Kimberlee97"},"content":"     * Calls processInput(input).","lastModifiedDate":"2025-09-05T09:48:48","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Kimberlee97"},"content":"     * @param input","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Kimberlee97"},"content":"     * @return The output string.","lastModifiedDate":"2025-09-05T09:48:48","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Kimberlee97"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Kimberlee97"},"content":"        return processInput(input);","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":230,"-":2}},{"path":"src/main/java/lumi/exceptions/LumiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.exceptions;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":" * This class represents an exception specific to the Lumi application.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":" * This exception is thrown when Lumi encounters an error related to","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":" * invalid input, storage issues, or other application specific problems.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":" * It extends {@link Exception}.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"public class LumiException extends Exception {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"     * Constructs a new LumiException with the specified message.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"     * @param message The message that describes the nature of the exception.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"    public LumiException(String message) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"        super(message);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":17}},{"path":"src/main/java/lumi/parsers/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.parsers;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":" * Utility class for parsing and formatting date-time strings used in Lumi.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":" * This class accepts multiple date formats and provides a standard output format","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":" * for consistency across the application.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"public class DateTimeParser {","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"    /** The accepted input formats */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"    private static final DateTimeFormatter[] ACCEPTED_FORMATS \u003d {","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"            DateTimeFormatter.ofPattern(\"dd MM yyyy HH:mm\"),","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\")","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"    };","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"    /** The standard output format */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"    private static final DateTimeFormatter RETURN_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy HH:mm\");","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"     * Parses the given string into a {@link LocalDateTime} format and returns the {@link LocalDateTime}","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"     * @param dateTime The string to be parsed.","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"     * @return The parsed {@link LocalDateTime}.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"     * @throws DateTimeParseException If the string is not in an accepted format.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"    public static LocalDateTime parseDate(String dateTime) throws DateTimeParseException {","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"        for (DateTimeFormatter format : ACCEPTED_FORMATS) {","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"            try {","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"                return LocalDateTime.parse(dateTime.trim(), format);","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"                // Failed to parse with this format, try another one","lastModifiedDate":"2025-09-11T16:40:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kimberlee97"},"content":"        throw new DateTimeParseException(\"Please enter a date in the correct format\", dateTime, 0);","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kimberlee97"},"content":"     * Returns the given {@link LocalDateTime} in the standard output format.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kimberlee97"},"content":"     * @param dateTimeLocal The {@Link LocalDateTime} to be formatted in the standard output format.","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kimberlee97"},"content":"     * @return A formatted date-time string in {@code dd MM yyyy HH:mm} format.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kimberlee97"},"content":"    public static String format(LocalDateTime dateTimeLocal) {","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kimberlee97"},"content":"        return dateTimeLocal.format(RETURN_FORMAT);","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":46}},{"path":"src/main/java/lumi/parsers/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.parsers;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import lumi.exceptions.LumiException;","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"import lumi.tasks.Deadline;","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"import lumi.tasks.Event;","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"import lumi.tasks.Task;","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"import lumi.tasks.Todo;","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":" * Utility class for parsing raw user input into {@link Task} objects.","lastModifiedDate":"2025-09-16T23:54:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":" * The {@code Parser} analyzes the command string and determines the correct task type to instantiate.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":" * If no suitable task types are found, a LumiException will be thrown.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"     * Parses the given input string and creates the corresponding Task.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"     * @param desc The raw input given by the user.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"     * @return The parsed {@link Task}.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the input is malformed or does not match a valid command.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"    public static Task parse(String desc) throws LumiException {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"        String[] taskParts \u003d desc.split(\" \", 2);","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"        if (taskParts.length \u003c\u003d 1) {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(\"Please add a task in the format: todo \u003ctask\u003e\\n\"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"                    + \"deadline \u003ctask\u003e /by \u003cdd/MM/yyyy or dd MM yyyy HH:mm\u003e\\n\"","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"                    + \"event \u003ctask\u003e /from \u003cdd/MM/yyyy HH:mm or dd MM yyyy HH:mm\u003e \"","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"                    + \"/to \u003cdd/MM/yyyy HH:mm or dd MM yyyy HH:mm\");","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"        } else {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"            Task task \u003d null;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"            switch (taskParts[0]) {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"            case \"todo\":","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"                task \u003d new Todo(taskParts[1]);","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"                return task;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kimberlee97"},"content":"            case \"deadline\":","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kimberlee97"},"content":"                task \u003d new Deadline(taskParts[1]);","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kimberlee97"},"content":"                return task;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kimberlee97"},"content":"            case \"event\":","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kimberlee97"},"content":"                task \u003d new Event(taskParts[1]);","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kimberlee97"},"content":"                return task;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kimberlee97"},"content":"            default:","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kimberlee97"},"content":"                throw new LumiException(\"Oh no! \u003e.\u003c\\nI\u0027m not sure what this is, please try again!\");","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":45}},{"path":"src/main/java/lumi/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.storage;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import java.io.File;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"import java.util.List;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"import lumi.exceptions.LumiException;","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"import lumi.parsers.Parser;","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"import lumi.tasks.Task;","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":" * This class handles storage of {@Link Task} objects.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":" * The Storage class is responsible for loading a date in a given file into a {@Link TaskList}","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":" * and updating the file.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"public class Storage {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"    /** The path to the textfile used for storage */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"    private final String filePath;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"    private List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"     * Creates a new {@Link Storage} object associated with the given file path.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"     * @param filePath The path to the text file used for storage.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kimberlee97"},"content":"     * Loads all tasks from the file into a list of tasks.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kimberlee97"},"content":"     * If the file does not exist, a new file is created.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kimberlee97"},"content":"     * If a line is invalid, it will be ignored.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kimberlee97"},"content":"     * @return A {@Link List\u003cTask\u003e} containing the tasks read from the file.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kimberlee97"},"content":"     * @throws IOException If there is an error creating or reading the file.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the task line cannot be parsed correctly.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kimberlee97"},"content":"    public List\u003cTask\u003e load() throws IOException, LumiException {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kimberlee97"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kimberlee97"},"content":"        ensureFileExists(file);","lastModifiedDate":"2025-09-19T12:19:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T12:19:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kimberlee97"},"content":"        int errorCount \u003d 0;","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kimberlee97"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-09-19T12:19:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kimberlee97"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kimberlee97"},"content":"                try {","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kimberlee97"},"content":"                    Task task \u003d convertStringToTask(scanner.nextLine());","lastModifiedDate":"2025-09-19T12:19:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kimberlee97"},"content":"                    this.list.add(task);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kimberlee97"},"content":"                } catch (LumiException e) {","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kimberlee97"},"content":"                    errorCount++;","lastModifiedDate":"2025-09-19T12:19:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kimberlee97"},"content":"                }","lastModifiedDate":"2025-09-19T12:19:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kimberlee97"},"content":"        System.out.println(\"Number of invalid lines ignored: \" + errorCount);","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kimberlee97"},"content":"        return list;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-19T12:19:38","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kimberlee97"},"content":"     * Ensures that the storage file and its parent directory exists.","lastModifiedDate":"2025-09-19T12:19:38","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kimberlee97"},"content":"     * @param file The storage file.","lastModifiedDate":"2025-09-19T12:19:38","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kimberlee97"},"content":"     * @throws IOException","lastModifiedDate":"2025-09-19T12:19:38","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-19T12:19:38","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kimberlee97"},"content":"    private void ensureFileExists(File file) throws IOException {","lastModifiedDate":"2025-09-19T12:19:38","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kimberlee97"},"content":"        File parentDir \u003d file.getParentFile();","lastModifiedDate":"2025-09-19T12:19:38","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kimberlee97"},"content":"        if (parentDir !\u003d null \u0026\u0026 !parentDir.exists()) {","lastModifiedDate":"2025-09-19T12:19:38","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kimberlee97"},"content":"            parentDir.mkdirs();","lastModifiedDate":"2025-09-19T12:19:38","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-09-19T12:19:38","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kimberlee97"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-09-19T12:19:38","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kimberlee97"},"content":"            file.createNewFile();","lastModifiedDate":"2025-09-19T12:19:38","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-09-19T12:19:38","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-19T12:19:38","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T12:19:38","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kimberlee97"},"content":"     * Converts a raw string into a {@Link Task} object.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kimberlee97"},"content":"     * @param string The raw task string from the file.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kimberlee97"},"content":"     * @return The corresponding {@Link Task} object.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the string cannot be parsed into a {@Link Task}.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kimberlee97"},"content":"    private static Task convertStringToTask(String string) throws LumiException {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kimberlee97"},"content":"        try {","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kimberlee97"},"content":"            String[] taskParts \u003d string.split(\"[\\\\[\\\\]]+\");","lastModifiedDate":"2025-09-06T10:40:15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kimberlee97"},"content":"            String type \u003d \"[\" + taskParts[1] + \"]\";","lastModifiedDate":"2025-09-06T10:40:15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kimberlee97"},"content":"            String status \u003d \"[\" + taskParts[2] + \"]\";","lastModifiedDate":"2025-09-06T10:40:15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kimberlee97"},"content":"            String desc \u003d taskParts[3];","lastModifiedDate":"2025-09-06T10:40:15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kimberlee97"},"content":"            String typeInput;","lastModifiedDate":"2025-09-11T17:20:50","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kimberlee97"},"content":"            boolean isDone;","lastModifiedDate":"2025-09-11T17:20:50","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kimberlee97"},"content":"            switch (type) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kimberlee97"},"content":"            case \"[T]\":","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kimberlee97"},"content":"                typeInput \u003d \"todo\";","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kimberlee97"},"content":"                break;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kimberlee97"},"content":"            case \"[D]\":","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kimberlee97"},"content":"                typeInput \u003d \"deadline\";","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kimberlee97"},"content":"                break;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kimberlee97"},"content":"            case \"[E]\":","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kimberlee97"},"content":"                typeInput \u003d \"event\";","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kimberlee97"},"content":"                break;","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kimberlee97"},"content":"            default:","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kimberlee97"},"content":"                throw new LumiException(\"Invalid label!\");","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kimberlee97"},"content":"            switch (status) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kimberlee97"},"content":"            case \"[X]\":","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kimberlee97"},"content":"                isDone \u003d true;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Kimberlee97"},"content":"                break;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Kimberlee97"},"content":"            case \"[ ]\":","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Kimberlee97"},"content":"                isDone \u003d false;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Kimberlee97"},"content":"                break;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Kimberlee97"},"content":"            default:","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Kimberlee97"},"content":"                throw new LumiException(\"Invalid status!\");","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Kimberlee97"},"content":"            String input \u003d typeInput + \" \" + desc;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Kimberlee97"},"content":"            Task task \u003d Parser.parse(input);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Kimberlee97"},"content":"            if (isDone) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Kimberlee97"},"content":"                task.mark();","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Kimberlee97"},"content":"            return task;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Kimberlee97"},"content":"        } catch (LumiException | RuntimeException e) {","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(e.getMessage());","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Kimberlee97"},"content":"     * Writes the current list of tasks back into the storage file.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Kimberlee97"},"content":"     * @throws IOException If the file cannot be opened or written to.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the file cannot be updated.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Kimberlee97"},"content":"    public void updateFile() throws LumiException {","lastModifiedDate":"2025-09-16T22:12:20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Kimberlee97"},"content":"        try {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Kimberlee97"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Kimberlee97"},"content":"            for (Task task : this.list) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Kimberlee97"},"content":"                fw.write(task.toString());","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Kimberlee97"},"content":"                fw.write(\"\\n\");","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Kimberlee97"},"content":"            fw.close();","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Kimberlee97"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(\"Unable to update your file, sorry!\");","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Kimberlee97"},"content":"        System.out.println(\"Your file has been updated \u003e.\u003c\");","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":143}},{"path":"src/main/java/lumi/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.tasks;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"import lumi.exceptions.LumiException;","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"import lumi.parsers.DateTimeParser;","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":" * This class represents a {@code Deadline} task that has a description and the associated due date and times.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":" * The input string is validated and parsed into a {@link LocalDateTime} using {@link DateTimeParser}.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":" * If the input is malformed, a {@link LumiException} is thrown.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"    private final String desc;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"     * Constructs a {@code Deadline} from the given user input string.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"     * @param desc User input containing the task description and the deadline.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the input string is unable to be parsed successfully.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"    public Deadline(String desc) throws LumiException {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"        super(TaskType.DEADLINE);","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"        assert desc !\u003d null : \"The description must not be null\";","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"        assert !desc.trim().isEmpty() : \"The description must not be empty\";","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"        this.desc \u003d parseAndFormat(desc);","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"     * Validates and parses the input string into a formatted deadline description.","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"     *","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"     * @param desc User input containing description and deadline.","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"     * @return A formatted description string with the parsed deadline.","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If input is invalid or the deadline cannot be parsed.","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kimberlee97"},"content":"    private String parseAndFormat(String desc) throws LumiException {","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kimberlee97"},"content":"        validateNotEmpty(desc);","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kimberlee97"},"content":"        String[] parts \u003d splitInput(desc);","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kimberlee97"},"content":"        validateParts(parts);","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kimberlee97"},"content":"        return formatDeadline(parts[0], parts[1]);","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kimberlee97"},"content":"     * Ensures the task description is not null or empty.","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kimberlee97"},"content":"     *","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kimberlee97"},"content":"     * @param desc The input string to check.","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the description is empty or null.","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kimberlee97"},"content":"    private void validateNotEmpty(String desc) throws LumiException {","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kimberlee97"},"content":"        if (desc \u003d\u003d null || desc.trim().isEmpty()) {","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(\"The task description should not be empty\");","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kimberlee97"},"content":"     * Splits the user input into description and deadline parts.","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kimberlee97"},"content":"     *","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kimberlee97"},"content":"     * @param desc The input string containing task details.","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kimberlee97"},"content":"     * @return A string array with two parts: description and deadline.","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the input cannot be split into valid parts.","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kimberlee97"},"content":"    private String[] splitInput(String desc) throws LumiException {","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kimberlee97"},"content":"        String[] parts \u003d desc.split(\"/by |\\\\|By: \");","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kimberlee97"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(\"Please add the full details!\");","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kimberlee97"},"content":"        return parts;","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kimberlee97"},"content":"     * Validates that both description and deadline parts are non-empty.","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kimberlee97"},"content":"     *","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kimberlee97"},"content":"     * @param parts The string array containing description and deadline.","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If either part is empty.","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kimberlee97"},"content":"    private void validateParts(String[] parts) throws LumiException {","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kimberlee97"},"content":"        if (parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kimberlee97"},"content":"                    \"Please enter a deadline task in the format: deadline \u003ctask\u003e /by \u003cdeadline\u003e\"","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kimberlee97"},"content":"            );","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-11T16:40:39","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kimberlee97"},"content":"     * Parses and formats the deadline part into a standardized format.","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kimberlee97"},"content":"     *","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kimberlee97"},"content":"     * @param task The task description.","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kimberlee97"},"content":"     * @param deadline The deadline string to be parsed.","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kimberlee97"},"content":"     * @return A formatted task string including the deadline.","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the deadline cannot be parsed into a {@link LocalDateTime}.","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kimberlee97"},"content":"    private String formatDeadline(String task, String deadline) throws LumiException {","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kimberlee97"},"content":"        try {","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kimberlee97"},"content":"            LocalDateTime dateTime \u003d DateTimeParser.parseDate(deadline.trim());","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kimberlee97"},"content":"            assert dateTime !\u003d null : \"Date time should not be null\";","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kimberlee97"},"content":"            return task.trim() + \"|By: \" + DateTimeParser.format(dateTime);","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kimberlee97"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(e.getMessage());","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kimberlee97"},"content":"    @Override","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kimberlee97"},"content":"    public String toString() {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kimberlee97"},"content":"        return super.toString() + desc;","lastModifiedDate":"2025-09-10T16:47:21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":108}},{"path":"src/main/java/lumi/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.tasks;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"import lumi.exceptions.LumiException;","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"import lumi.parsers.DateTimeParser;","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":" * This class represents a {@code Event} task that has a description and associated start and end dates and times.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":" * The input string is validated and parsed into a {@link LocalDateTime} using {@link DateTimeParser}.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":" * If the input is malformed, a {@link LumiException} is thrown.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"    private final String desc;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"     * Constructs an {@link Event} task from the given user input string.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"     * @param desc User input containing the task description and the event duration.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the input string is unable to be parsed successfully.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"    public Event(String desc) throws LumiException {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"        super(TaskType.EVENT);","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"        assert desc !\u003d null : \"The description must not be null\";","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"        assert !desc.trim().isEmpty() : \"The description must not be empty\";","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"        this.desc \u003d parseAndFormat(desc);","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-16T23:54:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"     * Validates and parses the input string into a formatted event description.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"     *","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"     * @param desc User input containing description and event details.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kimberlee97"},"content":"     * @return A formatted description string with the parsed event.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If input is invalid or the event cannot be parsed.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kimberlee97"},"content":"    private String parseAndFormat(String desc) throws LumiException {","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kimberlee97"},"content":"        validateNotEmpty(desc);","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kimberlee97"},"content":"        String[] parts \u003d splitInput(desc);","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kimberlee97"},"content":"        validateParts(parts);","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kimberlee97"},"content":"        return formatEvent(parts);","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kimberlee97"},"content":"     * Splits the user input into description and event parts.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kimberlee97"},"content":"     *","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kimberlee97"},"content":"     * @param desc The input string containing task details.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kimberlee97"},"content":"     * @return A string array with two parts: description and deadline.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the input cannot be split into valid parts.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kimberlee97"},"content":"    private String[] splitInput(String desc) throws LumiException {","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kimberlee97"},"content":"        String[] eventParts \u003d desc.split(\"/from|/to|\\\\|From: |\\\\|To: \");","lastModifiedDate":"2025-08-28T18:54:13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kimberlee97"},"content":"        boolean hasValidLength \u003d eventParts.length \u003e\u003d 3;","lastModifiedDate":"2025-09-11T16:40:39","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kimberlee97"},"content":"        if (!hasValidLength) {","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(\"Please enter the full description!\");","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kimberlee97"},"content":"        return eventParts;","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kimberlee97"},"content":"     * Validates that both description and event parts are non-empty.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kimberlee97"},"content":"     *","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kimberlee97"},"content":"     * @param parts The string array containing description and deadline.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If either part is empty.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kimberlee97"},"content":"    private void validateParts(String[] parts) throws LumiException {","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kimberlee97"},"content":"        boolean hasInvalidDesc \u003d parts[0].trim().isEmpty();","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kimberlee97"},"content":"        boolean hasInvalidFromDetails \u003d parts[1].trim().isEmpty();","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kimberlee97"},"content":"        boolean hasInvalidEndDetails \u003d parts[2].trim().isEmpty();","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-11T16:40:39","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kimberlee97"},"content":"        if (hasInvalidDesc || hasInvalidEndDetails || hasInvalidFromDetails) {","lastModifiedDate":"2025-09-11T16:40:39","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(\"Please enter an event task in the \"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kimberlee97"},"content":"                    + \"format: event \u003ctask\u003e /from \u003cdate/time\u003e /to \u003cdate/time\u003e\");","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kimberlee97"},"content":"     * Ensures the task description is not null or empty.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kimberlee97"},"content":"     *","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kimberlee97"},"content":"     * @param desc The input string to check.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the description is empty or null.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kimberlee97"},"content":"    private void validateNotEmpty(String desc) throws LumiException {","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kimberlee97"},"content":"        if (desc \u003d\u003d null || desc.trim().isEmpty()) {","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(\"The task description should not be empty\");","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kimberlee97"},"content":"     * Parses and formats the event part into a standardized format.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kimberlee97"},"content":"     * @param eventParts The event string to be parsed.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kimberlee97"},"content":"     * @return A formatted task string including the deadline.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the deadline cannot be parsed into a {@link LocalDateTime}.","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kimberlee97"},"content":"    private String formatEvent(String[] eventParts) throws LumiException {","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kimberlee97"},"content":"        try {","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kimberlee97"},"content":"            LocalDateTime from \u003d DateTimeParser.parseDate(eventParts[1]);","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kimberlee97"},"content":"            LocalDateTime to \u003d DateTimeParser.parseDate(eventParts[2]);","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kimberlee97"},"content":"            String desc \u003d eventParts[0].trim() + \"|From: \" + DateTimeParser.format(from) + \"|To: \"","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kimberlee97"},"content":"                    + DateTimeParser.format(to);","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kimberlee97"},"content":"            return desc;","lastModifiedDate":"2025-09-19T10:11:35","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kimberlee97"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(e.getMessage());","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Kimberlee97"},"content":"    @Override","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Kimberlee97"},"content":"    public String toString() {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Kimberlee97"},"content":"        return super.toString() + this.desc;","lastModifiedDate":"2025-09-10T16:47:21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":113}},{"path":"src/main/java/lumi/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.tasks;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import lumi.exceptions.LumiException;","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-22T15:14:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":" * This class represents a generic task in the Lumi application.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":" * {@code Task} objects can be marked as done or undone, and their state will be reflected in their","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":" * string representation.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":" * Subclasses may extend this class to include additional information such as deadlines or event periods.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"public class Task {","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"    private static final String DONE \u003d \"[X]\";","lastModifiedDate":"2025-08-22T15:18:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"    private static final String UNDONE \u003d \"[ ]\";","lastModifiedDate":"2025-08-22T15:18:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"    private boolean isDone;","lastModifiedDate":"2025-08-22T15:14:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"    private final TaskType taskType;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-22T15:14:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"     * Constructs a new {@code Task} object with the give {@link TaskType}.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"     * @param taskType The type of this task.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"    public Task(TaskType taskType) {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-22T15:14:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-22T15:14:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-22T15:14:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"     * Marks the current {@code Task} object as done.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"     * @return The {@code Task} instance.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the task could not be marked as done.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"    public Task mark() throws LumiException {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"        if (this.isDone) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(\"This task has already been marked done\");","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kimberlee97"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-22T15:18:01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kimberlee97"},"content":"        return this;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-22T15:18:01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-22T15:18:01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kimberlee97"},"content":"     * Marks the current {@code Task} object as undone.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kimberlee97"},"content":"     * @return The {@code Task} instance.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the task could not be marked as undone.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kimberlee97"},"content":"    public Task unmark() throws LumiException {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kimberlee97"},"content":"        if (!this.isDone) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(\"This task has already been marked undone\");","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kimberlee97"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-22T15:18:01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kimberlee97"},"content":"        return this;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-22T15:18:01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-22T15:18:01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kimberlee97"},"content":"    @Override","lastModifiedDate":"2025-08-22T15:18:01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kimberlee97"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T15:18:01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kimberlee97"},"content":"        return this.taskType.toString() + (isDone ? DONE : UNDONE) + \" \";","lastModifiedDate":"2025-09-10T16:47:21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-22T15:18:01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-22T15:14:41","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":57}},{"path":"src/main/java/lumi/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.tasks;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"import java.util.List;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"import lumi.exceptions.LumiException;","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"import lumi.parsers.Parser;","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":" * This class represents a list of {@link Task} objects in the Lumi application.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":" * The {@code TaskList} manages adding and deleting of tasks, and printing of the list.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"public class TaskList {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"    private final List\u003cTask\u003e list;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"     * Constructs a new {@code TaskList} using the given {@code List\u003cTask\u003e}.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"     * @param taskList The list of tasks to initialize with.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"        assert taskList !\u003d null : \"Given task list should not be null\";","lastModifiedDate":"2025-09-11T15:57:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"        this.list \u003d taskList;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"     * Constructs a new empty {@code TaskList}.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"     * Adds a new task to this {@code TaskList}.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kimberlee97"},"content":"     * @param input The string input to be parsed into a {@link Task} object and added to the {@code TaskList}.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kimberlee97"},"content":"    public String add(String input) throws LumiException {","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kimberlee97"},"content":"        assert !input.trim().isEmpty() : \"The input should not be empty\";","lastModifiedDate":"2025-09-11T15:57:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kimberlee97"},"content":"        Task newTask \u003d Parser.parse(input);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kimberlee97"},"content":"        this.list.add(newTask);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kimberlee97"},"content":"        return \"Task added: \" + newTask;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kimberlee97"},"content":"     * Deletes a {@link Task} object from the {@code TaskList}.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kimberlee97"},"content":"     * @param i The index of the task to be deleted.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kimberlee97"},"content":"     * @return The {@link Task} that was deleted.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the {@link Task} could not be deleted.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kimberlee97"},"content":"    public Task delete(String i) throws LumiException {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kimberlee97"},"content":"        assert !i.trim().isEmpty() : \"The index given should not be empty\";","lastModifiedDate":"2025-09-11T15:57:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kimberlee97"},"content":"        Task task;","lastModifiedDate":"2025-09-11T16:40:39","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kimberlee97"},"content":"        try {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kimberlee97"},"content":"            int index \u003d Integer.parseInt(i) - 1;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kimberlee97"},"content":"            task \u003d list.get(index);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kimberlee97"},"content":"            this.list.remove(index);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kimberlee97"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(\"Please input a valid task number!\");","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kimberlee97"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(\"Please input a number! e.g. delete 1\");","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kimberlee97"},"content":"        return task;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kimberlee97"},"content":"     * Prints out all tasks in the list.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kimberlee97"},"content":"    public String printList() {","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kimberlee97"},"content":"        if (this.list.isEmpty()) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kimberlee97"},"content":"            return \"No items yet!\";","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kimberlee97"},"content":"        } else {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kimberlee97"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kimberlee97"},"content":"            for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kimberlee97"},"content":"                stringBuilder.append((i + 1) + \". \" + this.list.get(i) + \"\\n\");","lastModifiedDate":"2025-09-06T10:40:15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kimberlee97"},"content":"            return stringBuilder.toString();","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kimberlee97"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kimberlee97"},"content":"        return this.list;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T15:59:03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T15:59:03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kimberlee97"},"content":"     * Prints the tasks that contain the given keyword.","lastModifiedDate":"2025-08-30T15:59:03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kimberlee97"},"content":"     * @param keyword","lastModifiedDate":"2025-08-30T15:59:03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T15:59:03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kimberlee97"},"content":"    public String find(String keyword) {","lastModifiedDate":"2025-09-11T15:32:08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kimberlee97"},"content":"        String lowercaseKeyword \u003d keyword.toLowerCase();","lastModifiedDate":"2025-08-30T15:59:03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kimberlee97"},"content":"        int count \u003d 0;","lastModifiedDate":"2025-08-30T15:59:03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kimberlee97"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2025-09-11T15:32:08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kimberlee97"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2025-08-30T15:59:03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kimberlee97"},"content":"            String taskStatement \u003d this.list.get(i).toString();","lastModifiedDate":"2025-08-30T15:59:03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kimberlee97"},"content":"            if (taskStatement.toLowerCase().contains(lowercaseKeyword)) {","lastModifiedDate":"2025-08-30T15:59:03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kimberlee97"},"content":"                stringBuilder.append(taskStatement + \"\\n\");","lastModifiedDate":"2025-09-11T15:32:08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kimberlee97"},"content":"                count +\u003d 1;","lastModifiedDate":"2025-08-30T15:59:03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-08-30T15:59:03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-30T15:59:03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kimberlee97"},"content":"        stringBuilder.insert(0, (count \u003e 0)","lastModifiedDate":"2025-09-11T15:32:08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kimberlee97"},"content":"                ? \"Here\u0027s the tasks I\u0027ve found \u003e\u003c \\n\"","lastModifiedDate":"2025-09-11T15:32:08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kimberlee97"},"content":"                : \"I couldn\u0027t find any matching tasks :\u003c\");","lastModifiedDate":"2025-09-11T15:32:08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kimberlee97"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2025-09-11T15:32:08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-30T15:59:03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":103}},{"path":"src/main/java/lumi/tasks/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.tasks;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":" * Represents the different types of tasks supported by Lumi.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":" * Each type has a corresponding string representation.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"public enum TaskType {","lastModifiedDate":"2025-08-22T15:14:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"    TODO(\"[T]\"), DEADLINE(\"[D]\"), EVENT(\"[E]\");","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"    private final String label;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"     * Creates a {@link TaskType} with the given label.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"     * @param label The string representation of the task type.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"    TaskType(String label) {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"        this.label \u003d label;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-22T15:14:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"    @Override","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"    public String toString() {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"        return this.label;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":26}},{"path":"src/main/java/lumi/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.tasks;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import lumi.exceptions.LumiException;","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":" * This class represents a {@code Todo} task that has a description.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":" * If the input is malformed, a {@link LumiException} is thrown.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"    private final String desc;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"     * Constructs a {@code Todo} task with the given string input.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"     * @param desc The description of the {@code Todo} task.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the task could not be created successfully.","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T16:05:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"    public Todo(String desc) throws LumiException {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"        super(TaskType.TODO);","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"        if (desc.trim().isEmpty()) {","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(\"Please add a todo task in \"","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"                    + \"the format:\\ntodo \u003ctask\u003e (task should not be empty :\u003e )\");","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"        this.desc \u003d desc.trim();","lastModifiedDate":"2025-09-10T16:47:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"    @Override","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"    public String toString() {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"        return super.toString() + this.desc;","lastModifiedDate":"2025-09-10T16:47:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":30}},{"path":"src/main/java/lumi/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.ui;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"    @FXML","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"    @FXML","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"        try {","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kimberlee97"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kimberlee97"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kimberlee97"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kimberlee97"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kimberlee97"},"content":"    private void flip() {","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kimberlee97"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kimberlee97"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kimberlee97"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kimberlee97"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kimberlee97"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kimberlee97"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kimberlee97"},"content":"    public static DialogBox getLumiDialog(String text, Image img) {","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kimberlee97"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kimberlee97"},"content":"        db.flip();","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kimberlee97"},"content":"        return db;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":61}},{"path":"src/main/java/lumi/ui/Dialogue.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.ui;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import lumi.tasks.Task;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":" * Handles all user interaction messages for the application.","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":" * Provides methods to display greeting, goodbye, delete, mark, unmark and error messages.","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"public class Dialogue {","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"    private static final String LOGO \u003d \"LUMI (˶ˆᗜˆ˵)\";","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"     * Returns the logo","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"    public String getLogo() {","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"        return LOGO;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"     * Returns a greeting message.","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"    public String greet() {","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"        return \"Hello from \" + LOGO + \"\\nWhat can I do for you?\";","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"     * Returns a goodbye message.","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"    public String sendGoodbye() {","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"        return \"Bye! See you next time :\u003e\";","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kimberlee97"},"content":"     * Returns a delete message with the description of the deleted task.","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kimberlee97"},"content":"     * @param task The task that had been deleted.","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kimberlee97"},"content":"    public String printDeleteMessage(Task task) {","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kimberlee97"},"content":"        return \"This task has been deleted: \" + task.toString();","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kimberlee97"},"content":"     * Returns a message after the given {@link Task} has been marked as done.","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kimberlee97"},"content":"     * @param task The task that had been marked.","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kimberlee97"},"content":"    public String printMarkMessage(Task task) {","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kimberlee97"},"content":"        return \"Yay! I\u0027ve marked your task done: \" + task;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kimberlee97"},"content":"     * Returns a message after the given {@link Task} has been unmarked.","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kimberlee97"},"content":"     * @param task The task that had been unmarked.","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kimberlee97"},"content":"    public String printUnmarkMessage(Task task) {","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kimberlee97"},"content":"        return \"Oki, I\u0027ve marked your task undone: \" + task;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kimberlee97"},"content":"     * Returns an error message for a failed load.","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kimberlee97"},"content":"     * @param e The exception thrown from the failed load attempt.","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kimberlee97"},"content":"    public void showLoadingError(Exception e) {","lastModifiedDate":"2025-09-16T23:54:27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kimberlee97"},"content":"        System.out.println(\"Unable to load your file: \" + e.getMessage() + \"\\n\" + \"Starting with a new list...\");","lastModifiedDate":"2025-09-16T23:54:27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kimberlee97"},"content":"     * Returns a dialogue with detailed descriptions of the list of commands and formats.","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kimberlee97"},"content":"    public String showHelpDialogue() {","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kimberlee97"},"content":"        String greet \u003d \"₊✩‧₊˚౨ৎ˚₊✩‧₊ Lumi is here to help ₊✩‧₊˚౨ৎ˚₊✩‧₊\\nHere are our list of commands:\\n\";","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kimberlee97"},"content":"        String listHeader \u003d \"\\n⋆˚✿˖° List-Related Commands ⋆˚✿˖°\\n\\n\";","lastModifiedDate":"2025-09-16T21:58:46","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kimberlee97"},"content":"        String list \u003d \"list: prints out the task list in the format \u003cindex\u003e.[\u003ctask type\u003e][\u003cstatus\u003e] \u003ctask description\u003e\"","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kimberlee97"},"content":"                + \"\\n- index: refers to the task\u0027s index in the list (from earliest date added to latest)\\n\"","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kimberlee97"},"content":"                + \"- task type: refers to the task\u0027s type e.g. T for todo, E for event, D for deadline\\n\"","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kimberlee97"},"content":"                + \"- status: refers to the task\u0027s status e.g. X for done, \u003cempty space\u003e for undone\\n\\n\";","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kimberlee97"},"content":"        String bye \u003d \"bye: saves the updates made to the task list into the file\\n\\n\";","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kimberlee97"},"content":"        String find \u003d \"find \u003ckeyword\u003e: finds tasks containing the keyword and prints the matching tasks\\n\\n\";","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kimberlee97"},"content":"        String delete \u003d \"delete \u003cindex\u003e: deletes the task at the given index from the task list\\n\\n\";","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kimberlee97"},"content":"        String taskHeader \u003d \"\\n⋆˚✿˖° Task Commands ⋆˚✿˖°\\n\";","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kimberlee97"},"content":"        String todo \u003d \"todo \u003ctask description\u003e: creates a todo task with the given description\\n\\n\";","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kimberlee97"},"content":"        String deadline \u003d \"deadline \u003ctask description\u003e /by \u003cdate and time\u003e: \"","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kimberlee97"},"content":"                + \"creates a deadline task with the given description and deadline\\n\\n\";","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kimberlee97"},"content":"        String event \u003d \"event \u003ctask description\u003e /from \u003cdate and time\u003e /to \u003cdate and time\u003e: \"","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kimberlee97"},"content":"                + \"creates an event with the given description and dates and times\\n\\n\";","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kimberlee97"},"content":"        String unmark \u003d \"unmark \u003cindex\u003e: if the task at the given index was marked as done, it will be unmarked\\n\"","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kimberlee97"},"content":"                + \"e.g. [T][X] \u003ctask description\u003e becomes [T][ ] \u003ctask description\u003e\\n\\n\";","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kimberlee97"},"content":"        String mark \u003d \"mark \u003cindex\u003e: if the task at the given index was marked as undone, it will be marked as done\\n\"","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kimberlee97"},"content":"                + \"e.g. [T][ ] \u003ctask description\u003e becomes [T][X] \u003ctask description\u003e\\n\\n\";","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kimberlee97"},"content":"        String goodbyeMessage \u003d \"I hope this helped! ⋆˚✿˖°\\n\" + \"                            ╱|、\\n\"","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kimberlee97"},"content":"                + \"                          (˚ˎ 。7  \\n\"","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kimberlee97"},"content":"                + \"                           |、˜〵          \\n\"","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kimberlee97"},"content":"                + \"                          じしˍ,)ノ\";","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kimberlee97"},"content":"        return greet + listHeader + list + bye + find + delete + taskHeader + todo + deadline + event + unmark + mark","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kimberlee97"},"content":"                + goodbyeMessage;","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-11T20:45:26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":95}},{"path":"src/main/java/lumi/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.ui;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"public class Launcher {","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":13}},{"path":"src/main/java/lumi/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.ui;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"import lumi.Lumi;","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":" * A GUI for Lumi using FXML.","lastModifiedDate":"2025-09-16T23:54:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"    private Lumi lumi \u003d new Lumi();","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"    @Override","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"        try {","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"            stage.setTitle(\"LUMI (˶ˆᗜˆ˵)\");","lastModifiedDate":"2025-09-19T11:42:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setLumi(lumi); // inject the Duke instance","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"            stage.show();","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-09-04T15:16:08","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":33}},{"path":"src/main/java/lumi/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.ui;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"import lumi.Lumi;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"    @FXML","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"    @FXML","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"    @FXML","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"    @FXML","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"    private Lumi lumi;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"    private Image lumiImage \u003d new Image(getClass().getResourceAsStream(\"/images/Lumi.jpg\"));","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"    private Image userImage \u003d new Image(getClass().getResourceAsStream(\"/images/User.jpg\"));","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"    private Dialogue dialogue \u003d new Dialogue();","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"     * Initializes the UI components when the controller is loaded.","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-19T01:21:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kimberlee97"},"content":"    @FXML","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kimberlee97"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kimberlee97"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kimberlee97"},"content":"        String greeting \u003d dialogue.greet();","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kimberlee97"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kimberlee97"},"content":"                DialogBox.getLumiDialog(greeting, lumiImage)","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kimberlee97"},"content":"        );","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kimberlee97"},"content":"    /** Injects the Lumi instance */","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kimberlee97"},"content":"    public void setLumi(Lumi d) {","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kimberlee97"},"content":"        lumi \u003d d;","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kimberlee97"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kimberlee97"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kimberlee97"},"content":"    @FXML","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kimberlee97"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kimberlee97"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kimberlee97"},"content":"        String lumiText \u003d lumi.getResponse(userInput.getText());","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kimberlee97"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kimberlee97"},"content":"                DialogBox.getUserDialog(userText, userImage),","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kimberlee97"},"content":"                DialogBox.getLumiDialog(lumiText, lumiImage)","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kimberlee97"},"content":"        );","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kimberlee97"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":63}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-19T13:48:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"lumi.ui.MainWindow\"\u003e","lastModifiedDate":"2025-09-19T13:48:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-09-16T21:58:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-09-16T21:58:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-09-16T21:58:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-04T23:04:23","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":19}},{"path":"src/test/java/lumi/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.storage;","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"import lumi.exceptions.LumiException;","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-03T15:10:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":" * Unit tests for the {@link Storage} class","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":" * Ensures that invalid or corrupted task files are handled correctly","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"public class StorageTest {","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"     * Tests that a file with an invalid statement correctly throws a {@link LumiException}","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"     * when the load attempt is made.","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"    @Test","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"    public void loadTest() {","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"        Storage storage \u003d new Storage(\"./data/test.txt\");","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"        assertDoesNotThrow(storage::load);","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":24}},{"path":"src/test/java/lumi/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.tasks;","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import lumi.exceptions.LumiException;","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":" * Unit tests for the {@link TaskList} class.","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":" * These tests verify that valid tasks are added to the list.","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"public class TaskListTest {","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"     * Tests that valid {@link Todo} is added to {@link TaskList}.","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"    @Test","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"    public void addTodoTest() {","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"        String result \u003d assertDoesNotThrow(() -\u003e tasks.add(\"todo homework\"));","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"        assertEquals(\"Task added: [T][ ] homework\", result);","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"        assertInstanceOf(Todo.class, tasks.getList().get(0));","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"     * Tests that valid {@link Event} is added to {@link TaskList}.","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"    @Test","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"    public void addEventTest() {","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"        String result \u003d assertDoesNotThrow(() -\u003e tasks.add(\"event CS2100 Lab \"","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"                + \"/from 15/10/2025 16:00 /to 15/10/2025 18:00\"));","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"        assertEquals(\"Task added: [E][ ] CS2100 Lab|From: 15 10 2025 16:00|To: 15 10 2025 18:00\", result);","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kimberlee97"},"content":"        assertInstanceOf(Event.class, tasks.getList().get(0));","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kimberlee97"},"content":"     * Tests that valid {@link Event} is added to {@link TaskList}.","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kimberlee97"},"content":"    @Test","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kimberlee97"},"content":"    public void addDeadlineTest() {","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kimberlee97"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kimberlee97"},"content":"        String result \u003d assertDoesNotThrow(() -\u003e tasks.add(\"deadline CS2100 project \"","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kimberlee97"},"content":"                + \"/by 15/10/2025 16:00\"));","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kimberlee97"},"content":"        assertEquals(\"Task added: [D][ ] CS2100 project|By: 15 10 2025 16:00\", result);","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kimberlee97"},"content":"        assertInstanceOf(Deadline.class, tasks.getList().get(0));","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kimberlee97"},"content":"     * Tests that invalid {@link Todo} throws LumiException and is not added to {@link TaskList}.","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T15:00:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kimberlee97"},"content":"    @Test","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kimberlee97"},"content":"    public void addInvalidTodoTest() {","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kimberlee97"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kimberlee97"},"content":"        assertThrows(LumiException.class, () -\u003e tasks.add(\"todo      \"),","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kimberlee97"},"content":"                \"Please add a todo task in the format: todo \u003ctask\u003e (task should not be empty :\u003e )\");","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kimberlee97"},"content":"        assertEquals(0, tasks.getList().size());","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kimberlee97"},"content":"     * Tests that invalid {@link Event} throws LumiException and is not added to {@link TaskList}.","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kimberlee97"},"content":"    @Test","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kimberlee97"},"content":"    public void addInvalidEventTest() {","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kimberlee97"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kimberlee97"},"content":"        assertThrows(LumiException.class, () -\u003e tasks.add(\"event /from 12pm /to 5pm\"),","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kimberlee97"},"content":"                \"Please enter a date in the correct format\");","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kimberlee97"},"content":"        assertEquals(0, tasks.getList().size());","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kimberlee97"},"content":"     * Tests that invalid {@link Deadline} throws LumiException and is not added to {@link TaskList}.","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kimberlee97"},"content":"    @Test","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kimberlee97"},"content":"    public void addInvalidDeadlineTest() {","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kimberlee97"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kimberlee97"},"content":"        assertThrows(LumiException.class, () -\u003e tasks.add(\"deadline /from 12pm /to 5pm\"),","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kimberlee97"},"content":"                \"Please add the full details!\");","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kimberlee97"},"content":"        assertEquals(0, tasks.getList().size());","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-09-16T22:55:46","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":82}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"list","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"deadline Do Homework /by 12pm","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"event Birthday /from 31 Aug /to 31 Aug","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"todo Buy eggs","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"mark 2","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"mark 1","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"list","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"unmark 2","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"list","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"unmark 4","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"mark1","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"Buy bread","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"bye","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"java -classpath ../bin Lumi \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":1,"-":37}}]
