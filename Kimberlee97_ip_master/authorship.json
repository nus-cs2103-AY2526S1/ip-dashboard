[{"path":"CONTRIBUTORS.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributors","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"| Display                                                      |        Name         |            Github Profile             |                      Homepage                      |","lastModifiedDate":"2025-08-21T00:22:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"| ------------------------------------------------------------ | :-----------------: | :-----------------------------------: | :------------------------------------------------: |","lastModifiedDate":"2025-08-21T00:22:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"| ![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) |     Jeffry Lum      |  [Github](https://github.com/j-lum/)  |        [Homepage](https://se.kasugano.moe)         |","lastModifiedDate":"2025-08-21T00:22:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"| ![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100)  | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/) |","lastModifiedDate":"2025-08-21T00:22:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-21T00:22:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"# I would like to join this list. How can I help the project","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/).","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":5,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"    mainClass.set(\"lumi.Lumi\")","lastModifiedDate":"2025-08-29T16:27:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kimberlee97"},"content":"    archiveBaseName \u003d \"lumi\"","lastModifiedDate":"2025-08-29T16:27:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":2,"-":39}},{"path":"data/bob.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"[T]|[ ]| schoolwork","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":1}},{"path":"data/lumi.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"[D]|[ ]| homework |By: 12 10 2005 15:10","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"[E]|[ ]| party |From: 11 12 2005 12:10|To: 15 10 2006 01:00","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"[T]|[ ]| homework","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":3}},{"path":"data/test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"[T]|[ ]| homework","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"[E]|[ ]| workshop |From: 12 10 2025 16:00|To: 14 01 2026 15:00","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"[T]|[ ]| work","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":3}},{"path":"src/main/java/lumi/Lumi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi;","lastModifiedDate":"2025-08-29T16:27:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import lumi.storage.*;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"import lumi.tasks.*;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"import lumi.exceptions.*;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"import lumi.ui.*;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-18T17:22:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":" * The main controller for the Lumi task manager chatbot.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":" * This class facilitates interactions between the user and the chatbot through command-line commands.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"public class Lumi {","lastModifiedDate":"2025-08-18T17:06:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"    private UI ui;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-18T17:06:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"     * Instantiates a new {@code Lumi} object.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"     * @param filePath The path to the text file where tasks will be stored.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"    public Lumi(String filePath) {","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"        try {","lastModifiedDate":"2025-08-20T13:23:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"        } catch (IOException | LumiException e) {","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"            ui.showLoadingError(e);","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-28T18:54:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-28T18:54:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T18:54:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kimberlee97"},"content":"     * Starts the Lumi application loop.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kimberlee97"},"content":"     * Continuously reads user commands from the command-line, processes commands and updates the task list.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kimberlee97"},"content":"     * The loop terminates when the user enters \u003ccode\u003ebye\u003c/code\u003e, and the task list is saved to the text file.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kimberlee97"},"content":"    public void run() {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kimberlee97"},"content":"        this.ui.greet();","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kimberlee97"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-18T17:22:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kimberlee97"},"content":"        while (true) {","lastModifiedDate":"2025-08-18T17:25:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kimberlee97"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2025-08-18T17:22:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kimberlee97"},"content":"            if (input.trim().isEmpty()) continue;","lastModifiedDate":"2025-08-21T00:22:06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kimberlee97"},"content":"            try {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kimberlee97"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2025-08-18T17:22:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kimberlee97"},"content":"                    try {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kimberlee97"},"content":"                        this.storage.updateFile();","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kimberlee97"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kimberlee97"},"content":"                        throw new LumiException(e.getMessage());","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kimberlee97"},"content":"                    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kimberlee97"},"content":"                    this.ui.bye();","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kimberlee97"},"content":"                    break;","lastModifiedDate":"2025-08-18T17:25:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kimberlee97"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2025-08-18T17:37:20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kimberlee97"},"content":"                    this.tasks.printList();","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kimberlee97"},"content":"                } else if (input.startsWith(\"unmark\") || input.startsWith(\"mark\")) {","lastModifiedDate":"2025-08-20T13:00:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kimberlee97"},"content":"                    try {","lastModifiedDate":"2025-08-20T13:06:44","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kimberlee97"},"content":"                        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-08-20T12:13:41","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kimberlee97"},"content":"                        if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-20T13:06:44","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kimberlee97"},"content":"                            throw new LumiException(\"Please provide a task number e.g. mark 1\");","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kimberlee97"},"content":"                        }","lastModifiedDate":"2025-08-20T13:06:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kimberlee97"},"content":"                        int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-08-20T12:13:41","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kimberlee97"},"content":"                        if (parts[0].equals(\"unmark\")) {","lastModifiedDate":"2025-08-20T13:00:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kimberlee97"},"content":"                            Task task \u003d this.tasks.getList().get(index).unmark();","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kimberlee97"},"content":"                            ui.printUnmarkMessage(task);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kimberlee97"},"content":"                        } else {","lastModifiedDate":"2025-08-18T17:22:45","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kimberlee97"},"content":"                            Task task \u003d this.tasks.getList().get(index).mark();","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kimberlee97"},"content":"                            ui.printMarkMessage(task);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kimberlee97"},"content":"                        }","lastModifiedDate":"2025-08-20T13:00:44","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kimberlee97"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-20T13:06:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kimberlee97"},"content":"                        throw new LumiException(\"Please enter a valid task number\");","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kimberlee97"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-21T00:22:06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kimberlee97"},"content":"                        throw new LumiException(\"Please enter a number after \u0027mark\u0027/\u0027unmark\u0027\");","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kimberlee97"},"content":"                    }","lastModifiedDate":"2025-08-20T13:06:44","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kimberlee97"},"content":"                } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2025-08-21T00:38:27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kimberlee97"},"content":"                    String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-08-21T00:38:27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kimberlee97"},"content":"                    if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-21T00:38:27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kimberlee97"},"content":"                        throw new LumiException(\"Please add the task number!\");","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kimberlee97"},"content":"                    }","lastModifiedDate":"2025-08-21T00:38:27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kimberlee97"},"content":"                    Task task \u003d this.tasks.delete(parts[1]);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kimberlee97"},"content":"                    this.ui.printDeleteMessage(task);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kimberlee97"},"content":"                } else {","lastModifiedDate":"2025-08-20T13:00:44","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kimberlee97"},"content":"                    this.tasks.add(input);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kimberlee97"},"content":"                }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kimberlee97"},"content":"            } catch (LumiException e) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kimberlee97"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-08-18T17:22:45","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kimberlee97"},"content":"        scanner.close();","lastModifiedDate":"2025-08-18T17:25:46","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-18T17:25:46","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kimberlee97"},"content":"     * Creates a new {@code Lumi} instance with the given filepath.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kimberlee97"},"content":"     * @param args","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kimberlee97"},"content":"     * @throws","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kimberlee97"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kimberlee97"},"content":"        Lumi lumi \u003d new Lumi(\"./data/lumi.txt\");","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kimberlee97"},"content":"        lumi.run();","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":102,"-":2}},{"path":"src/main/java/lumi/exceptions/LumiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.exceptions;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":" * This class represents an exception specific to the Lumi application.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":" * This exception is thrown when Lumi encounters an error related to","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":" * invalid input, storage issues, or other application specific problems.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":" * It extends {@link Exception}.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"public class LumiException extends Exception {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"     * Constructs a new LumiException with the specified message.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"     * @param message The message that describes the nature of the exception.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"    public LumiException(String message) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"        super(message);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":17}},{"path":"src/main/java/lumi/parsers/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.parsers;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":" * Utility class for parsing and formatting date-time strings used in Lumi.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":" * This class accepts multiple date formats and provides a standard output format","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":" * for consistency across the application.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"public class DateTimeParser {","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"    /** The accepted input formats */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"    private static final DateTimeFormatter[] ACCEPTED_FORMATS \u003d {","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"            DateTimeFormatter.ofPattern(\"dd MM yyyy HH:mm\"),","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\")","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"    };","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"    /** The standard output format */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"    private static final DateTimeFormatter RETURN_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy HH:mm\");","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"     * Parses the given string into a {@link LocalDateTime} format and returns the {@link LocalDateTime}","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"     * @param date_time The string to be parsed.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"     * @return The parsed {@link LocalDateTime}.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"     * @throws DateTimeParseException If the string is not in an accepted format.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"    public static LocalDateTime parseDate(String date_time) throws DateTimeParseException {","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"        for (DateTimeFormatter format : ACCEPTED_FORMATS) {","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"            try {","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"                return LocalDateTime.parse(date_time.trim(), format);","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kimberlee97"},"content":"        throw new DateTimeParseException(\"Please enter a date in the correct format\", date_time, 0);","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kimberlee97"},"content":"     * Returns the given {@link LocalDateTime} in the standard output format.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kimberlee97"},"content":"     * @param local_date_time The {@Link LocalDateTime} to be formatted in the standard output format.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kimberlee97"},"content":"     * @return A formatted date-time string in {@code dd MM yyyy HH:mm} format.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kimberlee97"},"content":"    public static String format(LocalDateTime local_date_time) {","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kimberlee97"},"content":"        return local_date_time.format(RETURN_FORMAT);","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":45}},{"path":"src/main/java/lumi/parsers/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.parsers;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import lumi.tasks.*;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"import lumi.exceptions.*;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":" * Utility class for parsing raw user input into {@Link Task} objects.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":" * The {@code Parser} analyzes the command string and determines the correct task type to instantiate.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":" * If no suitable task types are found, a LumiException will be thrown.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"     * Parses the given input string and creates the corresponding Task.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"     * @param desc The raw input given by the user.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"     * @return The parsed {@link Task}.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the input is malformed or does not match a valid command.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"    public static Task parse(String desc) throws LumiException {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"        String[] taskParts \u003d desc.split(\" \", 2);","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"        if (taskParts.length \u003c\u003d 1) {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(\"Please add a task in the format: todo \u003ctask\u003e\\n\"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"                    + \"deadline \u003ctask\u003e /by \u003cdd/MM/yyyy or dd MM yyyy HH:mm\u003e\\n\"","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"                    + \"event \u003ctask\u003e /from \u003cdd/MM/yyyy HH:mm or dd MM yyyy HH:mm\u003e \"","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"                    + \"/to \u003cdd/MM/yyyy HH:mm or dd MM yyyy HH:mm\");","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"        } else {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"            Task task \u003d null;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"            switch (taskParts[0]) {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"            case \"todo\":","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"                task \u003d new Todo(taskParts[1]);","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"                return task;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"            case \"deadline\":","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"                task \u003d new Deadline(taskParts[1]);","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kimberlee97"},"content":"                return task;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kimberlee97"},"content":"            case \"event\":","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kimberlee97"},"content":"                task \u003d new Event(taskParts[1]);","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kimberlee97"},"content":"                return task;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kimberlee97"},"content":"            default:","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kimberlee97"},"content":"                throw new LumiException(\"Oh no! \u003e.\u003c\\nI\u0027m not sure what this is, please try again!\");","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":43}},{"path":"src/main/java/lumi/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.storage;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import lumi.parsers.Parser;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"import lumi.tasks.Task;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"import lumi.exceptions.*;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"import java.io.File;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"import java.util.List;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":" * This class handles storage of {@Link Task} objects.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":" * The Storage class is responsible for loading a date in a given file into a {@Link TaskList}","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":" * and updating the file.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"public class Storage {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"    /** The path to the textfile used for storage */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"    private final String filePath;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"    private List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"     * Creates a new {@Link Storage} object associated with the given file path.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"     * @param filePath The path to the text file used for storage.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kimberlee97"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kimberlee97"},"content":"     * Loads all tasks from the file into a list of tasks.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kimberlee97"},"content":"     * If the file does not exist, a new file is created.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kimberlee97"},"content":"     * If a line is invalid, it will be ignored.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kimberlee97"},"content":"     * @return A {@Link List\u003cTask\u003e} containing the tasks read from the file.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kimberlee97"},"content":"     * @throws IOException If there is an error creating or reading the file.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the task line cannot be parsed correctly.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kimberlee97"},"content":"    public List\u003cTask\u003e load() throws IOException, LumiException {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kimberlee97"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kimberlee97"},"content":"        Scanner scanner \u003d null;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kimberlee97"},"content":"        int errorCount \u003d 0;","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kimberlee97"},"content":"        try {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kimberlee97"},"content":"            scanner \u003d new Scanner(file);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kimberlee97"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kimberlee97"},"content":"            try {","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kimberlee97"},"content":"                file.createNewFile();","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kimberlee97"},"content":"                scanner \u003d new Scanner(file);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kimberlee97"},"content":"            } catch (IOException a) {","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kimberlee97"},"content":"                throw new LumiException(\"Your file could not be created: \" + e.getMessage());","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kimberlee97"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kimberlee97"},"content":"            try {","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kimberlee97"},"content":"                Task task \u003d Storage.convertStringToTask(scanner.nextLine());","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kimberlee97"},"content":"                this.list.add(task);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kimberlee97"},"content":"            } catch (LumiException e) {","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kimberlee97"},"content":"                errorCount +\u003d 1;","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kimberlee97"},"content":"        System.out.println(\"Number of invalid lines ignored: \" + errorCount);","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kimberlee97"},"content":"        return list;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kimberlee97"},"content":"     * Converts a raw string into a {@Link Task} object.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kimberlee97"},"content":"     * @param string The raw task string from the file.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kimberlee97"},"content":"     * @return The corresponding {@Link Task} object.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the string cannot be parsed into a {@Link Task}.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kimberlee97"},"content":"    private static Task convertStringToTask(String string) throws LumiException {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kimberlee97"},"content":"        try {","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kimberlee97"},"content":"            String[] taskParts \u003d string.split(\"\\\\| |\\\\|\", 3);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kimberlee97"},"content":"            String type \u003d taskParts[0];","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kimberlee97"},"content":"            String status \u003d taskParts[1];","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kimberlee97"},"content":"            String desc \u003d taskParts[2];","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kimberlee97"},"content":"            String typeInput \u003d \"\";","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kimberlee97"},"content":"            boolean isDone \u003d false;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kimberlee97"},"content":"            switch (type) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kimberlee97"},"content":"            case \"[T]\":","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kimberlee97"},"content":"                typeInput \u003d \"todo\";","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kimberlee97"},"content":"                break;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kimberlee97"},"content":"            case \"[D]\":","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kimberlee97"},"content":"                typeInput \u003d \"deadline\";","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kimberlee97"},"content":"                break;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kimberlee97"},"content":"            case \"[E]\":","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kimberlee97"},"content":"                typeInput \u003d \"event\";","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kimberlee97"},"content":"            switch (status) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kimberlee97"},"content":"            case \"[X]\":","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kimberlee97"},"content":"                isDone \u003d true;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kimberlee97"},"content":"                break;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kimberlee97"},"content":"            case \"[ ]\":","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kimberlee97"},"content":"                isDone \u003d false;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kimberlee97"},"content":"                break;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kimberlee97"},"content":"            String input \u003d typeInput + \" \" + desc;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kimberlee97"},"content":"            Task task \u003d Parser.parse(input);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kimberlee97"},"content":"            if (isDone) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Kimberlee97"},"content":"                task.mark();","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Kimberlee97"},"content":"            return task;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Kimberlee97"},"content":"        } catch (LumiException | RuntimeException e) {","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(e.getMessage());","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Kimberlee97"},"content":"     * Writes the current list of tasks back into the storage file.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Kimberlee97"},"content":"     * @throws IOException If the file cannot be opened or written to.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the file cannot be updated.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Kimberlee97"},"content":"    public void updateFile() throws IOException, LumiException {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Kimberlee97"},"content":"        try {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Kimberlee97"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Kimberlee97"},"content":"            for (Task task : this.list) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Kimberlee97"},"content":"                fw.write(task.toString());","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Kimberlee97"},"content":"                fw.write(\"\\n\");","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Kimberlee97"},"content":"            fw.close();","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Kimberlee97"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(\"Unable to update your file, sorry!\");","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Kimberlee97"},"content":"        System.out.println(\"Your file has been updated \u003e.\u003c\");","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":133}},{"path":"src/main/java/lumi/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.tasks;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import lumi.parsers.*;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"import lumi.exceptions.*;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":" * This class represents a {@code Deadline} task that has a description and the associated due date and times.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":" * The input string is validated and parsed into a {@link LocalDateTime} using {@link DateTimeParser}.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":" * If the input is malformed, a {@link LumiException} is thrown.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"    private final String desc;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"     * Constructs a {@code Deadline} from the given user input string.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"     * @param desc User input containing the task description and the deadline.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the input string is unable to be parsed successfully.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"    public Deadline(String desc) throws LumiException {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"        super(TaskType.DEADLINE);","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"        String[] deadlineParts \u003d desc.split(\"/by |\\\\|By: \");","lastModifiedDate":"2025-08-28T18:54:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"        if (deadlineParts.length \u003c 2 || deadlineParts[0].trim().isEmpty() || deadlineParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(\"Please enter a deadline task \"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"                    + \"in the format: deadline \u003ctask\u003e /by \u003cdeadline\u003e\");","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"        } else {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"            try {","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"                LocalDateTime date_time \u003d DateTimeParser.parseDate(deadlineParts[1]);","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"                this.desc \u003d deadlineParts[0] + \"|By: \" + DateTimeParser.format(date_time);","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"                throw new LumiException(e.getMessage());","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kimberlee97"},"content":"    @Override","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kimberlee97"},"content":"    public String toString() {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kimberlee97"},"content":"        return super.toString() + \" \" + desc;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":42}},{"path":"src/main/java/lumi/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.tasks;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import lumi.parsers.*;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"import lumi.exceptions.*;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":" * This class represents a {@code Event} task that has a description and associated start and end dates and times.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":" * The input string is validated and parsed into a {@link LocalDateTime} using {@link DateTimeParser}.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":" * If the input is malformed, a {@link LumiException} is thrown.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"public class Event extends Task{","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"    private final String desc;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"     * Constructs an {@link Event} task from the given user input string.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"     * @param desc User input containing the task description and the event duration.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the input string is unable to be parsed successfully.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"    public Event(String desc) throws LumiException {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"        super(TaskType.EVENT);","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"        String[] eventParts \u003d desc.split(\"/from|/to|\\\\|From: |\\\\|To: \");","lastModifiedDate":"2025-08-28T18:54:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"        if (eventParts.length \u003c 3 || eventParts[0].trim().isEmpty() || eventParts[1].trim().isEmpty()","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"                || eventParts[2].trim().isEmpty()) {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(\"Please enter an event task in the \"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"                    + \"format: event \u003ctask\u003e /from \u003cdate/time\u003e /to \u003cdate/time\u003e\");","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"        } else {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"            try {","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"                LocalDateTime from \u003d DateTimeParser.parseDate(eventParts[1]);","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"                LocalDateTime to \u003d DateTimeParser.parseDate(eventParts[2]);","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"                this.desc \u003d eventParts[0] + \"|From: \" + DateTimeParser.format(from) + \"|To: \"","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kimberlee97"},"content":"                        + DateTimeParser.format(to);","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kimberlee97"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kimberlee97"},"content":"                throw new LumiException(e.getMessage());","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-08-28T20:14:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kimberlee97"},"content":"    @Override","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kimberlee97"},"content":"    public String toString() {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kimberlee97"},"content":"        return super.toString() + \" \" + this.desc;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":45}},{"path":"src/main/java/lumi/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.tasks;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import lumi.exceptions.*;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-22T15:14:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":" * This class represents a generic task in the Lumi application.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":" * {@code Task} objects can be marked as done or undone, and their state will be reflected in their","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":" * string representation.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":" * Subclasses may extend this class to include additional information such as deadlines or event periods.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"public class Task {","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"    private static final String DONE \u003d \"[X]\";","lastModifiedDate":"2025-08-22T15:18:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"    private static final String UNDONE \u003d \"[ ]\";","lastModifiedDate":"2025-08-22T15:18:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"    private boolean isDone;","lastModifiedDate":"2025-08-22T15:14:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"    private final TaskType taskType;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-22T15:14:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"     * Constructs a new {@code Task} object with the give {@link TaskType}.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"     * @param taskType The type of this task.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"    public Task(TaskType taskType) {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-22T15:14:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-22T15:14:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-22T15:14:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"        return this.isDone;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-22T15:14:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-22T15:18:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"     * Marks the current {@code Task} object as done.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"     * @return The {@code Task} instance.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the task could not be marked as done.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kimberlee97"},"content":"    public Task mark() throws LumiException {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kimberlee97"},"content":"        if (this.isDone) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(\"This task has already been marked done\");","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kimberlee97"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-22T15:18:01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kimberlee97"},"content":"        return this;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-22T15:18:01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-22T15:18:01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kimberlee97"},"content":"     * Marks the current {@code Task} object as undone.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kimberlee97"},"content":"     * @return The {@code Task} instance.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the task could not be marked as undone.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kimberlee97"},"content":"    public Task unmark() throws LumiException {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kimberlee97"},"content":"        if (!this.isDone) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(\"This task has already been marked undone\");","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kimberlee97"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-22T15:18:01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kimberlee97"},"content":"        return this;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-22T15:18:01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-22T15:18:01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kimberlee97"},"content":"    @Override","lastModifiedDate":"2025-08-22T15:18:01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kimberlee97"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T15:18:01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kimberlee97"},"content":"        return this.taskType.toString() + \"|\" + (isDone ? DONE : UNDONE) + \"|\";","lastModifiedDate":"2025-08-28T18:54:13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-22T15:18:01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-22T15:14:41","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":61}},{"path":"src/main/java/lumi/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.tasks;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import lumi.parsers.*;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"import lumi.exceptions.*;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"import java.util.List;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":" * This class represents a list of {@link Task} objects in the Lumi application.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":" * The {@code TaskList} manages adding and deleting of tasks, and printing of the list.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"public class TaskList {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"    private final List\u003cTask\u003e list;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"     * Constructs a new {@code TaskList} using the given {@code List\u003cTask\u003e}.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"     * @param taskList The list of tasks to initialize with.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"        this.list \u003d taskList;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"     * Constructs a new empty {@code TaskList}.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kimberlee97"},"content":"     * Adds a new task to this {@code TaskList}.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kimberlee97"},"content":"     * @param input The string input to be parsed into a {@link Task} object and added to the {@code TaskList}.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kimberlee97"},"content":"    public void add(String input) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kimberlee97"},"content":"        try {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kimberlee97"},"content":"            Task newTask \u003d Parser.parse(input);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kimberlee97"},"content":"            this.list.add(newTask);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kimberlee97"},"content":"            System.out.println(\"Task added: \" + newTask);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kimberlee97"},"content":"        } catch (LumiException e) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kimberlee97"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kimberlee97"},"content":"     * Deletes a {@link Task} object from the {@code TaskList}.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kimberlee97"},"content":"     * @param i The index of the task to be deleted.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kimberlee97"},"content":"     * @return The {@link Task} that was deleted.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the {@link Task} could not be deleted.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kimberlee97"},"content":"    public Task delete(String i) throws LumiException {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kimberlee97"},"content":"        Task task \u003d null;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kimberlee97"},"content":"        try {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kimberlee97"},"content":"            int index \u003d Integer.parseInt(i) - 1;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kimberlee97"},"content":"            task \u003d list.get(index);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kimberlee97"},"content":"            this.list.remove(index);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kimberlee97"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(\"Please input a valid task number!\");","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kimberlee97"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kimberlee97"},"content":"           throw new LumiException(\"Please input a number! e.g. delete 1\");","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kimberlee97"},"content":"        return task;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kimberlee97"},"content":"     * Prints out all tasks in the list.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kimberlee97"},"content":"    public void printList() {","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kimberlee97"},"content":"        if (this.list.isEmpty()) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kimberlee97"},"content":"            System.out.println(\"No items yet!\");","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kimberlee97"},"content":"        } else {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kimberlee97"},"content":"            for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kimberlee97"},"content":"                System.out.println(this.list.get(i));","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kimberlee97"},"content":"            }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kimberlee97"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kimberlee97"},"content":"        return this.list;","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":83}},{"path":"src/main/java/lumi/tasks/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.tasks;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":" * Represents the different types of tasks supported by Lumi.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":" * Each type has a corresponding string representation.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"public enum TaskType {","lastModifiedDate":"2025-08-22T15:14:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"    TODO(\"[T]\"), DEADLINE(\"[D]\"), EVENT(\"[E]\");","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"    private final String label;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"     * Creates a {@link TaskType} with the given label.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"     * @param label The string representation of the task type.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"    TaskType(String label) {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"        this.label \u003d label;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-22T15:14:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"    @Override","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"    public String toString() {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"        return this.label;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":26}},{"path":"src/main/java/lumi/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.tasks;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import lumi.exceptions.*;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":" * This class represents a {@code Todo} task that has a description.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":" * If the input is malformed, a {@link LumiException} is thrown.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"    private final String desc;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"     * Constructs a {@code Todo} task with the given string input.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"     * @param desc The description of the {@code Todo} task.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"     * @throws LumiException If the task could not be created successfully.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"    public Todo(String desc) throws LumiException {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"        super(TaskType.TODO);","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"        if (desc.trim().isEmpty()) {","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"            throw new LumiException(\"Please add a todo task in \"","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"                    + \"the format:\\ntodo \u003ctask\u003e (task should not be empty :\u003e )\");","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"        }","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"    @Override","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"    public String toString() {","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"        return super.toString() + \" \" + this.desc;","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-28T15:37:20","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":30}},{"path":"src/main/java/lumi/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.ui;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import lumi.tasks.*;","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:56:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"/**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":" * Handles all user interaction messages for the application.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":" * Provides methods to display greeting, goodbye, delete, mark, unmark and error messages.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":" */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"public class UI {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"    private static final String LOGO \u003d \"LUMI (˶ˆᗜˆ˵)\";","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"     * Prints a greeting message.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"    public void greet() {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"        System.out.println(\"Hello from \" + LOGO + \"\\nWhat can I do for you?\");","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"     * Prints a goodbye message.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"    public void bye() {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"        System.out.println(\"Bye! See you next time :\u003e\");","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"     * Prints a delete message with the description of the deleted task.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"     * @param task The task that had been deleted.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"    public void printDeleteMessage(Task task) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"        System.out.println(\"This task has been deleted: \" + task.toString());","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kimberlee97"},"content":"     * Prints a message after the given {@link Task} has been marked as done.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kimberlee97"},"content":"     * @param task The task that had been marked.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kimberlee97"},"content":"    public void printMarkMessage(Task task) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kimberlee97"},"content":"        System.out.println(\"Yay! I\u0027ve marked your task done: \" + task);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kimberlee97"},"content":"     * Prints a message after the given {@link Task} has been unmarked.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kimberlee97"},"content":"     * @param task The task that had been unmarked.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kimberlee97"},"content":"    public void printUnmarkMessage(Task task) {","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kimberlee97"},"content":"        System.out.println(\"Oki, I\u0027ve marked your task undone: \" + task);","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kimberlee97"},"content":"    /**","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kimberlee97"},"content":"     * Prints an error message for a failed load.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kimberlee97"},"content":"     * @param e The exception thrown from the failed load attempt.","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kimberlee97"},"content":"     */","lastModifiedDate":"2025-08-30T11:10:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kimberlee97"},"content":"    public void showLoadingError(Exception e) {","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kimberlee97"},"content":"        System.out.println(\"Unable to load your file: \" + e.getMessage() + \"\\n\" + \"Starting with a new list...\");","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-29T03:23:05","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":57}},{"path":"src/test/java/lumi/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.storage;","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import lumi.exceptions.LumiException;","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"public class StorageTest {","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"    @Test","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"    public void loadTest() throws IOException, LumiException {","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"        Storage storage \u003d new Storage(\"./data/test.txt\");","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"        assertThrows(LumiException.class, storage::load);","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":16}},{"path":"src/test/java/lumi/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"package lumi.tasks;","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"public class TaskListTest {","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"    /** Test if todo, deadline and event tasks can be added to the list */","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"    @Test","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"    public void addTaskTest() {","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"        tasks.add(\"todo homework\"); // tests if todo task has been added","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"        assertEquals(1, tasks.getList().size());","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kimberlee97"},"content":"        tasks.add(\"deadline test /by 12/10/2025 16:00\"); // tests if deadline task has been added","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kimberlee97"},"content":"        assertEquals(2, tasks.getList().size());","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kimberlee97"},"content":"        tasks.add(\"event party /from 12/01/2025 15:00 /to 13/01/2025 15:00\"); // tests if event task has been added","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kimberlee97"},"content":"        assertEquals(3, tasks.getList().size());","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kimberlee97"},"content":"","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kimberlee97"},"content":"    /** Tests if invalid task entries will be ignored */","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kimberlee97"},"content":"    @Test","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kimberlee97"},"content":"    public void invalidTaskTest() {","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kimberlee97"},"content":"        tasks.add(\"todo   \"); // tests invalid task","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kimberlee97"},"content":"        assertEquals(0, tasks.getList().size());","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kimberlee97"},"content":"        tasks.add(\"deadline test /by 12/100/2005 17:00\"); // tests invalid date","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kimberlee97"},"content":"        assertEquals(0, tasks.getList().size());","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kimberlee97"},"content":"        tasks.add(\" \"); // test empty input","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kimberlee97"},"content":"        assertEquals(0, tasks.getList().size());","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kimberlee97"},"content":"    }","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kimberlee97"},"content":"}","lastModifiedDate":"2025-08-30T00:29:03","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kimberlee97"},"content":"list","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kimberlee97"},"content":"deadline Do Homework /by 12pm","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kimberlee97"},"content":"event Birthday /from 31 Aug /to 31 Aug","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kimberlee97"},"content":"todo Buy eggs","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kimberlee97"},"content":"mark 2","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kimberlee97"},"content":"mark 1","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kimberlee97"},"content":"list","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kimberlee97"},"content":"unmark 2","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kimberlee97"},"content":"list","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kimberlee97"},"content":"unmark 4","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kimberlee97"},"content":"mark1","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kimberlee97"},"content":"Buy bread","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kimberlee97"},"content":"bye","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kimberlee97"},"content":"java -classpath ../bin Lumi \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-20T16:55:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"Kimberlee97":1,"-":37}}]
