{"authorDailyContributionsMap":{"dominicddl":[{"date":"2025-08-22T00:00:00","commitResults":[{"hash":"086350d76d7653c94cb997c931a659e40c76177e","isMergeCommit":false,"messageTitle":"Renamed Duke class to Luffy and changed the  greeting message","messageBody":"","tags":["level-0"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":10}}},{"hash":"337a9686f2efda554f0f787fe862fd37040a4018","isMergeCommit":false,"messageTitle":"Refactor Luffy class to echo commands entered by the user, and exits when the user types the command bye","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":8}}},{"hash":"12b77e6b997ab4411409c679aadaff2ffc8e72fb","isMergeCommit":false,"messageTitle":"Created ArrayList to store user input","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":1}}},{"hash":"569c76c82f04c5919ca8e7049fbf76045c85a806","isMergeCommit":false,"messageTitle":"Update greeting message and add task listing feature in Luffy class","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":1}}},{"hash":"8c9bc9ed973f2254e7c6a288cc28138be1d82727","isMergeCommit":false,"messageTitle":"Created Task class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":0}}},{"hash":"3e535d43cc8f85cb8841577f6665fdfc3f210142","isMergeCommit":false,"messageTitle":"Abstracted Luffy class to use Task objects","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":4}}},{"hash":"774900fa77da2d73c168024f19d67d744f33de99","isMergeCommit":false,"messageTitle":"Add task marking and unmarking functionality in Luffy class","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"f1ba43e70fd501daaf53b62f3c0639a614de8e9b","isMergeCommit":false,"messageTitle":"Created todo class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"08db8251bd36703171913c9ee23beba79b61d7ba","isMergeCommit":false,"messageTitle":"Created deadline class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"1abe90eb319c4750bbdbddbf64600ed801bc0d70","isMergeCommit":false,"messageTitle":"Created event class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":0}}},{"hash":"0ba2c26e9a4b356ae24cdaa524b3db1c69788569","isMergeCommit":false,"messageTitle":"Add support for tracking three types of tasks: Todos, Deadlines and Events","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":9}}}]},{"date":"2025-08-23T00:00:00","commitResults":[{"hash":"6b27d1f05eb68819f2e6b65f9fb66524c1c63885","isMergeCommit":false,"messageTitle":"Simplified greeting and goodbye messages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":6}}},{"hash":"dfe644d177591d59f5b45707c956df131d4ff3c0","isMergeCommit":false,"messageTitle":"Changed scripts from Duke to Luffy","messageBody":"","fileTypesAndContributionMap":{"sh":{"insertions":1,"deletions":1}}},{"hash":"2087db4d6460f34b6c7dbdd0e1f21b252a279e44","isMergeCommit":false,"messageTitle":"Created LuffyException for error handling","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":0}}},{"hash":"eb4daefe8200369d085d17ce90d1aa3adcdcff59","isMergeCommit":false,"messageTitle":"Added error handling","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":138,"deletions":48}}},{"hash":"d09b0bd8e01b04d59f384b94de90c2b52c94c2d6","isMergeCommit":false,"messageTitle":"Added delete functionality to chatbot","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":2}}}]},{"date":"2025-08-28T00:00:00","commitResults":[{"hash":"8dd681f1db2a4cf3bd4271db0a1e3c885d7bb7c4","isMergeCommit":false,"messageTitle":"Add getter methods to Task subclasses","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":0}}},{"hash":"1970501a5f937aff4e3a5f81db5d54788600f7a5","isMergeCommit":false,"messageTitle":"Implement core saving functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":126,"deletions":0}}},{"hash":"d1739e49439de8aec74fd7195a864b22643827b2","isMergeCommit":false,"messageTitle":"Integrate save functionality after each task list modification","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"67e8a80e65c4d7ee66d982b2227f66c5161ce413","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"57fa34a70b03d43210d27c1f66402270c6594d07","isMergeCommit":false,"messageTitle":"Add date/time parsing utility methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":0}}},{"hash":"a1d8705d27a3c64259fc1dd3fc124ad50f0809bd","isMergeCommit":false,"messageTitle":"Create utility class for date/time formatting","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":26}}},{"hash":"2b4bbd16f413553227e8e493808ce757821f2747","isMergeCommit":false,"messageTitle":"Change by field to LocalDateTime in Deadline class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":4}}},{"hash":"e7ac9b52be2fbfb973dbf454e3719a8d5a8fbaf5","isMergeCommit":false,"messageTitle":"Update Event class to include LocalDateTime","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":8}}},{"hash":"e205f60ddb5ddb9d714a458086ff82d1c0f21ff4","isMergeCommit":false,"messageTitle":"Update file I/O methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":16}}},{"hash":"c05f6b92c0ac45806df1a4a7de107e223a21d9a9","isMergeCommit":false,"messageTitle":"Enhance date/time validation and display formatting","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":3}}},{"hash":"fa76e13306cd975559c020c7077caef3627804bc","isMergeCommit":false,"messageTitle":"Added due command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":70,"deletions":1}}},{"hash":"d203fa4f0b52dab0b2b7085adc0a068fae61e8a2","isMergeCommit":false,"messageTitle":"Implement full functionality for proper date/time inputs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":5}}},{"hash":"6cbf0a49a9eb62c4ace71b5b68e4237b58905c9f","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"4235f25144a5ee9fb2c3de0523a4f9a16d9ea68b","isMergeCommit":false,"messageTitle":"Create Storage class for file path management","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":4}}},{"hash":"8a379d88a36a143ea2af459ef20e8fa1fa5df8e4","isMergeCommit":false,"messageTitle":"Extract save functionality to storage class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":43}}},{"hash":"2080625cd0af116671a7a421656bf5af605af736","isMergeCommit":false,"messageTitle":"Extract loadTasksFromFile() logic to Storage class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":119,"deletions":106}}},{"hash":"68acbae9bec4c0d793386f4ea99118d429c3b28c","isMergeCommit":false,"messageTitle":"Create UI class for I/O operations","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":10}}},{"hash":"28051a23ec2352e1c3c6c96ed83fbe03fbc3be71","isMergeCommit":false,"messageTitle":"Encapsulate task list operations in TaskList class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":65,"deletions":5}}},{"hash":"1a27dcbb2f61cb862f80c9a6c241862ecebc5ba1","isMergeCommit":false,"messageTitle":"Add parser class to abstract parsing logic","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":215,"deletions":189}}},{"hash":"e1b2442b4090eccf5e0583ac2a1f1a46a6e8b888","isMergeCommit":false,"messageTitle":"Remove unnecessary function calls","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":154,"deletions":121}}},{"hash":"f29fc8b015847e1d6c41a570f2c63c2bbd3165db","isMergeCommit":false,"messageTitle":"Abstract command type logic into Command classes and its subclasses","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":392,"deletions":171}}},{"hash":"fa01cfe0355e26e1cda889e913d45ec432eb2086","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreOOP\u0027","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"eee44da3241d9a54aae971ceba486fde577fdefe","isMergeCommit":false,"messageTitle":"Restructure code base into different packages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":106,"deletions":0}}},{"hash":"50aed99cdd2aceb67db840cc313aa1f68546b756","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Packages\u0027","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{}},{"hash":"2299cf768f4d313c65eec6a62685605cad2947be","isMergeCommit":true,"messageTitle":"Merge remote-tracking branch \u0027origin/add-gradle-support\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"1ab6420f9aaf4cec30668b6eb844f5b2e722fa9c","isMergeCommit":false,"messageTitle":"Reroute main class from duke to Luffy","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"22f769544526bffc3e759ad94f41c7aed6c44f14","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Gradle\u0027","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{}},{"hash":"7941ee7bb8cf468b379a7922b00124859086d7ed","isMergeCommit":false,"messageTitle":"Create test folder structure and TaskListTests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":127,"deletions":0}}},{"hash":"b17ae5367f5a4b64ee929a4300f1cf021623d9db","isMergeCommit":false,"messageTitle":"Create DateTimeUtilsTest cases","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":161,"deletions":0}}},{"hash":"acd101d020c6cfe8d252885a97069725dd063178","isMergeCommit":false,"messageTitle":"Create Parser class test cases","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":454,"deletions":0}}},{"hash":"06cc696aa5edf484c3f3bd9ff258e1c38d6b9234","isMergeCommit":false,"messageTitle":"Create storage class test cases","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":387,"deletions":0}}},{"hash":"d9ca0c30cfb0d8ac181744a838ddfba0fcbf9e4a","isMergeCommit":false,"messageTitle":"Implement command class test cases","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":448,"deletions":0}}},{"hash":"8d2346938039e4ce31f938a22f0d9fa8674897ea","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JUnit\u0027","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{}},{"hash":"405f3d914690e41adfcc1ad134653fc13f243a2c","isMergeCommit":false,"messageTitle":"Set up shadowJar to create JAR file","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"f30b96a9907c410565454f759b07cbdef2d3e5fa","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Jar\u0027","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{}},{"hash":"0b263926137808f70299e34c111e04099f712f1d","isMergeCommit":false,"messageTitle":"Add JavaDoc for all non-trivial methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":394,"deletions":51}}},{"hash":"33c72d7b3242ab62aca0ea9744cfad068d604c35","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"","tags":["A-JavaDoc","A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"b907e40b32b3bac0fa4542ed0641f5f0da875cad","isMergeCommit":false,"messageTitle":"Implement find functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":97,"deletions":1}}},{"hash":"398f80200b9f73fb5c607464435696759efa8493","isMergeCommit":false,"messageTitle":"Implement find functionality test cases","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":354,"deletions":0}}},{"hash":"92821b4c1d4edbe8a29565c3b98c710146180b90","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-05T00:00:00","commitResults":[{"hash":"4934ca640b101cbe3fb5b77897278521f079a157","isMergeCommit":false,"messageTitle":"Update project dependencies for JavaFX","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0}}},{"hash":"33a8ea47887c5c4dd9bea537f4e0d55670163a93","isMergeCommit":false,"messageTitle":"Create Main.jaca extending Application and Launcher.java","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":46,"deletions":0}}},{"hash":"2de1bf7172c21e554876e3b3e6835dcb4c375018","isMergeCommit":false,"messageTitle":"Create GUI for Luffy with basic chat Interface","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":168,"deletions":7}}},{"hash":"3e4e14fad89df4c870eff815840f8cd8ece1f5b0","isMergeCommit":false,"messageTitle":"Implement user interaction and command processing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":288,"deletions":21}}},{"hash":"ca5965ff3292b45b05b158e537d41b4b2b2c0c2e","isMergeCommit":false,"messageTitle":"Use FXML for UI layour","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":69,"deletions":0},"java":{"insertions":93,"deletions":138}}},{"hash":"a3a3faf7ee834fb72fc95dbecf2ecd60d1b1c9de","isMergeCommit":false,"messageTitle":"Improve GUI styling using CSS","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":40,"deletions":20},"java":{"insertions":15,"deletions":3}}},{"hash":"83cf4c1ca7316538a99e15ddcc3b9b846f6e5827","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-10\u0027","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-11T00:00:00","commitResults":[{"hash":"6ccc0b7431a9c36a9a5977614996678e36c51685","isMergeCommit":false,"messageTitle":"Task and TaskList classes: Add assert statements for parameter validation","messageBody":"Task and TaskList classes currently accept potentially invalid parameters\nwithout validation, which can lead to runtime errors and makes debugging\ndifficult.\n\nAdding assert statements improves code reliability by catching invalid\ninputs early during development and serves as living documentation of\nmethod preconditions.\n\nLet\u0027s add assert statements to validate:\n* Task constructor and setDescription() method check for null and empty descriptions\n* TaskList constructor validates non-null ArrayList parameter\n* TaskList add() method ensures tasks being added are not null\n* TaskList get() and remove() methods verify indices are within valid bounds\n* TaskList getTasksOnDate() method validates non-null date parameter\n\nUsing assert statements is appropriate here because these represent\nprogramming errors that should be caught during development rather than\nruntime exceptions that users might encounter. The assertions document\nthe expected preconditions while helping developers identify bugs early\nwhen assertions are enabled with the -ea flag.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":0}}},{"hash":"8ad5715f6ac298037da74c46fed75e59072c6178","isMergeCommit":false,"messageTitle":"Add assertions for Deadline class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"3882f0ef6c4c25d4951235447daff9d12af1bea2","isMergeCommit":false,"messageTitle":"Add assertions for main Luffy class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"cf4c4269e45943798fe68d6a693c6e867aa0fb99","isMergeCommit":false,"messageTitle":"Add assertions for MarkCommand class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"5aba70eac54f88aa1287deb291fff6759b89f23c","isMergeCommit":false,"messageTitle":"Add assertions for Parser class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"c6817e0bd241fc4b8d7360a342f0ccdba98ed758","isMergeCommit":false,"messageTitle":"Add assertion for Storage class","messageBody":"","tags":["A-Assertions"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"c51bb4722861aba3e3d1fa7e3288ebbf38b4135f","isMergeCommit":false,"messageTitle":"Storage class: Refactor for better code quality and resource management","messageBody":"Storage class contains hardcoded magic strings and numbers throughout the file\noperations, uses unsafe manual resource management, and has a long save method\nthat mixes formatting logic with file I/O operations.\n\nThese issues make the code difficult to maintain, prone to resource leaks, and\nviolate the single responsibility principle by mixing concerns within methods.\n\nLet\u0027s refactor the Storage class to improve code quality:\n* Extract magic strings into named constants (TASK_SEPARATOR, TODO_MARKER, etc.)\n* Extract magic numbers into constants (DONE_STATUS, MIN_PARTS_COUNT, etc.)\n* Replace manual resource management with try-with-resources for FileWriter and BufferedReader\n* Extract formatTaskForFile() method from save() to separate formatting from I/O\n* Update all method implementations to use the new constants instead of literals\n\nUsing constants makes the code self-documenting and easier to modify. The\ntry-with-resources pattern prevents resource leaks by automatically closing\nstreams even if exceptions occur. Extracting the formatting method follows\nthe single responsibility principle and makes the code more testable and\nmaintainable.\n\nThis refactoring improves code readability, eliminates unsafe practices,\nand makes the Storage class more robust and maintainable while preserving\nall existing functionality.\n","fileTypesAndContributionMap":{"java":{"insertions":135,"deletions":113}}},{"hash":"0742f6d191f8b67c90fa529818e64c9773bb2b78","isMergeCommit":false,"messageTitle":"Refactor AddDeadlineCommand to extend AddTaskCommand and streamline task creation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":13}}},{"hash":"5474e7b70464117606d39f50c749b1882e7ad8c7","isMergeCommit":false,"messageTitle":"Refactor AddEventCommand to extend AddTaskCommand and improve task creation logic","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":13}}},{"hash":"13830f93ed1c1dd74ff0dec772dfe0a31bffa732","isMergeCommit":false,"messageTitle":"Add AddTaskCommand as an abstract base class for task addition commands, providing common functionality for task creation, persistence, and UI updates.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":0}}},{"hash":"6a48c411f25b4a5a7461711fec10f66d1a4e1794","isMergeCommit":false,"messageTitle":"Refactor AddTodoCommand to extend AddTaskCommand, simplifying task creation by delegating task instantiation to the base class.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":19}}},{"hash":"4d8a244088a95e891d4e8d8494f5f1fb53dc09b8","isMergeCommit":false,"messageTitle":"Enhance date parsing in Parser class by introducing constants for date format patterns and regex","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":21}}},{"hash":"1a2eced2841ed79fbd6103a0bbbf35b18fd9d990","isMergeCommit":true,"messageTitle":"Merge pull request #1 from dominicddl/branch-A-Assertions","messageBody":"A-Assertions","fileTypesAndContributionMap":{}},{"hash":"7b5520d10db669d77f97ff5e420f3ed707a43211","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-CodeQuality","messageBody":"","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{}},{"hash":"59f8ae310406e4dd310e77d83ec74300ff19d4d6","isMergeCommit":true,"messageTitle":"Merge pull request #2 from dominicddl/branch-A-CodeQuality","messageBody":"A-CodeQuality","fileTypesAndContributionMap":{}},{"hash":"ddc7305853251a91ed5b286c17e4db50c037b2e3","isMergeCommit":false,"messageTitle":"Add PriorityCommand and Priority enum to manage task priorities, allowing users to set and change task priority levels with various formats","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":140,"deletions":0}}},{"hash":"af0c49a0d073bebbe78c7ba8c1713d5409d0c0f9","isMergeCommit":false,"messageTitle":"Enhance task representation by adding priority information to Deadline, Event, and Todo classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":14}}},{"hash":"99ec833a22bd977c82eeed7bcea6cec8e1e060e3","isMergeCommit":false,"messageTitle":"Add support for priority commands in Parser class, enabling users to set task priorities with appropriate error handling for invalid inputs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":1}}},{"hash":"17c93320fe308a9bee9a93757863f633413dbfed","isMergeCommit":false,"messageTitle":"Update Storage class to handle task priority in file operations, supporting both old and new formats for Todo, Deadline, and Event tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":61,"deletions":22}}},{"hash":"f34bf071220b14daa02426b71048a4ea48887005","isMergeCommit":false,"messageTitle":"Implement priority change notifications in GUI and UI classes, enhancing user feedback when task priorities are modified","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":5}}},{"hash":"019039aa4a02b8e434550528c15259392a501c61","isMergeCommit":false,"messageTitle":"Implement test cases","messageBody":"","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":57}}},{"hash":"6500782576fae4670633418ebeb0f3b500dc5748","isMergeCommit":true,"messageTitle":"Merge pull request #4 from dominicddl/branch-C-Priority","messageBody":"C-Priority","fileTypesAndContributionMap":{}}]},{"date":"2025-09-18T00:00:00","commitResults":[{"hash":"520aed06fc71b1dc2ee40b6e600f4f100ca00980","isMergeCommit":false,"messageTitle":"Improve asymmetric chat UI","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":6,"deletions":7},"java":{"insertions":19,"deletions":9}}},{"hash":"7dfc9bf691203accf2f7b24d9ac84e6925a4a91d","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-BetterGui","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"f3f5accec887199ddcf85290e36af45310ddf18e","isMergeCommit":true,"messageTitle":"Merge pull request #6 from dominicddl/branch-A-BetterGui","messageBody":"Branch a better gui","fileTypesAndContributionMap":{}},{"hash":"77bc3ef53c7cb68b9c698429cb7e2d1a0be3e2f1","isMergeCommit":false,"messageTitle":"Fix CI","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"bat":{"insertions":11,"deletions":3},"sh":{"insertions":3,"deletions":2}}},{"hash":"7270f992df0c4240a84bb52f590efbb9a5e98420","isMergeCommit":false,"messageTitle":"Fix failing test cases","messageBody":"","tags":["A-FixCI","A-AiAssisted"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":8}}},{"hash":"4f163864ae4fa396b1025f68abe3839f20767096","isMergeCommit":true,"messageTitle":"Merge pull request #7 from dominicddl/branch-A-FixCI","messageBody":"Fix CI and failing test cases","fileTypesAndContributionMap":{}},{"hash":"b6cf66a66b3ca974444cd5f204ca956ed586bf54","isMergeCommit":false,"messageTitle":"Update README to reflect Luffy user guide","messageBody":"","tags":["User-Guide","A-Release"],"fileTypesAndContributionMap":{"md":{"insertions":297,"deletions":14}}}]}]},"authorFileTypeContributionMap":{"dominicddl":{"java":4445,"md":293,"fxml":88,"sh":3,"bat":11,"gradle":17,"txt":1}},"authorContributionVariance":{"dominicddl":584552.1},"authorDisplayNameMap":{"dominicddl":"CS2103T-F14a-2 CABA.. LOR"}}
