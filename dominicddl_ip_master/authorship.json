[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"    mainClass.set(\"luffy.Luffy\")","lastModifiedDate":"2025-08-28T20:50:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dominicddl"},"content":"    archiveBaseName \u003d \"Luffy\"","lastModifiedDate":"2025-08-28T21:50:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"-":39,"dominicddl":2}},{"path":"src/main/java/luffy/Luffy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import java.io.File;","lastModifiedDate":"2025-08-28T15:23:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T15:23:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"import luffy.task.TaskList;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"import luffy.storage.Storage;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"import luffy.ui.Ui;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":"import luffy.parser.Parser;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":"import luffy.command.Command;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":"import luffy.exception.LuffyException;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-22T16:59:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":"/**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":" * Main class for the Luffy task management application. This class orchestrates the interaction","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":" * between the UI, storage, and task management components. It implements the main application loop","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":" * using the Command pattern to process user input.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":" */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"public class Luffy {","lastModifiedDate":"2025-08-22T16:02:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-28T17:21:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"    private Ui ui;","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-22T16:02:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"     * Creates a new Luffy application instance with the specified file path for data storage.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"     * Initializes the UI, storage, and attempts to load existing tasks from the file. If loading","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"     * fails, starts with an empty task list and shows an error message.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"     * @param filePath the path to the file where tasks will be stored","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"    public Luffy(String filePath) {","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dominicddl"},"content":"        try {","lastModifiedDate":"2025-08-28T16:39:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dominicddl"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dominicddl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T15:23:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dominicddl"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dominicddl"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T15:23:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T15:23:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T15:23:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dominicddl"},"content":"     * Runs the main application loop. Displays the welcome message and continuously processes user","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dominicddl"},"content":"     * commands until the user chooses to exit. Uses the Command pattern to parse and execute","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dominicddl"},"content":"     * commands, with proper error handling for both application and I/O exceptions.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dominicddl"},"content":"    public void run() {","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dominicddl"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dominicddl"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dominicddl"},"content":"        while (!isExit) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dominicddl"},"content":"            try {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dominicddl"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dominicddl"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dominicddl"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dominicddl"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dominicddl"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dominicddl"},"content":"            } catch (LuffyException e) {","lastModifiedDate":"2025-08-28T16:42:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dominicddl"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dominicddl"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dominicddl"},"content":"                ui.showError(","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dominicddl"},"content":"                        \"OOPS!!! Something went wrong with file operations: \" + e.getMessage());","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dominicddl"},"content":"            } finally {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dominicddl"},"content":"                ui.showLine();","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-22T16:59:05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-22T16:59:05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dominicddl"},"content":"     * Main entry point for the Luffy application. Creates a new Luffy instance with the default","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dominicddl"},"content":"     * data file path and starts the application.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dominicddl"},"content":"     * @param args command line arguments (not used)","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dominicddl"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dominicddl"},"content":"        new Luffy(\"data\" + File.separator + \"Luffy.txt\").run();","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-22T16:02:35","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-22T16:02:35","isFullCredit":false}],"authorContributionMap":{"dominicddl":75}},{"path":"src/main/java/luffy/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.command;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"import luffy.exception.LuffyException;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"import luffy.task.TaskList;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"import luffy.task.Deadline;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":"import luffy.ui.Ui;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":"import luffy.storage.Storage;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":"import luffy.parser.Parser;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":"/**","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":" * Command to add a deadline task.","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":" */","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"    private String description;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"    private String byStr;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"    public AddDeadlineCommand(String description, String byStr) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"        this.byStr \u003d byStr;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"    @Override","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws LuffyException, IOException {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"        // Try to parse as date/time, fall back to string if parsing fails","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"        Deadline deadline;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"        try {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"            LocalDateTime by \u003d Parser.parseDateTime(byStr);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"            deadline \u003d new Deadline(description, by);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"        } catch (LuffyException e) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dominicddl"},"content":"            // If date parsing fails, create with string (backward compatibility)","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dominicddl"},"content":"            deadline \u003d new Deadline(description, byStr);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dominicddl"},"content":"        tasks.add(deadline);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dominicddl"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dominicddl"},"content":"        System.out.println(","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dominicddl"},"content":"                \"HAI! TASK ADDED:\\n\" + deadline.toString() + \"\\n\" + tasks.getTaskCountMessage());","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false}],"authorContributionMap":{"dominicddl":41}},{"path":"src/main/java/luffy/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.command;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"import luffy.exception.LuffyException;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"import luffy.task.TaskList;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"import luffy.task.Event;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":"import luffy.ui.Ui;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":"import luffy.storage.Storage;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":"import luffy.parser.Parser;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":"/**","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":" * Command to add an event task.","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":" */","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"    private String description;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"    private String fromStr;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"    private String toStr;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"    public AddEventCommand(String description, String fromStr, String toStr) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"        this.fromStr \u003d fromStr;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"        this.toStr \u003d toStr;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"    @Override","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws LuffyException, IOException {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"        // Try to parse as date/time, fall back to string if parsing fails","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"        Event event;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"        try {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"            LocalDateTime from \u003d Parser.parseDateTime(fromStr);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dominicddl"},"content":"            LocalDateTime to \u003d Parser.parseDateTime(toStr);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dominicddl"},"content":"            // Validate that start time is before end time","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dominicddl"},"content":"            Parser.validateEventTimes(from, to, fromStr, toStr);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dominicddl"},"content":"            event \u003d new Event(description, from, to);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dominicddl"},"content":"        } catch (LuffyException e) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dominicddl"},"content":"            // If date parsing fails, create with strings (backward compatibility)","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dominicddl"},"content":"            event \u003d new Event(description, fromStr, toStr);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dominicddl"},"content":"        tasks.add(event);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dominicddl"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dominicddl"},"content":"        System.out.println(","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dominicddl"},"content":"                \"HAI! TASK ADDED:\\n\" + event.toString() + \"\\n\" + tasks.getTaskCountMessage());","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false}],"authorContributionMap":{"dominicddl":48}},{"path":"src/main/java/luffy/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.command;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import luffy.task.TaskList;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"import luffy.task.Todo;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"import luffy.ui.Ui;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"import luffy.storage.Storage;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":"/**","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":" * Command to add a todo task to the task list. Todo tasks are simple tasks with just a description","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":" * and completion status.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":" */","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":"    private String description;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"     * Creates a new AddTodoCommand with the specified task description.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"     * @param description the description of the todo task to add","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"     * Executes the command by creating a new Todo task, adding it to the task list, saving the","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"     * updated list to storage, and displaying a confirmation message.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"     * @param tasks the task list to add the todo to","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"     * @param ui the user interface for displaying messages","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"     * @param storage the storage handler for saving changes","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dominicddl"},"content":"     * @throws IOException if there is an error saving to storage","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dominicddl"},"content":"    @Override","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dominicddl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dominicddl"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dominicddl"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dominicddl"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dominicddl"},"content":"        System.out.println(","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dominicddl"},"content":"                \"HAI! TASK ADDED:\\n\" + todo.toString() + \"\\n\" + tasks.getTaskCountMessage());","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false}],"authorContributionMap":{"dominicddl":42}},{"path":"src/main/java/luffy/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.command;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import luffy.exception.LuffyException;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"import luffy.task.TaskList;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"import luffy.ui.Ui;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"import luffy.storage.Storage;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":"/**","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":" * Represents a command that can be executed in the Luffy task management system. This is the base","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":" * class for all command types, implementing the Command pattern. Each concrete command encapsulates","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":" * a specific user action and its execution logic.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":" */","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":"public abstract class Command {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"     * Executes the command with the provided dependencies. This method contains the main logic for","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"     * the command and is implemented by each concrete command class.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"     * ","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"     * @param tasks the task list to operate on","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"     * @param ui the user interface for displaying messages","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"     * @param storage the storage handler for persisting changes","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"     * @throws LuffyException if there is an error during command execution","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"     * @throws IOException if there is an error with file operations","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"            throws LuffyException, IOException;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"     * Returns whether this command causes the application to exit. Most commands return false; only","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"     * ExitCommand returns true.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dominicddl"},"content":"     * ","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dominicddl"},"content":"     * @return true if this is an exit command, false otherwise","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dominicddl"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dominicddl"},"content":"        return false;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false}],"authorContributionMap":{"dominicddl":38}},{"path":"src/main/java/luffy/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.command;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import luffy.exception.LuffyException;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"import luffy.task.TaskList;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"import luffy.task.Task;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"import luffy.ui.Ui;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":"import luffy.storage.Storage;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":"/**","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":" * Command to delete a task from the task list. The task is identified by its 1-based position","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":" * number in the list.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":" */","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"    private int taskNumber;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"     * Creates a new DeleteCommand for the task at the specified position.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"     * @param taskNumber the 1-based position number of the task to delete","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"     * Executes the command by removing the specified task from the task list, saving the updated","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"     * list to storage, and displaying a confirmation message. Validates that the task number is","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"     * within valid bounds.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"     * @param tasks the task list to remove the task from","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dominicddl"},"content":"     * @param ui the user interface for displaying messages","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dominicddl"},"content":"     * @param storage the storage handler for saving changes","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dominicddl"},"content":"     * @throws LuffyException if the task number is invalid (out of bounds)","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dominicddl"},"content":"     * @throws IOException if there is an error saving to storage","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dominicddl"},"content":"    @Override","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dominicddl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws LuffyException, IOException {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dominicddl"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dominicddl"},"content":"            throw new LuffyException(\"Task \" + taskNumber + \"? That doesn\u0027t exist! I only have \"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dominicddl"},"content":"                    + tasks.size() + \" tasks!\");","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dominicddl"},"content":"        Task deletedTask \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dominicddl"},"content":"        tasks.remove(taskNumber - 1);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dominicddl"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dominicddl"},"content":"        System.out.println(\"HAI! TASK DELETED:\\n\" + deletedTask.toString() + \"\\n\"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dominicddl"},"content":"                + tasks.getTaskCountMessage());","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false}],"authorContributionMap":{"dominicddl":50}},{"path":"src/main/java/luffy/command/DueCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.command;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"import luffy.exception.LuffyException;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"import luffy.task.TaskList;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"import luffy.task.Task;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":"import luffy.ui.Ui;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":"import luffy.storage.Storage;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":"import luffy.parser.Parser;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":"/**","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":" * Command to show tasks due on a specific date.","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":" */","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"public class DueCommand extends Command {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"    private String dateStr;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"    public DueCommand(String dateStr) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"        this.dateStr \u003d dateStr;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"    @Override","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws LuffyException {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime targetDate;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"        try {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"            targetDate \u003d Parser.parseDateTime(dateStr);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"        } catch (LuffyException e) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"            throw new LuffyException(\"Invalid date format for \u0027due\u0027 command. \" + e.getMessage());","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.getTasksOnDate(targetDate);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dominicddl"},"content":"        ui.showTasksOnDate(matchingTasks, targetDate);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false}],"authorContributionMap":{"dominicddl":34}},{"path":"src/main/java/luffy/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.command;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import luffy.task.TaskList;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import luffy.ui.Ui;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"import luffy.storage.Storage;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"/**","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":" * Command to exit the application. This command displays a goodbye message and signals the","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":" * application to terminate.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":" */","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":"     * Executes the exit command by displaying the goodbye message. The application loop will","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"     * terminate after this command executes because isExit() returns true.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"     * @param tasks the task list (not used by this command)","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"     * @param ui the user interface for displaying the goodbye message","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"     * @param storage the storage handler (not used by this command)","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"    @Override","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"        ui.showGoodbye();","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"     * Returns true to indicate this command causes the application to exit.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"     * @return true, indicating this is an exit command","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"    @Override","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dominicddl"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dominicddl"},"content":"        return true;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false}],"authorContributionMap":{"dominicddl":35}},{"path":"src/main/java/luffy/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.command;","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import luffy.task.TaskList;","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"import luffy.task.Task;","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"import luffy.ui.Ui;","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"import luffy.storage.Storage;","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":"/**","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":" * Command to find tasks by searching for keywords in task descriptions. Performs case-insensitive","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":" * substring matching and requires all keywords to be present in the task description.","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":" */","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":"    private String[] keywords;","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"     * Creates a new FindCommand with the specified search keywords.","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"     * @param keywords array of keywords to search for in task descriptions","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"    public FindCommand(String[] keywords) {","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"     * Executes the find command by searching through all tasks for ones that contain all specified","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"     * keywords in their descriptions. Displays matching tasks with sequential numbering or shows a","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"     * \"no matches\" message if no tasks are found.","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"     * @param tasks the task list to search through","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"     * @param ui the user interface for displaying results","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dominicddl"},"content":"     * @param storage the storage handler (not used by this command)","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dominicddl"},"content":"    @Override","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dominicddl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dominicddl"},"content":"        // Search through all tasks","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dominicddl"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dominicddl"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dominicddl"},"content":"            String description \u003d task.getDescription().toLowerCase();","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dominicddl"},"content":"            // Check if all keywords are present in the description","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dominicddl"},"content":"            boolean allKeywordsMatch \u003d true;","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dominicddl"},"content":"            for (String keyword : keywords) {","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dominicddl"},"content":"                if (!description.contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dominicddl"},"content":"                    allKeywordsMatch \u003d false;","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dominicddl"},"content":"                    break;","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dominicddl"},"content":"                }","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dominicddl"},"content":"            if (allKeywordsMatch) {","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dominicddl"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dominicddl"},"content":"        // Display results","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dominicddl"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dominicddl"},"content":"            System.out.println(\"No matching tasks found.\");","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dominicddl"},"content":"        } else {","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dominicddl"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dominicddl"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dominicddl"},"content":"                System.out.println((i + 1) + \".\" + matchingTasks.get(i).toString());","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false}],"authorContributionMap":{"dominicddl":67}},{"path":"src/main/java/luffy/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.command;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import luffy.task.TaskList;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import luffy.ui.Ui;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"import luffy.storage.Storage;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"/**","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":" * Command to list all tasks.","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":" */","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":"    @Override","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"            System.out.println(i + 1 + \". \" + tasks.get(i).toString());","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false}],"authorContributionMap":{"dominicddl":19}},{"path":"src/main/java/luffy/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.command;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import luffy.exception.LuffyException;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"import luffy.task.TaskList;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"import luffy.ui.Ui;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"import luffy.storage.Storage;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":"/**","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":" * Command to mark a task as done.","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":" */","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":"    private int taskNumber;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"    @Override","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws LuffyException, IOException {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"            throw new LuffyException(\"Task \" + taskNumber + \"? That doesn\u0027t exist! I only have \"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"                    + tasks.size() + \" tasks!\");","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"        tasks.get(taskNumber - 1).setDone(true);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"        System.out.println(\"KAIZOKU! \" + \"\\n\" + tasks.get(taskNumber - 1).getStatusIcon() + \" \"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"                + tasks.get(taskNumber - 1).getDescription());","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false}],"authorContributionMap":{"dominicddl":31}},{"path":"src/main/java/luffy/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.command;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import luffy.exception.LuffyException;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"import luffy.task.TaskList;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"import luffy.ui.Ui;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"import luffy.storage.Storage;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":"/**","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":" * Command to unmark a task (mark as not done).","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":" */","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":"    private int taskNumber;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"    @Override","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws LuffyException, IOException {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"            throw new LuffyException(\"Task \" + taskNumber + \"? That doesn\u0027t exist! I only have \"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"                    + tasks.size() + \" tasks!\");","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"        tasks.get(taskNumber - 1).setDone(false);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"        System.out.println(\"NANI?\" + \"\\n\" + tasks.get(taskNumber - 1).getStatusIcon() + \" \"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"                + tasks.get(taskNumber - 1).getDescription());","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false}],"authorContributionMap":{"dominicddl":31}},{"path":"src/main/java/luffy/exception/LuffyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.exception;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"/**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":" * Custom exception class for the Luffy task management application. This exception is thrown when","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":" * there are application-specific errors such as invalid user input, command parsing failures, or","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":" * business logic violations. All error messages are prefixed with \"OOPS!!!\" to maintain the","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":" * application\u0027s character.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":" */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":"public class LuffyException extends Exception {","lastModifiedDate":"2025-08-23T00:18:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":"     * Creates a new LuffyException with the specified error message.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":"     * @param message the detailed error message describing what went wrong","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"    public LuffyException(String message) {","lastModifiedDate":"2025-08-23T00:18:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"        super(message);","lastModifiedDate":"2025-08-23T00:18:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-23T00:18:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-23T00:18:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"     * Returns the error message with \"OOPS!!!\" prefix. This maintains consistency with the","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"     * application\u0027s error message format.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"     * @return the formatted error message with \"OOPS!!!\" prefix","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"    public String getMessage() {","lastModifiedDate":"2025-08-23T00:18:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"        return \"OOPS!!! \" + super.getMessage();","lastModifiedDate":"2025-08-23T00:18:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-23T00:18:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-23T00:18:41","isFullCredit":false}],"authorContributionMap":{"dominicddl":29}},{"path":"src/main/java/luffy/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.parser;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"import luffy.exception.LuffyException;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":"import luffy.command.*;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":"/**","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":" * Deals with making sense of the user command and parsing date/time strings. This class provides","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":" * static methods to parse user input commands into Command objects and to parse date/time strings","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":" * in various formats into LocalDateTime objects. It also includes validation methods for different","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":" * command types.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":" */","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"     * Parses a date/time string into LocalDateTime object. Supports multiple date and time formats","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"     * with flexible input parsing.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"     * ","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"     * Supported formats: - yyyy-mm-dd (date only, time defaults to 23:59) - yyyy-mm-dd HHmm (date","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"     * with time in 24-hour format) - yyyy-mm-dd HH:mm (date with time in 24-hour format) -","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"     * yyyy-mm-dd h:mm AM/PM (date with time in 12-hour format) - d/m/yyyy (date only, time defaults","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"     * to 23:59) - d/m/yyyy HHmm (date with time in 24-hour format) - d/m/yyyy HH:mm (date with time","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"     * in 24-hour format) - d/m/yyyy h:mm AM/PM (date with time in 12-hour format)","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"     * @param dateTimeStr the date/time string to parse","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"     * @return LocalDateTime object representing the parsed date and time","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"     * @throws LuffyException if the date/time string cannot be parsed","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dominicddl"},"content":"    public static LocalDateTime parseDateTime(String dateTimeStr) throws LuffyException {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dominicddl"},"content":"        dateTimeStr \u003d dateTimeStr.trim();","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dominicddl"},"content":"        // Define possible formatters","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dominicddl"},"content":"        DateTimeFormatter[] formatters \u003d {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dominicddl"},"content":"                // yyyy-mm-dd formats","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dominicddl"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dominicddl"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"),","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dominicddl"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd h:mm a\"),","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dominicddl"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"),","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dominicddl"},"content":"                // d/m/yyyy formats","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dominicddl"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"),","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dominicddl"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy HH:mm\"),","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dominicddl"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy h:mm a\"),","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dominicddl"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy\")};","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dominicddl"},"content":"        // Try parsing with each formatter","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dominicddl"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dominicddl"},"content":"            try {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dominicddl"},"content":"                if (dateTimeStr.matches(\".*\\\\d{4}-\\\\d{2}-\\\\d{2}$\")","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dominicddl"},"content":"                        || dateTimeStr.matches(\".*\\\\d{1,2}/\\\\d{1,2}/\\\\d{4}$\")) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dominicddl"},"content":"                    // Date only formats - parse as LocalDate and set time to 23:59","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dominicddl"},"content":"                    LocalDate date \u003d LocalDate.parse(dateTimeStr, formatter);","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dominicddl"},"content":"                    return date.atTime(23, 59);","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dominicddl"},"content":"                } else {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dominicddl"},"content":"                    // Date with time formats","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dominicddl"},"content":"                    return LocalDateTime.parse(dateTimeStr, formatter);","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dominicddl"},"content":"                }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dominicddl"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dominicddl"},"content":"                // Continue to next formatter","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dominicddl"},"content":"        // If no formatter worked, provide helpful error message with suggestions","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dominicddl"},"content":"        String suggestion \u003d getDateFormatSuggestion(dateTimeStr);","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dominicddl"},"content":"        throw new LuffyException(\"Invalid date/time format: \u0027\" + dateTimeStr + \"\u0027. \" + suggestion","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dominicddl"},"content":"                + \" Valid formats: 2019-12-02, 2019-12-02 1800, 2019-12-02 18:00, 2019-12-02 6:00 PM, \"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dominicddl"},"content":"                + \"2/12/2019, 2/12/2019 1800, 2/12/2019 18:00, or 2/12/2019 6:00 PM\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dominicddl"},"content":"     * Validates that the event start time is before end time.","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dominicddl"},"content":"    public static void validateEventTimes(LocalDateTime from, LocalDateTime to,","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dominicddl"},"content":"            String originalFromStr, String originalToStr) throws LuffyException {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dominicddl"},"content":"        if (from.isAfter(to)) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dominicddl"},"content":"            throw new LuffyException(\"Event start time \u0027\" + originalFromStr","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dominicddl"},"content":"                    + \"\u0027 cannot be after end time \u0027\" + originalToStr + \"\u0027!\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dominicddl"},"content":"        if (from.equals(to)) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dominicddl"},"content":"            throw new LuffyException(\"Event start time and end time cannot be the same! \u0027\"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dominicddl"},"content":"                    + originalFromStr + \"\u0027 \u003d \u0027\" + originalToStr + \"\u0027\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dominicddl"},"content":"     * Provides helpful suggestions for common date format mistakes.","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dominicddl"},"content":"    private static String getDateFormatSuggestion(String invalidDate) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dominicddl"},"content":"        if (invalidDate.matches(\"\\\\d{1,2}-\\\\d{1,2}-\\\\d{4}\")) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dominicddl"},"content":"            return \"Did you mean to use \u0027/\u0027 instead of \u0027-\u0027? Try: \" + invalidDate.replace(\"-\", \"/\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dominicddl"},"content":"        if (invalidDate.matches(\"\\\\d{4}/\\\\d{1,2}/\\\\d{1,2}\")) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dominicddl"},"content":"            return \"For yyyy/mm/dd format, use \u0027-\u0027 instead: \" + invalidDate.replace(\"/\", \"-\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dominicddl"},"content":"        if (invalidDate.matches(\"\\\\d{1,2}/\\\\d{1,2}/\\\\d{2}\")) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dominicddl"},"content":"            return \"Use 4-digit year: \" + invalidDate.substring(0, invalidDate.length() - 2) + \"20\"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dominicddl"},"content":"                    + invalidDate.substring(invalidDate.length() - 2);","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dominicddl"},"content":"        return \"Check the date format and try again.\";","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dominicddl"},"content":"     * Validates todo command input.","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dominicddl"},"content":"    public static void validateTodoCommand(String input) throws LuffyException {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dominicddl"},"content":"        if (input.trim().length() \u003c\u003d 4 || input.substring(4).trim().isEmpty()) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dominicddl"},"content":"            throw new LuffyException(","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dominicddl"},"content":"                    \"Hey! A todo task needs a description, you know! I can\u0027t remember nothing!\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dominicddl"},"content":"     * Validates deadline command input.","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dominicddl"},"content":"    public static void validateDeadlineCommand(String input) throws LuffyException {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dominicddl"},"content":"        if (input.trim().length() \u003c\u003d 8 || input.substring(8).trim().isEmpty()) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dominicddl"},"content":"            throw new LuffyException(","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dominicddl"},"content":"                    \"Oi! You gotta tell me what the deadline is for! I\u0027m not a mind reader!\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dominicddl"},"content":"        int byIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dominicddl"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dominicddl"},"content":"            throw new LuffyException(","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dominicddl"},"content":"                    \"Where\u0027s the \u0027/by\u0027 part? I need to know when this deadline is, dattebayo!\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"dominicddl"},"content":"        if (byIndex + 3 \u003e\u003d input.length() || input.substring(byIndex + 3).trim().isEmpty()) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"dominicddl"},"content":"            throw new LuffyException(","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"dominicddl"},"content":"                    \"You forgot to tell me WHEN the deadline is! Put something after \u0027/by\u0027!\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"dominicddl"},"content":"     * Validates event command input.","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"dominicddl"},"content":"    public static void validateEventCommand(String input) throws LuffyException {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"dominicddl"},"content":"        if (input.trim().length() \u003c\u003d 5 || input.substring(5).trim().isEmpty()) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"dominicddl"},"content":"            throw new LuffyException(","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"dominicddl"},"content":"                    \"What event are we talking about? Give me a description, nakama!\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"dominicddl"},"content":"        int fromIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"dominicddl"},"content":"        int toIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"dominicddl"},"content":"        if (fromIndex \u003d\u003d -1) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"dominicddl"},"content":"            throw new LuffyException(","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"dominicddl"},"content":"                    \"Missing \u0027/from\u0027! When does this event start? I need to know!\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"dominicddl"},"content":"        if (toIndex \u003d\u003d -1) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"dominicddl"},"content":"            throw new LuffyException(","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"dominicddl"},"content":"                    \"Missing \u0027/to\u0027! When does this event end? Don\u0027t leave me hanging!\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"dominicddl"},"content":"        if (fromIndex \u003e\u003d toIndex) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"dominicddl"},"content":"            throw new LuffyException(","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"dominicddl"},"content":"                    \"Hey! \u0027/from\u0027 should come before \u0027/to\u0027! That\u0027s just common sense!\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"dominicddl"},"content":"        if (fromIndex + 5 \u003e\u003d input.length()","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"dominicddl"},"content":"                || input.substring(fromIndex + 5, toIndex).trim().isEmpty()) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"dominicddl"},"content":"            throw new LuffyException(","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"dominicddl"},"content":"                    \"You didn\u0027t tell me when it starts! Put something after \u0027/from\u0027!\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"dominicddl"},"content":"        if (toIndex + 3 \u003e\u003d input.length() || input.substring(toIndex + 3).trim().isEmpty()) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"dominicddl"},"content":"            throw new LuffyException(\"You didn\u0027t tell me when it ends! Put something after \u0027/to\u0027!\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"dominicddl"},"content":"     * Validates mark/unmark command input.","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"dominicddl"},"content":"    public static void validateMarkUnmarkCommand(String input, boolean isMark, int taskCount)","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"dominicddl"},"content":"            throws LuffyException {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"dominicddl"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"dominicddl"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"dominicddl"},"content":"            String action \u003d isMark ? \"mark\" : \"unmark\";","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"dominicddl"},"content":"            throw new LuffyException(","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"dominicddl"},"content":"                    \"Which task do you want me to \" + action + \"? Give me a number!\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"dominicddl"},"content":"        try {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"dominicddl"},"content":"            int taskNumber \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"dominicddl"},"content":"            if (taskNumber \u003c 1 || taskNumber \u003e taskCount) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"dominicddl"},"content":"                throw new LuffyException(\"Task \" + taskNumber + \"? That doesn\u0027t exist! I only have \"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"dominicddl"},"content":"                        + taskCount + \" tasks!\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"dominicddl"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"dominicddl"},"content":"            throw new LuffyException(","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"dominicddl"},"content":"                    \"\u0027\" + parts[1] + \"\u0027 is not a number! Give me a proper task number!\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"dominicddl"},"content":"     * Validates delete command input.","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"dominicddl"},"content":"    public static void validateDeleteCommand(String input, int taskCount) throws LuffyException {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"dominicddl"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"dominicddl"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"dominicddl"},"content":"            throw new LuffyException(\"Which task do you want me to delete? Give me a number!\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"dominicddl"},"content":"        try {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"dominicddl"},"content":"            int taskNumber \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"dominicddl"},"content":"            if (taskNumber \u003c 1 || taskNumber \u003e taskCount) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"dominicddl"},"content":"                throw new LuffyException(\"Task \" + taskNumber + \"? That doesn\u0027t exist! I only have \"","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"dominicddl"},"content":"                        + taskCount + \" tasks!\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"dominicddl"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"dominicddl"},"content":"            throw new LuffyException(","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"dominicddl"},"content":"                    \"\u0027\" + parts[1] + \"\u0027 is not a number! Give me a proper task number!\");","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"dominicddl"},"content":"     * Parses user input and returns the appropriate Command object. Supports various command types","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"dominicddl"},"content":"     * including todo, deadline, event, mark, unmark, delete, list, due, and bye commands. Command","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"dominicddl"},"content":"     * parsing is case-insensitive.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"dominicddl"},"content":"     * @param fullCommand the complete user input command string","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"dominicddl"},"content":"     * @return Command object corresponding to the user\u0027s input","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"dominicddl"},"content":"     * @throws LuffyException if the command is unknown or has invalid format","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"dominicddl"},"content":"    public static Command parse(String fullCommand) throws LuffyException {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"dominicddl"},"content":"        String input \u003d fullCommand.trim();","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"dominicddl"},"content":"        // If input is \"bye\", return ExitCommand","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"dominicddl"},"content":"        if (input.equals(\"bye\") || input.equals(\"Bye\") || input.equals(\"BYE\")) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"dominicddl"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"dominicddl"},"content":"        // If input is \"list\", return ListCommand","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"dominicddl"},"content":"        if (input.equals(\"list\") || input.equals(\"List\") || input.equals(\"LIST\")) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"dominicddl"},"content":"            return new ListCommand();","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"dominicddl"},"content":"        // If input starts with \"todo\", return AddTodoCommand","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"dominicddl"},"content":"        if (input.startsWith(\"todo\") || input.startsWith(\"Todo\") || input.startsWith(\"TODO\")) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"dominicddl"},"content":"            validateTodoCommand(input);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"dominicddl"},"content":"            String description \u003d input.substring(4).trim();","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"dominicddl"},"content":"            return new AddTodoCommand(description);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"dominicddl"},"content":"        // If input starts with \"deadline\", return AddDeadlineCommand","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"dominicddl"},"content":"        if (input.startsWith(\"deadline\") || input.startsWith(\"Deadline\")","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"dominicddl"},"content":"                || input.startsWith(\"DEADLINE\")) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"dominicddl"},"content":"            validateDeadlineCommand(input);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"dominicddl"},"content":"            int byIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"dominicddl"},"content":"            String description \u003d input.substring(8, byIndex).trim();","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"dominicddl"},"content":"            String byStr \u003d input.substring(byIndex + 3).trim();","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"dominicddl"},"content":"            return new AddDeadlineCommand(description, byStr);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"dominicddl"},"content":"        // If input starts with \"event\", return AddEventCommand","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"dominicddl"},"content":"        if (input.startsWith(\"event\") || input.startsWith(\"Event\") || input.startsWith(\"EVENT\")) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"dominicddl"},"content":"            validateEventCommand(input);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"dominicddl"},"content":"            int fromIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"dominicddl"},"content":"            int toIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"dominicddl"},"content":"            String description \u003d input.substring(5, fromIndex).trim();","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"dominicddl"},"content":"            String fromStr \u003d input.substring(fromIndex + 5, toIndex).trim();","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"dominicddl"},"content":"            String toStr \u003d input.substring(toIndex + 3).trim();","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"dominicddl"},"content":"            return new AddEventCommand(description, fromStr, toStr);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"dominicddl"},"content":"        // If input starts with \"mark\", return MarkCommand","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"dominicddl"},"content":"        if (input.startsWith(\"mark\") || input.startsWith(\"Mark\") || input.startsWith(\"MARK\")) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"dominicddl"},"content":"            // We need to pass taskCount for validation, but we don\u0027t have access to it here","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"dominicddl"},"content":"            // We\u0027ll validate in the command execution instead","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"dominicddl"},"content":"            String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"dominicddl"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"dominicddl"},"content":"                throw new LuffyException(\"Which task do you want me to mark? Give me a number!\");","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"dominicddl"},"content":"            try {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"dominicddl"},"content":"                int taskNumber \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"dominicddl"},"content":"                return new MarkCommand(taskNumber);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"dominicddl"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"dominicddl"},"content":"                throw new LuffyException(","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"dominicddl"},"content":"                        \"\u0027\" + parts[1] + \"\u0027 is not a number! Give me a proper task number!\");","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"dominicddl"},"content":"        // If input starts with \"unmark\", return UnmarkCommand","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"dominicddl"},"content":"        if (input.startsWith(\"unmark\") || input.startsWith(\"Unmark\")","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"dominicddl"},"content":"                || input.startsWith(\"UNMARK\")) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"dominicddl"},"content":"            String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"dominicddl"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"dominicddl"},"content":"                throw new LuffyException(\"Which task do you want me to unmark? Give me a number!\");","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"dominicddl"},"content":"            try {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"dominicddl"},"content":"                int taskNumber \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"dominicddl"},"content":"                return new UnmarkCommand(taskNumber);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"dominicddl"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"dominicddl"},"content":"                throw new LuffyException(","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"dominicddl"},"content":"                        \"\u0027\" + parts[1] + \"\u0027 is not a number! Give me a proper task number!\");","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"dominicddl"},"content":"        // If input starts with \"delete\", return DeleteCommand","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"dominicddl"},"content":"        if (input.startsWith(\"delete\") || input.startsWith(\"Delete\")","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"dominicddl"},"content":"                || input.startsWith(\"DELETE\")) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"dominicddl"},"content":"            String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"dominicddl"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"dominicddl"},"content":"                throw new LuffyException(\"Which task do you want me to delete? Give me a number!\");","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"dominicddl"},"content":"            try {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"dominicddl"},"content":"                int taskNumber \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"dominicddl"},"content":"                return new DeleteCommand(taskNumber);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"dominicddl"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"dominicddl"},"content":"                throw new LuffyException(","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"dominicddl"},"content":"                        \"\u0027\" + parts[1] + \"\u0027 is not a number! Give me a proper task number!\");","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"dominicddl"},"content":"        // If input starts with \"due\", return DueCommand","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"dominicddl"},"content":"        if (input.startsWith(\"due\") || input.startsWith(\"Due\") || input.startsWith(\"DUE\")) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"dominicddl"},"content":"            String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"dominicddl"},"content":"            if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"dominicddl"},"content":"                throw new LuffyException(\"Which date do you want to check? Use: due 2019-12-02\");","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"dominicddl"},"content":"            String dateStr \u003d parts[1].trim();","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"dominicddl"},"content":"            return new DueCommand(dateStr);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"dominicddl"},"content":"        // If input starts with \"find\", return FindCommand","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"dominicddl"},"content":"        if (input.startsWith(\"find\") || input.startsWith(\"Find\") || input.startsWith(\"FIND\")) {","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"dominicddl"},"content":"            String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"dominicddl"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"dominicddl"},"content":"                throw new LuffyException(\"What do you want to find? Give me some keywords!\");","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"dominicddl"},"content":"            // Extract keywords (skip the \"find\" command word)","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"dominicddl"},"content":"            String[] keywords \u003d new String[parts.length - 1];","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"dominicddl"},"content":"            for (int i \u003d 1; i \u003c parts.length; i++) {","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"dominicddl"},"content":"                keywords[i - 1] \u003d parts[i].trim();","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"dominicddl"},"content":"            // Check if all keywords are empty or whitespace","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"dominicddl"},"content":"            boolean hasValidKeyword \u003d false;","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"dominicddl"},"content":"            for (String keyword : keywords) {","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"dominicddl"},"content":"                if (!keyword.isEmpty()) {","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"dominicddl"},"content":"                    hasValidKeyword \u003d true;","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"dominicddl"},"content":"                    break;","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"dominicddl"},"content":"                }","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"dominicddl"},"content":"            if (!hasValidKeyword) {","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"dominicddl"},"content":"                throw new LuffyException(\"What do you want to find? Give me some keywords!\");","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"dominicddl"},"content":"            return new FindCommand(keywords);","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"dominicddl"},"content":"        // If we get here, it\u0027s an unknown command","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"dominicddl"},"content":"        if (!input.isEmpty()) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"dominicddl"},"content":"            throw new LuffyException(\"I don\u0027t understand \u0027\" + input","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"dominicddl"},"content":"                    + \"\u0027! Try: todo, deadline, event, mark, unmark, delete, list, due, find, or bye!\");","lastModifiedDate":"2025-08-28T22:27:37","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"dominicddl"},"content":"        // Empty input - just return null or handle as needed","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"dominicddl"},"content":"        throw new LuffyException(\"Please enter a command!\");","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-28T17:49:02","isFullCredit":false}],"authorContributionMap":{"dominicddl":365}},{"path":"src/main/java/luffy/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.storage;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import java.io.File;","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":"import luffy.task.Task;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":"import luffy.task.Todo;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":"import luffy.task.Deadline;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":"import luffy.task.Event;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":"import luffy.util.DateTimeUtil;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"/**","lastModifiedDate":"2025-08-28T17:21:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":" * Handles the loading and saving of tasks to and from the file. This class manages file I/O","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":" * operations for task persistence, supporting both new LocalDateTime-based tasks and legacy","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":" * string-based tasks for backward compatibility. The file format uses pipe-separated values with","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":" * different formats for each task type.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":" */","lastModifiedDate":"2025-08-28T17:21:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"public class Storage {","lastModifiedDate":"2025-08-28T17:21:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"    private String filePath;","lastModifiedDate":"2025-08-28T17:21:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:21:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"     * Creates a new Storage instance with the specified file path.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"     * @param filePath the path to the file where tasks will be stored","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-28T17:21:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-28T17:21:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:21:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:21:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dominicddl"},"content":"     * Returns the file path used by this Storage instance.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dominicddl"},"content":"     * @return the file path for task storage","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dominicddl"},"content":"    public String getFilePath() {","lastModifiedDate":"2025-08-28T17:21:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dominicddl"},"content":"        return filePath;","lastModifiedDate":"2025-08-28T17:21:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:21:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dominicddl"},"content":"     * Saves the task list to the file in a pipe-separated format. Creates the data directory if it","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dominicddl"},"content":"     * doesn\u0027t exist. Supports both LocalDateTime-based tasks (saved in ISO format) and legacy","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dominicddl"},"content":"     * string-based tasks (saved in original format).","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dominicddl"},"content":"     * @param tasks the list of tasks to save","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dominicddl"},"content":"     * @throws IOException if the file cannot be written to","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dominicddl"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dominicddl"},"content":"        // Create data directory if it doesn\u0027t exist","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dominicddl"},"content":"        File dataDir \u003d new File(\"data\");","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dominicddl"},"content":"        if (!dataDir.exists()) {","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dominicddl"},"content":"            dataDir.mkdirs();","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dominicddl"},"content":"        FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dominicddl"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dominicddl"},"content":"            String line \u003d \"\";","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dominicddl"},"content":"            int status \u003d task.isDone() ? 1 : 0;","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dominicddl"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dominicddl"},"content":"                line \u003d \"T | \" + status + \" | \" + task.getDescription();","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dominicddl"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dominicddl"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dominicddl"},"content":"                if (deadline.hasDateTime()) {","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dominicddl"},"content":"                    // Save LocalDateTime in ISO format for new data","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dominicddl"},"content":"                    line \u003d \"D | \" + status + \" | \" + task.getDescription() + \" | \"","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dominicddl"},"content":"                            + DateTimeUtil.formatDateTimeForFile(deadline.getBy());","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dominicddl"},"content":"                } else {","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dominicddl"},"content":"                    // Save as string for backward compatibility","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dominicddl"},"content":"                    line \u003d \"D | \" + status + \" | \" + task.getDescription() + \" | \"","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dominicddl"},"content":"                            + deadline.getByAsString();","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dominicddl"},"content":"                }","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dominicddl"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dominicddl"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dominicddl"},"content":"                if (event.hasDateTime()) {","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dominicddl"},"content":"                    // Save LocalDateTime in ISO format for new data (separate from and to","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dominicddl"},"content":"                    // fields)","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dominicddl"},"content":"                    line \u003d \"E | \" + status + \" | \" + task.getDescription() + \" | \"","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dominicddl"},"content":"                            + DateTimeUtil.formatDateTimeForFile(event.getFrom()) + \" | \"","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dominicddl"},"content":"                            + DateTimeUtil.formatDateTimeForFile(event.getTo());","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dominicddl"},"content":"                } else {","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dominicddl"},"content":"                    // Save as combined string for backward compatibility","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dominicddl"},"content":"                    line \u003d \"E | \" + status + \" | \" + task.getDescription() + \" | \"","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dominicddl"},"content":"                            + event.getDuration();","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dominicddl"},"content":"                }","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dominicddl"},"content":"            writer.write(line + System.lineSeparator());","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dominicddl"},"content":"        writer.close();","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:25:27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dominicddl"},"content":"     * Loads tasks from the file, parsing each line according to the task format. Supports both new","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dominicddl"},"content":"     * LocalDateTime-based format and legacy string-based format. Handles corrupted data gracefully","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dominicddl"},"content":"     * by skipping invalid lines and printing error messages. Returns an empty list if the file","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dominicddl"},"content":"     * doesn\u0027t exist.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dominicddl"},"content":"     * @return ArrayList of tasks loaded from file, empty if file doesn\u0027t exist","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dominicddl"},"content":"     * @throws IOException if the file cannot be read","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dominicddl"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dominicddl"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dominicddl"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dominicddl"},"content":"            return tasks; // Return empty list if file doesn\u0027t exist","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dominicddl"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dominicddl"},"content":"        String line;","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dominicddl"},"content":"        int lineNumber \u003d 0;","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dominicddl"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dominicddl"},"content":"            lineNumber++;","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dominicddl"},"content":"            line \u003d line.trim();","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dominicddl"},"content":"            if (line.isEmpty()) {","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dominicddl"},"content":"                continue; // Skip empty lines","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dominicddl"},"content":"            try {","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dominicddl"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dominicddl"},"content":"                if (parts.length \u003c 3) {","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dominicddl"},"content":"                    System.out.println(","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"dominicddl"},"content":"                            \"OOPS!!! Corrupted data found at line \" + lineNumber + \": \" + line);","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"dominicddl"},"content":"                    continue;","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"dominicddl"},"content":"                }","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"dominicddl"},"content":"                String taskType \u003d parts[0].trim();","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"dominicddl"},"content":"                int status \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"dominicddl"},"content":"                String description \u003d parts[2].trim();","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"dominicddl"},"content":"                Task task \u003d null;","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"dominicddl"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"dominicddl"},"content":"                    if (parts.length !\u003d 3) {","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"dominicddl"},"content":"                        System.out.println(","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"dominicddl"},"content":"                                \"OOPS!!! Corrupted Todo data at line \" + lineNumber + \": \" + line);","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"dominicddl"},"content":"                        continue;","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"dominicddl"},"content":"                    }","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"dominicddl"},"content":"                    task \u003d new Todo(description);","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"dominicddl"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"dominicddl"},"content":"                    if (parts.length !\u003d 4) {","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"dominicddl"},"content":"                        System.out.println(\"OOPS!!! Corrupted Deadline data at line \" + lineNumber","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"dominicddl"},"content":"                                + \": \" + line);","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"dominicddl"},"content":"                        continue;","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"dominicddl"},"content":"                    }","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"dominicddl"},"content":"                    String byString \u003d parts[3].trim();","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"dominicddl"},"content":"                    // Try to parse as ISO LocalDateTime first (new format)","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"dominicddl"},"content":"                    try {","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"dominicddl"},"content":"                        LocalDateTime by \u003d DateTimeUtil.parseDateTimeFromFile(byString);","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"dominicddl"},"content":"                        task \u003d new Deadline(description, by);","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"dominicddl"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"dominicddl"},"content":"                        // If ISO parsing fails, treat as old string format","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"dominicddl"},"content":"                        task \u003d new Deadline(description, byString);","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"dominicddl"},"content":"                    }","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"dominicddl"},"content":"                } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"dominicddl"},"content":"                    if (parts.length \u003d\u003d 5) {","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"dominicddl"},"content":"                        // New format: E | status | description | from_iso | to_iso","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"dominicddl"},"content":"                        String fromString \u003d parts[3].trim();","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"dominicddl"},"content":"                        String toString \u003d parts[4].trim();","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"dominicddl"},"content":"                        try {","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"dominicddl"},"content":"                            LocalDateTime from \u003d DateTimeUtil.parseDateTimeFromFile(fromString);","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"dominicddl"},"content":"                            LocalDateTime to \u003d DateTimeUtil.parseDateTimeFromFile(toString);","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"dominicddl"},"content":"                            task \u003d new Event(description, from, to);","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"dominicddl"},"content":"                        } catch (Exception e) {","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"dominicddl"},"content":"                            System.out.println(\"OOPS!!! Invalid date format in Event at line \"","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"dominicddl"},"content":"                                    + lineNumber + \": \" + line);","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"dominicddl"},"content":"                            continue;","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"dominicddl"},"content":"                        }","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"dominicddl"},"content":"                    } else if (parts.length \u003d\u003d 4) {","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"dominicddl"},"content":"                        // Old format: E | status | description | duration","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"dominicddl"},"content":"                        String duration \u003d parts[3].trim();","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"dominicddl"},"content":"                        // Parse duration back to from and to","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"dominicddl"},"content":"                        String[] durationParts \u003d duration.split(\" to \");","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"dominicddl"},"content":"                        if (durationParts.length !\u003d 2) {","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"dominicddl"},"content":"                            System.out.println(\"OOPS!!! Corrupted Event duration at line \"","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"dominicddl"},"content":"                                    + lineNumber + \": \" + line);","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"dominicddl"},"content":"                            continue;","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"dominicddl"},"content":"                        }","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"dominicddl"},"content":"                        task \u003d new Event(description, durationParts[0], durationParts[1]);","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"dominicddl"},"content":"                    } else {","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"dominicddl"},"content":"                        System.out.println(","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"dominicddl"},"content":"                                \"OOPS!!! Corrupted Event data at line \" + lineNumber + \": \" + line);","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"dominicddl"},"content":"                        continue;","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"dominicddl"},"content":"                    }","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"dominicddl"},"content":"                } else {","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"dominicddl"},"content":"                    System.out.println(","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"dominicddl"},"content":"                            \"OOPS!!! Unknown task type at line \" + lineNumber + \": \" + line);","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"dominicddl"},"content":"                    continue;","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"dominicddl"},"content":"                }","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"dominicddl"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"dominicddl"},"content":"                    task.setDone(status \u003d\u003d 1);","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"dominicddl"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"dominicddl"},"content":"                }","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"dominicddl"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"dominicddl"},"content":"                System.out.println(","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"dominicddl"},"content":"                        \"OOPS!!! Invalid status format at line \" + lineNumber + \": \" + line);","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"dominicddl"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"dominicddl"},"content":"                System.out.println(\"OOPS!!! Error parsing line \" + lineNumber + \": \" + line + \" - \"","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"dominicddl"},"content":"                        + e.getMessage());","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"dominicddl"},"content":"        reader.close();","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"dominicddl"},"content":"        return tasks;","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:28:13","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-28T17:21:45","isFullCredit":false}],"authorContributionMap":{"dominicddl":213}},{"path":"src/main/java/luffy/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.task;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import luffy.util.DateTimeUtil;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"/**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":" * Represents a deadline task, which is a task that needs to be completed by a specific date and","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":" * time. Deadline tasks are displayed with a \"[D]\" prefix and include the due date/time. Supports","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":" * both LocalDateTime objects (preferred) and string representations (for backward compatibility).","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":" */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-22T18:53:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":"    private LocalDateTime by;","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":"    private String byString; // For backward compatibility with old string-based data","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-22T18:53:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"     * Creates a new deadline task with the specified description and due date/time. This is the","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"     * preferred constructor for new deadline tasks.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"     * @param description the description of the deadline task","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"     * @param by the date and time when this task is due","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"        super(description);","lastModifiedDate":"2025-08-22T18:53:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-22T18:53:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"        this.byString \u003d null;","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-22T18:53:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-22T18:53:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"     * Creates a new deadline task with the specified description and due date as a string. This","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"     * constructor is used for backward compatibility when loading old data.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dominicddl"},"content":"     * @param description the description of the deadline task","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dominicddl"},"content":"     * @param byString the due date/time as a string","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dominicddl"},"content":"    public Deadline(String description, String byString) {","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dominicddl"},"content":"        super(description);","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dominicddl"},"content":"        this.by \u003d null;","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dominicddl"},"content":"        this.byString \u003d byString;","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dominicddl"},"content":"     * Returns the due date and time of this deadline task as a LocalDateTime object.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dominicddl"},"content":"     * @return the due date and time, or null if this deadline uses string representation","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dominicddl"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dominicddl"},"content":"        return by;","lastModifiedDate":"2025-08-28T15:15:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T15:15:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T15:15:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dominicddl"},"content":"     * Returns the due date and time of this deadline task as a formatted string. For LocalDateTime","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dominicddl"},"content":"     * objects, formats using DateTimeUtil. For string-based deadlines, returns the original string","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dominicddl"},"content":"     * for backward compatibility.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dominicddl"},"content":"     * @return the formatted due date and time string","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dominicddl"},"content":"    public String getByAsString() {","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dominicddl"},"content":"        if (by !\u003d null) {","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dominicddl"},"content":"            return DateTimeUtil.formatDateTime(by);","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dominicddl"},"content":"        } else {","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dominicddl"},"content":"            return byString; // Return original string for backward compatibility","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dominicddl"},"content":"     * Checks if this deadline task has a LocalDateTime object (as opposed to string","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dominicddl"},"content":"     * representation).","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dominicddl"},"content":"     * @return true if this deadline has a LocalDateTime, false if it uses string representation","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dominicddl"},"content":"    public boolean hasDateTime() {","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dominicddl"},"content":"        return by !\u003d null;","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dominicddl"},"content":"     * Returns a string representation of this deadline task. The format is \"[D][status] description","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dominicddl"},"content":"     * (by: due_date_time)\".","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dominicddl"},"content":"     * @return the string representation of this deadline task","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dominicddl"},"content":"    @Override","lastModifiedDate":"2025-08-22T18:53:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dominicddl"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T18:53:51","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dominicddl"},"content":"        return \"[D]\" + super.getStatusIcon() + \" \" + super.getDescription() + \" (by: \"","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dominicddl"},"content":"                + getByAsString() + \")\";","lastModifiedDate":"2025-08-28T16:26:13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-22T18:53:51","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-22T18:53:51","isFullCredit":false}],"authorContributionMap":{"dominicddl":86}},{"path":"src/main/java/luffy/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.task;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import luffy.util.DateTimeUtil;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"/**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":" * Represents an event task, which is a task that occurs during a specific time period. Event tasks","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":" * are displayed with an \"[E]\" prefix and include both start and end times. Supports both","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":" * LocalDateTime objects (preferred) and string representations (for backward compatibility).","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":" */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-22T18:54:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":"    private LocalDateTime from;","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":"    private LocalDateTime to;","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":"    private String fromString; // For backward compatibility with old string-based data","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"    private String toString; // For backward compatibility with old string-based data","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-22T18:54:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"     * Creates a new event task with the specified description and time period. This is the","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"     * preferred constructor for new event tasks.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"     * @param description the description of the event task","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"     * @param from the start date and time of the event","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"     * @param to the end date and time of the event","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"        super(description);","lastModifiedDate":"2025-08-22T18:54:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-08-22T18:54:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-08-22T18:54:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"        this.fromString \u003d null;","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"        this.toString \u003d null;","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dominicddl"},"content":"     * Creates a new event task with the specified description and time period as strings. This","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dominicddl"},"content":"     * constructor is used for backward compatibility when loading old data.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dominicddl"},"content":"     * @param description the description of the event task","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dominicddl"},"content":"     * @param fromString the start time as a string","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dominicddl"},"content":"     * @param toString the end time as a string","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dominicddl"},"content":"    public Event(String description, String fromString, String toString) {","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dominicddl"},"content":"        super(description);","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dominicddl"},"content":"        this.from \u003d null;","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dominicddl"},"content":"        this.to \u003d null;","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dominicddl"},"content":"        this.fromString \u003d fromString;","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dominicddl"},"content":"        this.toString \u003d toString;","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-22T18:54:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-22T18:54:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dominicddl"},"content":"     * Returns the start date and time of this event as a LocalDateTime object.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dominicddl"},"content":"     * @return the start date and time, or null if this event uses string representation","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dominicddl"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dominicddl"},"content":"        return from;","lastModifiedDate":"2025-08-28T15:15:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T15:15:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T15:15:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dominicddl"},"content":"     * Returns the end date and time of this event as a LocalDateTime object.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dominicddl"},"content":"     * @return the end date and time, or null if this event uses string representation","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dominicddl"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dominicddl"},"content":"        return to;","lastModifiedDate":"2025-08-28T15:15:02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T15:15:02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T15:15:02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dominicddl"},"content":"     * Returns the start time of this event as a formatted string. For LocalDateTime objects,","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dominicddl"},"content":"     * formats using DateTimeUtil. For string-based events, returns the original string for backward","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dominicddl"},"content":"     * compatibility.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dominicddl"},"content":"     * @return the formatted start time string","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dominicddl"},"content":"    public String getFromAsString() {","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dominicddl"},"content":"        if (from !\u003d null) {","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dominicddl"},"content":"            return DateTimeUtil.formatDateTime(from);","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dominicddl"},"content":"        } else {","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dominicddl"},"content":"            return fromString; // Return original string for backward compatibility","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dominicddl"},"content":"     * Returns the end time of this event as a formatted string. For LocalDateTime objects, formats","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dominicddl"},"content":"     * using DateTimeUtil. For string-based events, returns the original string for backward","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dominicddl"},"content":"     * compatibility.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dominicddl"},"content":"     * @return the formatted end time string","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dominicddl"},"content":"    public String getToAsString() {","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dominicddl"},"content":"        if (to !\u003d null) {","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dominicddl"},"content":"            return DateTimeUtil.formatDateTime(to);","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dominicddl"},"content":"        } else {","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dominicddl"},"content":"            return toString; // Return original string for backward compatibility","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dominicddl"},"content":"     * Returns the duration of this event as a formatted string. The format is \"start_time to","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dominicddl"},"content":"     * end_time\".","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dominicddl"},"content":"     * @return the duration string combining start and end times","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dominicddl"},"content":"    public String getDuration() {","lastModifiedDate":"2025-08-28T15:15:02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dominicddl"},"content":"        return getFromAsString() + \" to \" + getToAsString();","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dominicddl"},"content":"     * Checks if this event has LocalDateTime objects (as opposed to string representation).","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dominicddl"},"content":"     * @return true if this event has LocalDateTime objects, false if it uses string representation","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dominicddl"},"content":"    public boolean hasDateTime() {","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dominicddl"},"content":"        return from !\u003d null \u0026\u0026 to !\u003d null;","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T15:15:02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T15:15:02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dominicddl"},"content":"     * Returns a string representation of this event task. The format is \"[E][status] description","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dominicddl"},"content":"     * (from: start_time to: end_time)\".","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dominicddl"},"content":"     * @return the string representation of this event task","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dominicddl"},"content":"    @Override","lastModifiedDate":"2025-08-22T18:54:38","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dominicddl"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T18:54:38","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dominicddl"},"content":"        return \"[E]\" + super.getStatusIcon() + \" \" + super.getDescription() + \" (from: \"","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dominicddl"},"content":"                + getFromAsString() + \" to: \" + getToAsString() + \")\";","lastModifiedDate":"2025-08-28T16:31:10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-22T18:54:38","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-22T18:54:38","isFullCredit":false}],"authorContributionMap":{"dominicddl":127}},{"path":"src/main/java/luffy/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.task;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"/**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":" * Represents a generic task with a description and completion status. This is the base class for","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":" * all task types in the Luffy task management system.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":" */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"public class Task {","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":"    private String description;","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":"    private boolean isDone;","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":"     * Creates a new task with the specified description. The task is initially marked as not done.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"     * Returns the description of this task.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"     * @return the task description","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"        return description;","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"     * Sets the description of this task.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dominicddl"},"content":"     * @param description the new description for the task","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dominicddl"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dominicddl"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dominicddl"},"content":"     * Checks if this task is completed.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dominicddl"},"content":"     * @return true if the task is done, false otherwise","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dominicddl"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dominicddl"},"content":"        return isDone;","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dominicddl"},"content":"     * Returns a string representation of the task\u0027s completion status.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dominicddl"},"content":"     * @return \"[X]\" if the task is done, \"[ ]\" if not done","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dominicddl"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dominicddl"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dominicddl"},"content":"     * Sets the completion status of this task.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dominicddl"},"content":"     * @param isDone true to mark the task as done, false to mark as not done","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dominicddl"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dominicddl"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-22T17:30:16","isFullCredit":false}],"authorContributionMap":{"dominicddl":65}},{"path":"src/main/java/luffy/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.task;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"/**","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":" * Contains the task list and provides operations to add/delete tasks in the list. This class","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":" * manages a collection of Task objects and provides methods to manipulate and query the collection.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":" */","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":"public class TaskList {","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"     * Creates a new empty task list.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"     * Creates a new task list with the specified list of tasks.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"     * @param tasks the initial list of tasks","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"     * Adds a task to the end of the task list.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dominicddl"},"content":"     * @param task the task to add to the list","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dominicddl"},"content":"    public void add(Task task) {","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dominicddl"},"content":"        tasks.add(task);","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dominicddl"},"content":"     * Removes a task from the list at the specified index.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dominicddl"},"content":"     * @param index the index of the task to remove","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dominicddl"},"content":"     * @return the task that was removed from the list","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dominicddl"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dominicddl"},"content":"    public Task remove(int index) {","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dominicddl"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dominicddl"},"content":"     * Returns the task at the specified index in the list.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dominicddl"},"content":"     * @param index the index of the task to return","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dominicddl"},"content":"     * @return the task at the specified index","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dominicddl"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dominicddl"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dominicddl"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dominicddl"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dominicddl"},"content":"     * @return the number of tasks in the list","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dominicddl"},"content":"    public int size() {","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dominicddl"},"content":"        return tasks.size();","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dominicddl"},"content":"     * Returns the underlying ArrayList containing all tasks. This method is provided for operations","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dominicddl"},"content":"     * that need direct access to the list.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dominicddl"},"content":"     * @return the ArrayList containing all tasks","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dominicddl"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dominicddl"},"content":"        return tasks;","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dominicddl"},"content":"     * Returns a formatted message indicating the number of tasks in the list.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dominicddl"},"content":"     * @return a string message showing the task count","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dominicddl"},"content":"    public String getTaskCountMessage() {","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dominicddl"},"content":"        return \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dominicddl"},"content":"     * Finds all deadline and event tasks that occur on the specified date. For deadlines, matches","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dominicddl"},"content":"     * if the due date falls on the target date. For events, matches if the target date falls within","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dominicddl"},"content":"     * the event\u0027s date range. Only considers tasks with LocalDateTime objects (ignores string-based","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dominicddl"},"content":"     * tasks).","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dominicddl"},"content":"     * @param targetDate the date to search for (time component is ignored)","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dominicddl"},"content":"     * @return a list of tasks that occur on the specified date","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dominicddl"},"content":"    public ArrayList\u003cTask\u003e getTasksOnDate(LocalDateTime targetDate) {","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dominicddl"},"content":"        // Get just the date part (ignore time for comparison)","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dominicddl"},"content":"        LocalDate targetDateOnly \u003d targetDate.toLocalDate();","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dominicddl"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dominicddl"},"content":"            boolean matches \u003d false;","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dominicddl"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dominicddl"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dominicddl"},"content":"                if (deadline.hasDateTime()) {","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dominicddl"},"content":"                    LocalDate deadlineDate \u003d deadline.getBy().toLocalDate();","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dominicddl"},"content":"                    if (deadlineDate.equals(targetDateOnly)) {","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dominicddl"},"content":"                        matches \u003d true;","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dominicddl"},"content":"                    }","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dominicddl"},"content":"                }","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dominicddl"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dominicddl"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dominicddl"},"content":"                if (event.hasDateTime()) {","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dominicddl"},"content":"                    LocalDate eventStartDate \u003d event.getFrom().toLocalDate();","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dominicddl"},"content":"                    LocalDate eventEndDate \u003d event.getTo().toLocalDate();","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dominicddl"},"content":"                    // Event matches if target date falls within the event\u0027s date range","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dominicddl"},"content":"                    if (!targetDateOnly.isBefore(eventStartDate)","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dominicddl"},"content":"                            \u0026\u0026 !targetDateOnly.isAfter(eventEndDate)) {","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dominicddl"},"content":"                        matches \u003d true;","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dominicddl"},"content":"                    }","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dominicddl"},"content":"                }","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"dominicddl"},"content":"            if (matches) {","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"dominicddl"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"dominicddl"},"content":"        return matchingTasks;","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-28T17:37:00","isFullCredit":false}],"authorContributionMap":{"dominicddl":136}},{"path":"src/main/java/luffy/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.task;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"/**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":" * Represents a todo task, which is a simple task with just a description. Todo tasks are displayed","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":" * with a \"[T]\" prefix.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":" */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-22T18:53:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":"     * Creates a new todo task with the specified description.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":"     * @param description the description of the todo task","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-22T18:53:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"        super(description);","lastModifiedDate":"2025-08-22T18:53:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-22T18:53:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-22T18:53:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"     * Returns a string representation of this todo task. The format is \"[T][status] description\"","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"     * where status is either X or space.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"     * @return the string representation of this todo task","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"    @Override","lastModifiedDate":"2025-08-22T18:53:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T18:53:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"        return \"[T]\" + super.getStatusIcon() + \" \" + super.getDescription();","lastModifiedDate":"2025-08-22T18:53:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-22T18:53:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-22T18:53:37","isFullCredit":false}],"authorContributionMap":{"dominicddl":28}},{"path":"src/main/java/luffy/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.ui;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"import luffy.task.Task;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"import luffy.util.DateTimeUtil;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":"/**","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":" * Handles interactions with the user, including input/output operations. This class manages console","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":" * I/O for the Luffy task management system, providing methods to display messages and read user","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":" * commands.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":" */","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":"public class Ui {","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"     * Creates a new Ui instance and initializes the scanner for reading user input.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"    public Ui() {","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"     * Displays the welcome message to the user. Shows Luffy\u0027s greeting when the application starts.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"        String greet \u003d \"Hello! I\u0027m Luffy\\n\" + \"Be my crewmate!\";","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"        System.out.println(greet);","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dominicddl"},"content":"     * Displays the goodbye message to the user. Shows Luffy\u0027s farewell when the application exits.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dominicddl"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dominicddl"},"content":"        String goodbye \u003d \"Bye! See you next time!\\n\" + \"I\u0027ll be waiting for you to join my crew!\\n\";","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dominicddl"},"content":"        System.out.println(goodbye);","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dominicddl"},"content":"     * Reads a command from the user input and trims whitespace.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dominicddl"},"content":"     * @return the user\u0027s command as a trimmed string","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dominicddl"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dominicddl"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dominicddl"},"content":"     * Checks if there is another line of input available from the user.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dominicddl"},"content":"     * @return true if there is a next line available, false otherwise","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dominicddl"},"content":"    public boolean hasNextLine() {","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dominicddl"},"content":"        return scanner.hasNextLine();","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dominicddl"},"content":"     * Displays an error message when tasks cannot be loaded from the file. Informs the user that","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dominicddl"},"content":"     * the application will start with an empty task list.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dominicddl"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dominicddl"},"content":"        System.out.println(\"OOPS!!! Couldn\u0027t load tasks from file. Starting with empty task list.\");","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dominicddl"},"content":"     * Displays a decorative divider line to separate sections of output.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dominicddl"},"content":"    public void showLine() {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dominicddl"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dominicddl"},"content":"     * Displays a general error message to the user.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dominicddl"},"content":"     * @param message the error message to display","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dominicddl"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dominicddl"},"content":"        System.out.println(message);","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T19:30:46","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dominicddl"},"content":"     * Displays all tasks that occur on a specific date. Shows either a list of matching tasks or a","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dominicddl"},"content":"     * message indicating no tasks were found.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dominicddl"},"content":"     * @param matchingTasks the list of tasks that occur on the specified date","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dominicddl"},"content":"     * @param targetDate the date being queried","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dominicddl"},"content":"    public void showTasksOnDate(ArrayList\u003cTask\u003e matchingTasks, LocalDateTime targetDate) {","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dominicddl"},"content":"        String formattedDate \u003d DateTimeUtil.formatDateTime(targetDate);","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dominicddl"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dominicddl"},"content":"            System.out.println(\"No deadlines or events found on \" + formattedDate + \"!\");","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dominicddl"},"content":"        } else {","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dominicddl"},"content":"            System.out.println(\"Here are your tasks on \" + formattedDate + \":\");","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dominicddl"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dominicddl"},"content":"                System.out.println((i + 1) + \". \" + matchingTasks.get(i).toString());","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T18:05:17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dominicddl"},"content":"     * Closes the scanner to free up system resources. Should be called when the application is","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dominicddl"},"content":"     * shutting down.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dominicddl"},"content":"    public void close() {","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dominicddl"},"content":"        scanner.close();","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-28T17:32:07","isFullCredit":false}],"authorContributionMap":{"dominicddl":108}},{"path":"src/main/java/luffy/util/DateTimeUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.util;","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T20:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"/**","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":" * Utility class for date/time formatting operations. Provides methods for converting LocalDateTime","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":" * objects to user-friendly display formats and for serializing/deserializing dates for file","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":" * storage.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":" */","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":"public class DateTimeUtil {","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":"     * Formats LocalDateTime for display in a user-friendly format. Uses smart formatting: shows","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"     * date only if time is 23:59 (indicating date-only input), otherwise shows full date and time.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"     * ","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"     * Format examples: - Date only: \"Oct 15 2019\" - Date with time: \"Oct 15 2019, 6:00 pm\"","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"     * @param dateTime the LocalDateTime to format","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"     * @return formatted date/time string for user display","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"    public static String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"        if (dateTime.getHour() \u003d\u003d 23 \u0026\u0026 dateTime.getMinute() \u003d\u003d 59) {","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"            // This was likely a date-only input, show just the date","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"            return dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"        } else {","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"            // Show full date and time","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"            return dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\"));","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dominicddl"},"content":"     * Formats LocalDateTime for file storage using ISO format. The ISO format ensures consistent,","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dominicddl"},"content":"     * unambiguous storage that can be parsed reliably.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dominicddl"},"content":"     * @param dateTime the LocalDateTime to format for storage","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dominicddl"},"content":"     * @return ISO formatted date/time string (e.g., \"2019-10-15T18:00:00\")","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dominicddl"},"content":"    public static String formatDateTimeForFile(LocalDateTime dateTime) {","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dominicddl"},"content":"        return dateTime.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dominicddl"},"content":"    /**","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dominicddl"},"content":"     * Parses LocalDateTime from file storage ISO format. Used to reconstruct LocalDateTime objects","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dominicddl"},"content":"     * when loading tasks from file.","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dominicddl"},"content":"     *","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dominicddl"},"content":"     * @param dateTimeStr the ISO formatted date/time string from file","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dominicddl"},"content":"     * @return LocalDateTime object parsed from the string","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dominicddl"},"content":"     * @throws java.time.format.DateTimeParseException if the string cannot be parsed","lastModifiedDate":"2025-08-28T22:12:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dominicddl"},"content":"     */","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dominicddl"},"content":"    public static LocalDateTime parseDateTimeFromFile(String dateTimeStr) {","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dominicddl"},"content":"        return LocalDateTime.parse(dateTimeStr, DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-28T16:25:14","isFullCredit":false}],"authorContributionMap":{"dominicddl":54}},{"path":"src/test/java/luffy/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.command;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":"import luffy.exception.LuffyException;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":"import luffy.task.Task;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"import luffy.task.Todo;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"import luffy.task.Deadline;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"import luffy.task.Event;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"import luffy.task.TaskList;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"import luffy.ui.Ui;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"import luffy.storage.Storage;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"public class CommandTest {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"    // Mock classes for testing","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"    private static class MockTaskList extends TaskList {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"        private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"        private boolean addCalled \u003d false;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"        private boolean removeCalled \u003d false;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"        private int removeIndex \u003d -1;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"        private boolean getTasksOnDateCalled \u003d false;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"        private LocalDateTime requestedDate;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"        private ArrayList\u003cTask\u003e tasksOnDateResult \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dominicddl"},"content":"        @Override","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dominicddl"},"content":"        public void add(Task task) {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dominicddl"},"content":"            addCalled \u003d true;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dominicddl"},"content":"            tasks.add(task);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dominicddl"},"content":"        @Override","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dominicddl"},"content":"        public Task get(int index) {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dominicddl"},"content":"            return tasks.get(index);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dominicddl"},"content":"        @Override","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dominicddl"},"content":"        public Task remove(int index) {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dominicddl"},"content":"            removeCalled \u003d true;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dominicddl"},"content":"            removeIndex \u003d index;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dominicddl"},"content":"            return tasks.remove(index);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dominicddl"},"content":"        @Override","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dominicddl"},"content":"        public int size() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dominicddl"},"content":"            return tasks.size();","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dominicddl"},"content":"        @Override","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dominicddl"},"content":"        public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dominicddl"},"content":"            return tasks;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dominicddl"},"content":"        @Override","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dominicddl"},"content":"        public String getTaskCountMessage() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dominicddl"},"content":"            return \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dominicddl"},"content":"        @Override","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dominicddl"},"content":"        public ArrayList\u003cTask\u003e getTasksOnDate(LocalDateTime targetDate) {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dominicddl"},"content":"            getTasksOnDateCalled \u003d true;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dominicddl"},"content":"            requestedDate \u003d targetDate;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dominicddl"},"content":"            return tasksOnDateResult;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dominicddl"},"content":"        // Helper methods for testing","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dominicddl"},"content":"        public boolean wasAddCalled() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dominicddl"},"content":"            return addCalled;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dominicddl"},"content":"        public boolean wasRemoveCalled() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dominicddl"},"content":"            return removeCalled;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dominicddl"},"content":"        public int getRemovedIndex() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dominicddl"},"content":"            return removeIndex;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dominicddl"},"content":"        public boolean wasGetTasksOnDateCalled() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dominicddl"},"content":"            return getTasksOnDateCalled;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dominicddl"},"content":"        public LocalDateTime getRequestedDate() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dominicddl"},"content":"            return requestedDate;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dominicddl"},"content":"        public void setTasksOnDateResult(ArrayList\u003cTask\u003e result) {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dominicddl"},"content":"            this.tasksOnDateResult \u003d result;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dominicddl"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dominicddl"},"content":"            tasks.add(task);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dominicddl"},"content":"        } // Direct add for setup","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dominicddl"},"content":"    private static class MockUi extends Ui {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dominicddl"},"content":"        private boolean showTasksOnDateCalled \u003d false;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dominicddl"},"content":"        private ArrayList\u003cTask\u003e shownTasks;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dominicddl"},"content":"        private LocalDateTime shownDate;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dominicddl"},"content":"        private boolean showWelcomeCalled \u003d false;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dominicddl"},"content":"        private boolean showGoodbyeCalled \u003d false;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dominicddl"},"content":"        @Override","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dominicddl"},"content":"        public void showTasksOnDate(ArrayList\u003cTask\u003e matchingTasks, LocalDateTime targetDate) {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dominicddl"},"content":"            showTasksOnDateCalled \u003d true;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dominicddl"},"content":"            shownTasks \u003d matchingTasks;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dominicddl"},"content":"            shownDate \u003d targetDate;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dominicddl"},"content":"        @Override","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dominicddl"},"content":"        public void showWelcome() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dominicddl"},"content":"            showWelcomeCalled \u003d true;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dominicddl"},"content":"        @Override","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dominicddl"},"content":"        public void showGoodbye() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dominicddl"},"content":"            showGoodbyeCalled \u003d true;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"dominicddl"},"content":"        // Helper methods for testing","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"dominicddl"},"content":"        public boolean wasShowTasksOnDateCalled() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"dominicddl"},"content":"            return showTasksOnDateCalled;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"dominicddl"},"content":"        public ArrayList\u003cTask\u003e getShownTasks() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"dominicddl"},"content":"            return shownTasks;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"dominicddl"},"content":"        public LocalDateTime getShownDate() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"dominicddl"},"content":"            return shownDate;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"dominicddl"},"content":"        public boolean wasShowWelcomeCalled() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"dominicddl"},"content":"            return showWelcomeCalled;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"dominicddl"},"content":"        public boolean wasShowGoodbyeCalled() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"dominicddl"},"content":"            return showGoodbyeCalled;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"dominicddl"},"content":"    private static class MockStorage extends Storage {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"dominicddl"},"content":"        private boolean saveCalled \u003d false;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"dominicddl"},"content":"        private ArrayList\u003cTask\u003e savedTasks;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"dominicddl"},"content":"        private boolean shouldThrowIOException \u003d false;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"dominicddl"},"content":"        public MockStorage() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"dominicddl"},"content":"            super(\"mock_file.txt\");","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"dominicddl"},"content":"        @Override","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"dominicddl"},"content":"        public void save(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"dominicddl"},"content":"            if (shouldThrowIOException) {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"dominicddl"},"content":"                throw new IOException(\"Mock IO Exception\");","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"dominicddl"},"content":"            }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"dominicddl"},"content":"            saveCalled \u003d true;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"dominicddl"},"content":"            savedTasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"dominicddl"},"content":"        // Helper methods for testing","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"dominicddl"},"content":"        public boolean wasSaveCalled() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"dominicddl"},"content":"            return saveCalled;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"dominicddl"},"content":"        public ArrayList\u003cTask\u003e getSavedTasks() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"dominicddl"},"content":"            return savedTasks;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"dominicddl"},"content":"        public void setShouldThrowIOException(boolean shouldThrow) {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"dominicddl"},"content":"            this.shouldThrowIOException \u003d shouldThrow;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"dominicddl"},"content":"    private MockTaskList mockTasks;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"dominicddl"},"content":"    private MockUi mockUi;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"dominicddl"},"content":"    private MockStorage mockStorage;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"dominicddl"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"dominicddl"},"content":"    private PrintStream originalOut;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"dominicddl"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"dominicddl"},"content":"    public void setUp() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"dominicddl"},"content":"        mockTasks \u003d new MockTaskList();","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"dominicddl"},"content":"        mockUi \u003d new MockUi();","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"dominicddl"},"content":"        mockStorage \u003d new MockStorage();","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"dominicddl"},"content":"        // Capture System.out for commands that print directly","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"dominicddl"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"dominicddl"},"content":"        originalOut \u003d System.out;","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"dominicddl"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"dominicddl"},"content":"    @AfterEach","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"dominicddl"},"content":"    public void tearDown() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"dominicddl"},"content":"        // Restore System.out","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"dominicddl"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"dominicddl"},"content":"    // Tests for AddTodoCommand","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"dominicddl"},"content":"    public void addTodoCommand_execute_addsTaskAndSaves() throws Exception {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"dominicddl"},"content":"        AddTodoCommand command \u003d new AddTodoCommand(\"read book\");","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"dominicddl"},"content":"        assertTrue(mockTasks.wasAddCalled());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"dominicddl"},"content":"        assertTrue(mockStorage.wasSaveCalled());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"dominicddl"},"content":"        assertEquals(1, mockTasks.size());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"dominicddl"},"content":"        assertTrue(mockTasks.get(0) instanceof Todo);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"read book\", mockTasks.get(0).getDescription());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"dominicddl"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"HAI! TASK ADDED:\"));","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"read book\"));","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"dominicddl"},"content":"    public void addTodoCommand_executeWithIOException_throwsIOException() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"dominicddl"},"content":"        mockStorage.setShouldThrowIOException(true);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"dominicddl"},"content":"        AddTodoCommand command \u003d new AddTodoCommand(\"read book\");","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"dominicddl"},"content":"        assertThrows(IOException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"dominicddl"},"content":"            command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"dominicddl"},"content":"    // Tests for AddDeadlineCommand","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"dominicddl"},"content":"    public void addDeadlineCommand_execute_addsTaskAndSaves() throws Exception {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"dominicddl"},"content":"        AddDeadlineCommand command \u003d new AddDeadlineCommand(\"return book\", \"2024-12-15 14:30\");","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"dominicddl"},"content":"        assertTrue(mockTasks.wasAddCalled());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"dominicddl"},"content":"        assertTrue(mockStorage.wasSaveCalled());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"dominicddl"},"content":"        assertEquals(1, mockTasks.size());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"dominicddl"},"content":"        assertTrue(mockTasks.get(0) instanceof Deadline);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"return book\", mockTasks.get(0).getDescription());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"dominicddl"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"HAI! TASK ADDED:\"));","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"dominicddl"},"content":"    // Tests for AddEventCommand","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"dominicddl"},"content":"    public void addEventCommand_execute_addsTaskAndSaves() throws Exception {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"dominicddl"},"content":"        AddEventCommand command \u003d","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"dominicddl"},"content":"                new AddEventCommand(\"meeting\", \"2024-12-15 10:00\", \"2024-12-15 12:00\");","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"dominicddl"},"content":"        assertTrue(mockTasks.wasAddCalled());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"dominicddl"},"content":"        assertTrue(mockStorage.wasSaveCalled());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"dominicddl"},"content":"        assertEquals(1, mockTasks.size());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"dominicddl"},"content":"        assertTrue(mockTasks.get(0) instanceof Event);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"meeting\", mockTasks.get(0).getDescription());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"dominicddl"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"HAI! TASK ADDED:\"));","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"dominicddl"},"content":"    // Tests for MarkCommand","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"dominicddl"},"content":"    public void markCommand_validTaskNumber_marksTaskAndSaves() throws Exception {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"dominicddl"},"content":"        // Setup: add a task to mock list","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"dominicddl"},"content":"        Todo todo \u003d new Todo(\"test task\");","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(todo);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"dominicddl"},"content":"        MarkCommand command \u003d new MarkCommand(1);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"dominicddl"},"content":"        assertTrue(mockStorage.wasSaveCalled());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"dominicddl"},"content":"        assertTrue(todo.isDone());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"dominicddl"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"KAIZOKU!\"));","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"dominicddl"},"content":"    public void markCommand_invalidTaskNumber_throwsException() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"dominicddl"},"content":"        MarkCommand command \u003d new MarkCommand(5); // No tasks in list","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"dominicddl"},"content":"            command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"That doesn\u0027t exist\"));","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"dominicddl"},"content":"    public void markCommand_taskNumberTooLow_throwsException() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"test task\"));","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"dominicddl"},"content":"        MarkCommand command \u003d new MarkCommand(0);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"dominicddl"},"content":"        assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"dominicddl"},"content":"            command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"dominicddl"},"content":"    // Tests for UnmarkCommand","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"dominicddl"},"content":"    public void unmarkCommand_validTaskNumber_unmarksTaskAndSaves() throws Exception {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"dominicddl"},"content":"        // Setup: add a completed task","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"dominicddl"},"content":"        Todo todo \u003d new Todo(\"test task\");","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"dominicddl"},"content":"        todo.setDone(true);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(todo);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"dominicddl"},"content":"        UnmarkCommand command \u003d new UnmarkCommand(1);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"dominicddl"},"content":"        assertTrue(mockStorage.wasSaveCalled());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"dominicddl"},"content":"        assertFalse(todo.isDone());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"dominicddl"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"NANI?\"));","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"dominicddl"},"content":"    public void unmarkCommand_invalidTaskNumber_throwsException() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"dominicddl"},"content":"        UnmarkCommand command \u003d new UnmarkCommand(5);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"dominicddl"},"content":"        assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"dominicddl"},"content":"            command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"dominicddl"},"content":"    // Tests for DeleteCommand","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"dominicddl"},"content":"    public void deleteCommand_validTaskNumber_deletesTaskAndSaves() throws Exception {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"dominicddl"},"content":"        Todo todo \u003d new Todo(\"test task\");","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(todo);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"dominicddl"},"content":"        DeleteCommand command \u003d new DeleteCommand(1);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"dominicddl"},"content":"        assertTrue(mockTasks.wasRemoveCalled());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"dominicddl"},"content":"        assertEquals(0, mockTasks.getRemovedIndex());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"dominicddl"},"content":"        assertTrue(mockStorage.wasSaveCalled());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"dominicddl"},"content":"        assertEquals(0, mockTasks.size());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"dominicddl"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"HAI! TASK DELETED:\"));","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"dominicddl"},"content":"    public void deleteCommand_invalidTaskNumber_throwsException() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"dominicddl"},"content":"        DeleteCommand command \u003d new DeleteCommand(5);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"dominicddl"},"content":"            command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"That doesn\u0027t exist\"));","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"dominicddl"},"content":"    // Tests for ListCommand","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"dominicddl"},"content":"    public void listCommand_execute_showsTaskList() throws Exception {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"dominicddl"},"content":"        ListCommand command \u003d new ListCommand();","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"dominicddl"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"Here are the tasks in your list:\"));","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"dominicddl"},"content":"    public void listCommand_emptyList_showsHeaderOnly() throws Exception {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"dominicddl"},"content":"        ListCommand command \u003d new ListCommand();","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"dominicddl"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"Here are the tasks in your list:\"));","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"dominicddl"},"content":"        // For empty list, only header is shown, no task numbers","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"dominicddl"},"content":"        assertFalse(output.contains(\"1.\"));","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"dominicddl"},"content":"    public void listCommand_withTasks_showsAllTasks() throws Exception {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"task 1\"));","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"task 2\"));","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"dominicddl"},"content":"        ListCommand command \u003d new ListCommand();","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"dominicddl"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"1.\"));","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"2.\"));","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"task 1\"));","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"task 2\"));","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"dominicddl"},"content":"    // Tests for DueCommand","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"dominicddl"},"content":"    public void dueCommand_validDate_callsUiShowTasksOnDate() throws Exception {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime targetDate \u003d LocalDateTime.of(2024, 12, 15, 0, 0);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"dominicddl"},"content":"        matchingTasks.add(new Todo(\"matching task\"));","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"dominicddl"},"content":"        mockTasks.setTasksOnDateResult(matchingTasks);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"dominicddl"},"content":"        DueCommand command \u003d new DueCommand(\"2024-12-15\");","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"dominicddl"},"content":"        assertTrue(mockTasks.wasGetTasksOnDateCalled());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"dominicddl"},"content":"        assertTrue(mockUi.wasShowTasksOnDateCalled());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"dominicddl"},"content":"        assertEquals(matchingTasks, mockUi.getShownTasks());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"dominicddl"},"content":"        // Note: exact date comparison may vary due to parsing, so we check the date part","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"dominicddl"},"content":"        assertEquals(2024, mockUi.getShownDate().getYear());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"dominicddl"},"content":"        assertEquals(12, mockUi.getShownDate().getMonthValue());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"dominicddl"},"content":"        assertEquals(15, mockUi.getShownDate().getDayOfMonth());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"dominicddl"},"content":"    public void dueCommand_invalidDate_throwsException() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"dominicddl"},"content":"        DueCommand command \u003d new DueCommand(\"invalid-date\");","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"dominicddl"},"content":"        assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"dominicddl"},"content":"            command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"dominicddl"},"content":"    // Tests for ExitCommand","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"dominicddl"},"content":"    public void exitCommand_execute_callsUiShowGoodbye() throws Exception {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"dominicddl"},"content":"        ExitCommand command \u003d new ExitCommand();","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"dominicddl"},"content":"        assertTrue(mockUi.wasShowGoodbyeCalled());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"dominicddl"},"content":"    public void exitCommand_isExit_returnsTrue() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"dominicddl"},"content":"        ExitCommand command \u003d new ExitCommand();","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"dominicddl"},"content":"        assertTrue(command.isExit());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"dominicddl"},"content":"    // Tests for base Command class behavior","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"dominicddl"},"content":"    public void command_isExit_defaultsToFalse() {","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"dominicddl"},"content":"        AddTodoCommand command \u003d new AddTodoCommand(\"test\");","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"dominicddl"},"content":"        assertFalse(command.isExit());","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-28T21:39:01","isFullCredit":false}],"authorContributionMap":{"dominicddl":448}},{"path":"src/test/java/luffy/command/FindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.command;","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":"import luffy.task.Task;","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":"import luffy.task.Todo;","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":"import luffy.task.Deadline;","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"import luffy.task.Event;","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"import luffy.task.TaskList;","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"import luffy.ui.Ui;","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"import luffy.storage.Storage;","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"public class FindCommandTest {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"    // Mock classes for testing","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"    private static class MockTaskList extends TaskList {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"        private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"        @Override","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"        public Task get(int index) {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"            return tasks.get(index);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"        @Override","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"        public int size() {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dominicddl"},"content":"            return tasks.size();","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dominicddl"},"content":"        // Helper method for setup","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dominicddl"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dominicddl"},"content":"            tasks.add(task);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dominicddl"},"content":"    private static class MockUi extends Ui {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dominicddl"},"content":"        // Mock UI - we\u0027ll capture output via System.out instead","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dominicddl"},"content":"    private static class MockStorage extends Storage {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dominicddl"},"content":"        public MockStorage() {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dominicddl"},"content":"            super(\"mock_file.txt\");","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dominicddl"},"content":"        // Mock storage - not used by FindCommand","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dominicddl"},"content":"    private MockTaskList mockTasks;","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dominicddl"},"content":"    private MockUi mockUi;","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dominicddl"},"content":"    private MockStorage mockStorage;","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dominicddl"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dominicddl"},"content":"    private PrintStream originalOut;","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dominicddl"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dominicddl"},"content":"    public void setUp() {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dominicddl"},"content":"        mockTasks \u003d new MockTaskList();","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dominicddl"},"content":"        mockUi \u003d new MockUi();","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dominicddl"},"content":"        mockStorage \u003d new MockStorage();","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dominicddl"},"content":"        // Capture System.out for output verification","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dominicddl"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dominicddl"},"content":"        originalOut \u003d System.out;","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dominicddl"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dominicddl"},"content":"    @AfterEach","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dominicddl"},"content":"    public void tearDown() {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dominicddl"},"content":"        // Restore System.out","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dominicddl"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dominicddl"},"content":"    // Tests for single keyword search","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dominicddl"},"content":"    public void findCommand_singleKeywordMatch_showsMatchingTasks() throws Exception {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dominicddl"},"content":"        // Setup tasks","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"read book\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"buy groceries\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"return book\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dominicddl"},"content":"        FindCommand command \u003d new FindCommand(new String[] {\"book\"});","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dominicddl"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"Here are the matching tasks in your list:\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"1.[T][ ] read book\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"2.[T][ ] return book\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dominicddl"},"content":"        assertFalse(output.contains(\"buy groceries\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dominicddl"},"content":"    public void findCommand_singleKeywordNoMatch_showsNoMatchMessage() throws Exception {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dominicddl"},"content":"        // Setup tasks","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"read book\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"buy groceries\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dominicddl"},"content":"        FindCommand command \u003d new FindCommand(new String[] {\"xyz\"});","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dominicddl"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"No matching tasks found.\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dominicddl"},"content":"        assertFalse(output.contains(\"Here are the matching tasks\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dominicddl"},"content":"    public void findCommand_emptyTaskList_showsNoMatchMessage() throws Exception {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dominicddl"},"content":"        FindCommand command \u003d new FindCommand(new String[] {\"book\"});","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dominicddl"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"No matching tasks found.\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dominicddl"},"content":"    // Tests for multiple keyword search","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dominicddl"},"content":"    public void findCommand_multipleKeywordsAllMatch_showsMatchingTasks() throws Exception {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dominicddl"},"content":"        // Setup tasks","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"read programming book\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"read history book\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"programming tutorial\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dominicddl"},"content":"        FindCommand command \u003d new FindCommand(new String[] {\"read\", \"book\"});","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"dominicddl"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"Here are the matching tasks in your list:\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"1.[T][ ] read programming book\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"2.[T][ ] read history book\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"dominicddl"},"content":"        assertFalse(output.contains(\"programming tutorial\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"dominicddl"},"content":"    public void findCommand_multipleKeywordsPartialMatch_showsNoMatch() throws Exception {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"dominicddl"},"content":"        // Setup tasks","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"read book\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"programming tutorial\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"dominicddl"},"content":"        FindCommand command \u003d new FindCommand(new String[] {\"read\", \"programming\"});","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"dominicddl"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"No matching tasks found.\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"dominicddl"},"content":"    // Tests for case insensitive search","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"dominicddl"},"content":"    public void findCommand_caseInsensitiveSearch_matchesCorrectly() throws Exception {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"dominicddl"},"content":"        // Setup tasks","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"Read BOOK\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"BUY groceries\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"dominicddl"},"content":"        FindCommand command \u003d new FindCommand(new String[] {\"book\"});","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"dominicddl"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"Here are the matching tasks in your list:\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"1.[T][ ] Read BOOK\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"dominicddl"},"content":"        assertFalse(output.contains(\"BUY groceries\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"dominicddl"},"content":"    public void findCommand_caseInsensitiveKeywords_matchesCorrectly() throws Exception {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"dominicddl"},"content":"        // Setup tasks","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"read book\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"dominicddl"},"content":"        FindCommand command \u003d new FindCommand(new String[] {\"READ\", \"BOOK\"});","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"dominicddl"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"Here are the matching tasks in your list:\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"1.[T][ ] read book\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"dominicddl"},"content":"    // Tests for substring matching","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"dominicddl"},"content":"    public void findCommand_substringMatch_matchesCorrectly() throws Exception {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"dominicddl"},"content":"        // Setup tasks","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"notebook\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"textbook\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"car\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"dominicddl"},"content":"        FindCommand command \u003d new FindCommand(new String[] {\"book\"});","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"dominicddl"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"Here are the matching tasks in your list:\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"1.[T][ ] notebook\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"2.[T][ ] textbook\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"dominicddl"},"content":"        assertFalse(output.contains(\"car\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"dominicddl"},"content":"    // Tests with different task types","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"dominicddl"},"content":"    public void findCommand_differentTaskTypes_matchesAll() throws Exception {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"dominicddl"},"content":"        // Setup tasks of different types","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"read book\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Deadline(\"return book\", \"Monday\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Event(\"book club meeting\", \"Saturday\", \"Sunday\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"buy groceries\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"dominicddl"},"content":"        FindCommand command \u003d new FindCommand(new String[] {\"book\"});","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"dominicddl"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"Here are the matching tasks in your list:\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"1.[T][ ] read book\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"2.[D][ ] return book\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"3.[E][ ] book club meeting\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"dominicddl"},"content":"        assertFalse(output.contains(\"buy groceries\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"dominicddl"},"content":"    public void findCommand_completedTasks_includesInResults() throws Exception {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"dominicddl"},"content":"        // Setup tasks with different completion status","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"dominicddl"},"content":"        Todo completedTodo \u003d new Todo(\"read book\");","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"dominicddl"},"content":"        completedTodo.setDone(true);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(completedTodo);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"return book\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"dominicddl"},"content":"        FindCommand command \u003d new FindCommand(new String[] {\"book\"});","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"dominicddl"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"Here are the matching tasks in your list:\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"1.[T][X] read book\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"2.[T][ ] return book\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"dominicddl"},"content":"    // Tests for sequential numbering","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"dominicddl"},"content":"    public void findCommand_sequentialNumbering_startsFromOne() throws Exception {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"dominicddl"},"content":"        // Setup many tasks to test numbering","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"task 1\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"book 1\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"task 2\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"book 2\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"book 3\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"dominicddl"},"content":"        FindCommand command \u003d new FindCommand(new String[] {\"book\"});","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"dominicddl"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"1.[T][ ] book 1\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"2.[T][ ] book 2\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"3.[T][ ] book 3\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"dominicddl"},"content":"        assertFalse(output.contains(\"4.\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"dominicddl"},"content":"    // Tests for edge cases","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"dominicddl"},"content":"    public void findCommand_emptyKeyword_handledByParser() throws Exception {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"dominicddl"},"content":"        // This test verifies that empty keywords are filtered out by parser","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"dominicddl"},"content":"        // If somehow an empty keyword gets through, it should match everything","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"any task\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"dominicddl"},"content":"        FindCommand command \u003d new FindCommand(new String[] {\"\"});","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"dominicddl"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"Here are the matching tasks in your list:\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"1.[T][ ] any task\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"dominicddl"},"content":"    public void findCommand_specialCharactersInDescription_matchesCorrectly() throws Exception {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"dominicddl"},"content":"        // Setup tasks with special characters","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"read C++ book\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"learn Java\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"dominicddl"},"content":"        FindCommand command \u003d new FindCommand(new String[] {\"C++\"});","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"dominicddl"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"Here are the matching tasks in your list:\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"1.[T][ ] read C++ book\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"dominicddl"},"content":"        assertFalse(output.contains(\"learn Java\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"dominicddl"},"content":"    public void findCommand_numbersInDescription_matchesCorrectly() throws Exception {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"dominicddl"},"content":"        // Setup tasks with numbers","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"chapter 1 reading\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"chapter 2 reading\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"dominicddl"},"content":"        mockTasks.addTask(new Todo(\"general reading\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"dominicddl"},"content":"        FindCommand command \u003d new FindCommand(new String[] {\"1\"});","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"dominicddl"},"content":"        command.execute(mockTasks, mockUi, mockStorage);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"dominicddl"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"Here are the matching tasks in your list:\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"dominicddl"},"content":"        assertTrue(output.contains(\"1.[T][ ] chapter 1 reading\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"dominicddl"},"content":"        assertFalse(output.contains(\"chapter 2 reading\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"dominicddl"},"content":"        assertFalse(output.contains(\"general reading\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"dominicddl"},"content":"    // Test for isExit behavior","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"dominicddl"},"content":"    public void findCommand_isExit_returnsFalse() {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"dominicddl"},"content":"        FindCommand command \u003d new FindCommand(new String[] {\"book\"});","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"dominicddl"},"content":"        assertFalse(command.isExit());","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false}],"authorContributionMap":{"dominicddl":305}},{"path":"src/test/java/luffy/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.parser;","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"import luffy.exception.LuffyException;","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":"import luffy.command.*;","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":"public class ParserTest {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":"    // Tests for parseDateTime method","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":"    public void parseDateTime_validYearMonthDay_returnsCorrectDateTime() throws LuffyException {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime result \u003d Parser.parseDateTime(\"2024-12-15\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2024, 12, 15, 23, 59);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"    public void parseDateTime_validYearMonthDayWithTime24Hour_returnsCorrectDateTime()","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"            throws LuffyException {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime result \u003d Parser.parseDateTime(\"2024-12-15 1430\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2024, 12, 15, 14, 30);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"    public void parseDateTime_validYearMonthDayWithTimeColon_returnsCorrectDateTime()","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"            throws LuffyException {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime result \u003d Parser.parseDateTime(\"2024-12-15 14:30\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2024, 12, 15, 14, 30);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dominicddl"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dominicddl"},"content":"    public void parseDateTime_validYearMonthDayWithTime12Hour_returnsCorrectDateTime()","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dominicddl"},"content":"            throws LuffyException {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime result \u003d Parser.parseDateTime(\"2024-12-15 2:30 pm\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2024, 12, 15, 14, 30);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dominicddl"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dominicddl"},"content":"    public void parseDateTime_validDayMonthYear_returnsCorrectDateTime() throws LuffyException {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime result \u003d Parser.parseDateTime(\"15/12/2024\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2024, 12, 15, 23, 59);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dominicddl"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dominicddl"},"content":"    public void parseDateTime_validDayMonthYearWithTime_returnsCorrectDateTime()","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dominicddl"},"content":"            throws LuffyException {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime result \u003d Parser.parseDateTime(\"15/12/2024 1430\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2024, 12, 15, 14, 30);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dominicddl"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dominicddl"},"content":"    public void parseDateTime_validDayMonthYearWith12Hour_returnsCorrectDateTime()","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dominicddl"},"content":"            throws LuffyException {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime result \u003d Parser.parseDateTime(\"2/12/2024 6:00 pm\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2024, 12, 2, 18, 0);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dominicddl"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dominicddl"},"content":"    public void parseDateTime_invalidFormat_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dominicddl"},"content":"        assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dominicddl"},"content":"            Parser.parseDateTime(\"invalid-date\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dominicddl"},"content":"    public void parseDateTime_emptyString_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dominicddl"},"content":"        assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dominicddl"},"content":"            Parser.parseDateTime(\"\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dominicddl"},"content":"    public void parseDateTime_whitespaceOnly_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dominicddl"},"content":"        assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dominicddl"},"content":"            Parser.parseDateTime(\"   \");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dominicddl"},"content":"    // Tests for validateEventTimes method","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dominicddl"},"content":"    public void validateEventTimes_validTimes_doesNotThrowException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2024, 12, 15, 10, 0);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2024, 12, 15, 12, 0);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dominicddl"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dominicddl"},"content":"            Parser.validateEventTimes(from, to, \"10:00\", \"12:00\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dominicddl"},"content":"    public void validateEventTimes_startAfterEnd_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2024, 12, 15, 12, 0);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2024, 12, 15, 10, 0);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dominicddl"},"content":"            Parser.validateEventTimes(from, to, \"12:00\", \"10:00\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"cannot be after\"));","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dominicddl"},"content":"    public void validateEventTimes_sameStartAndEnd_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2024, 12, 15, 10, 0);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2024, 12, 15, 10, 0);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dominicddl"},"content":"            Parser.validateEventTimes(from, to, \"10:00\", \"10:00\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"cannot be the same\"));","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dominicddl"},"content":"    // Tests for validateTodoCommand method","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dominicddl"},"content":"    public void validateTodoCommand_validInput_doesNotThrowException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dominicddl"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dominicddl"},"content":"            Parser.validateTodoCommand(\"todo read book\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"dominicddl"},"content":"    public void validateTodoCommand_emptyDescription_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"dominicddl"},"content":"            Parser.validateTodoCommand(\"todo\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"needs a description\"));","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"dominicddl"},"content":"    public void validateTodoCommand_onlyWhitespaceDescription_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"dominicddl"},"content":"            Parser.validateTodoCommand(\"todo   \");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"needs a description\"));","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"dominicddl"},"content":"    // Tests for validateDeadlineCommand method","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"dominicddl"},"content":"    public void validateDeadlineCommand_validInput_doesNotThrowException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"dominicddl"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"dominicddl"},"content":"            Parser.validateDeadlineCommand(\"deadline return book /by Monday\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"dominicddl"},"content":"    public void validateDeadlineCommand_emptyDescription_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"dominicddl"},"content":"            Parser.validateDeadlineCommand(\"deadline\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"tell me what the deadline is for\"));","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"dominicddl"},"content":"    public void validateDeadlineCommand_missingByKeyword_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"dominicddl"},"content":"            Parser.validateDeadlineCommand(\"deadline return book Monday\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"/by\"));","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"dominicddl"},"content":"    public void validateDeadlineCommand_emptyByDate_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"dominicddl"},"content":"            Parser.validateDeadlineCommand(\"deadline return book /by\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"WHEN the deadline is\"));","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"dominicddl"},"content":"    // Tests for validateEventCommand method","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"dominicddl"},"content":"    public void validateEventCommand_validInput_doesNotThrowException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"dominicddl"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"dominicddl"},"content":"            Parser.validateEventCommand(\"event meeting /from Monday /to Tuesday\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"dominicddl"},"content":"    public void validateEventCommand_emptyDescription_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"dominicddl"},"content":"            Parser.validateEventCommand(\"event\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"Give me a description\"));","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"dominicddl"},"content":"    public void validateEventCommand_missingFromKeyword_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"dominicddl"},"content":"            Parser.validateEventCommand(\"event meeting Monday /to Tuesday\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"Missing \u0027/from\u0027\"));","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"dominicddl"},"content":"    public void validateEventCommand_missingToKeyword_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"dominicddl"},"content":"            Parser.validateEventCommand(\"event meeting /from Monday Tuesday\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"Missing \u0027/to\u0027\"));","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"dominicddl"},"content":"    public void validateEventCommand_wrongOrder_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"dominicddl"},"content":"            Parser.validateEventCommand(\"event meeting /to Tuesday /from Monday\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"\u0027/from\u0027 should come before \u0027/to\u0027\"));","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"dominicddl"},"content":"    public void validateEventCommand_emptyFromDate_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"dominicddl"},"content":"            Parser.validateEventCommand(\"event meeting /from /to Tuesday\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"when it starts\"));","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"dominicddl"},"content":"    public void validateEventCommand_emptyToDate_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"dominicddl"},"content":"            Parser.validateEventCommand(\"event meeting /from Monday /to\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"when it ends\"));","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"dominicddl"},"content":"    // Tests for validateMarkUnmarkCommand method","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"dominicddl"},"content":"    public void validateMarkUnmarkCommand_validMarkCommand_doesNotThrowException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"dominicddl"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"dominicddl"},"content":"            Parser.validateMarkUnmarkCommand(\"mark 1\", true, 5);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"dominicddl"},"content":"    public void validateMarkUnmarkCommand_validUnmarkCommand_doesNotThrowException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"dominicddl"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"dominicddl"},"content":"            Parser.validateMarkUnmarkCommand(\"unmark 3\", false, 5);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"dominicddl"},"content":"    public void validateMarkUnmarkCommand_missingTaskNumber_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"dominicddl"},"content":"            Parser.validateMarkUnmarkCommand(\"mark\", true, 5);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"Give me a number\"));","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"dominicddl"},"content":"    public void validateMarkUnmarkCommand_invalidTaskNumber_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"dominicddl"},"content":"            Parser.validateMarkUnmarkCommand(\"mark abc\", true, 5);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"not a number\"));","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"dominicddl"},"content":"    public void validateMarkUnmarkCommand_taskNumberTooLow_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"dominicddl"},"content":"            Parser.validateMarkUnmarkCommand(\"mark 0\", true, 5);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"doesn\u0027t exist\"));","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"dominicddl"},"content":"    public void validateMarkUnmarkCommand_taskNumberTooHigh_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"dominicddl"},"content":"            Parser.validateMarkUnmarkCommand(\"mark 10\", true, 5);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"doesn\u0027t exist\"));","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"dominicddl"},"content":"    // Tests for validateDeleteCommand method","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"dominicddl"},"content":"    public void validateDeleteCommand_validInput_doesNotThrowException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"dominicddl"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"dominicddl"},"content":"            Parser.validateDeleteCommand(\"delete 1\", 5);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"dominicddl"},"content":"    public void validateDeleteCommand_missingTaskNumber_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"dominicddl"},"content":"            Parser.validateDeleteCommand(\"delete\", 5);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"Give me a number\"));","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"dominicddl"},"content":"    public void validateDeleteCommand_invalidTaskNumber_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"dominicddl"},"content":"            Parser.validateDeleteCommand(\"delete xyz\", 5);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"not a number\"));","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"dominicddl"},"content":"    public void validateDeleteCommand_taskNumberOutOfRange_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"dominicddl"},"content":"            Parser.validateDeleteCommand(\"delete 10\", 5);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"doesn\u0027t exist\"));","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"dominicddl"},"content":"    // Tests for parse method (Command parsing)","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"dominicddl"},"content":"    public void parse_byeCommand_returnsExitCommand() throws LuffyException {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"dominicddl"},"content":"        Command result \u003d Parser.parse(\"bye\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"dominicddl"},"content":"        assertTrue(result instanceof ExitCommand);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"dominicddl"},"content":"        assertTrue(result.isExit());","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"dominicddl"},"content":"    public void parse_listCommand_returnsListCommand() throws LuffyException {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"dominicddl"},"content":"        Command result \u003d Parser.parse(\"list\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"dominicddl"},"content":"        assertTrue(result instanceof ListCommand);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"dominicddl"},"content":"        assertFalse(result.isExit());","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"dominicddl"},"content":"    public void parse_todoCommand_returnsAddTodoCommand() throws LuffyException {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"dominicddl"},"content":"        Command result \u003d Parser.parse(\"todo read book\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"dominicddl"},"content":"        assertTrue(result instanceof AddTodoCommand);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"dominicddl"},"content":"        assertFalse(result.isExit());","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"dominicddl"},"content":"    public void parse_deadlineCommand_returnsAddDeadlineCommand() throws LuffyException {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"dominicddl"},"content":"        Command result \u003d Parser.parse(\"deadline return book /by Monday\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"dominicddl"},"content":"        assertTrue(result instanceof AddDeadlineCommand);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"dominicddl"},"content":"        assertFalse(result.isExit());","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"dominicddl"},"content":"    public void parse_eventCommand_returnsAddEventCommand() throws LuffyException {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"dominicddl"},"content":"        Command result \u003d Parser.parse(\"event meeting /from Monday /to Tuesday\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"dominicddl"},"content":"        assertTrue(result instanceof AddEventCommand);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"dominicddl"},"content":"        assertFalse(result.isExit());","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"dominicddl"},"content":"    public void parse_markCommand_returnsMarkCommand() throws LuffyException {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"dominicddl"},"content":"        Command result \u003d Parser.parse(\"mark 1\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"dominicddl"},"content":"        assertTrue(result instanceof MarkCommand);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"dominicddl"},"content":"        assertFalse(result.isExit());","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"dominicddl"},"content":"    public void parse_unmarkCommand_returnsUnmarkCommand() throws LuffyException {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"dominicddl"},"content":"        Command result \u003d Parser.parse(\"unmark 2\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"dominicddl"},"content":"        assertTrue(result instanceof UnmarkCommand);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"dominicddl"},"content":"        assertFalse(result.isExit());","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"dominicddl"},"content":"    public void parse_deleteCommand_returnsDeleteCommand() throws LuffyException {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"dominicddl"},"content":"        Command result \u003d Parser.parse(\"delete 3\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"dominicddl"},"content":"        assertTrue(result instanceof DeleteCommand);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"dominicddl"},"content":"        assertFalse(result.isExit());","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"dominicddl"},"content":"    public void parse_dueCommand_returnsDueCommand() throws LuffyException {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"dominicddl"},"content":"        Command result \u003d Parser.parse(\"due 2024-12-15\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"dominicddl"},"content":"        assertTrue(result instanceof DueCommand);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"dominicddl"},"content":"        assertFalse(result.isExit());","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"dominicddl"},"content":"    public void parse_caseInsensitiveCommands_worksCorrectly() throws LuffyException {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"dominicddl"},"content":"        assertTrue(Parser.parse(\"BYE\") instanceof ExitCommand);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"dominicddl"},"content":"        assertTrue(Parser.parse(\"List\") instanceof ListCommand);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"dominicddl"},"content":"        assertTrue(Parser.parse(\"TODO read\") instanceof AddTodoCommand);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"dominicddl"},"content":"        assertTrue(Parser.parse(\"DEADLINE task /by Monday\") instanceof AddDeadlineCommand);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"dominicddl"},"content":"        assertTrue(Parser.parse(\"Event party /from Mon /to Tue\") instanceof AddEventCommand);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"dominicddl"},"content":"        assertTrue(Parser.parse(\"MARK 1\") instanceof MarkCommand);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"dominicddl"},"content":"        assertTrue(Parser.parse(\"Unmark 1\") instanceof UnmarkCommand);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"dominicddl"},"content":"        assertTrue(Parser.parse(\"DELETE 1\") instanceof DeleteCommand);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"dominicddl"},"content":"        assertTrue(Parser.parse(\"Due 2024-12-15\") instanceof DueCommand);","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"dominicddl"},"content":"    public void parse_unknownCommand_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"dominicddl"},"content":"            Parser.parse(\"unknown command\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"I don\u0027t understand\"));","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"dominicddl"},"content":"    public void parse_emptyCommand_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"dominicddl"},"content":"            Parser.parse(\"\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"Please enter a command\"));","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"dominicddl"},"content":"    public void parse_whitespaceOnlyCommand_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"dominicddl"},"content":"            Parser.parse(\"   \");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"Please enter a command\"));","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"dominicddl"},"content":"    public void parse_invalidTodoCommand_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"dominicddl"},"content":"        assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"dominicddl"},"content":"            Parser.parse(\"todo\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"dominicddl"},"content":"    public void parse_invalidDeadlineCommand_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"dominicddl"},"content":"        assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"dominicddl"},"content":"            Parser.parse(\"deadline\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"dominicddl"},"content":"    public void parse_invalidEventCommand_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"dominicddl"},"content":"        assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"dominicddl"},"content":"            Parser.parse(\"event\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"dominicddl"},"content":"    public void parse_invalidMarkCommand_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"dominicddl"},"content":"        assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"dominicddl"},"content":"            Parser.parse(\"mark abc\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"dominicddl"},"content":"    public void parse_invalidDeleteCommand_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"dominicddl"},"content":"        assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"dominicddl"},"content":"            Parser.parse(\"delete xyz\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"dominicddl"},"content":"    public void parse_invalidDueCommand_throwsLuffyException() {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"dominicddl"},"content":"        assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"dominicddl"},"content":"            Parser.parse(\"due\");","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"dominicddl"},"content":"    // Tests for find command parsing","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"dominicddl"},"content":"    public void parse_findCommand_returnsFindCommand() throws LuffyException {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"dominicddl"},"content":"        Command result \u003d Parser.parse(\"find book\");","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"dominicddl"},"content":"        assertTrue(result instanceof FindCommand);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"dominicddl"},"content":"        assertFalse(result.isExit());","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"dominicddl"},"content":"    public void parse_findCommandMultipleKeywords_returnsFindCommand() throws LuffyException {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"dominicddl"},"content":"        Command result \u003d Parser.parse(\"find read book\");","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"dominicddl"},"content":"        assertTrue(result instanceof FindCommand);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"dominicddl"},"content":"    public void parse_findCommandCaseInsensitive_returnsFindCommand() throws LuffyException {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"dominicddl"},"content":"        Command result1 \u003d Parser.parse(\"find book\");","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"dominicddl"},"content":"        Command result2 \u003d Parser.parse(\"Find book\");","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"dominicddl"},"content":"        Command result3 \u003d Parser.parse(\"FIND book\");","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"dominicddl"},"content":"        assertTrue(result1 instanceof FindCommand);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"dominicddl"},"content":"        assertTrue(result2 instanceof FindCommand);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"dominicddl"},"content":"        assertTrue(result3 instanceof FindCommand);","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"dominicddl"},"content":"    public void parse_findCommandNoKeywords_throwsLuffyException() {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"dominicddl"},"content":"            Parser.parse(\"find\");","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"What do you want to find\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"dominicddl"},"content":"    public void parse_findCommandEmptyKeywords_throwsLuffyException() {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"dominicddl"},"content":"            Parser.parse(\"find   \");","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"What do you want to find\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"dominicddl"},"content":"    public void parse_findCommandWhitespaceKeywords_throwsLuffyException() {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"dominicddl"},"content":"        LuffyException exception \u003d assertThrows(LuffyException.class, () -\u003e {","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"dominicddl"},"content":"            Parser.parse(\"find  \");","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"dominicddl"},"content":"        assertTrue(exception.getMessage().contains(\"What do you want to find\"));","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T22:32:48","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-28T21:26:25","isFullCredit":false}],"authorContributionMap":{"dominicddl":503}},{"path":"src/test/java/luffy/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.storage;","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":"import java.io.File;","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":"import luffy.task.Task;","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":"import luffy.task.Todo;","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"import luffy.task.Deadline;","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"import luffy.task.Event;","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"public class StorageTest {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"    private String testFilePath;","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"    private File testFile;","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"    public void setUp() {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"        testFilePath \u003d \"test_data.txt\";","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"        testFile \u003d new File(testFilePath);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"        storage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"    @AfterEach","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"    public void tearDown() {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dominicddl"},"content":"        // Clean up test files","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dominicddl"},"content":"        if (testFile.exists()) {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dominicddl"},"content":"            testFile.delete();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dominicddl"},"content":"        // Clean up data directory if it was created during tests","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dominicddl"},"content":"        File dataDir \u003d new File(\"data\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dominicddl"},"content":"        if (dataDir.exists() \u0026\u0026 dataDir.list().length \u003d\u003d 0) {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dominicddl"},"content":"            dataDir.delete();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dominicddl"},"content":"        }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dominicddl"},"content":"    // Tests for constructor and getFilePath","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dominicddl"},"content":"    public void constructor_validFilePath_setsFilePath() {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dominicddl"},"content":"        Storage storage \u003d new Storage(\"test/path.txt\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"test/path.txt\", storage.getFilePath());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dominicddl"},"content":"    public void getFilePath_returnsCorrectPath() {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dominicddl"},"content":"        assertEquals(testFilePath, storage.getFilePath());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dominicddl"},"content":"    // Tests for save method","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dominicddl"},"content":"    public void save_emptyTaskList_createsEmptyFile() throws IOException {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dominicddl"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dominicddl"},"content":"        assertTrue(testFile.exists());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dominicddl"},"content":"        assertEquals(0, testFile.length());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dominicddl"},"content":"    public void save_todoTask_savesCorrectFormat() throws IOException {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dominicddl"},"content":"        Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dominicddl"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dominicddl"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dominicddl"},"content":"        assertTrue(testFile.exists());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dominicddl"},"content":"        // Read and verify content","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dominicddl"},"content":"        Storage loadStorage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d loadStorage.load();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dominicddl"},"content":"        assertEquals(1, loadedTasks.size());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dominicddl"},"content":"        assertTrue(loadedTasks.get(0) instanceof Todo);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"read book\", loadedTasks.get(0).getDescription());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dominicddl"},"content":"        assertFalse(loadedTasks.get(0).isDone());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dominicddl"},"content":"    public void save_completedTodoTask_savesCorrectStatus() throws IOException {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dominicddl"},"content":"        Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dominicddl"},"content":"        todo.setDone(true);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dominicddl"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dominicddl"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dominicddl"},"content":"        Storage loadStorage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d loadStorage.load();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dominicddl"},"content":"        assertEquals(1, loadedTasks.size());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dominicddl"},"content":"        assertTrue(loadedTasks.get(0).isDone());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dominicddl"},"content":"    public void save_deadlineTaskWithDateTime_savesCorrectFormat() throws IOException {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2024, 12, 15, 14, 30);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dominicddl"},"content":"        Deadline deadlineTask \u003d new Deadline(\"return book\", deadline);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dominicddl"},"content":"        tasks.add(deadlineTask);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dominicddl"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dominicddl"},"content":"        Storage loadStorage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d loadStorage.load();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dominicddl"},"content":"        assertEquals(1, loadedTasks.size());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dominicddl"},"content":"        assertTrue(loadedTasks.get(0) instanceof Deadline);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"return book\", loadedTasks.get(0).getDescription());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dominicddl"},"content":"        ","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dominicddl"},"content":"        Deadline loadedDeadline \u003d (Deadline) loadedTasks.get(0);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dominicddl"},"content":"        assertTrue(loadedDeadline.hasDateTime());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dominicddl"},"content":"        assertEquals(deadline, loadedDeadline.getBy());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dominicddl"},"content":"    public void save_deadlineTaskWithString_savesCorrectFormat() throws IOException {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dominicddl"},"content":"        Deadline deadlineTask \u003d new Deadline(\"return book\", \"Monday\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dominicddl"},"content":"        tasks.add(deadlineTask);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dominicddl"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dominicddl"},"content":"        Storage loadStorage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d loadStorage.load();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"dominicddl"},"content":"        assertEquals(1, loadedTasks.size());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"dominicddl"},"content":"        assertTrue(loadedTasks.get(0) instanceof Deadline);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"dominicddl"},"content":"        ","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"dominicddl"},"content":"        Deadline loadedDeadline \u003d (Deadline) loadedTasks.get(0);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"dominicddl"},"content":"        assertFalse(loadedDeadline.hasDateTime());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"Monday\", loadedDeadline.getByAsString());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"dominicddl"},"content":"    public void save_eventTaskWithDateTime_savesCorrectFormat() throws IOException {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2024, 12, 15, 10, 0);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2024, 12, 15, 12, 0);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"dominicddl"},"content":"        Event eventTask \u003d new Event(\"meeting\", from, to);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"dominicddl"},"content":"        tasks.add(eventTask);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"dominicddl"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"dominicddl"},"content":"        Storage loadStorage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d loadStorage.load();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"dominicddl"},"content":"        assertEquals(1, loadedTasks.size());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"dominicddl"},"content":"        assertTrue(loadedTasks.get(0) instanceof Event);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"dominicddl"},"content":"        ","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"dominicddl"},"content":"        Event loadedEvent \u003d (Event) loadedTasks.get(0);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"dominicddl"},"content":"        assertTrue(loadedEvent.hasDateTime());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"dominicddl"},"content":"        assertEquals(from, loadedEvent.getFrom());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"dominicddl"},"content":"        assertEquals(to, loadedEvent.getTo());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"dominicddl"},"content":"    public void save_eventTaskWithString_savesCorrectFormat() throws IOException {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"dominicddl"},"content":"        Event eventTask \u003d new Event(\"meeting\", \"Monday 10am\", \"Monday 12pm\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"dominicddl"},"content":"        tasks.add(eventTask);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"dominicddl"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"dominicddl"},"content":"        Storage loadStorage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d loadStorage.load();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"dominicddl"},"content":"        assertEquals(1, loadedTasks.size());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"dominicddl"},"content":"        assertTrue(loadedTasks.get(0) instanceof Event);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"dominicddl"},"content":"        ","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"dominicddl"},"content":"        Event loadedEvent \u003d (Event) loadedTasks.get(0);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"dominicddl"},"content":"        assertFalse(loadedEvent.hasDateTime());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"Monday 10am to Monday 12pm\", loadedEvent.getDuration());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"dominicddl"},"content":"    public void save_multipleTasks_savesAllTasks() throws IOException {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"dominicddl"},"content":"        tasks.add(new Todo(\"task 1\"));","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"dominicddl"},"content":"        tasks.add(new Deadline(\"task 2\", \"Monday\"));","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"dominicddl"},"content":"        tasks.add(new Event(\"task 3\", \"Mon 10am\", \"Mon 12pm\"));","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"dominicddl"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"dominicddl"},"content":"        Storage loadStorage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d loadStorage.load();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"dominicddl"},"content":"        assertEquals(3, loadedTasks.size());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"dominicddl"},"content":"        assertTrue(loadedTasks.get(0) instanceof Todo);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"dominicddl"},"content":"        assertTrue(loadedTasks.get(1) instanceof Deadline);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"dominicddl"},"content":"        assertTrue(loadedTasks.get(2) instanceof Event);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"dominicddl"},"content":"    // Tests for load method","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"dominicddl"},"content":"    public void load_nonExistentFile_returnsEmptyList() throws IOException {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"dominicddl"},"content":"        Storage storage \u003d new Storage(\"non_existent_file.txt\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"dominicddl"},"content":"        assertTrue(tasks.isEmpty());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"dominicddl"},"content":"    public void load_emptyFile_returnsEmptyList() throws IOException {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"dominicddl"},"content":"        // Create empty file","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"dominicddl"},"content":"        testFile.createNewFile();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"dominicddl"},"content":"        ","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"dominicddl"},"content":"        assertTrue(tasks.isEmpty());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"dominicddl"},"content":"    public void load_validTodoLine_loadsTodoCorrectly() throws IOException {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"dominicddl"},"content":"        // Create test file with todo","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"dominicddl"},"content":"        FileWriter writer \u003d new FileWriter(testFile);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"dominicddl"},"content":"        writer.write(\"T | 0 | read book\\n\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"dominicddl"},"content":"        writer.close();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"dominicddl"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"dominicddl"},"content":"        assertTrue(tasks.get(0) instanceof Todo);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"read book\", tasks.get(0).getDescription());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"dominicddl"},"content":"        assertFalse(tasks.get(0).isDone());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"dominicddl"},"content":"    public void load_validCompletedTodoLine_loadsTodoCorrectly() throws IOException {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"dominicddl"},"content":"        FileWriter writer \u003d new FileWriter(testFile);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"dominicddl"},"content":"        writer.write(\"T | 1 | read book\\n\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"dominicddl"},"content":"        writer.close();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"dominicddl"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"dominicddl"},"content":"        assertTrue(tasks.get(0).isDone());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"dominicddl"},"content":"    public void load_validDeadlineWithDateTime_loadsDeadlineCorrectly() throws IOException {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"dominicddl"},"content":"        FileWriter writer \u003d new FileWriter(testFile);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"dominicddl"},"content":"        writer.write(\"D | 0 | return book | 2024-12-15T14:30:00\\n\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"dominicddl"},"content":"        writer.close();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"dominicddl"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"dominicddl"},"content":"        assertTrue(tasks.get(0) instanceof Deadline);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"dominicddl"},"content":"        ","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"dominicddl"},"content":"        Deadline deadline \u003d (Deadline) tasks.get(0);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"dominicddl"},"content":"        assertTrue(deadline.hasDateTime());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"dominicddl"},"content":"        assertEquals(LocalDateTime.of(2024, 12, 15, 14, 30), deadline.getBy());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"dominicddl"},"content":"    public void load_validDeadlineWithString_loadsDeadlineCorrectly() throws IOException {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"dominicddl"},"content":"        FileWriter writer \u003d new FileWriter(testFile);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"dominicddl"},"content":"        writer.write(\"D | 0 | return book | Monday\\n\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"dominicddl"},"content":"        writer.close();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"dominicddl"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"dominicddl"},"content":"        assertTrue(tasks.get(0) instanceof Deadline);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"dominicddl"},"content":"        ","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"dominicddl"},"content":"        Deadline deadline \u003d (Deadline) tasks.get(0);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"dominicddl"},"content":"        assertFalse(deadline.hasDateTime());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"Monday\", deadline.getByAsString());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"dominicddl"},"content":"    public void load_validEventWithDateTime_loadsEventCorrectly() throws IOException {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"dominicddl"},"content":"        FileWriter writer \u003d new FileWriter(testFile);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"dominicddl"},"content":"        writer.write(\"E | 0 | meeting | 2024-12-15T10:00:00 | 2024-12-15T12:00:00\\n\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"dominicddl"},"content":"        writer.close();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"dominicddl"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"dominicddl"},"content":"        assertTrue(tasks.get(0) instanceof Event);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"dominicddl"},"content":"        ","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"dominicddl"},"content":"        Event event \u003d (Event) tasks.get(0);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"dominicddl"},"content":"        assertTrue(event.hasDateTime());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"dominicddl"},"content":"        assertEquals(LocalDateTime.of(2024, 12, 15, 10, 0), event.getFrom());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"dominicddl"},"content":"        assertEquals(LocalDateTime.of(2024, 12, 15, 12, 0), event.getTo());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"dominicddl"},"content":"    public void load_validEventWithString_loadsEventCorrectly() throws IOException {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"dominicddl"},"content":"        FileWriter writer \u003d new FileWriter(testFile);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"dominicddl"},"content":"        writer.write(\"E | 0 | meeting | Monday 10am to Monday 12pm\\n\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"dominicddl"},"content":"        writer.close();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"dominicddl"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"dominicddl"},"content":"        assertTrue(tasks.get(0) instanceof Event);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"dominicddl"},"content":"        ","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"dominicddl"},"content":"        Event event \u003d (Event) tasks.get(0);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"dominicddl"},"content":"        assertFalse(event.hasDateTime());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"Monday 10am to Monday 12pm\", event.getDuration());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"dominicddl"},"content":"    public void load_corruptedLine_skipsCorruptedData() throws IOException {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"dominicddl"},"content":"        FileWriter writer \u003d new FileWriter(testFile);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"dominicddl"},"content":"        writer.write(\"T | 0 | valid todo\\n\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"dominicddl"},"content":"        writer.write(\"CORRUPTED LINE\\n\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"dominicddl"},"content":"        writer.write(\"D | 0 | valid deadline | Monday\\n\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"dominicddl"},"content":"        writer.close();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"dominicddl"},"content":"        assertEquals(2, tasks.size()); // Should skip corrupted line","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"dominicddl"},"content":"        assertTrue(tasks.get(0) instanceof Todo);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"dominicddl"},"content":"        assertTrue(tasks.get(1) instanceof Deadline);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"dominicddl"},"content":"    public void load_emptyLines_skipsEmptyLines() throws IOException {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"dominicddl"},"content":"        FileWriter writer \u003d new FileWriter(testFile);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"dominicddl"},"content":"        writer.write(\"T | 0 | todo task\\n\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"dominicddl"},"content":"        writer.write(\"\\n\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"dominicddl"},"content":"        writer.write(\"   \\n\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"dominicddl"},"content":"        writer.write(\"D | 0 | deadline task | Monday\\n\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"dominicddl"},"content":"        writer.close();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"dominicddl"},"content":"        assertEquals(2, tasks.size());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"dominicddl"},"content":"    public void load_invalidTaskType_skipsInvalidTask() throws IOException {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"dominicddl"},"content":"        FileWriter writer \u003d new FileWriter(testFile);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"dominicddl"},"content":"        writer.write(\"T | 0 | valid todo\\n\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"dominicddl"},"content":"        writer.write(\"X | 0 | invalid task type | data\\n\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"dominicddl"},"content":"        writer.write(\"D | 0 | valid deadline | Monday\\n\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"dominicddl"},"content":"        writer.close();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"dominicddl"},"content":"        assertEquals(2, tasks.size());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"dominicddl"},"content":"    public void load_invalidStatus_skipsInvalidTask() throws IOException {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"dominicddl"},"content":"        FileWriter writer \u003d new FileWriter(testFile);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"dominicddl"},"content":"        writer.write(\"T | 0 | valid todo\\n\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"dominicddl"},"content":"        writer.write(\"T | abc | invalid status | \\n\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"dominicddl"},"content":"        writer.write(\"D | 0 | valid deadline | Monday\\n\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"dominicddl"},"content":"        writer.close();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"dominicddl"},"content":"        assertEquals(2, tasks.size());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"dominicddl"},"content":"    // Round-trip tests (save then load)","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"dominicddl"},"content":"    public void roundTrip_mixedTasks_maintainsAllData() throws IOException {","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e originalTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"dominicddl"},"content":"        ","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"dominicddl"},"content":"        Todo todo \u003d new Todo(\"todo task\");","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"dominicddl"},"content":"        todo.setDone(true);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"dominicddl"},"content":"        originalTasks.add(todo);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"dominicddl"},"content":"        ","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"dominicddl"},"content":"        Deadline deadline \u003d new Deadline(\"deadline task\", LocalDateTime.of(2024, 12, 15, 14, 30));","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"dominicddl"},"content":"        originalTasks.add(deadline);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"dominicddl"},"content":"        ","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"dominicddl"},"content":"        Event event \u003d new Event(\"event task\", ","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"dominicddl"},"content":"                LocalDateTime.of(2024, 12, 15, 10, 0),","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"dominicddl"},"content":"                LocalDateTime.of(2024, 12, 15, 12, 0));","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"dominicddl"},"content":"        originalTasks.add(event);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"dominicddl"},"content":"        // Save and load","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"dominicddl"},"content":"        storage.save(originalTasks);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"dominicddl"},"content":"        assertEquals(originalTasks.size(), loadedTasks.size());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"dominicddl"},"content":"        ","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"dominicddl"},"content":"        // Check todo","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"dominicddl"},"content":"        assertTrue(loadedTasks.get(0) instanceof Todo);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"todo task\", loadedTasks.get(0).getDescription());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"dominicddl"},"content":"        assertTrue(loadedTasks.get(0).isDone());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"dominicddl"},"content":"        ","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"dominicddl"},"content":"        // Check deadline","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"dominicddl"},"content":"        assertTrue(loadedTasks.get(1) instanceof Deadline);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"dominicddl"},"content":"        Deadline loadedDeadline \u003d (Deadline) loadedTasks.get(1);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"dominicddl"},"content":"        assertTrue(loadedDeadline.hasDateTime());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"dominicddl"},"content":"        assertEquals(LocalDateTime.of(2024, 12, 15, 14, 30), loadedDeadline.getBy());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"dominicddl"},"content":"        ","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"dominicddl"},"content":"        // Check event","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"dominicddl"},"content":"        assertTrue(loadedTasks.get(2) instanceof Event);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"dominicddl"},"content":"        Event loadedEvent \u003d (Event) loadedTasks.get(2);","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"dominicddl"},"content":"        assertTrue(loadedEvent.hasDateTime());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"dominicddl"},"content":"        assertEquals(LocalDateTime.of(2024, 12, 15, 10, 0), loadedEvent.getFrom());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"dominicddl"},"content":"        assertEquals(LocalDateTime.of(2024, 12, 15, 12, 0), loadedEvent.getTo());","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-28T21:30:37","isFullCredit":false}],"authorContributionMap":{"dominicddl":387}},{"path":"src/test/java/luffy/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.task;","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":"public class TaskListTest {","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":"    private LocalDateTime testDate1;","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":"    private LocalDateTime testDate2;","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":"    private LocalDateTime testDate3;","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"    public void setUp() {","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"        testDate1 \u003d LocalDateTime.of(2024, 12, 15, 10, 0); // Dec 15, 2024 10:00 AM","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"        testDate2 \u003d LocalDateTime.of(2024, 12, 16, 14, 30); // Dec 16, 2024 2:30 PM","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"        testDate3 \u003d LocalDateTime.of(2024, 12, 17, 23, 59); // Dec 17, 2024 11:59 PM","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"    public void getTasksOnDate_emptyTaskList_returnsEmptyList() {","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e result \u003d taskList.getTasksOnDate(testDate1);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"        assertTrue(result.isEmpty());","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"    public void getTasksOnDate_noMatchingTasks_returnsEmptyList() {","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dominicddl"},"content":"        // Add tasks with different dates","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dominicddl"},"content":"        Deadline deadline \u003d new Deadline(\"deadline task\", testDate1);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dominicddl"},"content":"        Event event \u003d new Event(\"event task\", testDate2, testDate2.plusHours(2));","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dominicddl"},"content":"        taskList.add(deadline);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dominicddl"},"content":"        taskList.add(event);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dominicddl"},"content":"        // Search for a different date","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime differentDate \u003d LocalDateTime.of(2024, 12, 20, 10, 0);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e result \u003d taskList.getTasksOnDate(differentDate);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dominicddl"},"content":"        assertTrue(result.isEmpty());","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dominicddl"},"content":"    public void getTasksOnDate_matchingDeadline_returnsDeadline() {","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dominicddl"},"content":"        Deadline deadline \u003d new Deadline(\"deadline task\", testDate1);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dominicddl"},"content":"        taskList.add(deadline);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e result \u003d taskList.getTasksOnDate(testDate1);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dominicddl"},"content":"        assertEquals(1, result.size());","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dominicddl"},"content":"        assertEquals(deadline, result.get(0));","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dominicddl"},"content":"    public void getTasksOnDate_matchingEvent_returnsEvent() {","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dominicddl"},"content":"        Event event \u003d new Event(\"event task\", testDate1, testDate1.plusHours(3));","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dominicddl"},"content":"        taskList.add(event);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e result \u003d taskList.getTasksOnDate(testDate1);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dominicddl"},"content":"        assertEquals(1, result.size());","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dominicddl"},"content":"        assertEquals(event, result.get(0));","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dominicddl"},"content":"    public void getTasksOnDate_eventSpansMultipleDays_returnsEventForAllDays() {","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dominicddl"},"content":"        // Create event spanning 3 days","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime eventStart \u003d LocalDateTime.of(2024, 12, 15, 10, 0);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime eventEnd \u003d LocalDateTime.of(2024, 12, 17, 18, 0);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dominicddl"},"content":"        Event event \u003d new Event(\"multi-day event\", eventStart, eventEnd);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dominicddl"},"content":"        taskList.add(event);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dominicddl"},"content":"        // Test each day in the range","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e resultDay1 \u003d taskList.getTasksOnDate(LocalDateTime.of(2024, 12, 15, 5, 0));","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e resultDay2 \u003d taskList.getTasksOnDate(LocalDateTime.of(2024, 12, 16, 12, 0));","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e resultDay3 \u003d taskList.getTasksOnDate(LocalDateTime.of(2024, 12, 17, 20, 0));","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dominicddl"},"content":"        assertEquals(1, resultDay1.size());","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dominicddl"},"content":"        assertEquals(1, resultDay2.size());","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dominicddl"},"content":"        assertEquals(1, resultDay3.size());","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dominicddl"},"content":"        assertEquals(event, resultDay1.get(0));","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dominicddl"},"content":"        assertEquals(event, resultDay2.get(0));","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dominicddl"},"content":"        assertEquals(event, resultDay3.get(0));","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dominicddl"},"content":"    public void getTasksOnDate_multipleMatchingTasks_returnsAllMatching() {","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dominicddl"},"content":"        Deadline deadline \u003d new Deadline(\"deadline task\", testDate1);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dominicddl"},"content":"        Event event \u003d new Event(\"event task\", testDate1, testDate1.plusHours(2));","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dominicddl"},"content":"        Todo todo \u003d new Todo(\"todo task\"); // Should not match","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dominicddl"},"content":"        taskList.add(deadline);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dominicddl"},"content":"        taskList.add(event);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dominicddl"},"content":"        taskList.add(todo);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e result \u003d taskList.getTasksOnDate(testDate1);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dominicddl"},"content":"        assertEquals(2, result.size());","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dominicddl"},"content":"        assertTrue(result.contains(deadline));","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dominicddl"},"content":"        assertTrue(result.contains(event));","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dominicddl"},"content":"        assertFalse(result.contains(todo));","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dominicddl"},"content":"    public void getTasksOnDate_ignoreTimeComponent_matchesSameDate() {","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dominicddl"},"content":"        // Create deadline at specific time","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime deadlineTime \u003d LocalDateTime.of(2024, 12, 15, 10, 0);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dominicddl"},"content":"        Deadline deadline \u003d new Deadline(\"deadline task\", deadlineTime);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dominicddl"},"content":"        taskList.add(deadline);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dominicddl"},"content":"        // Search with different time but same date","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime searchTime \u003d LocalDateTime.of(2024, 12, 15, 23, 59);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e result \u003d taskList.getTasksOnDate(searchTime);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dominicddl"},"content":"        assertEquals(1, result.size());","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dominicddl"},"content":"        assertEquals(deadline, result.get(0));","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dominicddl"},"content":"    public void getTasksOnDate_oldStringBasedTasks_ignoresOldTasks() {","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dominicddl"},"content":"        // Create deadline with string (old format) - should not match","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dominicddl"},"content":"        Deadline oldDeadline \u003d new Deadline(\"old deadline\", \"some old date string\");","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dominicddl"},"content":"        Event oldEvent \u003d new Event(\"old event\", \"old start\", \"old end\");","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dominicddl"},"content":"        taskList.add(oldDeadline);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dominicddl"},"content":"        taskList.add(oldEvent);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dominicddl"},"content":"        ArrayList\u003cTask\u003e result \u003d taskList.getTasksOnDate(testDate1);","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dominicddl"},"content":"        assertTrue(result.isEmpty());","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-28T21:08:41","isFullCredit":false}],"authorContributionMap":{"dominicddl":127}},{"path":"src/test/java/luffy/util/DateTimeUtilTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dominicddl"},"content":"package luffy.util;","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dominicddl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dominicddl"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dominicddl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dominicddl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dominicddl"},"content":"public class DateTimeUtilTest {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dominicddl"},"content":"    public void formatDateTime_regularDateTime_returnsFullFormat() {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2024, 12, 15, 14, 30);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dominicddl"},"content":"        String result \u003d DateTimeUtil.formatDateTime(dateTime);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"Dec 15 2024, 2:30 pm\", result);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dominicddl"},"content":"    public void formatDateTime_morningTime_returnsAMFormat() {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2024, 1, 5, 9, 15);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dominicddl"},"content":"        String result \u003d DateTimeUtil.formatDateTime(dateTime);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"Jan 05 2024, 9:15 am\", result);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dominicddl"},"content":"    public void formatDateTime_eveningTime_returnsPMFormat() {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2024, 6, 20, 18, 45);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dominicddl"},"content":"        String result \u003d DateTimeUtil.formatDateTime(dateTime);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"Jun 20 2024, 6:45 pm\", result);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dominicddl"},"content":"    public void formatDateTime_midnight_returnsFullFormat() {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2024, 3, 10, 0, 0);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dominicddl"},"content":"        String result \u003d DateTimeUtil.formatDateTime(dateTime);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"Mar 10 2024, 12:00 am\", result);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dominicddl"},"content":"    public void formatDateTime_noon_returnsFullFormat() {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2024, 8, 25, 12, 0);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dominicddl"},"content":"        String result \u003d DateTimeUtil.formatDateTime(dateTime);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"Aug 25 2024, 12:00 pm\", result);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dominicddl"},"content":"    public void formatDateTime_defaultTime2359_returnsDateOnly() {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2024, 12, 15, 23, 59);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dominicddl"},"content":"        String result \u003d DateTimeUtil.formatDateTime(dateTime);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"Dec 15 2024\", result);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dominicddl"},"content":"    public void formatDateTime_almostDefaultTime2358_returnsFullFormat() {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2024, 12, 15, 23, 58);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dominicddl"},"content":"        String result \u003d DateTimeUtil.formatDateTime(dateTime);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"Dec 15 2024, 11:58 pm\", result);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dominicddl"},"content":"    public void formatDateTime_leapYear_handlesCorrectly() {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2024, 2, 29, 10, 30);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dominicddl"},"content":"        String result \u003d DateTimeUtil.formatDateTime(dateTime);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"Feb 29 2024, 10:30 am\", result);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dominicddl"},"content":"    public void formatDateTimeForFile_regularDateTime_returnsISOFormat() {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2024, 12, 15, 14, 30, 45);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dominicddl"},"content":"        String result \u003d DateTimeUtil.formatDateTimeForFile(dateTime);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"2024-12-15T14:30:45\", result);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dominicddl"},"content":"    public void formatDateTimeForFile_withSeconds_includesSeconds() {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2024, 1, 5, 9, 15, 30);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dominicddl"},"content":"        String result \u003d DateTimeUtil.formatDateTimeForFile(dateTime);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"2024-01-05T09:15:30\", result);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dominicddl"},"content":"    public void formatDateTimeForFile_withNanoseconds_includesNanoseconds() {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2024, 6, 20, 18, 45, 30, 123456789);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dominicddl"},"content":"        String result \u003d DateTimeUtil.formatDateTimeForFile(dateTime);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"2024-06-20T18:45:30.123456789\", result);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dominicddl"},"content":"    public void formatDateTimeForFile_midnight_handlesCorrectly() {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2024, 3, 10, 0, 0, 0);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dominicddl"},"content":"        String result \u003d DateTimeUtil.formatDateTimeForFile(dateTime);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"2024-03-10T00:00:00\", result);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dominicddl"},"content":"    public void parseDateTimeFromFile_validISOFormat_returnsCorrectDateTime() {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dominicddl"},"content":"        String isoString \u003d \"2024-12-15T14:30:45\";","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime result \u003d DateTimeUtil.parseDateTimeFromFile(isoString);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2024, 12, 15, 14, 30, 45);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dominicddl"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dominicddl"},"content":"    public void parseDateTimeFromFile_withNanoseconds_parsesCorrectly() {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dominicddl"},"content":"        String isoString \u003d \"2024-06-20T18:45:30.123456789\";","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime result \u003d DateTimeUtil.parseDateTimeFromFile(isoString);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2024, 6, 20, 18, 45, 30, 123456789);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dominicddl"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dominicddl"},"content":"    public void parseDateTimeFromFile_invalidFormat_throwsException() {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dominicddl"},"content":"        String invalidString \u003d \"2024/12/15 14:30:45\";","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dominicddl"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dominicddl"},"content":"            DateTimeUtil.parseDateTimeFromFile(invalidString);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dominicddl"},"content":"    public void parseDateTimeFromFile_emptyString_throwsException() {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dominicddl"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dominicddl"},"content":"            DateTimeUtil.parseDateTimeFromFile(\"\");","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"dominicddl"},"content":"    public void parseDateTimeFromFile_nullString_throwsException() {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"dominicddl"},"content":"        assertThrows(NullPointerException.class, () -\u003e {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"dominicddl"},"content":"            DateTimeUtil.parseDateTimeFromFile(null);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"dominicddl"},"content":"        });","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"dominicddl"},"content":"    public void roundTripConversion_formatAndParse_maintainsDateTime() {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime original \u003d LocalDateTime.of(2024, 12, 15, 14, 30, 45);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"dominicddl"},"content":"        String formatted \u003d DateTimeUtil.formatDateTimeForFile(original);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime parsed \u003d DateTimeUtil.parseDateTimeFromFile(formatted);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"dominicddl"},"content":"        assertEquals(original, parsed);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"dominicddl"},"content":"    public void roundTripConversion_withNanoseconds_maintainsDateTime() {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime original \u003d LocalDateTime.of(2024, 6, 20, 18, 45, 30, 123456789);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"dominicddl"},"content":"        String formatted \u003d DateTimeUtil.formatDateTimeForFile(original);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime parsed \u003d DateTimeUtil.parseDateTimeFromFile(formatted);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"dominicddl"},"content":"        assertEquals(original, parsed);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"dominicddl"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"dominicddl"},"content":"    public void formatDateTime_edgeCaseDates_handlesCorrectly() {","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"dominicddl"},"content":"        // Test various edge cases","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime newYear \u003d LocalDateTime.of(2024, 1, 1, 0, 0);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"Jan 01 2024, 12:00 am\", DateTimeUtil.formatDateTime(newYear));","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime newYearEve \u003d LocalDateTime.of(2023, 12, 31, 23, 59);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"Dec 31 2023\", DateTimeUtil.formatDateTime(newYearEve));","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"dominicddl"},"content":"","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"dominicddl"},"content":"        LocalDateTime christmas \u003d LocalDateTime.of(2024, 12, 25, 12, 0);","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"dominicddl"},"content":"        assertEquals(\"Dec 25 2024, 12:00 pm\", DateTimeUtil.formatDateTime(christmas));","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"dominicddl"},"content":"    }","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"dominicddl"},"content":"}","lastModifiedDate":"2025-08-28T21:18:06","isFullCredit":false}],"authorContributionMap":{"dominicddl":161}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dominicddl"},"content":"java -classpath ../bin Luffy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-23T00:08:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"-":37,"dominicddl":1}}]
