[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"plugins {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"    id \u0027java\u0027","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"    id \u0027application\u0027","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-03T21:27:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2025-08-28T16:40:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:40:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"checkstyle {","lastModifiedDate":"2025-09-03T21:27:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"    toolVersion \u003d \u002711.0.1\u0027","lastModifiedDate":"2025-09-03T21:27:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-09-03T21:27:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-03T21:27:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"application {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"    mainClass.set(\"pepe.ui.Launcher\")","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"tasks.withType(JavaExec) {","lastModifiedDate":"2025-09-10T20:22:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"    jvmArgs +\u003d \"-ea\"","lastModifiedDate":"2025-09-10T20:22:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-09-10T20:22:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-10T20:22:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"shadowJar {","lastModifiedDate":"2025-08-28T16:40:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    archiveFileName \u003d \u0027pepe.jar\u0027","lastModifiedDate":"2025-08-28T16:40:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T16:40:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:40:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:40:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"tasks.named(\u0027run\u0027) {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"repositories {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"    mavenCentral()","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"dependencies {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.10.0\u0027","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.10.0\u0027","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"    testRuntimeOnly \u0027org.junit.platform:junit-platform-launcher\u0027","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"test {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"    useJUnitPlatform()","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"    testLogging {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clementsimwj"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clementsimwj"},"content":"        showExceptions true","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clementsimwj"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clementsimwj"},"content":"        showCauses true","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clementsimwj"},"content":"        showStackTraces true","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clementsimwj"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false}],"authorContributionMap":{"clementsimwj":71}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"# Pepe - Task Tracking Assistant:","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"---","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"![UiPicture](Ui.png)","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"---","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"With Pepe constantly keeping track of your tasks, you will never have to waste time remembering them.","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"Pepe is a **lightweight desktop application** that provides users with commands that helps","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"to **boost efficiency**.","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"---","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"## Getting Started:","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"1. Download `pepe.jar` (*latest release*) from the [release page](https://github.com/clementsimwj/ip/releases)","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"2. Place it inside a folder (*as it will generate a file*)","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"3. Run the Application","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"4. Explore the [features](#features) Pepe offers","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"5. Refer [below](#troubleshooting) if needed","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"---","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"## Features:","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"---","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"\u003e [!NOTE] \u003cbr\u003e","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"\u003e Command Format:","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"\u003e - Words in ```UPPER_CASE``` are the parameters supplied to the user \u003cbr\u003e","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"\u003e   Example: ```todo TASK_NAME```, ```find TASK```","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"\u003e - Extraneous parameters for commands without parameters will be ignored \u003cbr\u003e","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"\u003e   Example: ```list 123``` will be interpreted as ```list```","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"\u003e - Any other commands not specified [below](#features) will be ignored \u003cbr\u003e","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"---","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"| Feature           | Description                                                            | Command                                             | Example                                                             |","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"|-------------------|------------------------------------------------------------------------|-----------------------------------------------------|---------------------------------------------------------------------|","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"| View Tasks        | Shows a list of tasks (*from top to bottom*) beginning from index 1    | ```list```                                          | ```list```                                                          |","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"| Add To-Do Task    | Adds a regular To-Do task with no deadline                             | ```todo TASK_NAME```                                | ```todo Read a book```                                              |","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"| Add Deadline Task | Adds a Task with deadline                                              | ```deadline TASK_NAME /by DATE```                   | ```deadline Submit Assignment for CS2103T /by 2025-09-21```         |","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"| Add Event Task    | Adds a Task with both a Start Date and End Date                        | ```event TASK_NAME /from START_DATE /to END_DATE``` | ```event Recess Week for AY25/26 /from 2025-09-22 /to 2025-09-29``` |","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"| Mark Tasks        | Marks the specified task(s) with a ❌                                   | ```mark TASK_NUMBER```                              | ```mark 1``` \u003cbr\u003e ```mark 1 3 5```                                  |","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"| Unmark Tasks      | Unmarks the specified task(s) by removing ❌                            | ```unmark TASK_NUMBER```                            | ```unmark 1``` \u003cbr\u003e ```unmark 1 3 5```                              |","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"| Delete Tasks      | Deletes the specified task(s) from all tasks                           | ```delete TASK_NUMBER```                            | ```delete 1``` \u003cbr\u003e ```delete 1 3 5```                              |","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"| Find Tasks        | Finds all task(s) (*returns a list*) that contain the specified keyword | ```find KEYWORD```                                  | ```find homework``` \u003cbr\u003e ```find assignment```                      |","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"| Exit              | Saves task data and closes the app                                     | ```bye```                                           | ```bye```                                                           |","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"\u003e[!IMPORTANT] \u003cbr\u003e","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"\u003e - ```TASK_NAME``` and ```KEYWORD``` is not space-sensitive","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"\u003e - ```DATE```, ```START_DATE``` and ```END_DATE``` must be in the format \u003cbr\u003e ***YYYY-MM-DD*** (Hyphens Included)","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"\u003e - Each ```TASK_NUMBER``` has to be spaced apart","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"---","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"## Troubleshooting:","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"If you are still facing issues running Pepe, here are some possible solutions:","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"### Clone Repository:","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"1. Set up your local repository","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clementsimwj"},"content":"2. Navigate to the *root* of your project","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clementsimwj"},"content":"3. ```git clone https://github.com/clementsimwj/ip.git```","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clementsimwj"},"content":"4. ```./gradlew run```","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clementsimwj"},"content":"5. Alternatively, if you wish to have ```pepe.jar``` application installed, you can run the command ```./gradlew build```","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clementsimwj"},"content":"### Create ```data``` folder:","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clementsimwj"},"content":"1. Locate the folder containing ```pepe.jar```","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clementsimwj"},"content":"2. Create a folder ```data```","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clementsimwj"},"content":"3. Create a text-file ```tasks.txt```","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clementsimwj"},"content":"\u003eIf your still face any problems, do contact me at e1397927@u.nus.edu","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clementsimwj"},"content":"---","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clementsimwj"},"content":"### \"Your secrets are safe with me… mostly because I’m too lazy to remember.\" 🐸","lastModifiedDate":"2025-09-18T01:05:21","isFullCredit":false}],"authorContributionMap":{"clementsimwj":61,"-":14}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"/*","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":" *","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":" * The settings file is used to specify which projects to include in your build.","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":" * For more detailed information on multi-project builds, please refer to https://docs.gradle.org/9.0.0/userguide/multi_project_builds.html in the Gradle documentation.","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:40:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"pluginManagement {","lastModifiedDate":"2025-08-28T16:40:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"    repositories {","lastModifiedDate":"2025-08-28T16:40:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"        gradlePluginPortal()","lastModifiedDate":"2025-08-28T16:40:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"        mavenCentral()","lastModifiedDate":"2025-08-28T16:40:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:40:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T16:40:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:40:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"rootProject.name \u003d \u0027ip\u0027","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false}],"authorContributionMap":{"clementsimwj":16}},{"path":"src/main/java/pepe/Pepe.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import pepe.command.Command;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import pepe.parser.Parser;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import pepe.storage.Storage;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"import pepe.ui.Ui;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-20T14:19:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":" * Main class for the Pepe application, a command-line task manager.","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":" * This class initializes the application, loads tasks from storage,","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":" * handles user input through the Ui, and executes commands using the Parser.","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"public class Pepe {","lastModifiedDate":"2025-08-20T13:54:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"    //Fields","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"    private final Storage storage;","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"    private final Ui ui;","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    private String commandType;","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"     * Constructs a new Pepe application instance with the given storage file path.","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"     * Loads tasks from the storage file. If loading fails, initializes an empty TaskList.","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"     * @param filePath the path to the storage file for tasks","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"    public Pepe(String filePath) {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.isBlank() : \"File path should not be null or empty\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"        try {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"        } catch (PepeExceptions e) {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"            ui.showUiError(e.getMessage());","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"     * Runs the main loop of the Pepe application.","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"     * The loop repeatedly reads user commands, parses them, executes the","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"     * corresponding command, and updates the task list until the user exits.","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"    public void run() {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"        assert ui !\u003d null : \"UI should not be null before running the main loop\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"        assert tasks !\u003d null : \"Tasks should not be null before running the main loop\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"        ui.showUiGreetUser();","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"        while (!isExit) {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"            isExit \u003d handleUserCommand();","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"     * Handles a single cycle of user interaction in the main loop.","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clementsimwj"},"content":"     * This method reads a command from the user through the {@link Ui},","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clementsimwj"},"content":"     * parses it into a {@link Command} using the {@link Parser},","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clementsimwj"},"content":"     * and executes the command with the current {@link TaskList} and {@link Storage}.","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clementsimwj"},"content":"     * If the command signals application termination, the method returns {@code true}.","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clementsimwj"},"content":"     * Otherwise, it continues execution and returns {@code false}.","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clementsimwj"},"content":"     * Any {@link PepeExceptions} thrown during parsing or execution are caught,","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clementsimwj"},"content":"     * and the error message is displayed via the {@link Ui}.","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clementsimwj"},"content":"     * @return {@code true} if the executed command requests program exit,","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clementsimwj"},"content":"     *         {@code false} otherwise","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clementsimwj"},"content":"    private boolean handleUserCommand() {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clementsimwj"},"content":"        try {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clementsimwj"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clementsimwj"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clementsimwj"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clementsimwj"},"content":"            return c.isExit();","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"clementsimwj"},"content":"        } catch (PepeExceptions e) {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"clementsimwj"},"content":"            ui.showUiError(e.getMessage());","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"clementsimwj"},"content":"            return false;","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"clementsimwj"},"content":"     * Entry point for the Pepe application.","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"clementsimwj"},"content":"     * Initializes a Pepe instance with the default task storage path and runs the main loop.","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"clementsimwj"},"content":"     * @param args command-line arguments (not used)","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"clementsimwj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"clementsimwj"},"content":"        new Pepe(\"data/tasks.txt\").run();","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"clementsimwj"},"content":"     * Processes a user input command and returns the response as a string.","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"clementsimwj"},"content":"     * This method parses the input using {@link Parser#parse(String)}, executes","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"clementsimwj"},"content":"     * the resulting {@link Command} on the current task list, UI, and storage,","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"clementsimwj"},"content":"     * and updates the {@code commandType} field with the type of command executed.","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"clementsimwj"},"content":"     * If an exception occurs during parsing or execution, a user-friendly error","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"clementsimwj"},"content":"     * message is returned.","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"clementsimwj"},"content":"     * @param input the user\u0027s input command; must not be {@code null}","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"clementsimwj"},"content":"     * @return the result message of executing the command, or an error message if","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"clementsimwj"},"content":"     *         execution fails","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"clementsimwj"},"content":"     * @throws AssertionError if {@code input} is {@code null}","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"clementsimwj"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"clementsimwj"},"content":"        assert input !\u003d null : \"Input string should not be null\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"clementsimwj"},"content":"        try {","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"clementsimwj"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"clementsimwj"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"clementsimwj"},"content":"            commandType \u003d c.getClass().getSimpleName();","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"clementsimwj"},"content":"            return c.getString();","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"clementsimwj"},"content":"        } catch (PepeExceptions e) {","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"clementsimwj"},"content":"            commandType \u003d null;","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"clementsimwj"},"content":"            return \"WARNING! \\n\" + e.getMessage();","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"clementsimwj"},"content":"     * Returns the type of the last command executed.","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"clementsimwj"},"content":"     * The command type is the simple class name of the {@link Command} that was","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"clementsimwj"},"content":"     * last executed via {@link #getResponse(String)}.","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"clementsimwj"},"content":"     * @return the simple class name of the last executed command, or {@code null}","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"clementsimwj"},"content":"     *         if no command has been executed yet","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"clementsimwj"},"content":"    public String getCommandType() {","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"clementsimwj"},"content":"        return commandType;","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T01:43:31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:43:31","isFullCredit":false}],"authorContributionMap":{"clementsimwj":137}},{"path":"src/main/java/pepe/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.command;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import pepe.storage.Storage;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import pepe.ui.Ui;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":" * Abstract class representing a command in Pepe.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":" * Each concrete command (e.g., TodoCommand, MarkCommand) must implement the execute method.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":" * Commands can optionally signal the application to exit by overriding isExit().","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"public abstract class Command {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"    private String response;","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"     * Executes the command.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"     * @param tasks   the current TaskList","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"     * @param ui      the UI for displaying messages","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"     * @param storage the Storage for saving or loading tasks","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if an error occurs during command execution","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws PepeExceptions;","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"     * Indicates whether this command signals the application to exit.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"     * @return true if the application should exit after this command, false otherwise","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"        return false;","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"    public void setResponse(String response) {","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"        this.response \u003d response;","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"    public String getString() {","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"        return this.response;","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false}],"authorContributionMap":{"clementsimwj":44}},{"path":"src/main/java/pepe/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.command;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import pepe.storage.Storage;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Task;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"import pepe.ui.Ui;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":" * Command to add a {@link pepe.task.Deadlines} task to the task list.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":" * Extends the {@link Command} abstract class and implements the {@link #execute(TaskList, Ui, Storage)}","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":" * method to handle adding a deadline task, updating the UI, and saving the task list.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"    private final Task task;","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"     * Constructs a DeadlineCommand with the specified task.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"     * @param task the Deadline task to add","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"    public DeadlineCommand(Task task) {","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"     * Adds the deadline task to the task list, shows a confirmation message via {@link Ui},","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"     * and saves the updated task list to {@link Storage}.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"     * @param tasks   the task list to add the task to","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"     * @param ui      the UI object to display messages","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"     * @param storage the storage object to save the updated task list","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if there is an error saving the task list","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"    @Override","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws PepeExceptions {","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"        try {","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"            tasks.addTask(this.task);","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"            super.setResponse(ui.showUiAddDeadline(tasks, this.task));","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"            storage.save(tasks);","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"            throw new PepeExceptions(","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"                    \"Add a Deadline Task: deadline \u003ctask-name\u003e /by \u003cdeadline\u003e (In the format: yyyy-mm-dd)\"","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"            );","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false}],"authorContributionMap":{"clementsimwj":54}},{"path":"src/main/java/pepe/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.command;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import pepe.storage.Storage;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Task;","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"import pepe.ui.Ui;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":" * Command to delete a task from the task list at a specified index.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":" * Extends the {@link Command} abstract class and implements the {@link #execute(TaskList, Ui, Storage)}","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":" * method to remove the task, update the UI, and save the updated task list.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"    private final int[] indices;","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"     * Constructs a DeleteCommand with the specified task index.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"     * @param indices an array of indexes to delete","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"    public DeleteCommand(int[] indices) {","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"        this.indices \u003d indices;","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"     * Deletes the tasks at the specified index from the task list, shows a confirmation message","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"     * via {@link Ui}, and saves the updated task list to {@link Storage}.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"     * @param tasks   the task list to delete the task from","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"     * @param ui      the UI object to display messages","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"     * @param storage the storage object to save the updated task list","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if the index is invalid or there is an error saving the task list","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"    @Override","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws PepeExceptions {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"        try {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"            ArrayList\u003cTask\u003e deletedTasks \u003d tasks.deleteSpecificTasks(this.indices);","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"            super.setResponse(ui.showUiDelete(tasks, deletedTasks.toArray(new Task[0])));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"            storage.save(tasks);","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"            throw new PepeExceptions(\"Error saving file: \" + e.getMessage());","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false}],"authorContributionMap":{"clementsimwj":53}},{"path":"src/main/java/pepe/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.command;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import pepe.storage.Storage;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Task;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"import pepe.ui.Ui;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":" * Command to add an Event task to the task list.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":" * Extends the {@link Command} abstract class and implements the {@link #execute(TaskList, Ui, Storage)}","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":" * method to add the task, update the UI, and save the updated task list.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"    private final Task task;","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"     * Constructs an EventCommand with the specified task.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"     * @param task the Event task to be added","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"    public EventCommand(Task task) {","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"     * Adds the Event task to the task list, shows a confirmation message via {@link Ui},","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"     * and saves the updated task list to {@link Storage}.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"     * @param tasks   the task list to add the task to","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"     * @param ui      the UI object to display messages","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"     * @param storage the storage object to save the updated task list","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if there is an error saving the task list","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"    @Override","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws PepeExceptions {","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"        try {","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"            tasks.addTask(this.task);","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"            super.setResponse(ui.showUiAddEvent(tasks, this.task));","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"            storage.save(tasks);","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"            throw new PepeExceptions(\"Error saving file: \" + e.getMessage());","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false}],"authorContributionMap":{"clementsimwj":50}},{"path":"src/main/java/pepe/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.command;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import pepe.storage.Storage;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"import pepe.ui.Ui;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":" * Command to exit the application.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":" * Extends the {@link Command} abstract class. When executed, it shows","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":" * a goodbye message via {@link Ui} and saves the current task list.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"     * Executes the exit command.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"     * Displays a goodbye message and saves the task list.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"     * @param tasks   the current task list","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"     * @param ui      the UI object to display messages","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"     * @param storage the storage object to save the task list","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if there is an error saving the task list","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"    @Override","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws PepeExceptions {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"        try {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"            super.setResponse(ui.showUiSayBye());","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"            storage.save(tasks);","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"            throw new PepeExceptions(\"Error saving file: \" + e.getMessage());","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"     * Indicates that this command is an exit command.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"     * @return true, always, as this command exits the program","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"    @Override","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"        return true;","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false}],"authorContributionMap":{"clementsimwj":48}},{"path":"src/main/java/pepe/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.command;","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import pepe.storage.Storage;","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import pepe.ui.Ui;","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":" * Represents a command that searches for tasks in the task list","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":" * whose names contain a given keyword.","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":" * When executed, this command filters the tasks and displays","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":" * the matching results using the {@link Ui}.","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"    private String taskName;","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"    public FindCommand(String taskName) {","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    @Override","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws PepeExceptions {","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"        TaskList output \u003d tasks.findTask(taskName);","lastModifiedDate":"2025-09-10T20:52:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"        super.setResponse(ui.showUiFind(output));","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false}],"authorContributionMap":{"clementsimwj":28}},{"path":"src/main/java/pepe/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.command;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import pepe.storage.Storage;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import pepe.ui.Ui;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":" * Command to list all tasks in the current task list.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":" * Extends the {@link Command} abstract class. When executed, it displays","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":" * all tasks stored in the {@link TaskList} via the {@link Ui}.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"     * Executes the list command.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"     * Displays all tasks in the current task list.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"     * @param tasks   the current task list","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"     * @param ui      the UI object to display the list","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"     * @param storage the storage object (not used in this command)","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions never thrown by this command, included for consistency","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"    @Override","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws PepeExceptions {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"        super.setResponse(ui.showUiListTask(tasks));","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false}],"authorContributionMap":{"clementsimwj":32}},{"path":"src/main/java/pepe/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.command;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-12T16:26:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import pepe.storage.Storage;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Task;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"import pepe.ui.Ui;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":" * Command to mark a task as done.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":" * Extends the {@link Command} abstract class. When executed, it marks the","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":" * task at the given index in the {@link TaskList} as completed and updates","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":" * the UI and storage.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    private final int[] indices;","lastModifiedDate":"2025-09-12T16:26:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"     * Creates a new MarkCommand for the specified task index.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"     * @param indices the array of indexes of the tasks to mark as done","lastModifiedDate":"2025-09-12T16:26:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"    public MarkCommand(int[] indices) {","lastModifiedDate":"2025-09-12T16:26:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"        this.indices \u003d indices;","lastModifiedDate":"2025-09-12T16:26:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"     * Executes the mark command.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"     * Marks the task at the specified index as done, updates the UI,","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"     * and saves the updated task list to storage.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"     * @param tasks   the current task list","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"     * @param ui      the UI object to show feedback","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"     * @param storage the storage object to save updated tasks","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if the index is invalid or an I/O error occurs","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"    @Override","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws PepeExceptions {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"        try {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"            ArrayList\u003cTask\u003e markedTasks \u003d tasks.markTasks(this.indices);","lastModifiedDate":"2025-09-18T03:07:36","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"            super.setResponse(ui.showUiMark(markedTasks.toArray(new Task[0])));","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"            storage.save(tasks);","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"            throw new PepeExceptions(\"Error saving file: \" + e.getMessage());","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false}],"authorContributionMap":{"clementsimwj":54}},{"path":"src/main/java/pepe/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.command;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import pepe.storage.Storage;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Task;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"import pepe.ui.Ui;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":" * Command to add a ToDo task to the task list.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":" * Extends the {@link Command} abstract class. When executed, it adds","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":" * the specified {@link Task} to the {@link TaskList}, updates the UI,","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":" * and saves the updated task list to storage.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"    private final Task task;","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"     * Creates a new TodoCommand for the specified task.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"     * @param task the ToDo task to be added","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"    public TodoCommand(Task task) {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"     * Executes the ToDo command.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"     * Adds the task to the task list, shows feedback on the UI,","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"     * and saves the updated task list to storage.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"     * @param tasks   the current task list","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"     * @param ui      the UI object to show feedback","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"     * @param storage the storage object to save updated tasks","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if an I/O error occurs during saving","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"    @Override","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws PepeExceptions {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"        try {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"            tasks.addTask(this.task);","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"            super.setResponse(ui.showUiAddToDo(tasks, this.task));","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"            storage.save(tasks);","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"            throw new PepeExceptions(\"Error saving file: \" + e.getMessage());","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false}],"authorContributionMap":{"clementsimwj":53}},{"path":"src/main/java/pepe/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.command;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-12T16:33:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import pepe.storage.Storage;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Task;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"import pepe.ui.Ui;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":" * Command to unmark a task in the task list as not done.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":" * Extends the {@link Command} abstract class. When executed, it","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":" * marks the specified task as incomplete, updates the UI, and","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":" * saves the updated task list to storage.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"    private final int[] indices;","lastModifiedDate":"2025-09-12T16:33:50","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"     * Creates a new UnmarkCommand for the task at the given index.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"     * @param indices the zero-based index of the task to unmark","lastModifiedDate":"2025-09-12T16:33:50","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"    public UnmarkCommand(int[] indices) {","lastModifiedDate":"2025-09-12T16:33:50","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"        this.indices \u003d indices;","lastModifiedDate":"2025-09-12T16:33:50","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"     * Executes the Unmark command.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"     * Marks the task as not done, shows feedback on the UI, and saves","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"     * the updated task list to storage.","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"     * @param tasks   the current task list","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"     * @param ui      the UI object to show feedback","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"     * @param storage the storage object to save updated tasks","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if the index is invalid or an I/O error occurs during saving","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:39:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"    @Override","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws PepeExceptions {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"        try {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"            ArrayList\u003cTask\u003e unmarkedTasks \u003d tasks.unmarkTasks(this.indices);","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"            super.setResponse(ui.showUiUnmark(unmarkedTasks.toArray(new Task[0])));","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"            storage.save(tasks);","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"            throw new PepeExceptions(\"Error saving file: \" + e.getMessage());","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false}],"authorContributionMap":{"clementsimwj":53}},{"path":"src/main/java/pepe/exception/PepeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.exception;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-20T21:11:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":" * Custom exception class for the Pepe application.","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":" * This exception is thrown when a user input or operation","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":" * does not follow the expected format or rules of the application.","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":" * It provides a friendly, customized error message to the user.","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"public class PepeExceptions extends Exception {","lastModifiedDate":"2025-08-20T22:44:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"    public PepeExceptions(String message) {","lastModifiedDate":"2025-08-20T22:44:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"        super(message);","lastModifiedDate":"2025-08-20T22:44:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-20T22:44:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"    @Override","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"    public String toString() {","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"        return (\"Hey bro...I am going to tell you nicely!\\n\" + super.getMessage());","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-20T21:11:20","isFullCredit":false}],"authorContributionMap":{"clementsimwj":19}},{"path":"src/main/java/pepe/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.parser;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import pepe.command.Command;","lastModifiedDate":"2025-09-03T21:27:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import pepe.command.DeadlineCommand;","lastModifiedDate":"2025-09-03T21:27:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"import pepe.command.DeleteCommand;","lastModifiedDate":"2025-09-03T21:27:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"import pepe.command.EventCommand;","lastModifiedDate":"2025-09-03T21:27:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"import pepe.command.ExitCommand;","lastModifiedDate":"2025-09-03T21:27:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"import pepe.command.FindCommand;","lastModifiedDate":"2025-09-03T21:27:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"import pepe.command.ListCommand;","lastModifiedDate":"2025-09-03T21:27:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"import pepe.command.MarkCommand;","lastModifiedDate":"2025-09-03T21:27:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"import pepe.command.TodoCommand;","lastModifiedDate":"2025-09-03T21:27:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"import pepe.command.UnmarkCommand;","lastModifiedDate":"2025-09-03T21:27:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Deadlines;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Events;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Task;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.ToDos;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":" * Parser class for converting user input strings into executable Commands.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":" * It uses regular expressions to identify the type of command and extracts","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":" * necessary arguments for task creation or manipulation.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"    //Regex Patterns","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"    private static final Pattern TODO_PATTERN \u003d Pattern.compile(\"^todo\\\\s+(.+)$\", Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"    private static final Pattern DEADLINE_PATTERN \u003d Pattern.compile(\"^deadline\\\\s+(.+)\\\\s+/by\\\\s+(.+)$\",","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"            Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"    private static final Pattern EVENT_PATTERN \u003d Pattern.compile(\"^event\\\\s+(.+)\\\\s+/from\\\\s+(.+)\\\\s+/to\"","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"                    + \"\\\\s+(.+)$\",","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"            Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"    private static final Pattern MARK_PATTERN \u003d Pattern.compile(\"^mark\\\\s+(\\\\d+(?:\\\\s+\\\\d+)*)$\",","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"            Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"    private static final Pattern UNMARK_PATTERN \u003d Pattern.compile(\"^unmark\\\\s+(\\\\d+(?:\\\\s+\\\\d+)*)$\",","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"            Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"    private static final Pattern DELETE_PATTERN \u003d Pattern.compile(\"^delete\\\\s+(\\\\d+(?:\\\\s+\\\\d+)*)$\",","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"            Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"    private static final Pattern FIND_PATTERN \u003d Pattern.compile(\"^find\\\\s+(.+)$\", Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"     * Parses a user input string and returns the corresponding Command object.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"     * Supported commands include:","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"     *     \u003cli\u003ebye\u003c/li\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"     *     \u003cli\u003elist\u003c/li\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"     *     \u003cli\u003emark \u0026lt;task-index\u0026gt;\u003c/li\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"     *     \u003cli\u003eunmark \u0026lt;task-index\u0026gt;\u003c/li\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"     *     \u003cli\u003edelete \u0026lt;task-index\u0026gt;\u003c/li\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"     *     \u003cli\u003etodo \u0026lt;task-name\u0026gt;\u003c/li\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"     *     \u003cli\u003edeadline \u0026lt;task-name\u0026gt; /by \u0026lt;deadline\u0026gt;\u003c/li\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"     *     \u003cli\u003eevent \u0026lt;task-name\u0026gt; /from \u0026lt;start-time\u0026gt; /to \u0026lt;end-time\u0026gt;\u003c/li\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"     * @param input the raw input string from the user","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clementsimwj"},"content":"     * @return a Command object representing the action to be executed","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if the input does not match any valid command format","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clementsimwj"},"content":"    public static Command parse(String input) throws PepeExceptions {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clementsimwj"},"content":"        String command \u003d input.split(\" \", 2)[0].toLowerCase();","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clementsimwj"},"content":"        switch (command) {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clementsimwj"},"content":"        case \"bye\":","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clementsimwj"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clementsimwj"},"content":"        case \"list\":","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clementsimwj"},"content":"            return new ListCommand();","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clementsimwj"},"content":"        case \"mark\":","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clementsimwj"},"content":"            return parseMarkCommand(input);","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clementsimwj"},"content":"        case \"unmark\":","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clementsimwj"},"content":"            return parseUnmarkCommand(input);","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clementsimwj"},"content":"        case \"delete\":","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clementsimwj"},"content":"            return parseDeleteCommand(input);","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clementsimwj"},"content":"        case \"todo\":","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clementsimwj"},"content":"            return parseToDoCommand(input);","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"clementsimwj"},"content":"        case \"event\":","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"clementsimwj"},"content":"            return parseEventCommand(input);","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"clementsimwj"},"content":"        case \"deadline\":","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"clementsimwj"},"content":"            return parseDeadlineCommand(input);","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"clementsimwj"},"content":"        case \"find\":","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"clementsimwj"},"content":"            return parseFindCommand(input);","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"clementsimwj"},"content":"        default:","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"clementsimwj"},"content":"            throw new PepeExceptions(\"These are the commands:\\n\"","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"clementsimwj"},"content":"                    + \"Add Tasks: todo, deadline, event\\n\"","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"clementsimwj"},"content":"                    + \"Mark/Unmark Tasks: mark, unmark\\n\"","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"clementsimwj"},"content":"                    + \"View Tasks: list\\n\"","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"clementsimwj"},"content":"                    + \"Delete Task: delete\\n\"","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"clementsimwj"},"content":"                    + \"Find task: find\\n\");","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"clementsimwj"},"content":"     * Parses a \u0027mark\u0027 command.","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"clementsimwj"},"content":"     * @param input user input string","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"clementsimwj"},"content":"     * @return MarkCommand object with task index","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if format is invalid","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"clementsimwj"},"content":"    private static Command parseMarkCommand(String input) throws PepeExceptions {","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"clementsimwj"},"content":"        Matcher markMatcher \u003d MARK_PATTERN.matcher(input);","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"clementsimwj"},"content":"        if (markMatcher.matches()) {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"clementsimwj"},"content":"            String[] parts \u003d markMatcher.group(1).trim().split(\"\\\\s+\");","lastModifiedDate":"2025-09-12T16:26:03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"clementsimwj"},"content":"            int[] indices \u003d new int[parts.length];","lastModifiedDate":"2025-09-12T16:26:03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"clementsimwj"},"content":"            for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2025-09-12T16:26:03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"clementsimwj"},"content":"                indices[i] \u003d Integer.parseInt(parts[i]) - 1;","lastModifiedDate":"2025-09-12T16:26:03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"clementsimwj"},"content":"            }","lastModifiedDate":"2025-09-12T16:26:03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"clementsimwj"},"content":"            return new MarkCommand(indices);","lastModifiedDate":"2025-09-12T16:26:03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"clementsimwj"},"content":"        } else {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"clementsimwj"},"content":"            throw new PepeExceptions(\"To mark a task: mark \u003ctask-index\u003e (task-index is a valid number)\");","lastModifiedDate":"2025-08-28T16:40:15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"clementsimwj"},"content":"     * Parses an \u0027unmark\u0027 command.","lastModifiedDate":"2025-09-12T16:40:14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"clementsimwj"},"content":"     * @param input user input string","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"clementsimwj"},"content":"     * @return UnmarkCommand object with task index","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if format is invalid","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"clementsimwj"},"content":"    private static Command parseUnmarkCommand(String input) throws PepeExceptions {","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"clementsimwj"},"content":"        Matcher unmarkMatcher \u003d UNMARK_PATTERN.matcher(input);","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"clementsimwj"},"content":"        if (unmarkMatcher.matches()) {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"clementsimwj"},"content":"            String[] parts \u003d unmarkMatcher.group(1).trim().split(\"\\\\s+\");","lastModifiedDate":"2025-09-12T16:33:50","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"clementsimwj"},"content":"            int[] indices \u003d new int[parts.length];","lastModifiedDate":"2025-09-12T16:33:50","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"clementsimwj"},"content":"            for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2025-09-12T16:33:50","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"clementsimwj"},"content":"                indices[i] \u003d Integer.parseInt(parts[i]) - 1;","lastModifiedDate":"2025-09-12T16:33:50","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"clementsimwj"},"content":"            }","lastModifiedDate":"2025-09-12T16:33:50","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"clementsimwj"},"content":"            return new UnmarkCommand(indices);","lastModifiedDate":"2025-09-12T16:33:50","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"clementsimwj"},"content":"        } else {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"clementsimwj"},"content":"            throw new PepeExceptions(\"To unmark a task: unmark \u003ctask-index\u003e (task-index is a valid number)\");","lastModifiedDate":"2025-08-28T16:40:15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"clementsimwj"},"content":"     * Parses a \u0027delete\u0027 command.","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"clementsimwj"},"content":"     * @param input user input string","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"clementsimwj"},"content":"     * @return DeleteCommand object with task index","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if format is invalid","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"clementsimwj"},"content":"    private static Command parseDeleteCommand(String input) throws PepeExceptions {","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"clementsimwj"},"content":"        Matcher deleteMatcher \u003d DELETE_PATTERN.matcher(input);","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"clementsimwj"},"content":"        if (deleteMatcher.matches()) {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"clementsimwj"},"content":"            String[] parts \u003d deleteMatcher.group(1).trim().split(\"\\\\s+\");","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"clementsimwj"},"content":"            int[] indices \u003d new int[parts.length];","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"clementsimwj"},"content":"            for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"clementsimwj"},"content":"                indices[i] \u003d Integer.parseInt(parts[i]) - 1;","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"clementsimwj"},"content":"            }","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"clementsimwj"},"content":"            return new DeleteCommand(indices);","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"clementsimwj"},"content":"        } else {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"clementsimwj"},"content":"            throw new PepeExceptions(\"To delete a task: delete \u003ctask-index\u003e (task-index is a valid number)\");","lastModifiedDate":"2025-08-28T16:40:15","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"clementsimwj"},"content":"     * Parses a \u0027todo\u0027 command.","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"clementsimwj"},"content":"     * @param input user input string","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"clementsimwj"},"content":"     * @return TodoCommand object with task index","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if format is invalid","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"clementsimwj"},"content":"    private static Command parseToDoCommand(String input) throws PepeExceptions {","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"clementsimwj"},"content":"        Matcher todoMatcher \u003d TODO_PATTERN.matcher(input);","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"clementsimwj"},"content":"        if (todoMatcher.matches()) {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"clementsimwj"},"content":"            String taskName \u003d todoMatcher.group(1);","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"clementsimwj"},"content":"            Task task \u003d new ToDos(taskName);","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"clementsimwj"},"content":"            return new TodoCommand(task);","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"clementsimwj"},"content":"        } else {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"clementsimwj"},"content":"            throw new PepeExceptions(\"Add a ToDo task: todo \u003ctask-name\u003e\");","lastModifiedDate":"2025-08-28T16:40:15","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"clementsimwj"},"content":"     * Parses an \u0027event\u0027 command.","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"clementsimwj"},"content":"     * @param input user input string","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"clementsimwj"},"content":"     * @return EventCommand object with task index","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if format is invalid","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"clementsimwj"},"content":"    private static Command parseEventCommand(String input) throws PepeExceptions {","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"clementsimwj"},"content":"        Matcher eventMatcher \u003d EVENT_PATTERN.matcher(input);","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"clementsimwj"},"content":"        if (eventMatcher.matches()) {","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"clementsimwj"},"content":"            String taskName \u003d eventMatcher.group(1);","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"clementsimwj"},"content":"            String startTime \u003d eventMatcher.group(2);","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"clementsimwj"},"content":"            String endTime \u003d eventMatcher.group(3);","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"clementsimwj"},"content":"            Task task \u003d new Events(taskName, startTime, endTime);","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"clementsimwj"},"content":"            return new EventCommand(task);","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"clementsimwj"},"content":"        } else {","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"clementsimwj"},"content":"            throw new PepeExceptions(\"Add an Event Task: event \u003ctask-name\u003e \"","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"clementsimwj"},"content":"                    + \"/from \u003cstart-time\u003e \"","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"clementsimwj"},"content":"                    + \"/to \u003cend-time\u003e (In the format: yyyy-mm-dd)\");","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"clementsimwj"},"content":"     * Parses a \u0027deadline\u0027 command.","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"clementsimwj"},"content":"     * @param input user input string","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"clementsimwj"},"content":"     * @return DeadlineCommand object with task index","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if format is invalid","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"clementsimwj"},"content":"    private static Command parseDeadlineCommand(String input) throws PepeExceptions {","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"clementsimwj"},"content":"        Matcher deadlineMatcher \u003d DEADLINE_PATTERN.matcher(input);","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"clementsimwj"},"content":"        if (deadlineMatcher.matches()) {","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"clementsimwj"},"content":"            String taskName \u003d deadlineMatcher.group(1);","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"clementsimwj"},"content":"            String deadline \u003d deadlineMatcher.group(2);","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"clementsimwj"},"content":"            Task task \u003d new Deadlines(taskName, deadline);","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"clementsimwj"},"content":"            return new DeadlineCommand(task);","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"clementsimwj"},"content":"        } else {","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"clementsimwj"},"content":"            throw new PepeExceptions(\"Add a Deadline Task: deadline \u003ctask-name\u003e \"","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"clementsimwj"},"content":"                    + \"/by \u003cdeadline\u003e (In the format: yyyy-mm-dd)\");","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"clementsimwj"},"content":"     * Parses a \u0027find\u0027 command.","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"clementsimwj"},"content":"     * @param input user input string","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"clementsimwj"},"content":"     * @return FindCommand object with task index","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if format is invalid","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"clementsimwj"},"content":"    private static Command parseFindCommand(String input) throws PepeExceptions {","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"clementsimwj"},"content":"        Matcher findMatcher \u003d FIND_PATTERN.matcher(input);","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"clementsimwj"},"content":"        if (findMatcher.matches()) {","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"clementsimwj"},"content":"            String taskName \u003d findMatcher.group(1);","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"clementsimwj"},"content":"            return new FindCommand(taskName);","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"clementsimwj"},"content":"        } else {","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"clementsimwj"},"content":"            throw new PepeExceptions(\"Find a Task: find \u003ctask-name\u003e\");","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false}],"authorContributionMap":{"clementsimwj":229}},{"path":"src/main/java/pepe/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.storage;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import java.io.File;","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-17T23:27:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Deadlines;","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Events;","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Task;","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.ToDos;","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":" * Handles storage and retrieval of tasks from a file.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":" * This class manages loading tasks from a text file into memory","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":" * and saving tasks from memory back into the file in a specific","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":" * file format.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"public class Storage {","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"    private final String filePath;","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"     * Creates a Storage instance for a given file path.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"     * @param filePath the path to the file where tasks are stored","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"     * Loads tasks from the file at the given file path.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"     * The method will attempt to parse each line into a Task object","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"     * (ToDos, Deadlines, Events) and mark them as done if specified.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"     * If the file does not exist, it will be created.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"     * @return an ArrayList of Tasks loaded from the file","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if there is an error creating the file","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"    public ArrayList\u003cTask\u003e load() throws PepeExceptions {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"        ArrayList\u003cTask\u003e outputArray \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"        try {","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"                createFile(file);","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"            } else {","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"                readTaskFromFile(file, outputArray);","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"            }","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"        } catch (PepeExceptions e) {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"            clearFileContent(file);","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"            System.out.println(\"Warning: corrupted file detected. File has been cleared.\");","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clementsimwj"},"content":"        return outputArray;","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clementsimwj"},"content":"     * Clears all content in the given file without deleting the file itself.","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clementsimwj"},"content":"     * @param file the file to clear","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if an I/O error occurs","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clementsimwj"},"content":"    private void clearFileContent(File file) throws PepeExceptions {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clementsimwj"},"content":"        try (FileWriter fw \u003d new FileWriter(file, false)) { // false \u003d overwrite mode","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clementsimwj"},"content":"            // writing nothing clears the file","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clementsimwj"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clementsimwj"},"content":"            throw new PepeExceptions(\"Unable to clear file: \" + file.getPath());","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clementsimwj"},"content":"     *  Creates a new file at the specified path, including any missing parent directories.","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clementsimwj"},"content":"     * @param file the file to be created","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if the file or directories cannot be created */","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"clementsimwj"},"content":"    private void createFile(File file) throws PepeExceptions {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"clementsimwj"},"content":"        try {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"clementsimwj"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"clementsimwj"},"content":"            file.createNewFile();","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"clementsimwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"clementsimwj"},"content":"            throw new PepeExceptions(\"Error: \" + e.getMessage());","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"clementsimwj"},"content":"     * Saves the given list of tasks to the file.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"clementsimwj"},"content":"     * Each task is written in its file format on a new line.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"clementsimwj"},"content":"     * @param tasks the TaskList containing tasks to save","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"clementsimwj"},"content":"     * @throws IOException if there is an error writing to the file","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"clementsimwj"},"content":"    public void save(TaskList tasks) throws IOException {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"clementsimwj"},"content":"        assert tasks !\u003d null : \"TaskList object should never be null\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"clementsimwj"},"content":"        FileWriter fileWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"clementsimwj"},"content":"        try {","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"clementsimwj"},"content":"            for (Task task : tasks.getTaskList()) {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"clementsimwj"},"content":"                fileWriter.write(task.toFileFormat() + System.lineSeparator());","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"clementsimwj"},"content":"            }","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"clementsimwj"},"content":"            fileWriter.close();","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"clementsimwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"clementsimwj"},"content":"            System.out.println(\"Error saving file: \" + e.getMessage());","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"clementsimwj"},"content":"        } finally {","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"clementsimwj"},"content":"            fileWriter.close();","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"clementsimwj"},"content":"     * Reads tasks from the specified file and appends them to the given list.","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"clementsimwj"},"content":"     * Each line is parsed into a {@link Task} using {@link #parseTaskLine(String)}","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"clementsimwj"},"content":"     * @param file the file containing stored tasks","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"clementsimwj"},"content":"     * @param outputArray the list to which parsed tasks will be added","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if the file cannot be found or read */","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"clementsimwj"},"content":"    private void readTaskFromFile(File file, ArrayList\u003cTask\u003e outputArray) throws PepeExceptions {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"clementsimwj"},"content":"        try {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"clementsimwj"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"clementsimwj"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"clementsimwj"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"clementsimwj"},"content":"                Task task \u003d parseTaskLine(line);","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"clementsimwj"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"clementsimwj"},"content":"                    outputArray.add(task);","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"clementsimwj"},"content":"                } else {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"clementsimwj"},"content":"                    throw new PepeExceptions(\"File contains corrupt content! Resetting...\");","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"clementsimwj"},"content":"                }","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"clementsimwj"},"content":"            }","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"clementsimwj"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"clementsimwj"},"content":"            throw new PepeExceptions(\"File not found: \" + filePath);","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"clementsimwj"},"content":"     * Parses a single line from the task file into a {@link Task} object.","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"clementsimwj"},"content":"     * The line is expected to follow the format:","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"clementsimwj"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"clementsimwj"},"content":"     * T | 1 | task name","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"clementsimwj"},"content":"     * D | 0 | task name | Dec 31 2025","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"clementsimwj"},"content":"     * E | 1 | task name | Dec 31 2025-Dec 31 2026","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"clementsimwj"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"clementsimwj"},"content":"     * If the line is empty, blank, or improperly formatted, a {@link PepeExceptions} is thrown.","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"clementsimwj"},"content":"     * @param line the line representing a task","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"clementsimwj"},"content":"     * @return the corresponding {@link Task} object","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if the task type is unrecognized */","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"clementsimwj"},"content":"    private Task parseTaskLine(String line) throws PepeExceptions {","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"clementsimwj"},"content":"        if (line \u003d\u003d null || line.isBlank()) {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"clementsimwj"},"content":"            return null; // skip empty lines","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"clementsimwj"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"clementsimwj"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"clementsimwj"},"content":"            throw new PepeExceptions(\"Corrupted task line (too few fields): \" + line);","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"clementsimwj"},"content":"        String type \u003d parts[0].trim();","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"clementsimwj"},"content":"        boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"clementsimwj"},"content":"        String taskName \u003d parts[2].trim();","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"clementsimwj"},"content":"        Task task;","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"clementsimwj"},"content":"        try {","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"clementsimwj"},"content":"            switch (type) {","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"clementsimwj"},"content":"            case \"T\":","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"clementsimwj"},"content":"                task \u003d new ToDos(taskName);","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"clementsimwj"},"content":"                break;","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"clementsimwj"},"content":"            case \"D\":","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"clementsimwj"},"content":"                String by \u003d parts[3].trim();","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"clementsimwj"},"content":"                String dateline \u003d rawDateToString(by);","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"clementsimwj"},"content":"                task \u003d new Deadlines(taskName, dateline);","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"clementsimwj"},"content":"                break;","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"clementsimwj"},"content":"            case \"E\":","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"clementsimwj"},"content":"                String time \u003d parts[3].trim();","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"clementsimwj"},"content":"                String[] fromAndTo \u003d time.split(\"-\");","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"clementsimwj"},"content":"                String from \u003d rawDateToString(fromAndTo[0].trim());","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"clementsimwj"},"content":"                String to \u003d rawDateToString(fromAndTo[1].trim());","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"clementsimwj"},"content":"                task \u003d new Events(taskName, from, to);","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"clementsimwj"},"content":"                break;","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"clementsimwj"},"content":"            default:","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"clementsimwj"},"content":"                throw new PepeExceptions(\"Unknown task type: \" + line);","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"clementsimwj"},"content":"            }","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"clementsimwj"},"content":"        } catch (PepeExceptions e) {","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"clementsimwj"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"clementsimwj"},"content":"            return null;","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"clementsimwj"},"content":"        if (isDone) {","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"clementsimwj"},"content":"            task.markTask();","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"clementsimwj"},"content":"        return task;","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-11T02:31:44","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"clementsimwj"},"content":"     * Converts a raw date string (e.g., \"Dec 31 2025\") to a standard","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"clementsimwj"},"content":"     * string format (yyyy-MM-dd) used internally.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"clementsimwj"},"content":"     * @param rawDate the raw date string from the file","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"clementsimwj"},"content":"     * @return the date string in yyyy-MM-dd format","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"clementsimwj"},"content":"    public String rawDateToString(String rawDate) throws PepeExceptions {","lastModifiedDate":"2025-09-17T23:27:22","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"clementsimwj"},"content":"        try {","lastModifiedDate":"2025-09-17T23:27:22","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"clementsimwj"},"content":"            assert rawDate !\u003d null \u0026\u0026 !rawDate.isBlank() : \"Raw date string should not be null or empty\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"clementsimwj"},"content":"            DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"clementsimwj"},"content":"            LocalDate date \u003d LocalDate.parse(rawDate, inputFormatter);","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"clementsimwj"},"content":"            DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"clementsimwj"},"content":"            return date.format(outputFormatter);","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"clementsimwj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-17T23:27:22","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"clementsimwj"},"content":"            throw new PepeExceptions(\"File has been tempered with...\");","lastModifiedDate":"2025-09-17T23:27:22","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-17T23:27:22","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false}],"authorContributionMap":{"clementsimwj":209}},{"path":"src/main/java/pepe/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.task;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":" * Represents a Deadline task.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":" * A Deadline task has a name, a marked status, and a due date.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":" * The due date cannot be before the current date.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"    private String dateline;","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"    private LocalDate date;","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"     * Constructs a new Deadline task with the given name and due date.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"     * @param name     the name or description of the task","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"     * @param dateline the due date in the format yyyy-MM-dd","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if the date is invalid or before today","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"    public Deadlines(String name, String dateline) throws PepeExceptions {","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"        super(name);","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"        assert name !\u003d null \u0026\u0026 !name.isBlank() : \"Task name should not be null or empty\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"        assert dateline !\u003d null \u0026\u0026 !dateline.isBlank() : \"Dateline should not be null or empty\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"        try {","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"            this.date \u003d LocalDate.parse(dateline);","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"            this.dateline \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"            if (date.isBefore(LocalDate.now())) {","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"                throw new PepeExceptions(\"Invalid Input: Dateline cannot be before today!\");","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"            }","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"            throw new PepeExceptions(\"Invalid Input: Please check the format of your dates (yyyy-mm-dd)\");","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T23:27:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"     * Returns a string representation of the Deadline task for display.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"     * Format: [D][X] taskName (by: MMM d yyyy) if marked, [D][ ] taskName (by: MMM d yyyy) if unmarked.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"     * @return a human-readable string representing the Deadline task","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"    @Override","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dateline + \")\";","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T23:27:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"     * Returns a string representing the Deadline task in a file-friendly format.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"     * Format: D | 1 | taskName | MMM d yyyy (if marked) or D | 0 | taskName | MMM d yyyy (if unmarked)","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"     * @return the Deadline task formatted for saving to a file","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"    @Override","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clementsimwj"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clementsimwj"},"content":"        assert dateline !\u003d null \u0026\u0026 !dateline.isBlank() : \"Dateline should be non-null and non-empty for file format\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clementsimwj"},"content":"        return \"D\" + \" | \" + super.checkMarked() + \" | \" + super.getName() + \" | \" + this.dateline;","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false}],"authorContributionMap":{"clementsimwj":65}},{"path":"src/main/java/pepe/task/EmptyTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.task;","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":" * Represents a placeholder task in the task list that signifies a deleted or","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":" * removed task.","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":" * When a task is deleted using a soft-delete approach, it can be replaced with","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":" * an {@code EmptyTask} to preserve the original indexing of the list. This helps","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":" * avoid {@code NullPointerException}s and maintains consistent task positions","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":" * for other operations such as marking, unmarking, or listing tasks.","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":" * {@code EmptyTask} should not contain any meaningful task data and is intended","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":" * solely as a placeholder. All methods that access task details (like","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":" * {@code toString()}) should reflect that it is empty or deleted.","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"public class EmptyTask extends Task {","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"     * Constructs a new Empty Task with no name.","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"     * The task is initially unmarked (not done).","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"    public EmptyTask() {","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"        super(\"\");","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"     * Returns a string representing the Deadline task in a file-friendly format.","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"     * Format: D | 1 | taskName | MMM d yyyy (if marked) or D | 0 | taskName | MMM d yyyy (if unmarked)","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"     * @return the Deadline task formatted for saving to a file","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"    @Override","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"        return \"\";","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false}],"authorContributionMap":{"clementsimwj":34}},{"path":"src/main/java/pepe/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.task;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":" * Represents an Event task.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":" * An Event task has a name, a marked status, a start date, and an end date.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":" * The end date cannot be before today, and the start date cannot be after the end date.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"public class Events extends Task {","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"    private String startTime;","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"    private String endTime;","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"     * Constructs a new Event task with the given name, start date, and end date.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"     * @param name      the name or description of the task","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"     * @param startTime the start date in the format yyyy-MM-dd","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"     * @param endTime   the end date in the format yyyy-MM-dd","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if the dates are invalid (format, end before today, or start after end)","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"    public Events(String name, String startTime, String endTime) throws PepeExceptions {","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"        super(name);","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"        assert name !\u003d null \u0026\u0026 !name.isBlank() : \"Event name should not be null or empty\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"        String[] dates \u003d validateStartDate(startTime, endTime);","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"        this.startTime \u003d dates[0];","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"        this.endTime \u003d dates[1];","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"     * Validates and formats a start and end date for a task.","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"     * This method checks that both {@code startTime} and {@code endTime} are","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"     * non-null and non-blank. It then parses them as {@link java.time.LocalDate}","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"     * objects and enforces the following constraints:","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"     *     \u003cli\u003eThe end date cannot be before today.\u003c/li\u003e","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"     *     \u003cli\u003eThe start date cannot be after the end date.\u003c/li\u003e","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"     * If the dates are valid, they are formatted into the pattern \"MMM d yyyy\"","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"     * and returned as a two-element string array, with the start date at index 0","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"     * and the end date at index 1.","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"     * @param startTime the start date as a string in \"yyyy-MM-dd\" format","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"     * @param endTime   the end date as a string in \"yyyy-MM-dd\" format","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"     * @return a string array containing the formatted start and end dates","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if the input strings are in an invalid format, null,","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"     *                        blank, or violate the date constraints","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"    public String[] validateStartDate(String startTime, String endTime) throws PepeExceptions {","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"        try {","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"            assert startTime !\u003d null \u0026\u0026 !startTime.isBlank() : \"Start time should not be null or empty\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"            assert endTime !\u003d null \u0026\u0026 !endTime.isBlank() : \"End time should not be null or empty\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"            String[] result \u003d new String[2];","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"            LocalDate parsedStartTime \u003d LocalDate.parse(startTime);","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"            LocalDate parsedEndTime \u003d LocalDate.parse(endTime);","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clementsimwj"},"content":"            if (parsedEndTime.isBefore(LocalDate.now())) {","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clementsimwj"},"content":"                throw new PepeExceptions(\"Invalid Input: End Date cannot be before today\");","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clementsimwj"},"content":"            }","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clementsimwj"},"content":"            if (parsedStartTime.isAfter(parsedEndTime)) {","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clementsimwj"},"content":"                throw new PepeExceptions(\"Invalid Input: Start Date cannot be after End Date\");","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clementsimwj"},"content":"            } else {","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clementsimwj"},"content":"                String formattedStartTime \u003d parsedStartTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clementsimwj"},"content":"                String formattedEndTime \u003d parsedEndTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clementsimwj"},"content":"                result[0] \u003d formattedStartTime;","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clementsimwj"},"content":"                result[1] \u003d formattedEndTime;","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clementsimwj"},"content":"                return result;","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clementsimwj"},"content":"            }","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clementsimwj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clementsimwj"},"content":"            throw new PepeExceptions(\"Invalid Input: Please check the format of your dates (yyyy-mm-dd)\");","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clementsimwj"},"content":"     * Returns a string representation of the Event task for display.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"clementsimwj"},"content":"     * Format: [E][X] taskName (from: MMM d yyyy to: MMM d yyyy) if marked,","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"clementsimwj"},"content":"     * [E][ ] taskName (from: MMM d yyyy to: MMM d yyyy) if unmarked.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"clementsimwj"},"content":"     * @return a human-readable string representing the Event task","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"clementsimwj"},"content":"    @Override","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"clementsimwj"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"clementsimwj"},"content":"        assert startTime !\u003d null \u0026\u0026 !startTime.isBlank() : \"Start time should be non-null and non-empty for display\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"clementsimwj"},"content":"        assert endTime !\u003d null \u0026\u0026 !endTime.isBlank() : \"End time should be non-null and non-empty for display\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"clementsimwj"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"clementsimwj"},"content":"     * Returns a string representing the Event task in a file-friendly format.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"clementsimwj"},"content":"     * Format: E | 1 | taskName | MMM d yyyy - MMM d yyyy (if marked) or","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"clementsimwj"},"content":"     * E | 0 | taskName | MMM d yyyy - MMM d yyyy (if unmarked)","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"clementsimwj"},"content":"     * @return the Event task formatted for saving to a file","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"clementsimwj"},"content":"    @Override","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"clementsimwj"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"clementsimwj"},"content":"        assert startTime !\u003d null \u0026\u0026 !startTime.isBlank()","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"clementsimwj"},"content":"                : \"Start time should be non-null and non-empty for file format\";","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"clementsimwj"},"content":"        assert endTime !\u003d null \u0026\u0026 !endTime.isBlank()","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"clementsimwj"},"content":"                : \"End time should be non-null and non-empty for file format\";","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"clementsimwj"},"content":"        return \"E\" + \" | \" + super.checkMarked() + \" | \"","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"clementsimwj"},"content":"                + super.getName()","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"clementsimwj"},"content":"                + \" | \"","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"clementsimwj"},"content":"                + this.startTime","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"clementsimwj"},"content":"                + \" - \" + this.endTime;","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false}],"authorContributionMap":{"clementsimwj":111}},{"path":"src/main/java/pepe/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.task;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":" * Represents a generic task.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":" * Each task has a name and a isMarked status indicating whether it is completed.","lastModifiedDate":"2025-09-18T01:41:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":" * Subclasses must implement specific behavior for due dates and file formatting.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"public abstract class Task {","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"    /** The name or description of the task. */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"    private final String name;","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"    /** Whether the task is isMarked as done (true) or not (false). */","lastModifiedDate":"2025-09-18T01:41:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"    private boolean isMarked;","lastModifiedDate":"2025-09-18T01:41:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-20T15:19:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"     * Constructs a new Task with the given name.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"     * The task is initially unmarked (not done).","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"     * @param name the name or description of the task","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    public Task(String name) {","lastModifiedDate":"2025-08-20T15:19:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-08-20T15:19:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2025-09-18T01:41:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-20T15:19:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"    public void markTask() {","lastModifiedDate":"2025-08-20T15:19:11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2025-09-18T01:41:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-20T15:19:11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"    public void unmarkTask() {","lastModifiedDate":"2025-08-20T15:19:11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2025-09-18T01:41:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-20T15:19:11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"     * Returns the name of the task.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"     * @return the task\u0027s name","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"    public String getName() {","lastModifiedDate":"2025-08-20T15:19:11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"        return this.name;","lastModifiedDate":"2025-08-20T15:19:11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-20T15:19:11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-20T15:19:11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"     * Returns an integer representing whether the task is isMarked.","lastModifiedDate":"2025-09-18T01:41:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"     * @return 1 if the task is isMarked as done, 0 if unmarked","lastModifiedDate":"2025-09-18T01:41:55","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"    public int checkMarked() {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"        return this.isMarked ? 1 : 0;","lastModifiedDate":"2025-09-18T01:41:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"     * Returns a string representation of the task for display.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clementsimwj"},"content":"     * Format: [X] taskName if isMarked, [ ] taskName if unmarked.","lastModifiedDate":"2025-09-18T01:41:55","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clementsimwj"},"content":"     * @return a human-readable string representing the task","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clementsimwj"},"content":"    @Override","lastModifiedDate":"2025-08-20T15:19:11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clementsimwj"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T15:19:11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clementsimwj"},"content":"        String markSymbol \u003d this.isMarked ? \"X\" : \" \";","lastModifiedDate":"2025-09-18T01:41:55","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clementsimwj"},"content":"        return \"[\" + markSymbol + \"] \" + this.name;","lastModifiedDate":"2025-08-20T15:19:11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-20T15:19:11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clementsimwj"},"content":"     * Returns a string representing the task in a file-friendly format.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clementsimwj"},"content":"     * Subclasses must implement this to match the storage file format.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clementsimwj"},"content":"     * @return the task formatted for saving to a file","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clementsimwj"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-20T15:19:11","isFullCredit":false}],"authorContributionMap":{"clementsimwj":79}},{"path":"src/main/java/pepe/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.task;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-27T22:02:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":" * Represents a ToDo task.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":" * A ToDo task has a name and a marked status, but no specific date or deadline.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"public class ToDos extends Task {","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"     * Constructs a new ToDo task with the given name.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"     * @param name the name or description of the task","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"    public ToDos(String name) {","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"        super(name);","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"        assert name !\u003d null \u0026\u0026 !name.isBlank() : \"ToDo task name should not be null or empty\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"     * Returns a string representation of the ToDo task for display.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"     * Format: [T][X] taskName if marked, [T][ ] taskName if unmarked.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"     * @return a human-readable string representing the ToDo task","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"    @Override","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"        assert super.getName() !\u003d null \u0026\u0026 !super.getName().isBlank()","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"                : \"ToDo task name should not be null or empty for display\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"     * Returns a string representing the ToDo task in a file-friendly format.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"     * Format: T | 1 | taskName (if marked) or T | 0 | taskName (if unmarked)","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"     * @return the ToDo task formatted for saving to a file","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"    @Override","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"        assert super.getName() !\u003d null \u0026\u0026 !super.getName().isBlank()","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"                : \"ToDo task name should not be null or empty for file format\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"        return \"T\" + \" | \" + super.checkMarked() + \" | \" + super.getName();","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-20T16:13:48","isFullCredit":false}],"authorContributionMap":{"clementsimwj":46}},{"path":"src/main/java/pepe/task/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.task.tasklist;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-09-18T03:07:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.EmptyTask;","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Task;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":" * Represents a list of tasks in Pepe.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":" * Provides methods to add, delete, and access tasks, as well as check list size or emptiness.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"@SuppressWarnings(\"checkstyle:Regexp\")","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"public class TaskList {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"     * Constructs a TaskList initialized with an existing list of tasks.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"     * @param taskList the initial list of tasks","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"     * Constructs an empty TaskList with an initial capacity of 100.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"     * @param task the task to add","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"        assert task !\u003d null : \"Task to add should not be null\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"        taskList.add(task);","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"     * Sets a task to null from the list at the specified index.","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"     * @param index the index of the task to delete (0-based)","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"     * @return the deleted task","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2025-08-28T01:37:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c taskList.size() : \"Index out of bounds for deleteTask: \" + index;","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"        taskList.set(index, new EmptyTask());","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"        return task;","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"     * Permanently removes all tasks that have been marked as deleted (or set to {@code null})","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clementsimwj"},"content":"     * from the task list.","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clementsimwj"},"content":"     * This method should be called after performing deletions to compact the list and ensure","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clementsimwj"},"content":"     * task indices remain consistent. Without calling {@code wipe()}, deleted tasks remain","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clementsimwj"},"content":"     * as placeholders in the list.","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clementsimwj"},"content":"     * Typical usage:","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clementsimwj"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clementsimwj"},"content":"     *     tasks.delete(1);","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clementsimwj"},"content":"     *     tasks.delete(3);","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clementsimwj"},"content":"     *     tasks.wipe(); //clears the deleted tasks from the list","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clementsimwj"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clementsimwj"},"content":"    public void wipe() {","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clementsimwj"},"content":"        this.taskList.removeIf(task -\u003e task instanceof EmptyTask);","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clementsimwj"},"content":"     * Deletes multiple tasks from the task list at the specified indices.","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"clementsimwj"},"content":"     * Each task is first soft-deleted (replaced with an empty placeholder) using","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"clementsimwj"},"content":"     * {@link #deleteTask(int)}. After all deletions are processed, the task list is","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"clementsimwj"},"content":"     * compacted by invoking {@link #wipe()} to remove the placeholder entries.","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"clementsimwj"},"content":"     * This method ensures that index shifting issues are avoided when deleting","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"clementsimwj"},"content":"     * multiple tasks from the underlying {@code ArrayList}.","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"clementsimwj"},"content":"     * @param indices the array of task indices to delete. Each index should be in","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"clementsimwj"},"content":"     *                the range {@code [0, size())} at the time of deletion.","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"clementsimwj"},"content":"     * @return an {@link ArrayList} containing the {@link Task} objects that were deleted,","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"clementsimwj"},"content":"     *         in the same order as the provided indices","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"clementsimwj"},"content":"     * @throws IndexOutOfBoundsException if any of the provided indices are invalid","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"clementsimwj"},"content":"    public ArrayList\u003cTask\u003e deleteSpecificTasks(int[] indices) throws PepeExceptions {","lastModifiedDate":"2025-09-18T03:07:36","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"clementsimwj"},"content":"        ArrayList\u003cTask\u003e deletedTasks \u003d new ArrayList\u003c\u003e(this.size());","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"clementsimwj"},"content":"        if (validateIndices(indices)) {","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"clementsimwj"},"content":"            for (int index : indices) {","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"clementsimwj"},"content":"                Task deletedTask \u003d this.deleteTask(index);","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"clementsimwj"},"content":"                deletedTasks.add(deletedTask);","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"clementsimwj"},"content":"            }","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"clementsimwj"},"content":"        this.wipe();","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"clementsimwj"},"content":"        return deletedTasks;","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-18T02:29:51","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"clementsimwj"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"clementsimwj"},"content":"     * @return true if the task list has no tasks, false otherwise","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"clementsimwj"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"clementsimwj"},"content":"        return taskList.isEmpty();","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"clementsimwj"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"clementsimwj"},"content":"     * @param index the index of the task to retrieve (0-based)","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"clementsimwj"},"content":"     * @return the task at the specified index","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"clementsimwj"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"clementsimwj"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c taskList.size() : \"Index out of bounds for get: \" + index;","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"clementsimwj"},"content":"        return taskList.get(index);","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"clementsimwj"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"clementsimwj"},"content":"     * @return the size of the task list","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"clementsimwj"},"content":"    public int size() {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"clementsimwj"},"content":"        return taskList.size();","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"clementsimwj"},"content":"     * Returns the underlying ArrayList of tasks.","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"clementsimwj"},"content":"     * @return the ArrayList containing all tasks","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"clementsimwj"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"clementsimwj"},"content":"        assert taskList !\u003d null : \"Underlying task list should never be null\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"clementsimwj"},"content":"        return this.taskList;","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-10T20:52:38","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"clementsimwj"},"content":"     * Searches for tasks whose names contain the given keyword.","lastModifiedDate":"2025-09-10T20:52:38","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-10T20:52:38","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"clementsimwj"},"content":"     * This method does not modify the original task list. It returns a new","lastModifiedDate":"2025-09-10T20:52:38","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"clementsimwj"},"content":"     * {@link TaskList} containing only the tasks that match the search criterion.","lastModifiedDate":"2025-09-10T20:52:38","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-09-10T20:52:38","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"clementsimwj"},"content":"     * @param taskName the keyword to search for in task names","lastModifiedDate":"2025-09-10T20:52:38","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"clementsimwj"},"content":"     * @return a new {@link TaskList} containing tasks whose names contain {@code taskName}","lastModifiedDate":"2025-09-10T20:52:38","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-10T20:52:38","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"clementsimwj"},"content":"    public TaskList findTask(String taskName) {","lastModifiedDate":"2025-09-10T20:52:38","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"clementsimwj"},"content":"        return new TaskList(this.taskList.stream()","lastModifiedDate":"2025-09-10T20:52:38","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"clementsimwj"},"content":"                .filter(task -\u003e task.getName().contains(taskName))","lastModifiedDate":"2025-09-10T20:52:38","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"clementsimwj"},"content":"                .collect(Collectors.toCollection(ArrayList::new))","lastModifiedDate":"2025-09-10T20:52:38","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"clementsimwj"},"content":"        );","lastModifiedDate":"2025-09-10T20:52:38","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-10T20:52:38","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"clementsimwj"},"content":"     * Marks multiple tasks in the task list as completed.","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"clementsimwj"},"content":"     * This method validates all provided indices first to ensure they are within","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"clementsimwj"},"content":"     * bounds. If any index is invalid, no tasks are marked and a","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"clementsimwj"},"content":"     * {@link pepe.exception.PepeExceptions} is thrown. If all indices are valid,","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"clementsimwj"},"content":"     * each corresponding {@link Task} is marked using {@link Task#markTask()}.","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"clementsimwj"},"content":"     * The method returns the list of tasks that were successfully marked.","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"clementsimwj"},"content":"     * @param indices an array of task indices to be marked as completed","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"clementsimwj"},"content":"     * @return an {@link ArrayList} of {@link Task} objects that were marked","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if any of the provided indices are out of range","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"clementsimwj"},"content":"    public ArrayList\u003cTask\u003e markTasks(int[] indices) throws PepeExceptions {","lastModifiedDate":"2025-09-18T03:07:36","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"clementsimwj"},"content":"        ArrayList\u003cTask\u003e markedTasks \u003d new ArrayList\u003c\u003e(this.size());","lastModifiedDate":"2025-09-18T03:07:36","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"clementsimwj"},"content":"        if (validateIndices(indices)) {","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"clementsimwj"},"content":"            for (int index : indices) {","lastModifiedDate":"2025-09-18T03:07:36","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"clementsimwj"},"content":"                Task task \u003d this.get(index);","lastModifiedDate":"2025-09-18T03:07:36","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"clementsimwj"},"content":"                task.markTask();","lastModifiedDate":"2025-09-18T03:07:36","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"clementsimwj"},"content":"                markedTasks.add(task);","lastModifiedDate":"2025-09-18T03:07:36","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"clementsimwj"},"content":"            }","lastModifiedDate":"2025-09-18T03:07:36","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"clementsimwj"},"content":"        return markedTasks;","lastModifiedDate":"2025-09-18T03:07:36","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-18T03:07:36","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"clementsimwj"},"content":"     * Unmarks multiple tasks in the task list as completed.","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"clementsimwj"},"content":"     * This method validates all provided indices first to ensure they are within","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"clementsimwj"},"content":"     * bounds. If any index is invalid, no tasks are unmarked and a","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"clementsimwj"},"content":"     * {@link pepe.exception.PepeExceptions} is thrown. If all indices are valid,","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"clementsimwj"},"content":"     * each corresponding {@link Task} is unmarked using {@link Task#markTask()}.","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"clementsimwj"},"content":"     * The method returns the list of tasks that were successfully unmarked.","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"clementsimwj"},"content":"     * @param indices an array of task indices to be unmarked as completed","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"clementsimwj"},"content":"     * @return an {@link ArrayList} of {@link Task} objects that were unmarked","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if any of the provided indices are out of range","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"clementsimwj"},"content":"    public ArrayList\u003cTask\u003e unmarkTasks(int[] indices) throws PepeExceptions {","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"clementsimwj"},"content":"        ArrayList\u003cTask\u003e unmarkedTasks \u003d new ArrayList\u003c\u003e(this.size());","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"clementsimwj"},"content":"        if (validateIndices(indices)) {","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"clementsimwj"},"content":"            for (int index : indices) {","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"clementsimwj"},"content":"                Task task \u003d this.get(index);","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"clementsimwj"},"content":"                task.unmarkTask();","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"clementsimwj"},"content":"                unmarkedTasks.add(task);","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"clementsimwj"},"content":"            }","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"clementsimwj"},"content":"        return unmarkedTasks;","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-18T03:17:02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"clementsimwj"},"content":"     * Validates that all provided indices are within the bounds of the task list.","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"clementsimwj"},"content":"     * Iterates through the given array of indices and checks whether each index","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"clementsimwj"},"content":"     * is greater than or equal to 0 and less than the size of the task list.","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"clementsimwj"},"content":"     * If any index is invalid, a {@link PepeExceptions} is thrown with a","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"clementsimwj"},"content":"     * descriptive error message.","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"clementsimwj"},"content":"     * @param indices an array of task indices to validate","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"clementsimwj"},"content":"     * @return {@code true} if all indices are valid","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"clementsimwj"},"content":"     * @throws PepeExceptions if any index is out of bounds","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"clementsimwj"},"content":"    private boolean validateIndices(int[] indices) throws PepeExceptions {","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"clementsimwj"},"content":"        for (int index : indices) {","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"clementsimwj"},"content":"            if (index \u003c 0 || index \u003e\u003d this.size()) {","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"clementsimwj"},"content":"                throw new PepeExceptions(\"There is no task at index: \" + (index + 1)","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"clementsimwj"},"content":"                        + \"!\\nAborting all Operations...\");","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"clementsimwj"},"content":"            }","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"clementsimwj"},"content":"        return true;","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-18T03:33:37","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-18T03:07:36","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false}],"authorContributionMap":{"clementsimwj":231}},{"path":"src/main/java/pepe/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.ui;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    @FXML","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"    @FXML","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"     * Constructs a DialogBox with the specified text and image.","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"     * @param text the text to display in the dialog","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"     * @param img the image representing the speaker","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"        assert text !\u003d null : \"Dialog text should not be null\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"        assert img !\u003d null : \"Image should not be null\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"        try {","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"     * Updates the style of the dialog label based on the type of command.","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"     * Applies one of several CSS classes:","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"     *     \u003cli\u003e{@code warning-label} if commandType is null\u003c/li\u003e","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"     *     \u003cli\u003e{@code delete-label} for DeleteCommand\u003c/li\u003e","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"     *     \u003cli\u003e{@code mark-label} for MarkCommand or UnmarkCommand\u003c/li\u003e","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"     *     \u003cli\u003e{@code find-label} for FindCommand\u003c/li\u003e","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"     *     \u003cli\u003e{@code add-label} for DeadlineCommand, TodoCommand, or EventCommand\u003c/li\u003e","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"     *     \u003cli\u003e{@code reply-label} for all other types\u003c/li\u003e","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clementsimwj"},"content":"     * @param commandType the type of command (class name) or {@code null} for warnings","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clementsimwj"},"content":"    private void changeDialogStyle(String commandType) {","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clementsimwj"},"content":"        if (commandType \u003d\u003d null) {","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clementsimwj"},"content":"            dialog.getStyleClass().add(\"warning-label\");","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clementsimwj"},"content":"            return;","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clementsimwj"},"content":"        switch (commandType) {","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clementsimwj"},"content":"        case \"DeleteCommand\":","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clementsimwj"},"content":"            dialog.getStyleClass().add(\"delete-label\");","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clementsimwj"},"content":"            break;","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clementsimwj"},"content":"        case \"MarkCommand\", \"UnmarkCommand\":","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clementsimwj"},"content":"            dialog.getStyleClass().add(\"mark-label\");","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clementsimwj"},"content":"            break;","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clementsimwj"},"content":"        case \"DeadlineCommand\", \"TodoCommand\", \"EventCommand\":","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clementsimwj"},"content":"            dialog.getStyleClass().add(\"add-label\");","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clementsimwj"},"content":"            break;","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clementsimwj"},"content":"        default:","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clementsimwj"},"content":"            dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"clementsimwj"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"clementsimwj"},"content":"    private void flip() {","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"clementsimwj"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"clementsimwj"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"clementsimwj"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"clementsimwj"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"clementsimwj"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"clementsimwj"},"content":"     * Creates a DialogBox representing the user\u0027s input.","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"clementsimwj"},"content":"     * @param text the user\u0027s input text","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"clementsimwj"},"content":"     * @param img the user\u0027s avatar image","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"clementsimwj"},"content":"     * @return a DialogBox representing the user","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"clementsimwj"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"clementsimwj"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"clementsimwj"},"content":"        db.dialog.getStyleClass().add(\"label\");","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"clementsimwj"},"content":"        return db;","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"clementsimwj"},"content":"     * Creates a DialogBox representing Pepe\u0027s response.","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"clementsimwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"clementsimwj"},"content":"     * The dialog box is flipped so that the image appears on the left.","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"clementsimwj"},"content":"     * Optionally changes the style based on the command type.","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"clementsimwj"},"content":"     * @param text the response text from Pepe","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"clementsimwj"},"content":"     * @param img Pepe\u0027s avatar image","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"clementsimwj"},"content":"     * @param commandType the type of command, or {@code null} for warnings","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"clementsimwj"},"content":"     * @return a DialogBox representing Pepe","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"clementsimwj"},"content":"    public static DialogBox getPepeDialog(String text, Image img, String commandType) {","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"clementsimwj"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"clementsimwj"},"content":"        db.flip();","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"clementsimwj"},"content":"        db.changeDialogStyle(commandType);","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"clementsimwj"},"content":"        return db;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false}],"authorContributionMap":{"clementsimwj":124}},{"path":"src/main/java/pepe/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.ui;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"public class Launcher {","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false}],"authorContributionMap":{"clementsimwj":13}},{"path":"src/main/java/pepe/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.ui;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"import pepe.Pepe;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"    private Pepe pepe \u003d new Pepe(\"data/tasks.txt\");","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"    @Override","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"        try {","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"            assert stage !\u003d null : \"Stage should not be null\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"            stage.setTitle(\"Pepe Chat\");","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"            Image icon \u003d new Image(getClass().getResourceAsStream(\"/images/pepe_angry.png\"));","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"            assert icon !\u003d null : \"Pepe icon image not found at /images/pepe_angry.png\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"            stage.getIcons().add(icon);","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setPepe(pepe);","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"            stage.show();","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false}],"authorContributionMap":{"clementsimwj":40}},{"path":"src/main/java/pepe/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.ui;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"import pepe.Pepe;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"    @FXML","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"    @FXML","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"    @FXML","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    @FXML","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"    private Pepe pepe;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/pepe.png\"));","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"    private Image pepeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/pepe_sad.png\"));","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"     * Initializes the controller.","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"     * Binds the scroll pane to the height of the dialog container and","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"     * asserts that user and Pepe images are loaded correctly.","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"    @FXML","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"        assert userImage !\u003d null : \"User image not found at /images/pepe.png\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"        assert pepeImage !\u003d null : \"Pepe image not found at /images/pepe_sad.png\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"    /** Injects the Pepe instance */","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"    public void setPepe(Pepe pepe) {","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"        assert pepe !\u003d null : \"Pepe instance should not be null\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"        this.pepe \u003d pepe;","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"    @FXML","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"        assert userInput !\u003d null : \"User input TextField should not be null\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"        assert dialogContainer !\u003d null : \"Dialog container VBox should not be null\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"        assert pepe !\u003d null : \"Pepe instance must be set before handling user input\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T17:54:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-09-04T17:54:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"            // Optionally show a warning or just ignore","lastModifiedDate":"2025-09-04T17:54:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clementsimwj"},"content":"            return; // do nothing if input is empty","lastModifiedDate":"2025-09-04T17:54:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clementsimwj"},"content":"        } else {","lastModifiedDate":"2025-09-04T17:54:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clementsimwj"},"content":"            String response \u003d pepe.getResponse(input);","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clementsimwj"},"content":"            String commandType \u003d pepe.getCommandType();","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clementsimwj"},"content":"            assert response !\u003d null : \"Pepe response should not be null\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clementsimwj"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clementsimwj"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clementsimwj"},"content":"                    DialogBox.getPepeDialog(response, pepeImage, commandType)","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clementsimwj"},"content":"            );","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clementsimwj"},"content":"            userInput.clear();","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clementsimwj"},"content":"            // If the user types \"bye\", close the window after 3 seconds","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clementsimwj"},"content":"            if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clementsimwj"},"content":"                javafx.animation.PauseTransition delay \u003d new javafx","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clementsimwj"},"content":"                        .animation.PauseTransition(javafx.util.Duration.seconds(3));","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clementsimwj"},"content":"                delay.setOnFinished(event -\u003e {","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clementsimwj"},"content":"                    // Get the current stage and close it","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clementsimwj"},"content":"                    javafx.stage.Stage stage \u003d (javafx.stage.Stage) dialogContainer.getScene().getWindow();","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clementsimwj"},"content":"                    stage.close();","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"clementsimwj"},"content":"                });","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"clementsimwj"},"content":"                delay.play();","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"clementsimwj"},"content":"            }","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-09-04T17:54:08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false}],"authorContributionMap":{"clementsimwj":86}},{"path":"src/main/java/pepe/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.ui;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:55:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Task;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T02:25:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"/**","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":" * Handles all user interactions for the Pepe application.","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":" * This class provides methods to read user input, display messages,","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":" * and print the state of tasks and task lists in a user-friendly format.","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":" */","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"public class Ui {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"     * Reads the next line of user input from the console.","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"     * @return the user input as a String","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"     * Displays the greeting message when the application starts.","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"     * @return the greeting message","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"    public String showUiGreetUser() {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"        String message \u003d \"I am Pepe!\\n What do you want?\";","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"        return message;","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"     * Displays the farewell message when exiting the application.","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"     * @return the goodbye message","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"    public String showUiSayBye() {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"        String message \u003d \"Fine then! Leave! I don\u0027t care...\\n\";","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"        return message;","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"     * Displays all tasks in the provided TaskList.","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"     * @param taskList the TaskList containing tasks to display","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"     * @return the lists of task numbered","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"    public String showUiListTask(TaskList taskList) {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"        assert taskList !\u003d null : \"TaskList should not be null when listing tasks\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"        String message \u003d \"\";","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"            message \u003d \"WOW! Either you\u0027re really on task...or...\\n\";","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"        } else {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"            message \u003d \"Hey lazy bum! Here are the task(s) you still need to do:\\n\";","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clementsimwj"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clementsimwj"},"content":"                Task task \u003d taskList.get(i);","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clementsimwj"},"content":"                assert task !\u003d null : \"Task at index \" + i + \" should not be null\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clementsimwj"},"content":"                String taskMessage \u003d (i + 1) + \". \" + task + \"\\n\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clementsimwj"},"content":"                message \u003d message + taskMessage;","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clementsimwj"},"content":"            }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clementsimwj"},"content":"        return message;","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clementsimwj"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clementsimwj"},"content":"     * @param tasks an array of tasks to be marked","lastModifiedDate":"2025-09-12T16:26:03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clementsimwj"},"content":"     * @return the task to string method with the mark changes","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clementsimwj"},"content":"    public String showUiMark(Task ... tasks) {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clementsimwj"},"content":"        assert tasks !\u003d null : \"Tasks to mark should not be null\";","lastModifiedDate":"2025-09-12T16:26:03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clementsimwj"},"content":"        String message \u003d \"Bro finally accomplished something!\\n\";","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"clementsimwj"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-09-12T16:26:03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"clementsimwj"},"content":"            message +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2025-09-12T16:26:03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-12T16:26:03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"clementsimwj"},"content":"        return message;","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"clementsimwj"},"content":"     * Displays a message indicating that a task has been unmarked (not done yet).","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"clementsimwj"},"content":"     * @param tasks the Task that was unmarked","lastModifiedDate":"2025-09-12T16:33:50","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"clementsimwj"},"content":"     * @return the task to string method with the mark changes","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"clementsimwj"},"content":"    public String showUiUnmark(Task ... tasks) {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"clementsimwj"},"content":"        assert tasks !\u003d null : \"Task to unmark should not be null\";","lastModifiedDate":"2025-09-12T16:33:50","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"clementsimwj"},"content":"        String message \u003d \"I knew it! You couldn\u0027t have finished it that quickly...\\n\";","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"clementsimwj"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-09-12T16:33:50","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"clementsimwj"},"content":"            message +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2025-09-12T16:33:50","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-12T16:33:50","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"clementsimwj"},"content":"        return message;","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"clementsimwj"},"content":"     * Displays a message after adding a ToDo task to the list.","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"clementsimwj"},"content":"     * @param list the TaskList containing the added task","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"clementsimwj"},"content":"     * @param task the Task that was added","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"clementsimwj"},"content":"     * @return the string representation of the task and the updated task size","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"clementsimwj"},"content":"    public String showUiAddToDo(TaskList list, Task task) {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"clementsimwj"},"content":"        assert list !\u003d null : \"TaskList should not be null when adding ToDo\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"clementsimwj"},"content":"        assert task !\u003d null : \"Task to add should not be null\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"clementsimwj"},"content":"        String message \u003d \"Sure let\u0027s add this task that you\u0027ll definitely do:\\n\";","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"clementsimwj"},"content":"        message \u003d message + (task.toString() + \"\\n\") + \"Now you have \" + list.size() + \" tasks in the list\\n\";","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"clementsimwj"},"content":"        return message;","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"clementsimwj"},"content":"     * Displays a message after adding a Deadline task to the list.","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"clementsimwj"},"content":"     * @param list the TaskList containing the added task","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"clementsimwj"},"content":"     * @param task the Task that was added","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"clementsimwj"},"content":"     * @return the string representation of the task and the updated task size","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"clementsimwj"},"content":"    public String showUiAddDeadline(TaskList list, Task task) {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"clementsimwj"},"content":"        assert list !\u003d null : \"TaskList should not be null when adding Deadline\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"clementsimwj"},"content":"        assert task !\u003d null : \"Task to add should not be null\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"clementsimwj"},"content":"        String message \u003d \"Sure let\u0027s add this task that you\u0027ll definitely do:\\n\";","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"clementsimwj"},"content":"        message \u003d message + (task.toString() + \"\\n\") + \"Now you have \" + list.size() + \" tasks in the list\\n\";","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"clementsimwj"},"content":"        return message;","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"clementsimwj"},"content":"     * Displays a message after adding an Event task to the list.","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"clementsimwj"},"content":"     * @param list the TaskList containing the added task","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"clementsimwj"},"content":"     * @param task the Task that was added","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"clementsimwj"},"content":"     * @return the string representation of the task and the updated task size","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"clementsimwj"},"content":"    public String showUiAddEvent(TaskList list, Task task) {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"clementsimwj"},"content":"        assert list !\u003d null : \"TaskList should not be null when adding Event\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"clementsimwj"},"content":"        assert task !\u003d null : \"Task to add should not be null\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"clementsimwj"},"content":"        String message \u003d \"Sure let\u0027s add this task that you\u0027ll definitely do:\\n\";","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"clementsimwj"},"content":"        message \u003d message + (task.toString() + \"\\n\") + \"Now you have \" + list.size() + \" tasks in the list\\n\";","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"clementsimwj"},"content":"        return message;","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"clementsimwj"},"content":"     * Displays a message after deleting a task from the list.","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"clementsimwj"},"content":"     * @param list the TaskList after deletion","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"clementsimwj"},"content":"     * @param tasks the Tasks that were removed","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"clementsimwj"},"content":"     * @return the string representation of the task and the updated task size","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"clementsimwj"},"content":"    public String showUiDelete(TaskList list, Task ... tasks) {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"clementsimwj"},"content":"        assert list !\u003d null : \"TaskList should not be null when deleting\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"clementsimwj"},"content":"        String message \u003d \"Amazing! Let\u0027s just pretend this task didn\u0027t exist!\\n\";","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"clementsimwj"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"clementsimwj"},"content":"            message \u003d message + (task.toString() + \"\\n\");","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-12T16:10:20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"clementsimwj"},"content":"        message +\u003d \"Now you have \" + list.size() + \" tasks in the list\\n\";","lastModifiedDate":"2025-09-17T23:27:22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"clementsimwj"},"content":"        return message;","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T18:33:22","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"clementsimwj"},"content":"     * Displays an ArrayList of type Task from the list.","lastModifiedDate":"2025-08-28T18:33:22","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T18:33:22","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"clementsimwj"},"content":"     * @param tasks the TaskList showing matches","lastModifiedDate":"2025-08-28T18:33:22","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"clementsimwj"},"content":"     * @return the string representation of the task found (if any)","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T18:33:22","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"clementsimwj"},"content":"    public String showUiFind(TaskList tasks) {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"clementsimwj"},"content":"        assert tasks !\u003d null : \"TaskList should not be null when finding tasks\";","lastModifiedDate":"2025-09-10T20:01:46","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"clementsimwj"},"content":"        String message \u003d \"I tried my best finding these...:\\n\";","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"clementsimwj"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"clementsimwj"},"content":"            message \u003d message + \"There are NO tasks that match your search! Maybe try adding them!\\n\";","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"clementsimwj"},"content":"        } else {","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"clementsimwj"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"clementsimwj"},"content":"                String taskMessage \u003d (i + 1) + \". \" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"clementsimwj"},"content":"                message \u003d message + taskMessage;","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"clementsimwj"},"content":"            }","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"clementsimwj"},"content":"        return message;","lastModifiedDate":"2025-09-04T17:06:41","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T18:26:03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"clementsimwj"},"content":"    /**","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"clementsimwj"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"clementsimwj"},"content":"     *","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"clementsimwj"},"content":"     * @param message the error message to display","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"clementsimwj"},"content":"     * @return the error message as a string","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"clementsimwj"},"content":"     */","lastModifiedDate":"2025-08-28T17:05:44","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"clementsimwj"},"content":"    public String showUiError(String message) {","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"clementsimwj"},"content":"        return message;","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T01:03:41","isFullCredit":false}],"authorContributionMap":{"clementsimwj":193}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"         stylesheets\u003d\"@../css/dialog-box.css\"\u003e","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false}],"authorContributionMap":{"clementsimwj":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"            fx:controller\u003d\"pepe.ui.MainWindow\"","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"            stylesheets\u003d\"@../css/main.css\"\u003e","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"                   AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"                   AnchorPane.rightAnchor\u003d\"76.0\"","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"                text\u003d\"Send\"","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"                AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"                AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"                    fitToWidth\u003d\"true\"","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"                    vvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"                    AnchorPane.bottomAnchor\u003d\"43.0\"","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"                    AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T16:24:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false}],"authorContributionMap":{"clementsimwj":55}},{"path":"src/main/resources/view/MainWindows.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"            maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"            minHeight\u003d\"-Infinity\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"            minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"            prefHeight\u003d\"600.0\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"            prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"            xmlns\u003d\"http://javafx.com/javafx/20.0.1\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"            fx:controller\u003d\"pepe.ui.MainWindow\"\u003e","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"                   AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"                   AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"                text\u003d\"Send\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"                AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"                AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"                    fitToWidth\u003d\"true\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"                    vvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"                    AnchorPane.bottomAnchor\u003d\"43.0\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"                    AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-09-05T15:48:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-04T01:42:45","isFullCredit":false}],"authorContributionMap":{"clementsimwj":54}},{"path":"src/test/java/pepe/command/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.command;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import java.io.File;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"import pepe.storage.Storage;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Deadlines;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"import pepe.ui.Ui;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"class DeadlineCommandTest {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"    private Ui ui;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"    private File testFile;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"        // Ensure the \"data\" directory exists","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"        File dataDir \u003d new File(\"data\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"        if (!dataDir.exists()) {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"            dataDir.mkdir();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"        // Use test.txt inside data directory","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"        testFile \u003d new File(dataDir, \"test.txt\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"        // Clear or create the file fresh before each test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"        if (testFile.exists()) {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"            Files.writeString(testFile.toPath(), \"\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"        } else {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"            testFile.createNewFile();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"        storage \u003d new Storage(testFile.getPath());","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"    void execute_validDeadlineTask_addsTaskAndSaves() throws Exception {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"        Deadlines deadline \u003d new Deadlines(\"Submit assignment\", \"2025-09-20\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"        DeadlineCommand command \u003d new DeadlineCommand(deadline);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"        command.execute(tasks, ui, storage);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"        // Task added","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(deadline.toString(), tasks.get(0).toString());","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clementsimwj"},"content":"        // UI response matches","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clementsimwj"},"content":"        String expectedResponse \u003d ui.showUiAddDeadline(tasks, deadline);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(expectedResponse, command.getString());","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clementsimwj"},"content":"        // File should not be empty","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clementsimwj"},"content":"        String fileContent \u003d Files.readString(testFile.toPath());","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(false, fileContent.isBlank());","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clementsimwj"},"content":"    void execute_invalidDateFormat_throwsPepeExceptions() {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clementsimwj"},"content":"        PepeExceptions exception \u003d assertThrows(PepeExceptions.class, () -\u003e {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clementsimwj"},"content":"            Deadlines invalidDeadline \u003d new Deadlines(\"Task with bad format\", \"2025-02-31\"); // invalid day","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clementsimwj"},"content":"            DeadlineCommand command \u003d new DeadlineCommand(invalidDeadline);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clementsimwj"},"content":"            command.execute(tasks, ui, storage);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clementsimwj"},"content":"        });","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(exception.getMessage().contains(\"Invalid Input: Please check the format\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"clementsimwj"},"content":"    void execute_pastDate_throwsPepeExceptions() {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"clementsimwj"},"content":"        PepeExceptions exception \u003d assertThrows(PepeExceptions.class, () -\u003e {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"clementsimwj"},"content":"            Deadlines pastDeadline \u003d new Deadlines(\"Task in the past\", \"2000-01-01\"); // past date","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"clementsimwj"},"content":"            DeadlineCommand command \u003d new DeadlineCommand(pastDeadline);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"clementsimwj"},"content":"            command.execute(tasks, ui, storage);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"clementsimwj"},"content":"        });","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(exception.getMessage().contains(\"Dateline cannot be before today\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"clementsimwj"},"content":"    void execute_withInvalidStoragePath_throwsPepeExceptions() throws PepeExceptions {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"clementsimwj"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"clementsimwj"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"clementsimwj"},"content":"        // Invalid path (points to a directory instead of file)","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"clementsimwj"},"content":"        Storage badStorage \u003d new Storage(\"data\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"clementsimwj"},"content":"        Deadlines deadline \u003d new Deadlines(\"Submit assignment\", \"2025-09-20\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"clementsimwj"},"content":"        DeadlineCommand command \u003d new DeadlineCommand(deadline);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"clementsimwj"},"content":"        PepeExceptions exception \u003d assertThrows(","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"clementsimwj"},"content":"                PepeExceptions.class, () -\u003e command.execute(tasks, ui, badStorage)","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"clementsimwj"},"content":"        );","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"clementsimwj"},"content":"                \"Add a Deadline Task: deadline \u003ctask-name\u003e /by \u003cdeadline\u003e (In the format: yyyy-mm-dd)\",","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"clementsimwj"},"content":"                exception.getMessage()","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"clementsimwj"},"content":"        );","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false}],"authorContributionMap":{"clementsimwj":112}},{"path":"src/test/java/pepe/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.command;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import java.io.File;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"import pepe.storage.Storage;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Task;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.ToDos;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"import pepe.ui.Ui;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"class DeleteCommandTest {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"    private Ui ui;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"    private File testFile;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"        // Ensure data directory exists","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"        File dataDir \u003d new File(\"data\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"        if (!dataDir.exists()) {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"            dataDir.mkdir();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"        // Point storage to test.txt inside data directory","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"        testFile \u003d new File(dataDir, \"test.txt\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"        // Clear file before each test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"        if (testFile.exists()) {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"            Files.writeString(testFile.toPath(), \"\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"        } else {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"            testFile.createNewFile();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"        storage \u003d new Storage(testFile.getPath());","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"    void execute_validDelete_removesTaskAndSaves() throws Exception {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"        // Add tasks","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"        Task todo1 \u003d new ToDos(\"Task A\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"        Task todo2 \u003d new ToDos(\"Task B\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"        tasks.addTask(todo1);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"        tasks.addTask(todo2);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"        storage.save(tasks); // save initial state","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"        // Delete first task","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clementsimwj"},"content":"        int[] indices \u003d {0};","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clementsimwj"},"content":"        DeleteCommand command \u003d new DeleteCommand(indices);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clementsimwj"},"content":"        command.execute(tasks, ui, storage);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clementsimwj"},"content":"        // Only one task should remain","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(todo2.toString(), tasks.get(0).toString());","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clementsimwj"},"content":"        // Response should match UI output","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clementsimwj"},"content":"        String expectedResponse \u003d ui.showUiDelete(tasks, todo1);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(expectedResponse, command.getString());","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clementsimwj"},"content":"        // File should reflect updated task list","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clementsimwj"},"content":"        String fileContent \u003d Files.readString(testFile.toPath());","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(true, fileContent.contains(\"Task B\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(false, fileContent.contains(\"Task A\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"clementsimwj"},"content":"    void execute_invalidIndex_throwsPepeExceptions() {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"clementsimwj"},"content":"        tasks.addTask(new ToDos(\"Task X\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"clementsimwj"},"content":"        int[] indices \u003d {5}; // out of range","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"clementsimwj"},"content":"        DeleteCommand command \u003d new DeleteCommand(indices);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"clementsimwj"},"content":"        PepeExceptions exception \u003d assertThrows(","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"clementsimwj"},"content":"                PepeExceptions.class, () -\u003e command.execute(tasks, ui, storage)","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"clementsimwj"},"content":"        );","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(\"There is no task at index: 6!\\nAborting all Operations...\", exception.getMessage());","lastModifiedDate":"2025-09-18T04:10:08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"clementsimwj"},"content":"    void execute_storageError_throwsPepeExceptions() {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"clementsimwj"},"content":"        tasks.addTask(new ToDos(\"Task Y\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"clementsimwj"},"content":"        // Use directory instead of file to simulate save error","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"clementsimwj"},"content":"        Storage badStorage \u003d new Storage(\"data\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"clementsimwj"},"content":"        DeleteCommand command \u003d new DeleteCommand(new int[]{0});","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"clementsimwj"},"content":"        PepeExceptions exception \u003d assertThrows(","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"clementsimwj"},"content":"                PepeExceptions.class, () -\u003e command.execute(tasks, ui, badStorage)","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"clementsimwj"},"content":"        );","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(true, exception.getMessage().startsWith(\"Error saving file:\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false}],"authorContributionMap":{"clementsimwj":108}},{"path":"src/test/java/pepe/command/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.command;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import java.io.File;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"import pepe.storage.Storage;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Events;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Task;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"import pepe.ui.Ui;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"class EventCommandTest {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    private static final String TEST_FILE_PATH \u003d \"data/test.txt\";","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"    private Ui ui;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"        // Ensure test file exists and is cleared","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"        File file \u003d new File(TEST_FILE_PATH);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"            assertTrue(file.delete(), \"Failed to delete old test file\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(file.createNewFile(), \"Failed to create test file\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"        storage \u003d new Storage(TEST_FILE_PATH);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"    void execute_addEventTask_success() throws PepeExceptions, IOException {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"        Task event \u003d new Events(\"Party\", \"2025-09-20\", \"2025-10-10\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"        EventCommand command \u003d new EventCommand(event);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"        command.execute(taskList, ui, storage);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"        // Check response message","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"        String response \u003d command.getString();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(response.contains(\"Sure let\u0027s add this task that you\u0027ll definitely do:\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(response.contains(\"Party\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"        // Check that task list has the event","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(event.toString(), taskList.get(0).toString());","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"        // Check storage file is not empty (task persisted)","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"        String fileContent \u003d java.nio.file.Files.readString(new File(TEST_FILE_PATH).toPath());","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(fileContent.contains(\"Party\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clementsimwj"},"content":"    void constructor_invalidDateFormat_throwsPepeExceptions() {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clementsimwj"},"content":"        PepeExceptions ex \u003d assertThrows(PepeExceptions.class, () -\u003e {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clementsimwj"},"content":"            new Events(\"Meeting\", \"2025-02-30\", \"2025-03-01\"); // Invalid start date","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clementsimwj"},"content":"        });","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(ex.getMessage().contains(\"Invalid Input: Please check the format\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clementsimwj"},"content":"    void constructor_endDateBeforeToday_throwsPepeExceptions() {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clementsimwj"},"content":"        String pastDate \u003d LocalDate.now().minusDays(1).toString();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clementsimwj"},"content":"        PepeExceptions ex \u003d assertThrows(PepeExceptions.class, () -\u003e {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clementsimwj"},"content":"            new Events(\"Old Event\", LocalDate.now().toString(), pastDate);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clementsimwj"},"content":"        });","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(ex.getMessage().contains(\"End Date cannot be before today\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"clementsimwj"},"content":"    void constructor_startAfterEnd_throwsPepeExceptions() {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"clementsimwj"},"content":"        String start \u003d LocalDate.now().plusDays(10).toString();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"clementsimwj"},"content":"        String end \u003d LocalDate.now().plusDays(5).toString();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"clementsimwj"},"content":"        PepeExceptions ex \u003d assertThrows(PepeExceptions.class, () -\u003e {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"clementsimwj"},"content":"            new Events(\"Weird Event\", start, end);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"clementsimwj"},"content":"        });","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(ex.getMessage().contains(\"Start Date cannot be after End Date\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false}],"authorContributionMap":{"clementsimwj":89}},{"path":"src/test/java/pepe/command/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.command;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import java.io.File;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"import pepe.storage.Storage;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"import pepe.ui.Ui;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"class ExitCommandTest {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"    private static final String TEST_FILE_PATH \u003d \"data/test.txt\";","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"    private Ui ui;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"        // Reset the test file","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"        File file \u003d new File(TEST_FILE_PATH);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"            assertTrue(file.delete(), \"Failed to delete old test file\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(file.createNewFile(), \"Failed to create test file\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"        storage \u003d new Storage(TEST_FILE_PATH);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"    void execute_exitCommand_savesTasksAndShowsByeMessage() throws PepeExceptions, IOException {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"        ExitCommand command \u003d new ExitCommand();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"        command.execute(taskList, ui, storage);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"        // Check the response is the goodbye message","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(\"Fine then! Leave! I don\u0027t care...\\n\", command.getString());","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"        // Check that storage file exists and was saved (should still be empty task list)","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"        File file \u003d new File(TEST_FILE_PATH);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(file.exists(), \"Storage file should exist\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"        String fileContent \u003d java.nio.file.Files.readString(file.toPath());","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"        assertNotNull(fileContent); // File was written, even if it\u0027s empty list representation","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"    void isExit_returnsTrue() {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"        ExitCommand command \u003d new ExitCommand();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(command.isExit());","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false}],"authorContributionMap":{"clementsimwj":60}},{"path":"src/test/java/pepe/command/FindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.command;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import java.io.File;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"import pepe.storage.Storage;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.ToDos;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"import pepe.ui.Ui;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"class FindCommandTest {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"    private static final String TEST_FILE_PATH \u003d \"data/test.txt\";","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"    private Ui ui;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"        // Reset the test file","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"        File file \u003d new File(TEST_FILE_PATH);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"            assertTrue(file.delete(), \"Failed to delete old test file\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(file.createNewFile(), \"Failed to create test file\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"        storage \u003d new Storage(TEST_FILE_PATH);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"    void execute_findMatchingTasks_returnsCorrectTasks() throws PepeExceptions {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"        // Arrange","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"        taskList.addTask(new ToDos(\"Read Book\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"        taskList.addTask(new ToDos(\"Write Code\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"        taskList.addTask(new ToDos(\"Read Notes\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"        FindCommand command \u003d new FindCommand(\"Read\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"        // Act","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"        command.execute(taskList, ui, storage);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"        // Assert","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"        String response \u003d command.getString();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(response.contains(\"1. [T][ ] Read Book\"),","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"                \"Expected \u0027Read Book\u0027 to be in the results\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(response.contains(\"2. [T][ ] Read Notes\"),","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"                \"Expected \u0027Read Notes\u0027 to be in the results\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"        assertFalse(response.contains(\"Write Code\"),","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"                \"Did not expect \u0027Write Code\u0027 in the results\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clementsimwj"},"content":"    void execute_findNoMatches_returnsEmptyMessage() throws PepeExceptions {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clementsimwj"},"content":"        // Arrange","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clementsimwj"},"content":"        taskList.addTask(new ToDos(\"Clean Room\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clementsimwj"},"content":"        taskList.addTask(new ToDos(\"Buy Milk\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clementsimwj"},"content":"        FindCommand command \u003d new FindCommand(\"Homework\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clementsimwj"},"content":"        // Act","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clementsimwj"},"content":"        command.execute(taskList, ui, storage);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clementsimwj"},"content":"        // Assert","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clementsimwj"},"content":"        String response \u003d command.getString();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(response.contains(\"There are NO tasks that match your search!\"),","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clementsimwj"},"content":"                \"Expected no matches message\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false}],"authorContributionMap":{"clementsimwj":78}},{"path":"src/test/java/pepe/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.command;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import java.io.File;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"import pepe.storage.Storage;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.ToDos;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"import pepe.ui.Ui;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"class ListCommandTest {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"    private static final String TEST_FILE_PATH \u003d \"data/test.txt\";","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"    private Ui ui;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"        // Reset test file","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"        File file \u003d new File(TEST_FILE_PATH);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"            assertTrue(file.delete(), \"Failed to delete old test file\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(file.createNewFile(), \"Failed to create test file\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"        storage \u003d new Storage(TEST_FILE_PATH);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"    void execute_listWithTasks_returnsAllTasks() throws PepeExceptions {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"        taskList.addTask(new ToDos(\"Task A\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"        taskList.addTask(new ToDos(\"Task B\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"        ListCommand command \u003d new ListCommand();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"        command.execute(taskList, ui, storage);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"        String response \u003d command.getString();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(response.contains(\"1. [T][ ] Task A\"), \"Expected Task A in list\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(response.contains(\"2. [T][ ] Task B\"), \"Expected Task B in list\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"    void execute_listEmpty_returnsEmptyMessage() throws PepeExceptions {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"        ListCommand command \u003d new ListCommand();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"        command.execute(taskList, ui, storage);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"        String response \u003d command.getString();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(response.contains(\"WOW! Either you\u0027re really on task...or...\"),","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"                \"Expected empty list message\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false}],"authorContributionMap":{"clementsimwj":60}},{"path":"src/test/java/pepe/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.command;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import java.io.File;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"import pepe.storage.Storage;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Task;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.ToDos;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"import pepe.ui.Ui;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"class MarkCommandTest {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"    private static final String TEST_FILE_PATH \u003d \"data/test.txt\";","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    private Ui ui;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"        // Reset test file","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"        File file \u003d new File(TEST_FILE_PATH);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"            assertTrue(file.delete(), \"Failed to delete old test file\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(file.createNewFile(), \"Failed to create test file\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"        storage \u003d new Storage(TEST_FILE_PATH);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"    void execute_markSingleTask_marksCorrectly() throws PepeExceptions {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"        Task task \u003d new ToDos(\"Task A\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"        MarkCommand command \u003d new MarkCommand(new int[]{0});","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"        command.execute(taskList, ui, storage);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"        String response \u003d command.getString();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(response.contains(\"[X] Task A\"), \"Task should be marked as done\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"    void execute_markMultipleTasks_marksAllCorrectly() throws PepeExceptions {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"        Task task1 \u003d new ToDos(\"Task A\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"        Task task2 \u003d new ToDos(\"Task B\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"        MarkCommand command \u003d new MarkCommand(new int[]{0, 1});","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"        command.execute(taskList, ui, storage);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clementsimwj"},"content":"        String response \u003d command.getString();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(response.contains(\"[X] Task A\"), \"First task should be marked\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(response.contains(\"[X] Task B\"), \"Second task should be marked\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clementsimwj"},"content":"    void execute_invalidIndex_throwsException() {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clementsimwj"},"content":"        Task task \u003d new ToDos(\"Task A\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clementsimwj"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clementsimwj"},"content":"        MarkCommand command \u003d new MarkCommand(new int[]{1}); // invalid index","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clementsimwj"},"content":"        PepeExceptions exception \u003d assertThrows(PepeExceptions.class, () -\u003e command.execute(taskList, ui, storage));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(exception.getMessage().contains(\"There is no task at index: 2\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false}],"authorContributionMap":{"clementsimwj":78}},{"path":"src/test/java/pepe/command/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.command;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import java.io.File;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"import pepe.storage.Storage;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Task;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.ToDos;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"import pepe.ui.Ui;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"class TodoCommandTest {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"    private static final String TEST_FILE_PATH \u003d \"data/test.txt\";","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    private Ui ui;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"        // Reset test file","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"        File file \u003d new File(TEST_FILE_PATH);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"            assertTrue(file.delete(), \"Failed to delete old test file\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(file.createNewFile(), \"Failed to create test file\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"        storage \u003d new Storage(TEST_FILE_PATH);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"    void execute_addSingleTodoTask_addsCorrectly() throws PepeExceptions {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"        Task task \u003d new ToDos(\"Read book\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"        TodoCommand command \u003d new TodoCommand(task);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"        command.execute(taskList, ui, storage);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(1, taskList.size(), \"Task list should contain 1 task\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(task, taskList.get(0), \"Task in list should match the added task\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"        String response \u003d command.getString();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(response.contains(\"Read book\"), \"Response should include task name\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(response.contains(\"Now you have 1 tasks in the list\"), \"Response should show updated size\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"    void execute_addMultipleTasks_addsAllCorrectly() throws PepeExceptions {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"        Task task1 \u003d new ToDos(\"Task A\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"        Task task2 \u003d new ToDos(\"Task B\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"        TodoCommand command1 \u003d new TodoCommand(task1);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clementsimwj"},"content":"        TodoCommand command2 \u003d new TodoCommand(task2);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clementsimwj"},"content":"        command1.execute(taskList, ui, storage);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clementsimwj"},"content":"        command2.execute(taskList, ui, storage);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(2, taskList.size(), \"Task list should contain 2 tasks\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(task1, taskList.get(0), \"First task should be Task A\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(task2, taskList.get(1), \"Second task should be Task B\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false}],"authorContributionMap":{"clementsimwj":70}},{"path":"src/test/java/pepe/command/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.command;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import java.io.File;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"import pepe.storage.Storage;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Task;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.ToDos;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"import pepe.ui.Ui;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"class UnmarkCommandTest {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"    private static final String TEST_FILE_PATH \u003d \"data/test.txt\";","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"    private Ui ui;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"        // Reset test file","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"        File file \u003d new File(TEST_FILE_PATH);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"            assertTrue(file.delete(), \"Failed to delete old test file\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"        }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(file.createNewFile(), \"Failed to create test file\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"        storage \u003d new Storage(TEST_FILE_PATH);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"    void execute_unmarkSingleTask_marksCorrectly() throws PepeExceptions {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"        Task task \u003d new ToDos(\"Test Task\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"        task.markTask();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(taskList.get(0).checkMarked() \u003d\u003d 1, \"Task should initially be marked\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"        UnmarkCommand command \u003d new UnmarkCommand(new int[]{0});","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"        command.execute(taskList, ui, storage);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"        assertFalse(taskList.get(0).checkMarked() \u003d\u003d 1, \"Task should be unmarked\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"        String response \u003d command.getString();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(response.contains(\"Test Task\"), \"Response should include task name\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(response.contains(\"I knew it!\"), \"Response should include unmark message\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"    void execute_unmarkMultipleTasks_marksAllCorrectly() throws PepeExceptions {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"        Task task1 \u003d new ToDos(\"Task A\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clementsimwj"},"content":"        Task task2 \u003d new ToDos(\"Task B\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clementsimwj"},"content":"        task1.markTask();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clementsimwj"},"content":"        task2.markTask();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clementsimwj"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clementsimwj"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clementsimwj"},"content":"        UnmarkCommand command \u003d new UnmarkCommand(new int[]{0, 1});","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clementsimwj"},"content":"        command.execute(taskList, ui, storage);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clementsimwj"},"content":"        assertFalse(taskList.get(0).checkMarked() \u003d\u003d 1, \"Task A should be unmarked\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clementsimwj"},"content":"        assertFalse(taskList.get(1).checkMarked() \u003d\u003d 1, \"Task B should be unmarked\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clementsimwj"},"content":"        String response \u003d command.getString();","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(response.contains(\"Task A\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(response.contains(\"Task B\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clementsimwj"},"content":"    void execute_invalidIndex_throwsException() {","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clementsimwj"},"content":"        Task task \u003d new ToDos(\"Task X\");","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"clementsimwj"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"clementsimwj"},"content":"        UnmarkCommand command \u003d new UnmarkCommand(new int[]{1}); // invalid index","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"clementsimwj"},"content":"        PepeExceptions exception \u003d assertThrows(PepeExceptions.class, () -\u003e command.execute(taskList, ui, storage));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(exception.getMessage().contains(\"There is no task at index\"));","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-09-17T22:04:51","isFullCredit":false}],"authorContributionMap":{"clementsimwj":87}},{"path":"src/test/java/pepe/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.parser;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"import pepe.command.DeadlineCommand;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"import pepe.command.DeleteCommand;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"import pepe.command.EventCommand;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"import pepe.command.ExitCommand;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"import pepe.command.ListCommand;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"import pepe.command.MarkCommand;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"import pepe.command.TodoCommand;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"import pepe.command.UnmarkCommand;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"class ParserTest {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    void testParserReturnsCorrectCommandInstances() throws PepeExceptions {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"        assertInstanceOf(ExitCommand.class, Parser.parse(\"bye\"));","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"        assertInstanceOf(ListCommand.class, Parser.parse(\"list\"));","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"        assertInstanceOf(MarkCommand.class, Parser.parse(\"mark 1\"));","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"        assertInstanceOf(UnmarkCommand.class, Parser.parse(\"unmark 1\"));","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"        assertInstanceOf(DeleteCommand.class, Parser.parse(\"delete 1\"));","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"        assertInstanceOf(TodoCommand.class, Parser.parse(\"todo Finish homework\"));","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"        assertInstanceOf(DeadlineCommand.class, Parser.parse(\"deadline Submit report /by 2099-12-31\"));","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"        assertInstanceOf(EventCommand.class, Parser.parse(\"event Meeting /from 2099-01-01 /to 2099-01-02\"));","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"    void testInvalidCommandThrowsException() {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"        PepeExceptions exception \u003d assertThrows(PepeExceptions.class, () -\u003e Parser.parse(\"foobar\"));","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(\"\"\"","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"                These are the commands:","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"                Add Tasks: todo, deadline, event","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"                Mark/Unmark Tasks: mark, unmark","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"                View Tasks: list","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"                Delete Task: delete","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"                Find task: find","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"                \"\"\", exception.getMessage());","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false}],"authorContributionMap":{"clementsimwj":45}},{"path":"src/test/java/pepe/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.storage;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import java.io.File;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Deadlines;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Events;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Task;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.ToDos;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"class StorageTest {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"    private File tempFile;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"        tempFile \u003d File.createTempFile(\"tasks\", \".txt\");","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"        tempFile.deleteOnExit();","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"        storage \u003d new Storage(tempFile.getAbsolutePath());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"    void testRawDateToString() throws PepeExceptions {","lastModifiedDate":"2025-09-17T23:27:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"        String input \u003d \"Jan 1 2099\";","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"        String expected \u003d \"2099-01-01\";","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(expected, storage.rawDateToString(input));","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T23:27:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"    void testSaveAndLoadWithToDos() throws IOException, PepeExceptions {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"        ToDos todo1 \u003d new ToDos(\"Task1\");","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"        ToDos todo2 \u003d new ToDos(\"Task2\");","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"        todo2.markTask();","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"        tasks.addTask(todo1);","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"        tasks.addTask(todo2);","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(2, loadedTasks.size());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(todo1.toString(), loadedTasks.get(0).toString());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(todo2.toString(), loadedTasks.get(1).toString());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"    void testSaveAndLoadWithDeadlines() throws IOException, PepeExceptions {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clementsimwj"},"content":"        Deadlines deadline \u003d new Deadlines(\"Submit report\", LocalDate.now().plusDays(2).toString());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clementsimwj"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clementsimwj"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clementsimwj"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(1, loadedTasks.size());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(deadline.toString(), loadedTasks.get(0).toString());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clementsimwj"},"content":"    void testSaveAndLoadWithEvents() throws IOException, PepeExceptions {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clementsimwj"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clementsimwj"},"content":"        Events event \u003d new Events(\"Conference\",","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clementsimwj"},"content":"                LocalDate.now().plusDays(1).toString(),","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clementsimwj"},"content":"                LocalDate.now().plusDays(2).toString());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clementsimwj"},"content":"        tasks.addTask(event);","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clementsimwj"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"clementsimwj"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(1, loadedTasks.size());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(event.toString(), loadedTasks.get(0).toString());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"clementsimwj"},"content":"    void testLoadFileNotFoundCreatesFile() throws PepeExceptions {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"clementsimwj"},"content":"        File nonExistent \u003d new File(\"nonexistent_tasks.txt\");","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"clementsimwj"},"content":"        nonExistent.delete();","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"clementsimwj"},"content":"        Storage newStorage \u003d new Storage(nonExistent.getAbsolutePath());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"clementsimwj"},"content":"        ArrayList\u003cTask\u003e loaded \u003d newStorage.load();","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(loaded.isEmpty());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(nonExistent.exists());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"clementsimwj"},"content":"        nonExistent.delete();","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false}],"authorContributionMap":{"clementsimwj":97}},{"path":"src/test/java/pepe/task/DeadlinesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.task;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"class DeadlinesTest {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"    void testToString_unmarked() throws PepeExceptions {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"        Deadlines deadline \u003d new Deadlines(\"Submit report\", \"2099-12-31\");","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(\"[D][ ] Submit report (by: Dec 31 2099)\", deadline.toString());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"    void testToString_marked() throws PepeExceptions {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"        Deadlines deadline \u003d new Deadlines(\"Submit report\", \"2099-12-31\");","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"        deadline.markTask();","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(\"[D][X] Submit report (by: Dec 31 2099)\", deadline.toString());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"    void testToFileFormat_unmarked() throws PepeExceptions {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"        Deadlines deadline \u003d new Deadlines(\"Submit report\", \"2099-12-31\");","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(\"D | 0 | Submit report | Dec 31 2099\", deadline.toFileFormat());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"    void testToFileFormat_marked() throws PepeExceptions {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"        Deadlines deadline \u003d new Deadlines(\"Submit report\", \"2099-12-31\");","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"        deadline.markTask();","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(\"D | 1 | Submit report | Dec 31 2099\", deadline.toFileFormat());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"    void testConstructor_invalidDateFormat() {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"        PepeExceptions exception \u003d assertThrows(PepeExceptions.class, () -\u003e","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"                new Deadlines(\"Bad Task\", \"31-12-2099\"));","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(exception.getMessage().contains(\"Invalid Input: Please check the format of your dates\"));","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"    void testConstructor_dateBeforeToday() {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"        LocalDate yesterday \u003d LocalDate.now().minusDays(1);","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"        PepeExceptions exception \u003d assertThrows(PepeExceptions.class, () -\u003e","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"                new Deadlines(\"Past Task\", yesterday.toString()));","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(exception.getMessage().contains(\"Dateline cannot be before today\"));","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false}],"authorContributionMap":{"clementsimwj":58}},{"path":"src/test/java/pepe/task/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.task;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"class EventsTest {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"    void testToString_unmarked() throws PepeExceptions {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"        Events event \u003d new Events(\"Meeting\", \"2099-01-01\", \"2099-01-02\");","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(\"[E][ ] Meeting (from: Jan 1 2099 to: Jan 2 2099)\", event.toString());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    void testToString_marked() throws PepeExceptions {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"        Events event \u003d new Events(\"Meeting\", \"2099-01-01\", \"2099-01-02\");","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"        event.markTask();","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(\"[E][X] Meeting (from: Jan 1 2099 to: Jan 2 2099)\", event.toString());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"    void testToFileFormat_unmarked() throws PepeExceptions {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"        Events event \u003d new Events(\"Meeting\", \"2099-01-01\", \"2099-01-02\");","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(\"E | 0 | Meeting | Jan 1 2099 - Jan 2 2099\", event.toFileFormat());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"    void testToFileFormat_marked() throws PepeExceptions {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"        Events event \u003d new Events(\"Meeting\", \"2099-01-01\", \"2099-01-02\");","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"        event.markTask();","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(\"E | 1 | Meeting | Jan 1 2099 - Jan 2 2099\", event.toFileFormat());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"    void testConstructor_invalidDateFormat() {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"        PepeExceptions exception \u003d assertThrows(PepeExceptions.class, () -\u003e","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"                new Events(\"Bad Event\", \"01-01-2099\", \"02-01-2099\"));","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(exception.getMessage().contains(\"Invalid Input: Please check the format of your dates\"));","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"    void testConstructor_endBeforeToday() {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"        LocalDate yesterday \u003d LocalDate.now().minusDays(1);","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"        LocalDate tomorrow \u003d LocalDate.now().plusDays(1);","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"        PepeExceptions exception \u003d assertThrows(PepeExceptions.class, () -\u003e","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"                new Events(\"Past Event\", tomorrow.toString(), yesterday.toString()));","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(exception.getMessage().contains(\"End Date cannot be before today\"));","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"    void testConstructor_startAfterEnd() {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"        LocalDate start \u003d LocalDate.now().plusDays(5);","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clementsimwj"},"content":"        LocalDate end \u003d LocalDate.now().plusDays(2);","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clementsimwj"},"content":"        PepeExceptions exception \u003d assertThrows(PepeExceptions.class, () -\u003e","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clementsimwj"},"content":"                new Events(\"Invalid Event\", start.toString(), end.toString()));","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(exception.getMessage().contains(\"Start Date cannot be after End Date\"));","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false}],"authorContributionMap":{"clementsimwj":67}},{"path":"src/test/java/pepe/task/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.task;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"class ToDosTest {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"    void testToString_unmarked() {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"        ToDos todo \u003d new ToDos(\"Test task\");","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"        // Initially unmarked","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(\"[T][ ] Test task\", todo.toString());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"    void testToString_marked() {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"        ToDos todo \u003d new ToDos(\"Test task\");","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"        todo.markTask(); // mark as done","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(\"[T][X] Test task\", todo.toString());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"    void testToFileFormat_unmarked() {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"        ToDos todo \u003d new ToDos(\"Test task\");","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(\"T | 0 | Test task\", todo.toFileFormat());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"    void testToFileFormat_marked() {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"        ToDos todo \u003d new ToDos(\"Test task\");","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"        todo.markTask();","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(\"T | 1 | Test task\", todo.toFileFormat());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false}],"authorContributionMap":{"clementsimwj":35}},{"path":"src/test/java/pepe/task/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.task.tasklist;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"import pepe.exception.PepeExceptions;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.EmptyTask;","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Task;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.ToDos;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"class TaskListTest {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"    void setUp() {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"        taskList.addTask(new ToDos(\"Task 1\"));","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"        taskList.addTask(new ToDos(\"Task 2\"));","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"        taskList.addTask(new ToDos(\"Task 3\"));","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"    void testAddAndSize() {","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(3, taskList.size());","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"        taskList.addTask(new ToDos(\"Task 4\"));","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(4, taskList.size());","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"    void testDeleteTask() {","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"        Task deleted \u003d taskList.deleteTask(1);","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(\"Task 2\", deleted.getName());","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(taskList.get(1) instanceof EmptyTask);","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"    void testWipe() {","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"        taskList.deleteTask(2);","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"        taskList.wipe();","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(\"Task 2\", taskList.get(0).getName());","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"    void testIsEmpty() throws PepeExceptions {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"        assertFalse(taskList.isEmpty());","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"        TaskList emptyList \u003d new TaskList();","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(emptyList.isEmpty());","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clementsimwj"},"content":"    void testGet() {","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clementsimwj"},"content":"        Task task \u003d taskList.get(0);","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(\"Task 1\", task.getName());","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clementsimwj"},"content":"    void testFindTask() {","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clementsimwj"},"content":"        TaskList found \u003d taskList.findTask(\"1\");","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(1, found.size());","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(\"Task 1\", found.get(0).getName());","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clementsimwj"},"content":"        TaskList notFound \u003d taskList.findTask(\"xyz\");","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(0, notFound.size());","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clementsimwj"},"content":"    void testGetTaskList() {","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clementsimwj"},"content":"        ArrayList\u003cTask\u003e underlyingList \u003d taskList.getTaskList();","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(3, underlyingList.size());","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(\"Task 1\", underlyingList.get(0).getName());","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"clementsimwj"},"content":"    void testDeleteTaskIndexOutOfBounds() {","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"clementsimwj"},"content":"        assertThrows(AssertionError.class, () -\u003e taskList.deleteTask(-1));","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"clementsimwj"},"content":"        assertThrows(AssertionError.class, () -\u003e taskList.deleteTask(3));","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"clementsimwj"},"content":"    void testGetIndexOutOfBounds() {","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"clementsimwj"},"content":"        assertThrows(AssertionError.class, () -\u003e taskList.get(-1));","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"clementsimwj"},"content":"        assertThrows(AssertionError.class, () -\u003e taskList.get(3));","lastModifiedDate":"2025-09-17T20:29:17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false}],"authorContributionMap":{"clementsimwj":94}},{"path":"src/test/java/pepe/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"package pepe.ui;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.Task;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.ToDos;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"clementsimwj"},"content":"import pepe.task.tasklist.TaskList;","lastModifiedDate":"2025-09-10T17:44:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"clementsimwj"},"content":"class UiTest {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"clementsimwj"},"content":"    private Ui ui;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"clementsimwj"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"    private Task todo1;","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"    private Task todo2;","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clementsimwj"},"content":"    void setUp() {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"clementsimwj"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clementsimwj"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clementsimwj"},"content":"        todo1 \u003d new ToDos(\"Buy milk\");","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"clementsimwj"},"content":"        todo2 \u003d new ToDos(\"Read book\");","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clementsimwj"},"content":"        taskList.addTask(todo1);","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clementsimwj"},"content":"        taskList.addTask(todo2);","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"clementsimwj"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"clementsimwj"},"content":"    @AfterEach","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clementsimwj"},"content":"    void tearDown() {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clementsimwj"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"clementsimwj"},"content":"    void testUiGreet() {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"clementsimwj"},"content":"        String output \u003d ui.showUiGreetUser();","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(output.contains(\"I am Pepe!\\n What do you want?\"));","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"clementsimwj"},"content":"    void testUiBye() {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"clementsimwj"},"content":"        String output \u003d ui.showUiSayBye();","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(output.contains(\"Fine then! Leave! I don\u0027t care...\"));","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"clementsimwj"},"content":"    void testUiListEmpty() {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"clementsimwj"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"clementsimwj"},"content":"        String output \u003d ui.showUiListTask(list);","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(output.contains(\"Either you\u0027re really on task...or...\\n\"));","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"clementsimwj"},"content":"    void testUiMark() {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"clementsimwj"},"content":"        Task task \u003d new ToDos(\"Test task\");","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"clementsimwj"},"content":"        String output \u003d ui.showUiMark(task);","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(output.contains(\"Bro finally accomplished something!\"));","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(output.contains(\"Test task\"));","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"clementsimwj"},"content":"    void testUiUnmark() {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"clementsimwj"},"content":"        Task task \u003d new ToDos(\"Test task\");","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"clementsimwj"},"content":"        String output \u003d ui.showUiUnmark(task);","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(output.contains(\"I knew it! You couldn\u0027t have finished it that quickly...\"));","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(output.contains(\"Test task\"));","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"clementsimwj"},"content":"    void testUiToDo() {","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"clementsimwj"},"content":"        Task task \u003d new ToDos(\"Test task\");","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"clementsimwj"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"clementsimwj"},"content":"        list.addTask(task);","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"clementsimwj"},"content":"        String output \u003d ui.showUiAddToDo(list, task);","lastModifiedDate":"2025-09-17T18:09:30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(output.contains(\"Sure let\u0027s add this task that you\u0027ll definitely do:\"));","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(output.contains(\"Test task\"));","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"clementsimwj"},"content":"        assertTrue(output.contains(\"Now you have 1 tasks in the list\"));","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"clementsimwj"},"content":"    void testShowUiDelete() {","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"clementsimwj"},"content":"        String expected \u003d \"Amazing! Let\u0027s just pretend this task didn\u0027t exist!\\n\"","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"clementsimwj"},"content":"                + todo1 + \"\\n\"","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"clementsimwj"},"content":"                + \"Now you have \" + taskList.size() + \" tasks in the list\\n\";","lastModifiedDate":"2025-09-17T23:27:22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(expected, ui.showUiDelete(taskList, todo1));","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"clementsimwj"},"content":"    void testShowUiFind() {","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"clementsimwj"},"content":"        TaskList findList \u003d taskList.findTask(\"Buy\");","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"clementsimwj"},"content":"        String expected \u003d \"I tried my best finding these...:\\n\"","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"clementsimwj"},"content":"                + \"1. \" + todo1 + \"\\n\";","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(expected, ui.showUiFind(findList));","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"clementsimwj"},"content":"","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"clementsimwj"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"clementsimwj"},"content":"    void testShowUiError() {","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"clementsimwj"},"content":"        String errorMsg \u003d \"Oops, something went wrong!\";","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"clementsimwj"},"content":"        assertEquals(errorMsg, ui.showUiError(errorMsg));","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"clementsimwj"},"content":"    }","lastModifiedDate":"2025-09-17T21:08:47","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"clementsimwj"},"content":"}","lastModifiedDate":"2025-08-28T16:09:52","isFullCredit":false}],"authorContributionMap":{"clementsimwj":110}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"clementsimwj"},"content":"todo borrow book","lastModifiedDate":"2025-08-20T21:11:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"clementsimwj"},"content":"todo eat breakfast","lastModifiedDate":"2025-08-21T19:05:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"clementsimwj"},"content":"deadline walk my dog /by Monday 10am","lastModifiedDate":"2025-08-21T19:05:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"clementsimwj"},"content":"deadline watch lecture /by Wednesday 4pm","lastModifiedDate":"2025-08-21T19:05:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"clementsimwj"},"content":"list","lastModifiedDate":"2025-08-21T19:05:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"clementsimwj"},"content":"event attend Swimming /from 6pm /to 8pm","lastModifiedDate":"2025-08-21T19:05:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"clementsimwj"},"content":"mark 2","lastModifiedDate":"2025-08-21T19:05:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"clementsimwj"},"content":"mark 3","lastModifiedDate":"2025-08-21T19:05:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"clementsimwj"},"content":"delete 1","lastModifiedDate":"2025-08-21T19:05:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"clementsimwj"},"content":"list","lastModifiedDate":"2025-08-21T19:05:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"clementsimwj"},"content":"delete 1","lastModifiedDate":"2025-08-21T19:05:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"clementsimwj"},"content":"list","lastModifiedDate":"2025-08-20T21:11:20","isFullCredit":false}],"authorContributionMap":{"clementsimwj":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"clementsimwj"},"content":"java -classpath ..\\bin Pepe \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-20T21:11:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"clementsimwj"},"content":"FC /W ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2025-08-27T20:17:17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"clementsimwj"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2025-08-21T19:05:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"    echo ********** TEST FAILED **********","lastModifiedDate":"2025-08-21T19:05:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clementsimwj"},"content":") ELSE (","lastModifiedDate":"2025-08-21T19:05:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"clementsimwj"},"content":"    echo ********** TEST PASSED **********","lastModifiedDate":"2025-08-21T19:05:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clementsimwj"},"content":")","lastModifiedDate":"2025-08-21T19:05:49","isFullCredit":false}],"authorContributionMap":{"clementsimwj":7,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"clementsimwj"},"content":"java -classpath ../bin Pepe \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-20T21:11:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"clementsimwj":1,"-":37}}]
