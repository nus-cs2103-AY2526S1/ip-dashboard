[{"path":"src/main/java/Bruh.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"public class Bruh {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"        System.out.println(\" Hello! I\u0027m Bruh\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":"        while (true) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylantjy"},"content":"            if (!sc.hasNextLine()) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylantjy"},"content":"                goodbye();","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylantjy"},"content":"                break;","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylantjy"},"content":"            }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylantjy"},"content":"            String raw \u003d sc.nextLine();","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylantjy"},"content":"            String input \u003d raw.trim();","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylantjy"},"content":"            try {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylantjy"},"content":"                if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylantjy"},"content":"                    goodbye();","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylantjy"},"content":"                    break;","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylantjy"},"content":"                } else if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylantjy"},"content":"                    printList(tasks);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylantjy"},"content":"                } else if (startsWithWord(input, \"mark\")) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylantjy"},"content":"                    int idx \u003d parseIndexStrict(input, \"mark\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylantjy"},"content":"                    ensureIndex(idx, tasks.size());","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylantjy"},"content":"                    tasks.get(idx - 1).markAsDone();","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylantjy"},"content":"                    boxed(\" Nice! I\u0027ve marked this task as done:\\n   \" + tasks.get(idx - 1));","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dylantjy"},"content":"                } else if (startsWithWord(input, \"unmark\")) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylantjy"},"content":"                    int idx \u003d parseIndexStrict(input, \"unmark\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dylantjy"},"content":"                    ensureIndex(idx, tasks.size());","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dylantjy"},"content":"                    tasks.get(idx - 1).markAsNotDone();","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dylantjy"},"content":"                    boxed(\" OK, I\u0027ve marked this task as not done yet:\\n   \" + tasks.get(idx - 1));","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dylantjy"},"content":"                } else if (startsWithWord(input, \"delete\")) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dylantjy"},"content":"                    int idx \u003d parseIndexStrict(input, \"delete\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dylantjy"},"content":"                    ensureIndex(idx, tasks.size());","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dylantjy"},"content":"                    Task removed \u003d tasks.remove(idx - 1);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dylantjy"},"content":"                    boxed(\" Noted. I\u0027ve removed this task:\\n   \" + removed","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dylantjy"},"content":"                            + \"\\n Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dylantjy"},"content":"                } else if (startsWithWord(input, \"todo\")) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dylantjy"},"content":"                    String desc \u003d afterCommand(input, \"todo\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dylantjy"},"content":"                    if (desc.isEmpty()) throw new BruhException(\"Todo needs a description. Try: todo borrow book\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dylantjy"},"content":"                    tasks.add(new Todo(desc));","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dylantjy"},"content":"                    printAdded(tasks.get(tasks.size() - 1), tasks.size());","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dylantjy"},"content":"                } else if (startsWithWord(input, \"deadline\")) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dylantjy"},"content":"                    // deadline \u003cdesc\u003e /by \u003cwhen\u003e","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dylantjy"},"content":"                    String rest \u003d afterCommand(input, \"deadline\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dylantjy"},"content":"                    String[] parts \u003d rest.split(\" /by \", 2);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dylantjy"},"content":"                    if (rest.isEmpty()) throw new BruhException(\"Deadline needs a description and \u0027/by\u0027. Try: deadline return book /by Sunday\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dylantjy"},"content":"                    if (parts.length !\u003d 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dylantjy"},"content":"                        throw new BruhException(\"Please include \u0027/by \u003cwhen\u003e\u0027. Example: deadline submit report /by 11/10/2019 5pm\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dylantjy"},"content":"                    }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dylantjy"},"content":"                    tasks.add(new Deadline(parts[0].trim(), parts[1].trim()));","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dylantjy"},"content":"                    printAdded(tasks.get(tasks.size() - 1), tasks.size());","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dylantjy"},"content":"                } else if (startsWithWord(input, \"event\")) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dylantjy"},"content":"                    // event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dylantjy"},"content":"                    String rest \u003d afterCommand(input, \"event\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dylantjy"},"content":"                    if (rest.isEmpty()) throw new BruhException(\"Event needs a description and times. Try: event project meeting /from Mon 2pm /to 4pm\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dylantjy"},"content":"                    String[] fromSplit \u003d rest.split(\" /from \", 2);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dylantjy"},"content":"                    if (fromSplit.length !\u003d 2 || fromSplit[0].trim().isEmpty()) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dylantjy"},"content":"                        throw new BruhException(\"Missing \u0027/from\u0027. Example: event orientation week /from 4/10/2019 /to 11/10/2019\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dylantjy"},"content":"                    }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dylantjy"},"content":"                    String[] toSplit \u003d fromSplit[1].split(\" /to \", 2);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dylantjy"},"content":"                    if (toSplit.length !\u003d 2 || toSplit[0].trim().isEmpty() || toSplit[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dylantjy"},"content":"                        throw new BruhException(\"Missing \u0027/to\u0027. Example: event team sync /from 2pm /to 4pm\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dylantjy"},"content":"                    }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dylantjy"},"content":"                    tasks.add(new Event(fromSplit[0].trim(), toSplit[0].trim(), toSplit[1].trim()));","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dylantjy"},"content":"                    printAdded(tasks.get(tasks.size() - 1), tasks.size());","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dylantjy"},"content":"                } else if (input.isEmpty()) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dylantjy"},"content":"                    throw new BruhException(\"I got an empty line. Try: list, todo \u003cdesc\u003e, deadline \u003cdesc\u003e /by \u003cwhen\u003e, event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dylantjy"},"content":"                } else {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dylantjy"},"content":"                    // Unknown command","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dylantjy"},"content":"                    throw new BruhException(\"Hmm, I don\u0027t recognize that. Try: list, todo, deadline, event, mark N, unmark N, delete N, or bye\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dylantjy"},"content":"                }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dylantjy"},"content":"            } catch (BruhException ex) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dylantjy"},"content":"                boxed(\" \" + ex.getMessage());","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dylantjy"},"content":"            }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dylantjy"},"content":"        sc.close();","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dylantjy"},"content":"    // ---------- helpers ----------","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dylantjy"},"content":"    private static void ensureIndex(int idx, int size) throws BruhException {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dylantjy"},"content":"        if (idx \u003c 1 || idx \u003e size) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dylantjy"},"content":"            throw new BruhException(\"That task number doesn\u0027t exist. Use \u0027list\u0027 to see valid numbers.\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dylantjy"},"content":"    private static boolean startsWithWord(String input, String word) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dylantjy"},"content":"        return input.equalsIgnoreCase(word) || input.toLowerCase().startsWith(word.toLowerCase() + \" \");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dylantjy"},"content":"    private static String afterCommand(String input, String cmd) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dylantjy"},"content":"        if (input.equalsIgnoreCase(cmd)) return \"\";","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dylantjy"},"content":"        return input.substring(cmd.length()).trim();","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dylantjy"},"content":"    private static int parseIndexStrict(String input, String cmd) throws BruhException {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dylantjy"},"content":"        String rest \u003d afterCommand(input, cmd);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dylantjy"},"content":"        if (rest.isEmpty()) throw new BruhException(\"Please provide a task number. Example: \" + cmd + \" 2\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dylantjy"},"content":"        try {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dylantjy"},"content":"            return Integer.parseInt(rest);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dylantjy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dylantjy"},"content":"            throw new BruhException(\"That doesn\u0027t look like a number. Try: \" + cmd + \" 2\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dylantjy"},"content":"    private static void printList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dylantjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dylantjy"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dylantjy"},"content":"            System.out.println(\" Your list is empty. Add something with \u0027todo\u0027, \u0027deadline\u0027, or \u0027event\u0027.\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dylantjy"},"content":"        } else {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dylantjy"},"content":"            System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dylantjy"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dylantjy"},"content":"                System.out.println(\" \" + (i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dylantjy"},"content":"            }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dylantjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"dylantjy"},"content":"    private static void printAdded(Task t, int total) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"dylantjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"dylantjy"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"dylantjy"},"content":"        System.out.println(\"   \" + t);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"dylantjy"},"content":"        System.out.println(\" Now you have \" + total + \" tasks in the list.\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"dylantjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"dylantjy"},"content":"    private static void boxed(String msg) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"dylantjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"dylantjy"},"content":"        System.out.println(msg);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"dylantjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"dylantjy"},"content":"    private static void goodbye() {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"dylantjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"dylantjy"},"content":"        System.out.println(\" Bye bruh. Hope to see you again soon!\");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"dylantjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false}],"authorContributionMap":{"dylantjy":147}},{"path":"src/main/java/BruhException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"public class BruhException extends Exception {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"    public BruhException(String message) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"        super(message);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false}],"authorContributionMap":{"dylantjy":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"    protected String by;","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"        super(description);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"    @Override","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false}],"authorContributionMap":{"dylantjy":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"    protected String from;","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"    protected String to;","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"        super(description);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"    @Override","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false}],"authorContributionMap":{"dylantjy":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"public class Task {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"    protected String description;","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"    public void markAsDone() { this.isDone \u003d true; }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":"    public void markAsNotDone() { this.isDone \u003d false; }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylantjy"},"content":"    @Override","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylantjy"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylantjy"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false}],"authorContributionMap":{"dylantjy":24}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"        super(description);","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"    @Override","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-08-22T13:48:06","isFullCredit":false}],"authorContributionMap":{"dylantjy":10}},{"path":"text-ui-test/actual-errors.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":" Hello! I\u0027m Bruh","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":" What can I do for you?","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":" Todo needs a description. Try: todo borrow book","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":" Hmm, I don\u0027t recognize that. Try: list, todo, deadline, event, mark N, unmark N, or bye","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":" Bye bruh. Hope to see you again soon!","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false}],"authorContributionMap":{"dylantjy":13}},{"path":"text-ui-test/expected-errors.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":" Hello! I\u0027m Bruh","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":" What can I do for you?","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":" Todo needs a description. Try: todo borrow book","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":" Hmm, I don\u0027t recognize that. Try: list, todo, deadline, event, mark N, unmark N, or bye","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":" Bye. Hope to see you again soon!","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false}],"authorContributionMap":{"dylantjy":13}},{"path":"text-ui-test/input-errors.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"todo","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"blah","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"bye","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false}],"authorContributionMap":{"dylantjy":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"todo read book","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"list","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"mark 2","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"unmark 2","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"bye","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false}],"authorContributionMap":{"dylantjy":7}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"set -e","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"# Compile to ./out","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"mkdir -p out","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"javac -d out src/main/java/*.java","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"# Run Bruh with redirected input -\u003e actual.txt","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"java -cp out Bruh \u003c text-ui-test/input.txt \u003e text-ui-test/actual.txt","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"# Compare expected vs actual","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"if diff -u text-ui-test/expected.txt text-ui-test/actual.txt; then","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"  echo \"✅ Test passed\"","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"  echo \"❌ Test failed\"","lastModifiedDate":"2025-08-22T14:15:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"  exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"dylantjy":10,"-":7}}]
