[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"plugins {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"    id \u0027java\u0027","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"    id \u0027application\u0027","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"repositories {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"    mavenCentral()","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"dependencies {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.10.2\u0027","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"application {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"    mainClass \u003d \u0027bruh.Bruh\u0027","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylantjy"},"content":"tasks.test {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylantjy"},"content":"    useJUnitPlatform()","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylantjy"},"content":"tasks.run {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylantjy"},"content":"    workingDir \u003d projectDir","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylantjy"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false}],"authorContributionMap":{"dylantjy":25}},{"path":"data/bruh.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"T | 0 | read book","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"D | 0 | return book | 2019-10-15","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"E | 0 | proj | 2019-10-20 | 2019-10-22","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false}],"authorContributionMap":{"dylantjy":3}},{"path":"src/main/java/bruh/Bruh.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"package bruh;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"import java.util.List;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"public class Bruh {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"        Storage storage \u003d new Storage(\"data/bruh.txt\");","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"        TaskList tasks;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"        try {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylantjy"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylantjy"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylantjy"},"content":"        boolean running \u003d true;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylantjy"},"content":"        while (running) {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylantjy"},"content":"            try {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylantjy"},"content":"                String input \u003d ui.readCommand();","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylantjy"},"content":"                Parser.Parsed p \u003d Parser.parse(input);","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylantjy"},"content":"                switch (p.type) {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylantjy"},"content":"                    case BYE:","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylantjy"},"content":"                        ui.showBye();","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylantjy"},"content":"                        running \u003d false;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylantjy"},"content":"                        break;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylantjy"},"content":"                    case LIST:","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylantjy"},"content":"                        ui.showList(tasks);","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dylantjy"},"content":"                        break;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylantjy"},"content":"                    case MARK: {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dylantjy"},"content":"                        int idx \u003d Parser.parseIndex(p.args, \"mark\");","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dylantjy"},"content":"                        tasks.mark(idx);","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dylantjy"},"content":"                        ui.showMarked(tasks.get(idx));","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dylantjy"},"content":"                        storage.save(tasks.asList());","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dylantjy"},"content":"                        break;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dylantjy"},"content":"                    }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dylantjy"},"content":"                    case UNMARK: {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dylantjy"},"content":"                        int idx \u003d Parser.parseIndex(p.args, \"unmark\");","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dylantjy"},"content":"                        tasks.unmark(idx);","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dylantjy"},"content":"                        ui.showUnmarked(tasks.get(idx));","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dylantjy"},"content":"                        storage.save(tasks.asList());","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dylantjy"},"content":"                        break;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dylantjy"},"content":"                    }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dylantjy"},"content":"                    case DELETE: {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dylantjy"},"content":"                        int idx \u003d Parser.parseIndex(p.args, \"delete\");","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dylantjy"},"content":"                        Task removed \u003d tasks.delete(idx);","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dylantjy"},"content":"                        ui.showRemoved(removed, tasks.size());","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dylantjy"},"content":"                        storage.save(tasks.asList());","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dylantjy"},"content":"                        break;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dylantjy"},"content":"                    }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dylantjy"},"content":"                    case TODO: {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dylantjy"},"content":"                        if (p.args.isEmpty())","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dylantjy"},"content":"                            throw new BruhException(\"Todo needs a description. Example: todo borrow book\");","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dylantjy"},"content":"                        tasks.add(new Todo(p.args));","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dylantjy"},"content":"                        ui.showAdded(tasks.get(tasks.size()), tasks.size());","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dylantjy"},"content":"                        storage.save(tasks.asList());","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dylantjy"},"content":"                        break;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dylantjy"},"content":"                    }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dylantjy"},"content":"                    case DEADLINE: {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dylantjy"},"content":"                        String[] parts \u003d Parser.parseDeadlineArgs(p.args);","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dylantjy"},"content":"                        tasks.add(new Deadline(parts[0], parts[1]));","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dylantjy"},"content":"                        ui.showAdded(tasks.get(tasks.size()), tasks.size());","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dylantjy"},"content":"                        storage.save(tasks.asList());","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dylantjy"},"content":"                        break;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dylantjy"},"content":"                    }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dylantjy"},"content":"                    case EVENT: {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dylantjy"},"content":"                        String[] parts \u003d Parser.parseEventArgs(p.args);","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dylantjy"},"content":"                        tasks.add(new Event(parts[0], parts[1], parts[2]));","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dylantjy"},"content":"                        ui.showAdded(tasks.get(tasks.size()), tasks.size());","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dylantjy"},"content":"                        storage.save(tasks.asList());","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dylantjy"},"content":"                        break;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dylantjy"},"content":"                    }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dylantjy"},"content":"                    case FIND: {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dylantjy"},"content":"                        if (p.args.isEmpty()){","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dylantjy"},"content":"                            throw new BruhException(\"Find needs a keyword. Example: find book\");","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dylantjy"},"content":"                        }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dylantjy"},"content":"                        List\u003cTask\u003e matches \u003d tasks.find(p.args);","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dylantjy"},"content":"                        ui.showFound(matches);","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dylantjy"},"content":"                        break;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dylantjy"},"content":"                    }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dylantjy"},"content":"                }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dylantjy"},"content":"            } catch (BruhException ex) {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dylantjy"},"content":"                ui.showError(ex.getMessage());","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dylantjy"},"content":"            } catch (Exception io) {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dylantjy"},"content":"                ui.showError(\"Couldn\u0027t save your tasks. They\u0027ll still work for this session.\");","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dylantjy"},"content":"            }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dylantjy"},"content":"    // ---------- helpers (unchanged) ----------","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dylantjy"},"content":"    private static void ensureIndex(int idx, int size) throws BruhException {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dylantjy"},"content":"        if (idx \u003c 1 || idx \u003e size) {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dylantjy"},"content":"            throw new BruhException(\"That task number doesn\u0027t exist. Use \u0027list\u0027 to see valid numbers.\");","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dylantjy"},"content":"    private static boolean startsWithWord(String input, String word) {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dylantjy"},"content":"        return input.equalsIgnoreCase(word) || input.toLowerCase().startsWith(word.toLowerCase() + \" \");","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dylantjy"},"content":"    private static String afterCommand(String input, String cmd) {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dylantjy"},"content":"        if (input.equalsIgnoreCase(cmd)) return \"\";","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dylantjy"},"content":"        return input.substring(cmd.length()).trim();","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dylantjy"},"content":"    private static int parseIndexStrict(String input, String cmd) throws BruhException {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dylantjy"},"content":"        String rest \u003d afterCommand(input, cmd);","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dylantjy"},"content":"        if (rest.isEmpty()) throw new BruhException(\"Please provide a task number. Example: \" + cmd + \" 2\");","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dylantjy"},"content":"        try {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dylantjy"},"content":"            return Integer.parseInt(rest);","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dylantjy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dylantjy"},"content":"            throw new BruhException(\"That doesn\u0027t look like a number. Try: \" + cmd + \" 2\");","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false}],"authorContributionMap":{"dylantjy":123}},{"path":"src/main/java/bruh/BruhException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"package bruh;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"public class BruhException extends Exception {","lastModifiedDate":"2025-08-22T04:12:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"    public BruhException(String message) {","lastModifiedDate":"2025-08-22T04:12:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"        super(message);","lastModifiedDate":"2025-08-22T04:12:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T04:12:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-08-22T04:12:08","isFullCredit":false}],"authorContributionMap":{"dylantjy":7}},{"path":"src/main/java/bruh/DateUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"package bruh;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"public final class DateUtil {","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"    private static final DateTimeFormatter ISO \u003d DateTimeFormatter.ISO_LOCAL_DATE; // yyyy-MM-dd","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"    private static final DateTimeFormatter PRETTY \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"    private DateUtil() {}","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"    // Try parse yyyy-MM-dd; return null if not parseable","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"    public static LocalDate tryParseIso(String s) {","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"        try {","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":"            return LocalDate.parse(s.trim(), ISO);","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylantjy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylantjy"},"content":"            return null;","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylantjy"},"content":"    public static String toIso(LocalDate d) {","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylantjy"},"content":"        return d.format(ISO);","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylantjy"},"content":"    public static String toPretty(LocalDate d) {","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylantjy"},"content":"        return d.format(PRETTY);","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-08-28T15:04:16","isFullCredit":false}],"authorContributionMap":{"dylantjy":29}},{"path":"src/main/java/bruh/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"package bruh;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-22T03:29:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"    protected String by;            // keep original text for back-compat","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"    protected LocalDate byDate;     // preferred when available","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T03:29:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-08-22T03:29:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"        super(description);","lastModifiedDate":"2025-08-22T03:29:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-22T03:29:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"        this.byDate \u003d DateUtil.tryParseIso(by);","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T03:29:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T03:29:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"    // new ctor for direct LocalDate usage (optional)","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"    public Deadline(String description, LocalDate byDate) {","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":"        super(description);","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylantjy"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylantjy"},"content":"        this.by \u003d (byDate \u003d\u003d null) ? \"\" : DateUtil.toIso(byDate);","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-28T14:08:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T14:08:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylantjy"},"content":"    public String getBy() { return (byDate !\u003d null) ? DateUtil.toIso(byDate) : by; }","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylantjy"},"content":"    public LocalDate getByDate() { return byDate; }","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylantjy"},"content":"    @Override","lastModifiedDate":"2025-08-22T03:29:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylantjy"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T03:29:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylantjy"},"content":"        String when \u003d (byDate !\u003d null) ? DateUtil.toPretty(byDate) : by;","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylantjy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + when + \")\";","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T03:29:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-08-22T03:29:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false}],"authorContributionMap":{"dylantjy":30}},{"path":"src/main/java/bruh/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"package bruh;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"    protected String from;","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"    protected String to;","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"    protected LocalDate fromDate;   // if parsed","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"    protected LocalDate toDate;     // if parsed","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"        super(description);","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"        this.fromDate \u003d DateUtil.tryParseIso(from);","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"        this.toDate \u003d DateUtil.tryParseIso(to);","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylantjy"},"content":"    public String getFrom() { return (fromDate !\u003d null) ? DateUtil.toIso(fromDate) : from; }","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylantjy"},"content":"    public String getTo()   { return (toDate !\u003d null)   ? DateUtil.toIso(toDate)   : to; }","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylantjy"},"content":"    public LocalDate getFromDate() { return fromDate; }","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylantjy"},"content":"    public LocalDate getToDate()   { return toDate; }","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T14:08:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylantjy"},"content":"    @Override","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylantjy"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylantjy"},"content":"        String fromStr \u003d (fromDate !\u003d null) ? DateUtil.toPretty(fromDate) : from;","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylantjy"},"content":"        String toStr   \u003d (toDate   !\u003d null) ? DateUtil.toPretty(toDate)   : to;","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylantjy"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + fromStr + \" to: \" + toStr + \")\";","lastModifiedDate":"2025-08-28T15:05:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false}],"authorContributionMap":{"dylantjy":29}},{"path":"src/main/java/bruh/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"package bruh;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"    public static Parsed parse(String input) throws BruhException {","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"        if (input \u003d\u003d null) return new Parsed(CommandType.BYE, \"\");","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"        String trimmed \u003d input.trim();","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"        if (trimmed.isEmpty()) throw new BruhException(","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"                \"Empty command. Try: list, todo \u003cdesc\u003e, deadline \u003cdesc\u003e /by \u003cwhen\u003e, event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"        String cmd, args \u003d \"\";","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"        int sp \u003d trimmed.indexOf(\u0027 \u0027);","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"        if (sp \u003d\u003d -1) {","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"            cmd \u003d trimmed.toLowerCase();","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"        } else {","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"            cmd \u003d trimmed.substring(0, sp).toLowerCase();","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":"            args \u003d trimmed.substring(sp + 1).trim();","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylantjy"},"content":"        switch (cmd) {","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylantjy"},"content":"            case \"bye\":    return new Parsed(CommandType.BYE, \"\");","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylantjy"},"content":"            case \"list\":   return new Parsed(CommandType.LIST, \"\");","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylantjy"},"content":"            case \"mark\":   return new Parsed(CommandType.MARK, args);","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylantjy"},"content":"            case \"unmark\": return new Parsed(CommandType.UNMARK, args);","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylantjy"},"content":"            case \"delete\": return new Parsed(CommandType.DELETE, args);","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylantjy"},"content":"            case \"todo\":   return new Parsed(CommandType.TODO, args);","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylantjy"},"content":"            case \"deadline\": return new Parsed(CommandType.DEADLINE, args);","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylantjy"},"content":"            case \"event\":    return new Parsed(CommandType.EVENT, args);","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylantjy"},"content":"            case \"find\": return new Parsed(CommandType.FIND, afterCommand(input, \"find\"));","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylantjy"},"content":"            default: throw new BruhException(","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylantjy"},"content":"                    \"Unknown command. Try: list, todo, deadline, event, mark N, unmark N, delete N, or bye\");","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylantjy"},"content":"    public static int parseIndex(String args, String verb) throws BruhException {","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dylantjy"},"content":"        if (args.isEmpty()) throw new BruhException(\"Please provide a task number. Example: \" + verb + \" 2\");","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylantjy"},"content":"        try { return Integer.parseInt(args); }","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dylantjy"},"content":"        catch (NumberFormatException e) { throw new BruhException(\"That doesn\u0027t look like a number. Try: \" + verb + \" 2\"); }","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dylantjy"},"content":"    public static String[] parseDeadlineArgs(String args) throws BruhException {","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dylantjy"},"content":"        if (args.isEmpty()) throw new BruhException(\"Deadline needs a description and \u0027/by\u0027. Example: deadline submit report /by Sunday\");","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dylantjy"},"content":"        String[] p \u003d args.split(\" /by \", 2);","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dylantjy"},"content":"        if (p.length !\u003d 2 || p[0].trim().isEmpty() || p[1].trim().isEmpty())","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dylantjy"},"content":"            throw new BruhException(\"Please include \u0027/by \u003cwhen\u003e\u0027. Example: deadline submit report /by 2019-10-15\");","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dylantjy"},"content":"        return new String[]{ p[0].trim(), p[1].trim() };","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dylantjy"},"content":"    public static String[] parseEventArgs(String args) throws BruhException {","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dylantjy"},"content":"        if (args.isEmpty()) throw new BruhException(\"Event needs a description and times. Example: event meeting /from 2019-10-15 /to 2019-10-16\");","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dylantjy"},"content":"        String[] f \u003d args.split(\" /from \", 2);","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dylantjy"},"content":"        if (f.length !\u003d 2 || f[0].trim().isEmpty()) throw new BruhException(\"Missing \u0027/from\u0027.\");","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dylantjy"},"content":"        String[] t \u003d f[1].split(\" /to \", 2);","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dylantjy"},"content":"        if (t.length !\u003d 2 || t[0].trim().isEmpty() || t[1].trim().isEmpty()) throw new BruhException(\"Missing \u0027/to\u0027.\");","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dylantjy"},"content":"        return new String[]{ f[0].trim(), t[0].trim(), t[1].trim() };","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dylantjy"},"content":"    public enum CommandType { BYE, LIST, MARK, UNMARK, DELETE, TODO, DEADLINE, EVENT, FIND }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dylantjy"},"content":"    private static String afterCommand(String input, String cmd) {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dylantjy"},"content":"        if (input.equalsIgnoreCase(cmd)) return \"\";","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dylantjy"},"content":"        return input.substring(cmd.length()).trim();","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dylantjy"},"content":"    public static class Parsed {","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dylantjy"},"content":"        public final CommandType type;","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dylantjy"},"content":"        public final String args;","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dylantjy"},"content":"        public Parsed(CommandType type, String args) { this.type \u003d type; this.args \u003d args; }","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-08-28T16:03:59","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false}],"authorContributionMap":{"dylantjy":71}},{"path":"src/main/java/bruh/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"package bruh;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"import java.util.List;","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"public class Storage {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"    private final Path file;","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"    private final Path dir;","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"    public Storage(String relativePath) {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":"        this.file \u003d Paths.get(relativePath).normalize();","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylantjy"},"content":"        this.dir \u003d file.getParent() \u003d\u003d null ? Paths.get(\".\") : file.getParent().normalize();","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylantjy"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylantjy"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylantjy"},"content":"        try {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylantjy"},"content":"            if (!Files.exists(dir)) {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylantjy"},"content":"                // nothing to load yet","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylantjy"},"content":"                return tasks;","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylantjy"},"content":"            }","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylantjy"},"content":"            if (!Files.exists(file)) {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylantjy"},"content":"                return tasks;","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylantjy"},"content":"            }","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylantjy"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(file, StandardCharsets.UTF_8);","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylantjy"},"content":"            for (String line : lines) {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylantjy"},"content":"                Task t \u003d parseLine(line);","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylantjy"},"content":"                if (t !\u003d null) {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylantjy"},"content":"                    tasks.add(t);","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dylantjy"},"content":"                }","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylantjy"},"content":"            }","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dylantjy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dylantjy"},"content":"            // Silent fallback: start empty. (Could log to stderr if you like.)","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dylantjy"},"content":"        return tasks;","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dylantjy"},"content":"    public void save(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dylantjy"},"content":"        if (!Files.exists(dir)) {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dylantjy"},"content":"            Files.createDirectories(dir);","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dylantjy"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dylantjy"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dylantjy"},"content":"            lines.add(serialize(t));","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dylantjy"},"content":"        Files.write(file, lines, StandardCharsets.UTF_8);","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dylantjy"},"content":"    // --- helpers ---","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dylantjy"},"content":"    private static Task parseLine(String line) {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dylantjy"},"content":"        // Split on \" | \" with flexible spacing around |","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dylantjy"},"content":"        String[] parts \u003d line.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dylantjy"},"content":"        if (parts.length \u003c 3) return null;","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dylantjy"},"content":"        String type \u003d parts[0].trim();","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dylantjy"},"content":"        String doneFlag \u003d parts[1].trim();","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dylantjy"},"content":"        String desc \u003d parts[2].trim();","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dylantjy"},"content":"        boolean isDone \u003d \"1\".equals(doneFlag);","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dylantjy"},"content":"        try {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dylantjy"},"content":"            switch (type) {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dylantjy"},"content":"                case \"T\": {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dylantjy"},"content":"                    Task t \u003d new Todo(desc);","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dylantjy"},"content":"                    if (isDone) t.markAsDone();","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dylantjy"},"content":"                    return t;","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dylantjy"},"content":"                }","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dylantjy"},"content":"                case \"D\": {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dylantjy"},"content":"                    if (parts.length \u003c 4) return null;","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dylantjy"},"content":"                    String by \u003d parts[3].trim();","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dylantjy"},"content":"                    Task t \u003d new Deadline(desc, by);","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dylantjy"},"content":"                    if (isDone) t.markAsDone();","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dylantjy"},"content":"                    return t;","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dylantjy"},"content":"                }","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dylantjy"},"content":"                case \"E\": {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dylantjy"},"content":"                    if (parts.length \u003c 5) return null;","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dylantjy"},"content":"                    String from \u003d parts[3].trim();","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dylantjy"},"content":"                    String to \u003d parts[4].trim();","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dylantjy"},"content":"                    Task t \u003d new Event(desc, from, to);","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dylantjy"},"content":"                    if (isDone) t.markAsDone();","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dylantjy"},"content":"                    return t;","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dylantjy"},"content":"                }","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dylantjy"},"content":"                default:","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dylantjy"},"content":"                    return null;","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dylantjy"},"content":"            }","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dylantjy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dylantjy"},"content":"            // Corrupted line → skip","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dylantjy"},"content":"            return null;","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dylantjy"},"content":"    private static String serialize(Task t) {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dylantjy"},"content":"        if (t instanceof Todo) {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dylantjy"},"content":"            return \"T | \" + (t.isDone() ? \"1\" : \"0\") + \" | \" + t.getDescription();","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dylantjy"},"content":"        } else if (t instanceof Deadline) {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dylantjy"},"content":"            Deadline d \u003d (Deadline) t;","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dylantjy"},"content":"            String by \u003d (d.getByDate() !\u003d null) ? DateUtil.toIso(d.getByDate()) : d.getBy();","lastModifiedDate":"2025-08-28T15:05:46","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dylantjy"},"content":"            return \"D | \" + (t.isDone() ? \"1\" : \"0\") + \" | \" + d.getDescription() + \" | \" + by;","lastModifiedDate":"2025-08-28T15:05:46","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dylantjy"},"content":"        } else if (t instanceof Event) {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dylantjy"},"content":"            Event e \u003d (Event) t;","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dylantjy"},"content":"            String from \u003d (e.getFromDate() !\u003d null) ? DateUtil.toIso(e.getFromDate()) : e.getFrom();","lastModifiedDate":"2025-08-28T15:05:46","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dylantjy"},"content":"            String to   \u003d (e.getToDate()   !\u003d null) ? DateUtil.toIso(e.getToDate())   : e.getTo();","lastModifiedDate":"2025-08-28T15:05:46","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dylantjy"},"content":"            return \"E | \" + (t.isDone() ? \"1\" : \"0\") + \" | \" + e.getDescription() + \" | \" + from + \" | \" + to;","lastModifiedDate":"2025-08-28T15:05:46","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dylantjy"},"content":"        } else {","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dylantjy"},"content":"            return \"T | \" + (t.isDone() ? \"1\" : \"0\") + \" | \" + t.getDescription();","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-08-28T14:08:10","isFullCredit":false}],"authorContributionMap":{"dylantjy":113}},{"path":"src/main/java/bruh/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"package bruh;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"public class Task {","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"    protected String description;","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"    public String getDescription() { return description; }","lastModifiedDate":"2025-08-28T14:08:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"    public boolean isDone() { return isDone; }","lastModifiedDate":"2025-08-28T14:08:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"    public String getStatusIcon() { return (isDone ? \"X\" : \" \"); }","lastModifiedDate":"2025-08-28T14:08:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylantjy"},"content":"    public void markAsDone() { this.isDone \u003d true; }","lastModifiedDate":"2025-08-28T14:08:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylantjy"},"content":"    public void markAsNotDone() { this.isDone \u003d false; }","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylantjy"},"content":"    @Override","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylantjy"},"content":"    public String toString() { return \"[\" + getStatusIcon() + \"] \" + description; }","lastModifiedDate":"2025-08-28T14:08:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false}],"authorContributionMap":{"dylantjy":22}},{"path":"src/main/java/bruh/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"package bruh;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T15:38:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"import java.util.List;","lastModifiedDate":"2025-08-28T15:38:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T15:38:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"public class TaskList {","lastModifiedDate":"2025-08-28T15:38:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-28T15:38:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T15:38:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"    public TaskList() { this.tasks \u003d new ArrayList\u003c\u003e(); }","lastModifiedDate":"2025-08-28T15:38:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"    public TaskList(List\u003cTask\u003e initial) { this.tasks \u003d new ArrayList\u003c\u003e(initial); }","lastModifiedDate":"2025-08-28T15:38:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T15:38:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"    public int size() { return tasks.size(); }","lastModifiedDate":"2025-08-28T15:38:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"    public Task get(int idx1Based) { return tasks.get(idx1Based - 1); }","lastModifiedDate":"2025-08-28T15:38:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T15:38:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"    public void add(Task t) { tasks.add(t); }","lastModifiedDate":"2025-08-28T15:38:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":"    public Task delete(int idx1Based) { return tasks.remove(idx1Based - 1); }","lastModifiedDate":"2025-08-28T15:38:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T15:38:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylantjy"},"content":"    public void mark(int idx1Based) { get(idx1Based).markAsDone(); }","lastModifiedDate":"2025-08-28T15:38:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylantjy"},"content":"    public void unmark(int idx1Based) { get(idx1Based).markAsNotDone(); }","lastModifiedDate":"2025-08-28T15:38:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T15:38:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylantjy"},"content":"    public List\u003cTask\u003e asList() { return tasks; }","lastModifiedDate":"2025-08-28T15:38:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylantjy"},"content":"    public List\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylantjy"},"content":"        List\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylantjy"},"content":"        for (Task task : tasks) {          // assuming you have a List\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylantjy"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylantjy"},"content":"                matches.add(task);","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylantjy"},"content":"            }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylantjy"},"content":"        return matches;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-08-28T15:38:42","isFullCredit":false}],"authorContributionMap":{"dylantjy":33}},{"path":"src/main/java/bruh/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"package bruh;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"        super(description);","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"    @Override","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false}],"authorContributionMap":{"dylantjy":12}},{"path":"src/main/java/bruh/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"package bruh;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"import java.util.List;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"public class Ui {","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"        showLine();","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"        System.out.println(\" Hello! I\u0027m Bruh\");","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"        showLine();","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylantjy"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylantjy"},"content":"        return sc.hasNextLine() ? sc.nextLine() : null;","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylantjy"},"content":"    public void showLine() { System.out.println(LINE); }","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylantjy"},"content":"    public void showError(String msg) { showBoxed(\" \" + msg); }","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylantjy"},"content":"    public void showBye() { showBoxed(\" Bye bruh. Hope to see you again soon!\"); }","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylantjy"},"content":"    public void showAdded(Task t, int total) {","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylantjy"},"content":"        showBoxed(\" Got it. I\u0027ve added this task:\\n   \" + t","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylantjy"},"content":"                + \"\\n Now you have \" + total + \" tasks in the list.\");","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylantjy"},"content":"    public void showRemoved(Task t, int remaining) {","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylantjy"},"content":"        showBoxed(\" Noted. I\u0027ve removed this task:\\n   \" + t","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylantjy"},"content":"                + \"\\n Now you have \" + remaining + \" tasks in the list.\");","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylantjy"},"content":"    public void showMarked(Task t) {","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylantjy"},"content":"        showBoxed(\" Nice! I\u0027ve marked this task as done:\\n   \" + t);","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylantjy"},"content":"    public void showUnmarked(Task t) {","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dylantjy"},"content":"        showBoxed(\" OK, I\u0027ve marked this task as not done yet:\\n   \" + t);","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dylantjy"},"content":"    public void showList(TaskList tasks) {","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dylantjy"},"content":"        showLine();","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dylantjy"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dylantjy"},"content":"            System.out.println(\" Your list is empty. Add something with \u0027todo\u0027, \u0027deadline\u0027, or \u0027event\u0027.\");","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dylantjy"},"content":"        } else {","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dylantjy"},"content":"            System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dylantjy"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dylantjy"},"content":"                System.out.println(\" \" + i + \". \" + tasks.get(i));","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dylantjy"},"content":"            }","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dylantjy"},"content":"        showLine();","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dylantjy"},"content":"    public void showLoadingError() { showError(\"Couldn\u0027t load previous tasks; starting with an empty list.\"); }","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dylantjy"},"content":"    private void showBoxed(String msg) { showLine(); System.out.println(msg); showLine(); }","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dylantjy"},"content":"    public void showFound(List\u003cTask\u003e matches) {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dylantjy"},"content":"        if (matches.isEmpty()) {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dylantjy"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dylantjy"},"content":"            System.out.println(\"  No matching tasks found.\");","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dylantjy"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dylantjy"},"content":"            return;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dylantjy"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dylantjy"},"content":"        System.out.println(\"  Here are the matching tasks in your list:\");","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dylantjy"},"content":"        int i \u003d 1;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dylantjy"},"content":"        for (Task t : matches) {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dylantjy"},"content":"            System.out.println(\"  \" + i + \".\" + t);","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dylantjy"},"content":"            i++;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dylantjy"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-08-28T15:52:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false}],"authorContributionMap":{"dylantjy":76}},{"path":"src/main/java/bruh/data/bruh.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"T | 0 | read book by/2025-7-23","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"D | 0 | return book | 2/12/2019 1800","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"T | 0 | read book by/ 2/12/2019 1800","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"D | 0 | read book | 2019-10-15 1800","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false}],"authorContributionMap":{"dylantjy":4}},{"path":"src/main/java/bruh/wrapper/dists/gradle-9.0.0-bin/d6wjpkvcgsg3oed0qlfss3wgl/gradle-9.0.0/bin/gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"#!/bin/sh","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"# Copyright © 2015 the original authors.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"# Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"# you may not use this file except in compliance with the License.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"# You may obtain a copy of the License at","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"#      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"# Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"# distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"# See the License for the specific language governing permissions and","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":"# limitations under the License.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylantjy"},"content":"# SPDX-License-Identifier: Apache-2.0","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylantjy"},"content":"##############################################################################","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylantjy"},"content":"#   Gradle start up script for POSIX generated by Gradle.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylantjy"},"content":"#   Important for running:","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylantjy"},"content":"#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylantjy"},"content":"#       noncompliant, but you have some other compliant shell such as ksh or","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylantjy"},"content":"#       bash, then to run this script, type that shell name before the whole","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylantjy"},"content":"#       command line, like:","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylantjy"},"content":"#           ksh Gradle","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylantjy"},"content":"#       Busybox and similar reduced shells will NOT work, because this script","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dylantjy"},"content":"#       requires all of these POSIX shell features:","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylantjy"},"content":"#         * functions;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dylantjy"},"content":"#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dylantjy"},"content":"#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dylantjy"},"content":"#         * compound commands having a testable exit status, especially «case»;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dylantjy"},"content":"#         * various built-in commands including «command», «set», and «ulimit».","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dylantjy"},"content":"#   Important for patching:","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dylantjy"},"content":"#   (2) This script targets any POSIX shell, so it avoids extensions provided","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dylantjy"},"content":"#       by Bash, Ksh, etc; in particular arrays are avoided.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dylantjy"},"content":"#       The \"traditional\" practice of packing multiple parameters into a","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dylantjy"},"content":"#       space-separated string is a well documented source of bugs and security","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dylantjy"},"content":"#       problems, so this is (mostly) avoided, by progressively accumulating","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dylantjy"},"content":"#       options in \"$@\", and eventually passing that to Java.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dylantjy"},"content":"#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dylantjy"},"content":"#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dylantjy"},"content":"#       see the in-line comments for details.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dylantjy"},"content":"#       There are tweaks for specific operating systems such as AIX, CygWin,","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dylantjy"},"content":"#       Darwin, MinGW, and NonStop.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dylantjy"},"content":"#   (3) This script is generated from the Groovy template","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dylantjy"},"content":"#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dylantjy"},"content":"#       within the Gradle project.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dylantjy"},"content":"#       You can find Gradle at https://github.com/gradle/gradle/.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dylantjy"},"content":"##############################################################################","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dylantjy"},"content":"# Attempt to set APP_HOME","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dylantjy"},"content":"# Resolve links: $0 may be a link","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dylantjy"},"content":"app_path\u003d$0","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dylantjy"},"content":"# Need this for daisy-chained symlinks.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dylantjy"},"content":"while","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dylantjy"},"content":"    APP_HOME\u003d${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dylantjy"},"content":"    [ -h \"$app_path\" ]","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dylantjy"},"content":"do","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dylantjy"},"content":"    ls\u003d$( ls -ld \"$app_path\" )","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dylantjy"},"content":"    link\u003d${ls#*\u0027 -\u003e \u0027}","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dylantjy"},"content":"    case $link in             #(","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dylantjy"},"content":"      /*)   app_path\u003d$link ;; #(","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dylantjy"},"content":"      *)    app_path\u003d$APP_HOME$link ;;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dylantjy"},"content":"    esac","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dylantjy"},"content":"done","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dylantjy"},"content":"# This is normally unused","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dylantjy"},"content":"# shellcheck disable\u003dSC2034","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dylantjy"},"content":"APP_BASE_NAME\u003d${0##*/}","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dylantjy"},"content":"# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dylantjy"},"content":"APP_HOME\u003d$( cd -P \"${APP_HOME:-./}..\" \u003e /dev/null \u0026\u0026 printf \u0027%s\\n\u0027 \"$PWD\" ) || exit","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dylantjy"},"content":"# Use the maximum available, or set MAX_FD !\u003d -1 to use that value.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dylantjy"},"content":"MAX_FD\u003dmaximum","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dylantjy"},"content":"warn () {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dylantjy"},"content":"    echo \"$*\"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dylantjy"},"content":"} \u003e\u00262","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dylantjy"},"content":"die () {","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dylantjy"},"content":"    echo","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dylantjy"},"content":"    echo \"$*\"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dylantjy"},"content":"    echo","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dylantjy"},"content":"    exit 1","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dylantjy"},"content":"} \u003e\u00262","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dylantjy"},"content":"# OS specific support (must be \u0027true\u0027 or \u0027false\u0027).","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dylantjy"},"content":"cygwin\u003dfalse","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dylantjy"},"content":"msys\u003dfalse","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dylantjy"},"content":"darwin\u003dfalse","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dylantjy"},"content":"nonstop\u003dfalse","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dylantjy"},"content":"case \"$( uname )\" in                #(","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dylantjy"},"content":"  CYGWIN* )         cygwin\u003dtrue  ;; #(","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dylantjy"},"content":"  Darwin* )         darwin\u003dtrue  ;; #(","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dylantjy"},"content":"  MSYS* | MINGW* )  msys\u003dtrue    ;; #(","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dylantjy"},"content":"  NONSTOP* )        nonstop\u003dtrue ;;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dylantjy"},"content":"esac","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dylantjy"},"content":"CLASSPATH\u003d\"\\\\\\\"\\\\\\\"\"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dylantjy"},"content":"# Determine the Java command to use to start the JVM.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dylantjy"},"content":"if [ -n \"$JAVA_HOME\" ] ; then","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dylantjy"},"content":"    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dylantjy"},"content":"        # IBM\u0027s JDK on AIX uses strange locations for the executables","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dylantjy"},"content":"        JAVACMD\u003d$JAVA_HOME/jre/sh/java","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dylantjy"},"content":"    else","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dylantjy"},"content":"        JAVACMD\u003d$JAVA_HOME/bin/java","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"dylantjy"},"content":"    fi","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"dylantjy"},"content":"    if [ ! -x \"$JAVACMD\" ] ; then","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"dylantjy"},"content":"        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"dylantjy"},"content":"Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"dylantjy"},"content":"location of your Java installation.\"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"dylantjy"},"content":"    fi","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"dylantjy"},"content":"else","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"dylantjy"},"content":"    JAVACMD\u003djava","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"dylantjy"},"content":"    if ! command -v java \u003e/dev/null 2\u003e\u00261","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"dylantjy"},"content":"    then","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"dylantjy"},"content":"        die \"ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"dylantjy"},"content":"Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"dylantjy"},"content":"location of your Java installation.\"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"dylantjy"},"content":"    fi","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"dylantjy"},"content":"fi","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"dylantjy"},"content":"# Increase the maximum file descriptors if we can.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"dylantjy"},"content":"if ! \"$cygwin\" \u0026\u0026 ! \"$darwin\" \u0026\u0026 ! \"$nonstop\" ; then","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"dylantjy"},"content":"    case $MAX_FD in #(","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"dylantjy"},"content":"      max*)","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"dylantjy"},"content":"        # In POSIX sh, ulimit -H is undefined. That\u0027s why the result is checked to see if it worked.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"dylantjy"},"content":"        # shellcheck disable\u003dSC2039,SC3045","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"dylantjy"},"content":"        MAX_FD\u003d$( ulimit -H -n ) ||","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"dylantjy"},"content":"            warn \"Could not query maximum file descriptor limit\"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"dylantjy"},"content":"    esac","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"dylantjy"},"content":"    case $MAX_FD in  #(","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"dylantjy"},"content":"      \u0027\u0027 | soft) :;; #(","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"dylantjy"},"content":"      *)","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"dylantjy"},"content":"        # In POSIX sh, ulimit -n is undefined. That\u0027s why the result is checked to see if it worked.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"dylantjy"},"content":"        # shellcheck disable\u003dSC2039,SC3045","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"dylantjy"},"content":"        ulimit -n \"$MAX_FD\" ||","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"dylantjy"},"content":"            warn \"Could not set maximum file descriptor limit to $MAX_FD\"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"dylantjy"},"content":"    esac","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"dylantjy"},"content":"fi","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"dylantjy"},"content":"# Collect all arguments for the java command, stacking in reverse order:","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"dylantjy"},"content":"#   * args from the command line","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"dylantjy"},"content":"#   * the main class name","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"dylantjy"},"content":"#   * -classpath","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"dylantjy"},"content":"#   * -D...appname settings","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"dylantjy"},"content":"#   * --module-path (only if needed)","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"dylantjy"},"content":"#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"dylantjy"},"content":"# For Cygwin or MSYS, switch paths to Windows format before running java","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"dylantjy"},"content":"if \"$cygwin\" || \"$msys\" ; then","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"dylantjy"},"content":"    APP_HOME\u003d$( cygpath --path --mixed \"$APP_HOME\" )","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"dylantjy"},"content":"    CLASSPATH\u003d$( cygpath --path --mixed \"$CLASSPATH\" )","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"dylantjy"},"content":"    JAVACMD\u003d$( cygpath --unix \"$JAVACMD\" )","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"dylantjy"},"content":"    # Now convert the arguments - kludge to limit ourselves to /bin/sh","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"dylantjy"},"content":"    for arg do","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"dylantjy"},"content":"        if","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"dylantjy"},"content":"            case $arg in                                #(","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"dylantjy"},"content":"              -*)   false ;;                            # don\u0027t mess with options #(","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"dylantjy"},"content":"              /?*)  t\u003d${arg#/} t\u003d/${t%%/*}              # looks like a POSIX filepath","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"dylantjy"},"content":"                    [ -e \"$t\" ] ;;                      #(","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"dylantjy"},"content":"              *)    false ;;","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"dylantjy"},"content":"            esac","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"dylantjy"},"content":"        then","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"dylantjy"},"content":"            arg\u003d$( cygpath --path --ignore --mixed \"$arg\" )","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"dylantjy"},"content":"        fi","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"dylantjy"},"content":"        # Roll the args list around exactly as many times as the number of","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"dylantjy"},"content":"        # args, so each arg winds up back in the position where it started, but","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"dylantjy"},"content":"        # possibly modified.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"dylantjy"},"content":"        #","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"dylantjy"},"content":"        # NB: a `for` loop captures its iteration list before it begins, so","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"dylantjy"},"content":"        # changing the positional parameters here affects neither the number of","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"dylantjy"},"content":"        # iterations, nor the values presented in `arg`.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"dylantjy"},"content":"        shift                   # remove old arg","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"dylantjy"},"content":"        set -- \"$@\" \"$arg\"      # push replacement arg","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"dylantjy"},"content":"    done","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"dylantjy"},"content":"fi","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"dylantjy"},"content":"# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"dylantjy"},"content":"DEFAULT_JVM_OPTS\u003d\u0027\"-Xmx64m\" \"-Xms64m\"\u0027\" \\\"-javaagent:$APP_HOME/lib/agents/gradle-instrumentation-agent-9.0.0.jar\\\"\"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"dylantjy"},"content":"# Collect all arguments for the java command:","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"dylantjy"},"content":"#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"dylantjy"},"content":"#     and any embedded shellness will be escaped.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"dylantjy"},"content":"#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"dylantjy"},"content":"#     treated as \u0027${Hostname}\u0027 itself on the command line.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"dylantjy"},"content":"set -- \\","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"dylantjy"},"content":"        \"-Dorg.gradle.appname\u003d$APP_BASE_NAME\" \\","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"dylantjy"},"content":"        -classpath \"$CLASSPATH\" \\","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"dylantjy"},"content":"        -jar \"$APP_HOME/lib/gradle-gradle-cli-main-9.0.0.jar\" \\","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"dylantjy"},"content":"        \"$@\"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"dylantjy"},"content":"# Stop when \"xargs\" is not available.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"dylantjy"},"content":"if ! command -v xargs \u003e/dev/null 2\u003e\u00261","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"dylantjy"},"content":"then","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"dylantjy"},"content":"    die \"xargs is not available\"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"dylantjy"},"content":"fi","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"dylantjy"},"content":"# Use \"xargs\" to parse quoted args.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"dylantjy"},"content":"# With -n1 it outputs one arg per line, with the quotes and backslashes removed.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"dylantjy"},"content":"# In Bash we could simply go:","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"dylantjy"},"content":"#   readarray ARGS \u003c \u003c( xargs -n1 \u003c\u003c\u003c\"$var\" ) \u0026\u0026","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"dylantjy"},"content":"#   set -- \"${ARGS[@]}\" \"$@\"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"dylantjy"},"content":"# but POSIX shell has neither arrays nor command substitution, so instead we","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"dylantjy"},"content":"# post-process each arg (as a line of input to sed) to backslash-escape any","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"dylantjy"},"content":"# character that might be a shell metacharacter, then use eval to reverse","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"dylantjy"},"content":"# that process (while maintaining the separation between arguments), and wrap","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"dylantjy"},"content":"# the whole thing up as a single \"set\" statement.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"dylantjy"},"content":"# This will of course break if any of these variables contains a newline or","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"dylantjy"},"content":"# an unmatched quote.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"dylantjy"},"content":"#","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"dylantjy"},"content":"eval \"set -- $(","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"dylantjy"},"content":"        printf \u0027%s\\n\u0027 \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"dylantjy"},"content":"        xargs -n1 |","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"dylantjy"},"content":"        sed \u0027 s~[^-[:alnum:]+,./:\u003d@_]~\\\\\u0026~g; \u0027 |","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"dylantjy"},"content":"        tr \u0027\\n\u0027 \u0027 \u0027","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"dylantjy"},"content":"    )\" \u0027\"$@\"\u0027","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"dylantjy"},"content":"exec \"$JAVACMD\" \"$@\"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false}],"authorContributionMap":{"dylantjy":251}},{"path":"src/main/java/bruh/wrapper/dists/gradle-9.0.0-bin/d6wjpkvcgsg3oed0qlfss3wgl/gradle-9.0.0/bin/gradle.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"@rem","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"@rem","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"@rem","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"@rem","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"@rem limitations under the License.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"@rem","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":"@rem SPDX-License-Identifier: Apache-2.0","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylantjy"},"content":"@rem","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylantjy"},"content":"@if \"%DEBUG%\"\u003d\u003d\"\" @echo off","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylantjy"},"content":"@rem ##########################################################################","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylantjy"},"content":"@rem","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylantjy"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylantjy"},"content":"@rem","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylantjy"},"content":"@rem ##########################################################################","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylantjy"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylantjy"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylantjy"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylantjy"},"content":"if \"%DIRNAME%\"\u003d\u003d\"\" set DIRNAME\u003d.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylantjy"},"content":"@rem This is normally unused","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylantjy"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylantjy"},"content":"set APP_HOME\u003d%DIRNAME%..","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dylantjy"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylantjy"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dylantjy"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dylantjy"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\" \"-javaagent:%APP_HOME%/lib/agents/gradle-instrumentation-agent-9.0.0.jar\"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dylantjy"},"content":"@rem Find java.exe","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dylantjy"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dylantjy"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dylantjy"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dylantjy"},"content":"if %ERRORLEVEL% equ 0 goto execute","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dylantjy"},"content":"echo. 1\u003e\u00262","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dylantjy"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH. 1\u003e\u00262","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dylantjy"},"content":"echo. 1\u003e\u00262","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dylantjy"},"content":"echo Please set the JAVA_HOME variable in your environment to match the 1\u003e\u00262","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dylantjy"},"content":"echo location of your Java installation. 1\u003e\u00262","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dylantjy"},"content":"goto fail","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dylantjy"},"content":":findJavaFromJavaHome","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dylantjy"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dylantjy"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dylantjy"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dylantjy"},"content":"echo. 1\u003e\u00262","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dylantjy"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1\u003e\u00262","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dylantjy"},"content":"echo. 1\u003e\u00262","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dylantjy"},"content":"echo Please set the JAVA_HOME variable in your environment to match the 1\u003e\u00262","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dylantjy"},"content":"echo location of your Java installation. 1\u003e\u00262","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dylantjy"},"content":"goto fail","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dylantjy"},"content":":execute","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dylantjy"},"content":"@rem Setup the command line","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dylantjy"},"content":"set CLASSPATH\u003d","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dylantjy"},"content":"@rem Execute Gradle","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dylantjy"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" -jar \"%APP_HOME%\\lib\\gradle-gradle-cli-main-9.0.0.jar\" %*","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dylantjy"},"content":":end","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dylantjy"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dylantjy"},"content":"if %ERRORLEVEL% equ 0 goto mainEnd","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dylantjy"},"content":":fail","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dylantjy"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dylantjy"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dylantjy"},"content":"set EXIT_CODE\u003d%ERRORLEVEL%","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dylantjy"},"content":"if %EXIT_CODE% equ 0 set EXIT_CODE\u003d1","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dylantjy"},"content":"if not \"\"\u003d\u003d\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dylantjy"},"content":"exit /b %EXIT_CODE%","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dylantjy"},"content":":mainEnd","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dylantjy"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dylantjy"},"content":":omega","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false}],"authorContributionMap":{"dylantjy":94}},{"path":"src/main/java/bruh/wrapper/dists/gradle-9.0.0-bin/d6wjpkvcgsg3oed0qlfss3wgl/gradle-9.0.0/init.d/readme.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"You can add .gradle (e.g. test.gradle) init scripts to this directory. Each one is executed at the start of the build.","lastModifiedDate":"2025-08-29T03:34:15","isFullCredit":false}],"authorContributionMap":{"dylantjy":1}},{"path":"text-ui-test/actual-errors.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":" Hello! I\u0027m Bruh","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":" What can I do for you?","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":" Todo needs a description. Try: todo borrow book","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":" Hmm, I don\u0027t recognize that. Try: list, todo, deadline, event, mark N, unmark N, or bye","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":" Bye bruh. Hope to see you again soon!","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false}],"authorContributionMap":{"dylantjy":13}},{"path":"text-ui-test/actual.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":" Hello! I\u0027m Bruh","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":" What can I do for you?","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"   [T][ ] read book","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":" Now you have 1 tasks in the list.","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"   [D][ ] return book (by: Sunday)","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":" Now you have 2 tasks in the list.","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylantjy"},"content":"   [E][ ] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylantjy"},"content":" Now you have 3 tasks in the list.","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylantjy"},"content":" Here are the tasks in your list:","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylantjy"},"content":" 1. [T][ ] read book","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylantjy"},"content":" 2. [D][ ] return book (by: Sunday)","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylantjy"},"content":" 3. [E][ ] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylantjy"},"content":" Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylantjy"},"content":"   [D][X] return book (by: Sunday)","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylantjy"},"content":" OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylantjy"},"content":"   [D][ ] return book (by: Sunday)","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dylantjy"},"content":" Bye bruh. Hope to see you again soon!","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false}],"authorContributionMap":{"dylantjy":36}},{"path":"text-ui-test/expected-errors.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":" Hello! I\u0027m Bruh","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":" What can I do for you?","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":" Todo needs a description. Try: todo borrow book","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":" Hmm, I don\u0027t recognize that. Try: list, todo, deadline, event, mark N, unmark N, or bye","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":" Bye. Hope to see you again soon!","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false}],"authorContributionMap":{"dylantjy":13}},{"path":"text-ui-test/expected.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":" Hello! I\u0027m Bruh","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":" What can I do for you?","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"   [T][ ] read book","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":" Now you have 1 tasks in the list.","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"   [D][ ] return book (by: Sunday)","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":" Now you have 2 tasks in the list.","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylantjy"},"content":"   [E][ ] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylantjy"},"content":" Now you have 3 tasks in the list.","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylantjy"},"content":" Here are the tasks in your list:","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylantjy"},"content":" 1. [T][ ] read book","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylantjy"},"content":" 2. [D][ ] return book (by: Sunday)","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylantjy"},"content":" 3. [E][ ] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylantjy"},"content":" Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylantjy"},"content":"   [D][X] return book (by: Sunday)","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylantjy"},"content":" OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylantjy"},"content":"   [D][ ] return book (by: Sunday)","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dylantjy"},"content":" Bye bruh. Hope to see you again soon!","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylantjy"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false}],"authorContributionMap":{"dylantjy":36}},{"path":"text-ui-test/input-errors.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"todo","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"blah","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"bye","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false}],"authorContributionMap":{"dylantjy":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"todo read book","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"list","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"mark 2","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"unmark 2","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"bye","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false}],"authorContributionMap":{"dylantjy":7}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"set -e","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"# Compile to ./out","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"mkdir -p out","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"javac -d out src/main/java/*.java","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"# Run Bruh with redirected input -\u003e actual.txt","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"java -cp out Bruh \u003c text-ui-test/input.txt \u003e text-ui-test/actual.txt","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"# Compare expected vs actual","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"if diff -u text-ui-test/expected.txt text-ui-test/actual.txt; then","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"  echo \"✅ Test passed\"","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"else","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"  echo \"❌ Test failed\"","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":"  exit 1","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylantjy"},"content":"fi","lastModifiedDate":"2025-08-22T12:20:07","isFullCredit":false}],"authorContributionMap":{"dylantjy":17}}]
