{"authorDailyContributionsMap":{"dylantjy":[{"date":"2025-08-22T00:00:00","commitResults":[{"hash":"5b3e8a77207a74cedb268c774347ae4a0f945ded","isMergeCommit":false,"messageTitle":"Echo loop: Bruh repeats commands and exits on \u0027bye\u0027","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":0}}},{"hash":"f2113a9265a075ac04cb86570e0d284ed88cf9c3","isMergeCommit":false,"messageTitle":"Add in-memory task list: add items, list them, exit on \u0027bye\u0027","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":14}}},{"hash":"5becb2d6186850811119d75667f9f900e0c0b751","isMergeCommit":false,"messageTitle":"Add Task class and add support for mark/unmark commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":13}}},{"hash":"d747af5afc140c1f932584fd99df39d3181c3fdf","isMergeCommit":false,"messageTitle":"Add Todo, Deadline, Event task types with inheritance; support /by, /from, /to parsing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":104,"deletions":26}}},{"hash":"515e77e4b3d96ba1d696e0616d4e67323f0b350e","isMergeCommit":false,"messageTitle":"Added BruhException file to deal with handling errors","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":171}}},{"hash":"67e6ac454111d8f2ffaf0d0c4fcc5774ba7c583f","isMergeCommit":false,"messageTitle":"Added the option for users to delete tasks when they deem fit","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":108,"deletions":0},"java":{"insertions":197,"deletions":0},"sh":{"insertions":17,"deletions":0}}}]},{"date":"2025-08-28T00:00:00","commitResults":[{"hash":"8e6f8dfd290d40b573136892bc1b0bc5f9804b34","isMergeCommit":false,"messageTitle":"Level-7: Add Storage (load/save) with data/bruh.txt format","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":109,"deletions":0}}},{"hash":"006f0058021e0851f7983dc7f6a4e3fc09514c12","isMergeCommit":false,"messageTitle":"Level-7: Expose getters for serialization (desc/done/by/from/to)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":8}}},{"hash":"172bc4e02b464805ba58752be7921b2d6a8fed63","isMergeCommit":false,"messageTitle":"Level-7: Wire storage into Bruh (load on start, save on changes)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":16}}},{"hash":"676754584b410695732196ce70d9025362ea3359","isMergeCommit":true,"messageTitle":"Merge Level-7: Save/Load tasks","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"0121a206e26b95cb7fe8834007d0d328b4db8bd3","isMergeCommit":false,"messageTitle":"Level-8: Add DateUtil (ISO parse, pretty print)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":0}}},{"hash":"5dc22454e714ad1e933638726bdcc4aa92a3ee62","isMergeCommit":false,"messageTitle":"Level-8: Store dates in Deadline/Event; pretty output if ISO","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":14}}},{"hash":"1dd51ee4e5b344fe9274ed729605bd901b188eec","isMergeCommit":false,"messageTitle":"Level-8: Save/load dates as ISO in storage","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":3}}},{"hash":"c63fe560c09c528360e2237b91505354aaaf1c59","isMergeCommit":true,"messageTitle":"Merge Level-8: Dates and Times","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"365c1bab9276b97bdce26f8d915d70b5ac62587c","isMergeCommit":false,"messageTitle":"A-MoreOOP: Extract TaskList to encapsulate task collection","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":16}}},{"hash":"8584800e32a87aea5c1830467f629c0d5bfe9679","isMergeCommit":false,"messageTitle":"A-MoreOOP: Extract Ui for all input and output","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":102,"deletions":64}}},{"hash":"38b90f52473837fd555116ed1bfecfa46010ba04","isMergeCommit":false,"messageTitle":"A-MoreOOP: Extract Parser; route main loop via Parser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":137,"deletions":1}}},{"hash":"5d6b8daadaa5f247f718efefdd320c08760cc477","isMergeCommit":true,"messageTitle":"Merge A-MoreOOP: Extract Ui, Parser, TaskList","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}}]},{"date":"2025-08-29T00:00:00","commitResults":[{"hash":"5496b9127ea4c87a1b5ef907c63b2d20b2555311","isMergeCommit":false,"messageTitle":"Add Level-9 find command and enable interactive run with Gradle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":25,"deletions":0},"txt":{"insertions":8,"deletions":0},"java":{"insertions":188,"deletions":214},"bat":{"insertions":94,"deletions":0}}},{"hash":"84b8980b44ff777ed952687c6c2d3aeed560c0ea","isMergeCommit":false,"messageTitle":"Implement Level-9 find command","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"txt":{"insertions":3,"deletions":0},"bat":{"insertions":282,"deletions":0}}},{"hash":"9b8a18010efbe720b140c2b233219a47f144fc7e","isMergeCommit":false,"messageTitle":"A-JavaDoc: add header comments across bruh package","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":478,"deletions":18}}}]},{"date":"2025-08-31T00:00:00","commitResults":[{"hash":"04650f4e167839861e79e39dfabd2e15c0668049","isMergeCommit":false,"messageTitle":"Add iP implementation on top of upstream/master","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":34,"deletions":0},"txt":{"insertions":5,"deletions":0},"java":{"insertions":545,"deletions":0},"bat":{"insertions":94,"deletions":0}}},{"hash":"4a4e63a2634a746f594efd45e598ae8c5ec65cbd","isMergeCommit":true,"messageTitle":"Merge iP work","messageBody":"","tags":["A-JUnit","A-CodingStandard"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-01T00:00:00","commitResults":[{"hash":"71be1f396a9954d98ada057d5f34f0648bbfd176","isMergeCommit":true,"messageTitle":"Merge branch-Level-7","messageBody":"# Conflicts:\n#\ttext-ui-test/runtest.sh\n","fileTypesAndContributionMap":{}},{"hash":"3a904acf389c186a20ea53795e27e6b0dcc8deca","isMergeCommit":true,"messageTitle":"Merge branch-Level-8","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"617f69146e2aae3991d73d8b2098870d50b1d33f","isMergeCommit":true,"messageTitle":"Merge branch-Level-9","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2025-09-04T00:00:00","commitResults":[{"hash":"b37964d23169c7b2940ef7d07f3c22eba87ec358","isMergeCommit":false,"messageTitle":"A-CheckStyle: add Checkstyle config and fixes","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":40,"deletions":1},"txt":{"insertions":2,"deletions":0},"java":{"insertions":5,"deletions":6}}}]},{"date":"2025-09-05T00:00:00","commitResults":[{"hash":"627906b6fa740dd8e4d4655b14b2cef655abb6ec","isMergeCommit":false,"messageTitle":"Level-10: JavaFX GUI with chat bubbles + avatars; hooked to core","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"gradle":{"insertions":22,"deletions":0},"txt":{"insertions":3,"deletions":2},"java":{"insertions":276,"deletions":0}}},{"hash":"b002c631c756e46f0c4a26495608719821bb6f1a","isMergeCommit":false,"messageTitle":"A-Varargs: add TaskList.findAny(String...) and multi-keyword FIND","messageBody":"","tags":["A-Varargs"],"fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":11}}}]},{"date":"2025-09-11T00:00:00","commitResults":[{"hash":"8c3b8146c2c3aaa4986df7396ae6af697e194dff","isMergeCommit":false,"messageTitle":"Implement Launcher class to start JavaFX application","messageBody":"JavaFX applications may fail to start when the main class\ndirectly extends javafx.application.Application. To avoid this\nissue, a Launcher class is introduced that calls the main()\nmethod of the MainApp class.\n\nThis ensures compatibility across platforms and makes the fat\nJAR executable without additional JVM arguments.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0},"txt":{"insertions":1,"deletions":3}}},{"hash":"700311c5aca7b08909b1907f27d941cd38f29a07","isMergeCommit":false,"messageTitle":"Use Java assertions across core classes","messageBody":"Add assert statements to document assumptions and invariants in\nUi, Storage, TaskList, and DateUtil. These assertions capture\npreconditions (non-null inputs, valid indices, non-empty fields),\npostconditions (successful formatting/parsing), and invariants\n(e.g., UI lists contain non-null tasks). The goal is to surface\nprogrammer errors early during development with -ea enabled,\nwithout changing runtime behavior for end users when assertions\nare disabled.\n\nFiles:\n- Ui.java: guard non-null tasks/lines, non-negative counts.\n- Storage.java: check path setup, file I/O structure, and record\n  serialization/deserialization contracts.\n- TaskList.java: enforce valid indices and non-null tasks.\n- DateUtil.java: validate inputs and formatting output shape.\n\nNote: Assertions are developer checks and not a replacement for\nuser input validation. They can be disabled in production.\n","fileTypesAndContributionMap":{"java":{"insertions":177,"deletions":35}}},{"hash":"808a8ca2275c70cde929ca244dc373d6a0e24e28","isMergeCommit":true,"messageTitle":"Merge pull request #1 from dylantjy/A-Assertions","messageBody":"use Java assertions","tags":["BCD-Extension","A-CodeQuality","A-Assertions"],"fileTypesAndContributionMap":{}},{"hash":"0eb5285a32383de26d53b1d5c22852b307b5a078","isMergeCommit":false,"messageTitle":"A-CodeQuality: encapsulate TaskList and simplify findAny","messageBody":"TaskList currently exposes its internal list via asList() and\nuses nested loops in findAny(...), which mixes abstraction levels\nand reduces readability.\n\nThis change returns an unmodifiable view from asList() to prevent\nexternal mutation and extracts matchesAny(...) to keep a single\nlevel of abstraction in findAny(). It also removes the duplicate\nadd(Task) overload in favor of the existing varargs method to\nsimplify the public API (KISS).\n\nThese refactors follow the course guidelines: reduce deep\nnesting with guard clauses, avoid leaking internals, keep methods\nshort, and maintain a clear, story-like flow.\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":19}}},{"hash":"aaf32387c038ee8992a857ac094253e2877b8008","isMergeCommit":false,"messageTitle":"WIP: before switching to A-CodeQuality","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":38,"deletions":39},"txt":{"insertions":1,"deletions":1},"java":{"insertions":372,"deletions":35}}},{"hash":"7426e55f13b85e3316299fd0a83c0473aeb4d60a","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-CodeQuality\u0027 into master","messageBody":"","tags":["A-AiAssisted"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-17T00:00:00","commitResults":[{"hash":"074ba68bbdcdc958ba31342bf9c0c73b993ee41b","isMergeCommit":false,"messageTitle":"feat(resched): implement deadline reschedule/shift; flexible date parsing; task tweaks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":126,"deletions":51}}},{"hash":"3efeef9bff07d28395319e54d99248d47431091c","isMergeCommit":false,"messageTitle":"feat(resched): replace Deadline on reschedule/shift; fix UI not updating","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":98}}},{"hash":"ce274d0855a5c18b38cb6c87c5b03529824e271a","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"md":{"insertions":125,"deletions":26}}},{"hash":"382a47cc877e9bcfd12eaa9575bddc612bff5083","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":107,"deletions":14}}},{"hash":"e1c0f986c6315ec6be25060a0984ad80819dcec9","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"","tags":["A-Release"],"fileTypesAndContributionMap":{"md":{"insertions":11,"deletions":0}}}]},{"date":"2025-09-18T00:00:00","commitResults":[{"hash":"f64b9698b5617bb239388d7e26393562d8f11528","isMergeCommit":false,"messageTitle":"Create index.md","messageBody":"","tags":["v0.3"],"fileTypesAndContributionMap":{"md":{"insertions":8,"deletions":0}}}]},{"date":"2025-09-24T00:00:00","commitResults":[{"hash":"2e1c81f43524bc2ae8d671eb98603b770ef72f25","isMergeCommit":false,"messageTitle":"Fix: cross-OS JavaFX fatJAR + updated files to pass checkStyle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":64,"deletions":75},"txt":{"insertions":0,"deletions":1},"java":{"insertions":1,"deletions":10}}}]}]},"authorFileTypeContributionMap":{"dylantjy":{"java":1602,"md":241,"fxml":0,"sh":0,"bat":94,"gradle":349,"txt":84}},"authorContributionVariance":{"dylantjy":75988.76},"authorDisplayNameMap":{"dylantjy":"CS2103T-T13-2 DYLA..UNYU"}}
