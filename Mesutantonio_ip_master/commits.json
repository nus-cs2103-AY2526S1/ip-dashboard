{"authorDailyContributionsMap":{"Mesutantonio":[{"date":"2025-08-25T00:00:00","commitResults":[{"hash":"dc91b71c9d9dd9a8537ec0d8eda4834787342708","isMergeCommit":false,"messageTitle":"Complete Level-0: Rename","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":10},"bat":{"insertions":1,"deletions":1},"md":{"insertions":3,"deletions":3}}},{"hash":"1e1edeb02445e91d90c0f7a699db939e5822629b","isMergeCommit":false,"messageTitle":"Complete level-0: Greeting and Exit","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"f91777fc3569005e6faac28a8bdda21739bf870c","isMergeCommit":false,"messageTitle":"Complete Level-1: Echo","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":1}}},{"hash":"4a9be22c54ba29a08b39d9a22f8b6b8cc27d4ce3","isMergeCommit":false,"messageTitle":"Complete level 2: Tasks","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":4}}},{"hash":"10ac6cd84de4ba84abd003f9c89324cab09ae28c","isMergeCommit":false,"messageTitle":"Level 3 complete: Mark as done","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":5}}},{"hash":"171f58eab07b665b4b3490a4938c53d6a4f4abb6","isMergeCommit":false,"messageTitle":"Level 4: added Todo, Event and Deadline subclass","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":1},"sh":{"insertions":4,"deletions":4}}}]},{"date":"2025-08-26T00:00:00","commitResults":[{"hash":"497f4b22544ba1b05a15000e689171b3c1ccf2dc","isMergeCommit":false,"messageTitle":"Level 4 complete: 3 unique task types","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":0}}}]},{"date":"2025-08-30T00:00:00","commitResults":[{"hash":"2a3e22c8c2f275f877f3b88cdfe08e8e90246493","isMergeCommit":false,"messageTitle":"A-TextUiTesting: updated test runner file","messageBody":"","fileTypesAndContributionMap":{"sh":{"insertions":0,"deletions":0}}},{"hash":"21763f767d5a12cc989758b454aeac8e20e6b414","isMergeCommit":false,"messageTitle":"Complete A-TextUiTesting: Automated text UI testing","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":13,"deletions":0},"sh":{"insertions":1,"deletions":2}}},{"hash":"0ffa3a83bb8db47bd30fa80293b2ced05a2d20ac","isMergeCommit":false,"messageTitle":"Level-5: Created exception file","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":3}}},{"hash":"93d8a98924ad7762dc15d5639965be1b7ea8cc2c","isMergeCommit":false,"messageTitle":"Complete Level-5: Handle errors","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":117,"deletions":69}}},{"hash":"5fd257481f8d47bae0ce86ebd987eae974d3dd6b","isMergeCommit":false,"messageTitle":"Complete Level-5: Final fix for error handling","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":15}}},{"hash":"b51702e267658e62c5b9ae752be21f684f3c8a6c","isMergeCommit":false,"messageTitle":"Complete Level 6: Support delete","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":22}}},{"hash":"f667a518dd79911acf5f821d3ae2b7d6e921c445","isMergeCommit":false,"messageTitle":"Enums: Utiise enums for task types","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":8}}},{"hash":"a8f6b34bc5ab4dbec4c4b439cc5a444302c9b3eb","isMergeCommit":false,"messageTitle":"A-Enums: Utiise enums for task types","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}}]},{"date":"2025-08-31T00:00:00","commitResults":[{"hash":"16eab4fddc935a4ab61b83908b1d06a36ce30e67","isMergeCommit":false,"messageTitle":"feat: Created storage class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":0}}},{"hash":"0efddfec09f852fb22aa1de59c77c715608b1b86","isMergeCommit":false,"messageTitle":"feat: Updated save method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":6}}},{"hash":"a2a6f3c38056db371621a0a288eb5d41dbcb3556","isMergeCommit":false,"messageTitle":"feat: Updated load method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":5}}},{"hash":"f365e76930d54850fd36e44cb1e4f79824bbda75","isMergeCommit":false,"messageTitle":"feat: Updated Conversal main method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":5}}},{"hash":"743449ca6d7e9971e5980d7b4a3c1c23da3c411a","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"b07cb39665e2ec3a90425a857c4419606a06e775","isMergeCommit":false,"messageTitle":"refactor: implement java.time API for Deadline dates","messageBody":"- Replace String dueDate with LocalDate\n- Use DateTimeFormatter for user-friendly output in toString()\n- Maintain same external toString() behavior for compatibility\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":13,"deletions":5}}},{"hash":"aae002040d281d641a289ace18cd47b11273757b","isMergeCommit":false,"messageTitle":"refactor: replace String with LocalDate for deadline dates in Storage file","messageBody":"- Updated Storage.load() to turn String to LocalDate using LocalDate.parse()\n- Updated Storage.save() to use (YYYY-MM-DD) format via toString()\n- Ensures built-in date validation and consistent storage format\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":3},"java":{"insertions":5,"deletions":5}}},{"hash":"89ab46ef1bec21ae7c12647ef448c7b049241feb","isMergeCommit":false,"messageTitle":"refactor: replace String with LocalDate for deadline task using Java datetime API","messageBody":"- Updated task.add() under adding adding deadlines to turn String to LocalDate using LocalDate.parse()\n- Updated task.add() to include a try catch block to catch incorrect date formats gracefully\n- Ensures built-in date validation and consistent storage format\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":13,"deletions":4}}},{"hash":"249f81b6c6fc2ce1e11650a06430d13e961efb57","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"- Used java.time.LocalDate API to store dates as LocalDate instead of Strings\n- Updated Deadline task to store a LocalDate instead of a String for the dueDate field\n- Updated Storage feature to load and save deadlines in YYYY-MM-DD format\n- Updated Conversal UI to print out date in different format and handle wrong date formats gracefully\n- Ensures data integrity and type safety for date operations\n","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"dc0142859bbba4b3bd802c7b778c2c7cc218448b","isMergeCommit":false,"messageTitle":"refactor: extract Storage class following OOP principles","messageBody":"- Encapsulate file I/O operations (loading tasks from file and saving tasks in file) into a dedicated Storage class\n- Improve code organisation and separation of concerns into separate classes\n- Maintains full functionality with no behavioural changes\n\nPart of A-MoreOOP changes\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"87dcd438f4216c9eb0675d84645d54fb2b40f71a","isMergeCommit":false,"messageTitle":"refractor: create Ui class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":0}}},{"hash":"df54baa8d883200adbdf01e5635bad8f46d67a9a","isMergeCommit":false,"messageTitle":"refractor: update Ui class with method signatures","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":1}}},{"hash":"ce4589ac71b78ffff31655f64bc9689b8870daa4","isMergeCommit":false,"messageTitle":"refractor: complete Ui class\u0027s methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":23}}},{"hash":"dad3d6a0f7cd2a20752a3c83985c364dba106369","isMergeCommit":false,"messageTitle":"refactor: extract Ui class following OOP principles","messageBody":"- Encapsulate User interface operations (All forms of messages and displaying information) into a dedicated Ui class\n- Improve code organisation and separation of concerns into separate classes\n- Maintains full functionality with no behavioural changes\n\nPart of A-MoreOOP changes\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":44,"deletions":73}}},{"hash":"36d7c8a6ae898abe845e547afe3f869b1f18dafd","isMergeCommit":false,"messageTitle":"refractor: create TaskList class","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":1},"java":{"insertions":32,"deletions":0}}},{"hash":"ba6553f8016ab69338f447a506684a253dea1cb2","isMergeCommit":false,"messageTitle":"refractor: basic TaskList class method skeleton","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":8}}},{"hash":"5954e4b8c5243ce2770aa7fc7e448fbec21dd0c2","isMergeCommit":false,"messageTitle":"refractor: complete TaskList class methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":6}}},{"hash":"7cd4bf04efdb0e9aa0464469935f0595c6c9c393","isMergeCommit":false,"messageTitle":"refractor: updated Conversal to match TaskList implementation","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1},"java":{"insertions":18,"deletions":64}}},{"hash":"828ad636146b49f461c28e8dc31be99cc8ddda14","isMergeCommit":false,"messageTitle":"refactor: extract TaskList class following OOP principles","messageBody":"- Encapsulate ArrayList\u003cTask\u003e tasks  operations (adding, deleting, marking, error handling) into a dedicated TaskList class\n- Improve code organisation and separation of concerns into separate classes\n- Maintains full functionality with no behavioural changes\n\nPart of A-MoreOOP changes\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"998ef802f3b7e2acb9d1e643b9a9cb57ce761b23","isMergeCommit":false,"messageTitle":"refractor: create Command interface","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"ebdf89712cedeb9bf049b94494ce1d72ee322e65","isMergeCommit":false,"messageTitle":"refractor: create Parser class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":0}}},{"hash":"a00b7686748ad919ebf9220c432245ad34761a40","isMergeCommit":false,"messageTitle":"refractor: add comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":6}}},{"hash":"f9a3fa9bcb53c80a3d2cc79c923ba608b4c05bff","isMergeCommit":false,"messageTitle":"refractor: create ListCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"61b797c68e12ba039243c4e44341e4ccf3c8e4b4","isMergeCommit":false,"messageTitle":"refractor: create MarkAsCompleteCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":15}}},{"hash":"5e953fb6c0704d5a3dbdb2e3662a8c79053c9f16","isMergeCommit":false,"messageTitle":"refractor: create MarkAsIncompleteCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":1}}},{"hash":"d802555d03685d639cfb175bece0fa40027188c4","isMergeCommit":false,"messageTitle":"refractor: create DeleteCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":1}}},{"hash":"0c7e93b293effaf6d1223c95a06693396642a208","isMergeCommit":false,"messageTitle":"refractor: create TodoCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":0}}},{"hash":"bb7d3d0eb0f8fe7671cc51be8cbeed35dd572613","isMergeCommit":false,"messageTitle":"refractor: create DeadlineCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":3}}},{"hash":"2a110b78144f5acbb64bfca2d08d76b1fb4a0771","isMergeCommit":false,"messageTitle":"refractor: create EventCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":0}}},{"hash":"ad374ad70cb955afd3fab7734cf8e35d97dc6dd6","isMergeCommit":false,"messageTitle":"refractor: update Conversal to match Parser and Command logic","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":102}}},{"hash":"fcdf806b3797948c27c92858295cb60ca07bd9bc","isMergeCommit":false,"messageTitle":"refractor: update Conversal for better readability","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":13}}},{"hash":"c399e0359a59366408712015c29a5231c99ee934","isMergeCommit":false,"messageTitle":"refractor: final fix conversal","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":13,"deletions":10},"java":{"insertions":1,"deletions":1}}},{"hash":"529b9d06105206d0e9f8039ca38efce13a5637e5","isMergeCommit":false,"messageTitle":"refactor: extract Parser class following OOP principles","messageBody":"- Encapsulate if-else operations (adding, deleting, marking tasks) into a dedicated Parser class with decicated Commands\n- Improve code organisation and separation of concerns into separate classes\n- Maintains full functionality with no behavioural changes\n\nPart of A-MoreOOP changes\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"2171324ca7cc4b9daf064775bed7c61e458f7d4f","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreOOP\u0027","messageBody":"OOP extraction into classes:\n- TaskList\n- Parser\n- Storage\n- Ui\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-01T00:00:00","commitResults":[{"hash":"bc98267d1e423ab852bb48e40a4aed197abc9cbc","isMergeCommit":false,"messageTitle":"refractor: create relevant Packages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":138,"deletions":29},"bat":{"insertions":1,"deletions":1},"md":{"insertions":3,"deletions":3}}},{"hash":"ee5a39237500a08c163402c1fc32f8d972c228fa","isMergeCommit":false,"messageTitle":"refractor: reorganise classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":17}}},{"hash":"f7fdf4152a6478e3486c4dd634e6f062bae6ec2c","isMergeCommit":false,"messageTitle":"refractor: update test file runner to match Packages","messageBody":"","fileTypesAndContributionMap":{"sh":{"insertions":2,"deletions":2}}},{"hash":"c4479f48f0499bbdef3d2b4c1f900c2e80605238","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Packages\u0027","messageBody":"Updated file structure to reorganise classes under related Packages\n","tags":["A-Packages"],"fileTypesAndContributionMap":{}},{"hash":"24d36df7831839d0ee3bab30c7b66013ee348940","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"cb5f4df2d20864b37d53fee1df10b68ea4187fa7","isMergeCommit":false,"messageTitle":"Set up Gradle","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2}}},{"hash":"7ffbc78691580b53bf06d0f610ff05db2f06157b","isMergeCommit":false,"messageTitle":"test: create Gradle test files","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":0}}},{"hash":"b5c69e1490089cfbc36e5c00d3b926cecc7f7660","isMergeCommit":false,"messageTitle":"test: create Gradle test folder and test files","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":0}}},{"hash":"3462ba35f805d47353da69384df15f205a74206c","isMergeCommit":false,"messageTitle":"test: create TaskList test file with test for adding, marking, deleting tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":128,"deletions":0}}},{"hash":"d3b654b915be9265aff49999caccf0c20a334be2","isMergeCommit":false,"messageTitle":"test: create ParserTest file with tests for all valid commands based on user inputs","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":73,"deletions":0}}},{"hash":"747e72b267a224fc94c3ed21937400cfa4f41924","isMergeCommit":false,"messageTitle":"prepare for packaging","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"72ad322a2267e6dc5acf2699647c3d88698d6901","isMergeCommit":false,"messageTitle":"feat: updated Parser class to include FindCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"fc2f38a32eddebc7a7cdf653d5dce70cf9980a05","isMergeCommit":false,"messageTitle":"feat: create FindCommand class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":0}}},{"hash":"0626cfb92c9f405bb5bed1716012e44bb5e1cb78","isMergeCommit":false,"messageTitle":"feat: update TaskList class by adding find method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"129353b7b0f9a64c3c7219504cea0612ecac4164","isMergeCommit":false,"messageTitle":"feat: update Ui class by adding showFound method to display task(s) with description containing keyword","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":3}}},{"hash":"46609196ff49fa96a6b07f174306f90565b17f1b","isMergeCommit":false,"messageTitle":"feat: update FindCommand class with correct find logic","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":2}}},{"hash":"882abfee858106288717878bdff5fd5e24c4ef7b","isMergeCommit":false,"messageTitle":"feat(find): complete find feature","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"28ddc2fe5caef26fda646f41251ac5389ebf4e39","isMergeCommit":false,"messageTitle":"Java(Doc): add JavaDoc comments for Conversal and Ui class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":12}}},{"hash":"ac52cd58f5dc7e76d63b67c31c5fff59162e3ee6","isMergeCommit":false,"messageTitle":"Java(Doc): add JavaDoc comments for TaskList class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":19}}},{"hash":"584987189124de9e5ecce9db18a2f9fc7eba1bbb","isMergeCommit":false,"messageTitle":"Java(Doc): add JavaDoc comments for Task, Todo, Deadline and Event classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":121,"deletions":22}}},{"hash":"c4035551eecb53cd17990a8d95804b40331e0370","isMergeCommit":false,"messageTitle":"Java(Doc): add JavaDoc comments for Storage and Parser classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":14}}},{"hash":"4d458734ad82c72d2e4d5a3ddce4b7709671cc62","isMergeCommit":false,"messageTitle":"Java(Doc): add JavaDoc comments for DeadlineCommand, EventCommand and TodoCommand.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":98,"deletions":6}}},{"hash":"9111a63437bc4f1b981d295b9c33f406ecbba686","isMergeCommit":false,"messageTitle":"style: apply consistent code standard and fix typos","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":22}}},{"hash":"197b9cf747535093fcc5682a592cc3354a7bff3c","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"Added JavaDoc headers for all major Classes and Methods\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{}},{"hash":"a9cedde485f83b7df4042426708326a4e1f63cdb","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"Updated code to match Java Coding standard\n","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"c41c91862d39d4bca960fbef5263ea8367e81cd8","isMergeCommit":true,"messageTitle":"Merge branch-Level-9 (resolve conflicts)","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"2b09bc1957b38f7ee04ffd31c35a61da6eea472d","isMergeCommit":false,"messageTitle":"bug: fix bug with added intructionFind in Ui class","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}}]},{"date":"2025-09-08T00:00:00","commitResults":[{"hash":"1cc3835d1ee9e9aa594f457f2072b8bd18a05e39","isMergeCommit":false,"messageTitle":"A-CheckStyle: add checkstyle.xml and suppressions.xml config files","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"txt":{"insertions":3,"deletions":0}}},{"hash":"39facf69d003cb12656ef8d6d6a5dd686d0520ba","isMergeCommit":false,"messageTitle":"A-CheckStyle: configure Checkstyle plugin in build.gradle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":1}}},{"hash":"458e0332cc7fbd14de70664af0e635ae6c548c06","isMergeCommit":false,"messageTitle":"A-CheckStyle: fixed dependencies","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"a255b2bc8c32508333346ae189a7ec6f630c1889","isMergeCommit":false,"messageTitle":"A-CheckStyle: fixed errors for ByeCommand and Command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":9}}},{"hash":"3c05cb3888dfbad24e157d751a8c286c60eac578","isMergeCommit":false,"messageTitle":"A-CheckStyle: fixed errors for Conversal","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":21}}},{"hash":"aa55e0d7c69344fb6536ea442aafe2d0c2eaacd3","isMergeCommit":false,"messageTitle":"A-CheckStyle: fixed errors for ConversalException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":1}}},{"hash":"5c00e60314f59e416836819c15906e1dc5ce0384","isMergeCommit":false,"messageTitle":"A-CheckStyle: fixed errors for ConversalException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"95621ab5fc38a1a827af2040ee5a908e980d0ca9","isMergeCommit":false,"messageTitle":"A-CheckStyle: fixed errors for DeadlineCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":4}}},{"hash":"02dffeae6f2b783ec9d28d80aa593269ddfd8301","isMergeCommit":false,"messageTitle":"A-CheckStyle: fixed EOF new line error for all command files","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"46da09b9e3fd30e8d27e0597ea4fcb9331a347ee","isMergeCommit":false,"messageTitle":"A-CheckStyle: fixed errors for Conversal","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"394588c70c1e6584d8cd3903c5f58638feedb849","isMergeCommit":false,"messageTitle":"A-CheckStyle: fixed errors for DeleteCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":5}}},{"hash":"2d8661c628c063edd43d6d53538c78ea73f0ceeb","isMergeCommit":false,"messageTitle":"A-CheckStyle: fixed EOF new line error for all task files","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":7}}},{"hash":"53238182371ece53e53ee4598d8d63369cdf73c2","isMergeCommit":false,"messageTitle":"A-CheckStyle: fixed errors for FindCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":4}}},{"hash":"0e50cfb8cee2a9802c391b789a15fbeb1f6b3986","isMergeCommit":false,"messageTitle":"A-CheckStyle: fixed errors for ListCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":2}}},{"hash":"198bba208335c55f0ec208184373d76320fe952e","isMergeCommit":false,"messageTitle":"A-CheckStyle: fixed errors for MarkAsCompleteCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":5}}},{"hash":"bb2214b8b84a3607495ea7186c8961a9fe323ecb","isMergeCommit":false,"messageTitle":"A-CheckStyle: fixed errors for MarkAsIncompleteCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":5}}},{"hash":"c8c045065b2b8b8216b486e268ba671c902715c4","isMergeCommit":false,"messageTitle":"A-CheckStyle: fixed errors for Parser and ParserTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":22}}},{"hash":"01ffc8f97ada8b349186bc2a8e503489d98f2e16","isMergeCommit":false,"messageTitle":"A-CheckStyle: fixed errors for TaskType","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":61,"deletions":52}}},{"hash":"14fecd71670e8784f76bad6b92f89cf134707745","isMergeCommit":false,"messageTitle":"A-CheckStyle: fixed errors for Ui","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":82,"deletions":54}}},{"hash":"723c1bff380125e2c160085db86dcd6ef5662946","isMergeCommit":false,"messageTitle":"A-CheckStyle: fixed errors for Ui","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":5}}},{"hash":"a3e04ab3408510270e91e374e64d0f9e9c141bbf","isMergeCommit":true,"messageTitle":"Merge branch CheckStyle","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{}},{"hash":"eb1c6cfa9b50c0074222c90df2c54df81f6d41e0","isMergeCommit":false,"messageTitle":"build(gradle): add JavaFX plugin and set main class","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":8,"deletions":2}}},{"hash":"e054a743cabf5bb8109f7f6c1387073c11c53cfe","isMergeCommit":false,"messageTitle":"feat(app): add Launcher and MainApp entry points","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"55a51ff1286f4ed0ef9ee993918b14800f5914c2","isMergeCommit":false,"messageTitle":"feat(app): update  MainApp.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":1}}},{"hash":"db026899ca53fa1d2e1c339da4eea37bd6f850ce","isMergeCommit":false,"messageTitle":"feat(core): add GUI constructor and getResponse() to Conversal","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":8}}},{"hash":"4be89e9dab89306fc200c95545c1df6b52572d5d","isMergeCommit":false,"messageTitle":"feat(gui): add MainWindow.fxml layout","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":26,"deletions":0}}},{"hash":"1e543593a8d8f2a20bdb45842f6dc3227361dd9e","isMergeCommit":false,"messageTitle":"feat(gui): add DialogBox.fxml layout","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":16,"deletions":0}}},{"hash":"80eb6291cac214b8af7055366b32ec16f474d9b7","isMergeCommit":false,"messageTitle":"feat(gui): add DialogBox (FXML) with flip for User and Conversal messages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":0}}},{"hash":"3d9fb2f9335e6eb9e1d3494484f1fe60fbe73166","isMergeCommit":false,"messageTitle":"feat(gui): add MainWindowController to handle input and display responses","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":1}}},{"hash":"5fa081117a9190c4e82ac9cc4247d98637b90a8b","isMergeCommit":false,"messageTitle":"feat(gui): add MainWindowController to handle input and display responses","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}},{"hash":"58770cbda94b7dc865d7dbc2713743211d7f52da","isMergeCommit":false,"messageTitle":"feat(gui): add MainWindowController to handle input and display responses","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":0}}},{"hash":"3a350c85efb3c2e9f39bc0de27d804b1b3336203","isMergeCommit":false,"messageTitle":"feat(gui): add GuiUi to buffer output for GUI display","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":0}}},{"hash":"d11168f87fd616ef82e7573da458d9e7f52879d5","isMergeCommit":false,"messageTitle":"feat(gui): fix error in naming","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"fxml":{"insertions":3,"deletions":5}}},{"hash":"a97f6c0f7e6209dbb8d2a7934748263859939622","isMergeCommit":false,"messageTitle":"feat(gui): clean up data","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":4},"fxml":{"insertions":0,"deletions":0}}},{"hash":"d297320f24a5bdd367226d57b5d5eae0edafa1b6","isMergeCommit":false,"messageTitle":"feat(gui): fix naming error","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":0,"deletions":0}}},{"hash":"1e0eebed086a6ba47ea07d94d0bb4ebf60f657f4","isMergeCommit":false,"messageTitle":"feat(gui): add comments for Launcher.java and MainApp.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":1}}},{"hash":"fd74ceeb983030213d2a384d83789a1361acf560","isMergeCommit":false,"messageTitle":"feat(gui): add comments for GuiUi.java, DialogBox.java and MainWindowController.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":84,"deletions":6}}},{"hash":"baaf6998a22fcf1e6f580d4a48e375b2612228d0","isMergeCommit":false,"messageTitle":"feat(gui): final edit for gui feature","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":7,"deletions":4},"java":{"insertions":4,"deletions":4}}},{"hash":"0b777454dee43d7f9e8d2787acb50a56501fd340","isMergeCommit":true,"messageTitle":"merge: Level-10 GUI","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-14T00:00:00","commitResults":[{"hash":"7c5c5c790118216bb53236d497de348bf68b2efa","isMergeCommit":false,"messageTitle":"assertions: add assertion checks for all methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":6}}},{"hash":"2e277ca8e94c5b99bbdb414bb07acec5edf998be","isMergeCommit":false,"messageTitle":"assertions: add assertion checks for Deadline, Event and Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"79e98ca9bce5aac36cd6a8b0a99913fa3b24d630","isMergeCommit":false,"messageTitle":"assertions: add assertion checks for both methods in Storage","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":19}}},{"hash":"8f6ebbce70047559e0dfa440eb701dd3ac6221ee","isMergeCommit":false,"messageTitle":"assertions: add assertion check of parse method in Parser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"15270c222c41fa0fece9c054d8292018b31901fd","isMergeCommit":true,"messageTitle":"Merge pull request #2 from Mesutantonio/branch-A-Assertions","messageBody":"Branch a assertions","tags":["A-Assertions"],"fileTypesAndContributionMap":{}},{"hash":"ad4af5c7dae12dc6e316df0b28784c13c5023e9f","isMergeCommit":false,"messageTitle":"feat(DoWithinPeriodTask): create DoWithinPeriodTask.java file","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":0}}},{"hash":"586e9b7bd68523c494ae42135287e468810a4630","isMergeCommit":false,"messageTitle":"feat(DoWithinPeriodTask): create DoWithinPeriodTask.java file","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"421e1761d285358667170af5919f28cf08f82090","isMergeCommit":false,"messageTitle":"feat(DoWithinPeriodTask): create DoWithinPeriodTask.java file","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"86e6b0deb27b29fcebddf01c99d57938c9b475c4","isMergeCommit":false,"messageTitle":"feat(DoWithinPeriodTask): add new task type to enum TaskType","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"db1774ec18fe3d6934977ada2b7ed4f8e8a25c62","isMergeCommit":false,"messageTitle":"feat(DoWithinPeriodTask): update parse method in parse","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"bd68ceb2f57dfc9930b580756f9d8b776923911f","isMergeCommit":false,"messageTitle":"feat(DoWithinPeriodTask): update parse method in Parser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"ea53d26d145a77f87abd583b50cf701088dd752c","isMergeCommit":false,"messageTitle":"feat(DoWithinPeriodTask): create DoWithinCommand file","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":77,"deletions":10}}},{"hash":"2d83cfc31b4019453fd30d98f8d3b53dc9398f0b","isMergeCommit":false,"messageTitle":"feat(DoWithinPeriodTask): update storage to accommodate new task type","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":15}}},{"hash":"1b02b93bc10b80ad6b9b358d0071405bdb910553","isMergeCommit":false,"messageTitle":"feat(DoWithinPeriodTask): update UI files to include new task type","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":25}}},{"hash":"abf952c23ca7d4eac3085284611e542d5b4cd22b","isMergeCommit":false,"messageTitle":"feat(DoWithinPeriodTask): fix bug","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0},"java":{"insertions":6,"deletions":6}}},{"hash":"63ffe35002c5a695954f739575b4ddfc9cf8171e","isMergeCommit":false,"messageTitle":"feat(DoWithinPeriodTask): final code fix for feature","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":4}}},{"hash":"03e2b15074f12442484eabb71175fed388bbf638","isMergeCommit":true,"messageTitle":"Merge pull request #3 from Mesutantonio/branch-B-DoWithinPeriodTasks","messageBody":"Branch b do within period tasks","fileTypesAndContributionMap":{}},{"hash":"dbef5914845865cd272f14c5abbda729fb715863","isMergeCommit":false,"messageTitle":"Parser: refactor parse() to use switch","messageBody":"The parse() method in Parser uses a long if-else chain to decide which\nCommand to create. This makes the method longer and less clear.\n\nA long conditional chain is harder to read and extend. It mixes the\nlogic of matching input with creating commands, which violates the SLAP\nprinciple. Adding new commands also requires editing more else-if\nbranches, which reduces maintainability.\n\nLet\u0027s replace the if-else chain with a switch statement on the first\nword of the user input. Each case will return the correct Command.\n\nThis change makes the code shorter and clearer. It also makes the\nparser easier to extend, as adding a new command only requires one new\ncase.\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":12}}},{"hash":"8c450b418582b7f739211f5ad8b325d08cb0ae01","isMergeCommit":false,"messageTitle":"Ui: extract helpers to improve SLAP","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":10}}},{"hash":"a661f723eba6332ae0662f28dfbf184b73c8a327","isMergeCommit":false,"messageTitle":"Ui: extract helpers to improve SLAP","messageBody":"The welcomeMessage method currently mixes greeting\nand printing of instructions. This makes the method longer and harder\nto read quickly.\n\nHaving multiple responsibilities in one method\nviolates the SLAP principle. It also makes it harder to extend or\nmodify the instructions shown to the user.\n\nLet\u0027s extract the greeting into a separate printGreeting method and the\ninstructions into a single printInstructions method, supported by a helper\nthat builds the instruction lines.\n\nThis results in shorter methods with single responsibility, improves\nreadability, and makes it easier to add or remove instructions later\nwithout cluttering welcomeMessage.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"c98b22b444143ccaaf1263e1cc268849ffa08107","isMergeCommit":false,"messageTitle":"Storage(refract): split load() into several helpers","messageBody":"The load() method performs file I/O, line parsing, validation, and\ntask construction in one method, which makes it long and mixes\nmultiple levels of abstraction.\n\nLong methods reduce readability and violate the SLAP principle,\nmaking it harder to read and understand .\n\nLet\u0027s extract two helpers from load():\n- parseLineToTask reads each line as a task\n- createTaskFromParts constructs the Task based on line information\n\nThis structure keeps load() focused on I/O and looping, improves\nreadability, and makes it easier to test parsing behavior in\nisolation. Behaviour and file formats remain unchanged.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":29}}},{"hash":"3fc3b51382168859068578754b1d1a14f1f81d00","isMergeCommit":true,"messageTitle":"Merge pull request #4 from Mesutantonio/branch-A-CodeQuality","messageBody":"Branch a code quality","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{}},{"hash":"98a618b91e23c2fe3d6607bcb769d659a7b09d2a","isMergeCommit":false,"messageTitle":"GUI: ensure chatbot prints instructions for clarity","messageBody":"","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":7}}}]},{"date":"2025-09-16T00:00:00","commitResults":[{"hash":"87d843fa59c78f3e8207f3f07e3b2236202e39e6","isMergeCommit":false,"messageTitle":"minor changes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":3}}}]},{"date":"2025-09-19T00:00:00","commitResults":[{"hash":"a17a4f68f08ead60f041ff1176e28f6d0cdc0de5","isMergeCommit":false,"messageTitle":"ParserTest: add routing and error tests","messageBody":"Parser currently has no dedicated tests to ensure that user inputs\nare mapped to the correct Command types and that invalid inputs are\nrejected.\n\nWithout such tests, it is easy to break routing logic when adding\nnew commands or changing prefixes.\n\nLet\u0027s add JUnit tests for Parser:\n- verify that valid inputs (bye, list, mark, unmark, delete, todo,\n  deadline, event, do-within) return the correct Command\n- verify that invalid inputs (unknown, empty, whitespace-only,\n  partial keywords, wrong case) throw ConversalException\n\nThese tests confirm that Parser is responsible only for routing,\nwhile argument validation is left to each Command class.\n","fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":0},"java":{"insertions":20,"deletions":0}}},{"hash":"a4e230c8c1112ed58c78a993e9bc166317cb68d9","isMergeCommit":false,"messageTitle":"TaskListTest: Add JavaDoc comments for tests in TaskListTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":11}}},{"hash":"279f6044cff3ea634d7822d005d76b18fab50e3a","isMergeCommit":false,"messageTitle":"StorageTest: Add StorageTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"bb1454de65f3bbc9925457c8cdab487d9897d700","isMergeCommit":false,"messageTitle":"StorageTest: Add tests for save and load behavior for all task types","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":134,"deletions":1}}},{"hash":"ce93fcd3c8c35ab3d893a3d59ad06f6a9e2be85e","isMergeCommit":false,"messageTitle":"ParserTest: Edit comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":7}}},{"hash":"85f775fa3f09bf295828d47f936f468b03620a0d","isMergeCommit":false,"messageTitle":"TodoTest: Create TodoTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"db8b302cab3b3aecf5ea78692388b4bccc200aa6","isMergeCommit":false,"messageTitle":"TodoTest: Add test for description, Marking and Unmarking and string formatting","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":4}}},{"hash":"a5282f86c9bf7b6f12ae7f095bfabde21b6a9be4","isMergeCommit":false,"messageTitle":"TodoTest: Add test for description, Marking and Unmarking and string formatting","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":7}}},{"hash":"b1c967dc1cb5654ce1a8fb73260a4f4cab412bb2","isMergeCommit":false,"messageTitle":"DeadlineTest: Create DeadlineTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"93d44b43689172efdf2fa88f3a8e3cef640ab6ae","isMergeCommit":false,"messageTitle":"DeadlineTest: Add unit tests for Deadline behavior","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":1}}},{"hash":"b6ae38532b8c477da414935c4be64bae0e59ee7d","isMergeCommit":false,"messageTitle":"DeadlineTest: Add unit tests for Deadline behavior","messageBody":"Deadline did not have unit tests to verify its due date handling\nand string formatting.\n\nLet\u0027s add a DeadlineTest class to cover:\n- constuctor and getter for due date\n- toString output with formatted date\n- toggling complete/incomplete updates status correctly\n\nThese tests ensure Deadline task display and update correctly\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"6f0443594c0446799f6988d675c2757ee3026c04","isMergeCommit":false,"messageTitle":"EventTest: Create EventTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"6501f4ca8e64c14540010a0ddf1dcbbf268d8b1e","isMergeCommit":false,"messageTitle":"EventTest: add unit tests for Event behavior","messageBody":"Event lacked unit tests, so schedule handling and output were\nuntested.\n\nLet\u0027s add an EventTest class to verify:\n- description and schedule getters\n- toString output is correct\n- marking complete/incomplete updates status correctly\n\nThese tests ensure Event tasks display and update correctly.\n","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":1}}},{"hash":"520256172900ba004486a638b600322bad5d282c","isMergeCommit":false,"messageTitle":"DoWithinTest: Create DoWithinTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"e585abfcad4502f6fc9670ccd943dfe7cb13a7ba","isMergeCommit":false,"messageTitle":"DoWithinPeriodTaskTest: Add unit tests for DoWithinPeriodTask","messageBody":"DoWithinPeriodTask is a newer task type with no unit tests yet.\n\nLet\u0027s add a DoWithinPeriodTaskTest class to check:\n- description and period are stored correctly\n- toString output is correct\n- toggling complete/incomplete updates status correctly\n\nThese tests ensures DoWithin tasks display and update correctly.\n","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":1}}},{"hash":"a397c05751202826a814699d7a3889e48684dc59","isMergeCommit":false,"messageTitle":"EventTest: Remove redundant import","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":3}}},{"hash":"12e9d06974523d1cc7fb381518b8e11f1ad9c801","isMergeCommit":false,"messageTitle":"DoWithinTest: Edit test name","messageBody":"","tags":["A-MoreTesting","A-AiAssisted"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"b23a6b227258a5a9d368b7a4519654baf14bd688","isMergeCommit":false,"messageTitle":"Fix comments in conversal.command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}}]},{"date":"2025-09-20T00:00:00","commitResults":[{"hash":"017fe26785fa2909e07e91063744aec8f18a095a","isMergeCommit":false,"messageTitle":"Remove wildcard import, replace with explicit imports","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":1}}},{"hash":"958bcd853c8d45ca71140d7c0efe90cdcf5b9150","isMergeCommit":false,"messageTitle":"Remove wildcard import, replace with explicit imports","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":1}}},{"hash":"d268d0b1aa97cf678e3bbbecd849a0a78ec88a95","isMergeCommit":false,"messageTitle":"Storage: Refactor save() for better SLAP","messageBody":"Storage: refactor save() for better SLAP\n\nThe save() method mixes multiple responsibilities:\n    • creating parent directories\n    • serialising tasks into strings\n    • writing to the file\n\nThis makes the method long and harder to follow.\n\nHaving all logic inside one method violates the SLAP principle and makes\nit more difficult to extend when new task types are introduced.\n\nLet’s extract helpers:\n    • ensureParentDir(File) for directory setup\n    • serialise(Task) for converting a task to a line\n    • taskType(Task) and taskExtra(Task) for type-specific logic\n\nThis makes save() shorter and more readable. Each method now does\nexactly one thing, improving maintainability and easing future extension\n","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":34}}},{"hash":"fa9abc676a83ffe9e3a414d2c6c1bce180addb33","isMergeCommit":false,"messageTitle":"Refractor: Refract code in Conversal.ui to adhere to coding standard","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":7}}},{"hash":"30f1638ddec3d44682cbc088ccc12816f050cb67","isMergeCommit":false,"messageTitle":"Edit comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"946d1890481b5e0c1267a0c2e2c36267eba37143","isMergeCommit":false,"messageTitle":"Edit comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":19}}},{"hash":"4e0ba48220a6b8083f96628cdc257470224d0110","isMergeCommit":false,"messageTitle":"Fix imports errors at top of file according to Java Checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":15}}}]},{"date":"2025-09-21T00:00:00","commitResults":[{"hash":"e0695b320b404dc5b9a8b0d1258095d04ae98537","isMergeCommit":false,"messageTitle":"Docs: Add product screenshot Ui.png","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":6}}},{"hash":"c18563a6632b63705c17b6028c6677877bad69c9","isMergeCommit":false,"messageTitle":"Bug: Fix enter not triggering send button","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":4,"deletions":2}}},{"hash":"4b537083607a9efc486827909d4b84cf7c530290","isMergeCommit":false,"messageTitle":"Bug: Fix bye message not printing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":7}}},{"hash":"b317df3e6c7b9322b04d8b51d72227a5fabb7441","isMergeCommit":false,"messageTitle":"Doc: Update README to include Conversal User guide","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":104,"deletions":14}}},{"hash":"a1060d9f4c0e1485293eabbe4d7b171b30e851dc","isMergeCommit":false,"messageTitle":"Bug: Fix case-insensitive command words bug","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"a0f7dff36b0c5774d53e2898c4902bba9baa5752","isMergeCommit":false,"messageTitle":"Rearrange importing to match checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"2d922951cb33a5a2b9b9e43216c149ac9c73eb81","isMergeCommit":false,"messageTitle":"Rearrange importst to match checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":8}}},{"hash":"a9bd11f658021ee931beed0624e5024ab4a2b15c","isMergeCommit":false,"messageTitle":"User Guide: add feature list and run instructions","messageBody":"The User Guide lacked a consolidated feature list and did not explain\nhow to run the application from the JAR file.\n\nUsers may struggle to understand the available features or how to\nactually launch the app without this information.\n\nLet\u0027s update the User Guide to:\n- include a section listing all implemented features\n- add step-by-step instructions for running the app using the JAR file\n\nThis makes the guide more complete and user-friendly, ensuring that new\nusers can quickly understand the features and start using the app.\n","tags":["A-UserGuide","A-Release"],"fileTypesAndContributionMap":{"md":{"insertions":42,"deletions":1}}}]}]},"authorFileTypeContributionMap":{"Mesutantonio":{"java":2516,"md":138,"fxml":45,"sh":6,"bat":1,"gradle":13,"txt":23}},"authorContributionVariance":{"Mesutantonio":78127.01},"authorDisplayNameMap":{"Mesutantonio":"CS2103T-W13-2 CHOW..HONY"}}
