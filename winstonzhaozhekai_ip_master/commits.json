{"authorDailyContributionsMap":{"winstonzhaozhekai":[{"date":"2025-08-23T00:00:00","commitResults":[{"hash":"cb3cf047bdbaf7e4b67a2f1564bf92b37d32c6c4","isMergeCommit":false,"messageTitle":"Level-0","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":10},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1},"md":{"insertions":1,"deletions":1}}},{"hash":"dbcc1f53508c061eb780fd6fcf677c9eb357cf8e","isMergeCommit":false,"messageTitle":"Level-1","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":3}}},{"hash":"89c5a1e2e450eaab0c5d3a29a08f25474df3f17f","isMergeCommit":false,"messageTitle":"Level-2","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":1}}},{"hash":"b0c091789142afa9fb8670c4f1adbc101e14565f","isMergeCommit":false,"messageTitle":"Level-3","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":66,"deletions":3}}},{"hash":"2d4a1e6f77145366cf7eda9849e89d21d2574730","isMergeCommit":false,"messageTitle":"Level-4","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":76,"deletions":5}}},{"hash":"13878c4ff83ad18d004325ece12e128047aee8bb","isMergeCommit":false,"messageTitle":"A-TextUiTesting","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0},"sh":{"insertions":0,"deletions":0}}},{"hash":"392cafc1b9e429f93a3d6e7fd9e24932569ac976","isMergeCommit":false,"messageTitle":"Level-5","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":70}}},{"hash":"e0c38ff48725abf3a499ee8f70ad3dad76b9c0d5","isMergeCommit":false,"messageTitle":"Level-6","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":20}}},{"hash":"b8173a68245d6a2d22ee79496a5d531ff836c085","isMergeCommit":false,"messageTitle":"A-Enums","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":4}}},{"hash":"a0928299a4e7980a8e10a2ffc9b793cd44814806","isMergeCommit":false,"messageTitle":"Save tasks to disk automatically and load on startup","messageBody":"The task list is now saved to the hard disk automatically whenever it changes. The data is loaded from the disk when the chatbot starts, ensuring persistence across sessions.\n\n- Implemented `Storage` class to handle file I/O operations.\n- Tasks are saved in the format: `\u003ctype\u003e | \u003cisDone\u003e | \u003cdescription\u003e | \u003cadditional info\u003e`.\n- Handled cases where the data file or its parent directory does not exist.\n- Added support for detecting and handling corrupted data files.\n\nThis ensures the chatbot is more robust and user-friendly, as tasks persist between runs and unexpected file issues are managed gracefully.\n","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":93,"deletions":2}}},{"hash":"e7fb73ad765a9ddcedcd8e4fbb3973bed79b3ba4","isMergeCommit":false,"messageTitle":"Support dates and times in tasks","messageBody":"Store and interpret dates/times as structured objects instead of plain\nstrings. This ensures deadlines and events are displayed clearly and\ncan be queried meaningfully.\n\nParse input as LocalDate or LocalDateTime\n\nAccept ISO format yyyy-MM-dd and common format dd/MM/yyyy HHmm\n\nDisplay dates in human-friendly style, e.g., Oct 15 2019\n\nSupport listing of tasks occurring on a given date\n\nThis improves usability by letting the chatbot reason about dates,\ninstead of treating them as raw text.\n","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":18}}}]},{"date":"2025-08-28T00:00:00","commitResults":[{"hash":"5c46379df951165dde4273b158ab5ebf2d24d3fe","isMergeCommit":true,"messageTitle":"Merge branch-Level-7 for Level 7 features","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2025-08-30T00:00:00","commitResults":[{"hash":"f189d3b007f65017cf3f3d0cca0d6ec6c3ce28b0","isMergeCommit":true,"messageTitle":"Resolve merge conflicts from Level-8 into master","messageBody":"Merge branch Level-8 into master and resolve conflicts to maintain\na consistent codebase. This ensures integration of new features\nwhile preserving existing functionality.\n\nConflicts occurred due to overlapping changes in both branches,\nand were resolved to align with the intended design choices.\n","fileTypesAndContributionMap":{}},{"hash":"d5e576ad4fb3f430a12c8008490c66e0a2fb4406","isMergeCommit":false,"messageTitle":"Refactor: Extract core classes for OOP design","messageBody":"Restructure the codebase to follow object-oriented principles by\nextracting key components into dedicated classes.\n\n- Ui: handle all user interactions\n- Storage: manage loading and saving tasks to file\n- Parser: interpret user commands\n- TaskList: encapsulate task collection and operations\n\nThis change improves modularity, readability, and maintainability by\nseparating concerns. It lays the foundation for further extensions,\nsuch as adding Command subclasses to encapsulate specific user actions.\n","fileTypesAndContributionMap":{"java":{"insertions":301,"deletions":147}}},{"hash":"d323382a848470444fca29206f10737de8876f3f","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreOOP\u0027 into master: A-MoreOOP – extract Ui, Storage, Parser, TaskList and refactor Duke","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"91576b4a020b0b115edbea0bebf7f7cfc078317d","isMergeCommit":false,"messageTitle":"refactor(java): Organize classes into packages","messageBody":"Establish a coherent package structure to improve discoverability and\nmaintainability as the codebase grows.\n\nKeep src/main/java as the source root (no src.main.java packages)\n\nCreate a base duke package with subpackages where appropriate\n(e.g., duke.ui, duke.task, duke.command)\n\nMove classes into their respective packages and update package\ndeclarations\n\nFix affected imports and references\n\nThis groups related responsibilities, clarifies boundaries, and prepares\nthe project for future features and tooling that expect the standard\nMaven-style source layout.\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":2},"java":{"insertions":49,"deletions":7},"sh":{"insertions":14,"deletions":2}}},{"hash":"2a3f20bca5acacb1cd85ec99fc1fa5e7e3b0f375","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Packages\u0027 into master: refactor(java) – organize classes into duke.* packages, update declarations and imports","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{}},{"hash":"26c93a480f7039938facf6d568a337fd4f8af030","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027 into master","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{}},{"hash":"d43a09065fdad595ee04789ed1c8de67b0a750e5","isMergeCommit":false,"messageTitle":"test: Add JUnit tests for core behaviors","messageBody":"Introduce focused JUnit coverage to prevent regressions and satisfy the\nA-JUnit requirement. Current code lacks safeguards against subtle logic\nerrors across key paths. Add tests that exercise two non-trivial methods\nfrom two different classes, covering normal, boundary, and failure cases.\n\nVerify expected outputs across diverse, representative inputs\n\nExercise edge conditions (empty, null, extremes, large collections)\n\nValidate error handling using assertThrows for exceptional paths\n\nUse parameterized tests to drive data-rich scenarios\n\nCheck idempotency and side-effect freedom where applicable\n\nThese tests raise confidence in core behavior and create a baseline for\nfuture changes. Follow-up commits will expand toward the stretch goal by\nadding coverage for all non-trivial public methods.\n","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":259,"deletions":3}}},{"hash":"fe0ee6ba3e39fb2a0c9b847d9e5123841148acaf","isMergeCommit":false,"messageTitle":"Add JavaDoc comments to classes and methods","messageBody":"Codebase previously lacked sufficient documentation, which made it\ndifficult to understand design intent and method responsibilities. Add\nJavaDoc comments to improve clarity and maintainability.\n\nDocument at least half of the non-private classes and methods\n\nDescribe purpose, parameters, and return values where relevant\n\nClarify expected behavior and edge cases for complex methods\n\nHighlight responsibilities of key classes\n\nThese comments help future developers understand and use the code\ncorrectly. Further work can extend coverage to all non-private and\nnon-trivial private methods to reach the stretch goal.\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":318,"deletions":3}}},{"hash":"4688769c61679b17574cabd14b32bd3751ebfa1a","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027 into master: A-JavaDoc – add JavaDoc comments to non-private classes and methods","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"winstonzhaozhekai":{"java":1090,"md":1,"fxml":0,"sh":14,"bat":1,"gradle":1,"txt":7}},"authorContributionVariance":{"winstonzhaozhekai":63604.125},"authorDisplayNameMap":{"winstonzhaozhekai":"CS2103T-F10-2 ZHAO..STON"}}
