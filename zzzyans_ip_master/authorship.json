[{"path":"src/main/java/Bong.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"public class Bong {","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"    public static enum Command {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"        LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, UNKNOWN","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"    public static class Task {","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"        protected String description;","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"        protected boolean isDone;","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"    ","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"        public Task(String description) {","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"            this.description \u003d description;","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"    ","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"        public String getStatusIcon() {","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"            return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"        public void mark() {","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"        public void unmark() {","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zzzyans"},"content":"        @Override","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zzzyans"},"content":"        public String toString() {","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zzzyans"},"content":"            return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zzzyans"},"content":"        } ","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zzzyans"},"content":"    public static class Todo extends Task {","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zzzyans"},"content":"        public Todo(String description) {","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zzzyans"},"content":"            super(description);","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zzzyans"},"content":"        @Override","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zzzyans"},"content":"        public String toString() {","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zzzyans"},"content":"            return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zzzyans"},"content":"    public static class Deadline extends Task {","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zzzyans"},"content":"        protected String deadline;","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zzzyans"},"content":"        public Deadline(String description, String deadline) {","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zzzyans"},"content":"            super(description);","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zzzyans"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zzzyans"},"content":"        @Override","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zzzyans"},"content":"        public String toString() {","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zzzyans"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + this.deadline + \")\";","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zzzyans"},"content":"    public static class Event extends Task {","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zzzyans"},"content":"        protected String start;","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zzzyans"},"content":"        protected String end;","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zzzyans"},"content":"        public Event(String description, String start, String end) {","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zzzyans"},"content":"            super(description);","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zzzyans"},"content":"            this.start \u003d start;","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zzzyans"},"content":"            this.end \u003d end;","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zzzyans"},"content":"        @Override","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zzzyans"},"content":"        public String toString() {","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zzzyans"},"content":"            return \"[E]\" + super.toString() + \" (from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zzzyans"},"content":"    public static class BongException extends Exception {","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zzzyans"},"content":"        public BongException(String msg) {","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zzzyans"},"content":"            super(msg);","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zzzyans"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zzzyans"},"content":"        String line \u003d \"------------------------------\";","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zzzyans"},"content":"        System.out.println(\"    Hello! I\u0027m Bong!\\n    What can I do for you?\");","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zzzyans"},"content":"        System.out.println(line);","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zzzyans"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zzzyans"},"content":"        String userInput;","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zzzyans"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T18:19:18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zzzyans"},"content":"        while (true) {","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zzzyans"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zzzyans"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zzzyans"},"content":"                System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zzzyans"},"content":"                break;","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zzzyans"},"content":"            }","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zzzyans"},"content":"            try {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zzzyans"},"content":"                Command command \u003d Command.UNKNOWN;","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zzzyans"},"content":"                String commandWord \u003d userInput.split(\" \", 2)[0].toUpperCase();","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zzzyans"},"content":"                if (commandWord.isEmpty()) {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zzzyans"},"content":"                    command \u003d Command.UNKNOWN;","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zzzyans"},"content":"                } else {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zzzyans"},"content":"                    try {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zzzyans"},"content":"                        command \u003d Command.valueOf(commandWord);","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zzzyans"},"content":"                    } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zzzyans"},"content":"                    }","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zzzyans"},"content":"                } ","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zzzyans"},"content":"                switch (command) {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zzzyans"},"content":"                    case LIST:","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zzzyans"},"content":"                        int listNumber \u003d 1;","lastModifiedDate":"2025-08-21T18:19:18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zzzyans"},"content":"                        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(\"    \" + listNumber + \". \" + list.get(i).toString());","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zzzyans"},"content":"                            listNumber++;","lastModifiedDate":"2025-08-21T18:19:18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-08-21T18:19:18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(line);","lastModifiedDate":"2025-08-21T18:19:18","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zzzyans"},"content":"                        break;","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zzzyans"},"content":"                    case MARK:","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"zzzyans"},"content":"                        String markNumberString \u003d userInput.substring(5);","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zzzyans"},"content":"                        int markNumber \u003d Integer.parseInt(markNumberString);","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"zzzyans"},"content":"                        if (markNumber \u003e list.size()) {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"zzzyans"},"content":"                            throw new BongException(\"You do not have this many tasks in your list!\");","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"zzzyans"},"content":"                        list.get(markNumber - 1).mark();","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(\"        \" + list.get(markNumber - 1).toString());","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(line);","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"zzzyans"},"content":"                        break;","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"zzzyans"},"content":"                    case UNMARK:","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"zzzyans"},"content":"                        String unmarkNumberString \u003d userInput.substring(7);","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"zzzyans"},"content":"                        int unmarkNumber \u003d Integer.parseInt(unmarkNumberString);","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"zzzyans"},"content":"                        if (unmarkNumber \u003e list.size()) {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"zzzyans"},"content":"                            throw new BongException(\"You do not have this many tasks in your list!\");","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"zzzyans"},"content":"                        list.get(unmarkNumber - 1).unmark();","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(\"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(\"        \" + list.get(unmarkNumber - 1).toString());","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(line);","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"zzzyans"},"content":"                        break;","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"zzzyans"},"content":"                    case TODO:","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"zzzyans"},"content":"                        try {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"zzzyans"},"content":"                            String todoDescription \u003d userInput.substring(5);","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"zzzyans"},"content":"                            if (todoDescription.isEmpty()) {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"zzzyans"},"content":"                                throw new BongException(\"A todo needs a description!\");","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"zzzyans"},"content":"                            }","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"zzzyans"},"content":"                            list.add(new Todo(todoDescription));","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(\"        \" + list.get(list.size() - 1).toString());","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(\"    \" + \"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(line);","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"zzzyans"},"content":"                            break;","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"zzzyans"},"content":"                        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"zzzyans"},"content":"                            throw new BongException(\"A todo needs a description!\");","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"zzzyans"},"content":"                    case DEADLINE:","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"zzzyans"},"content":"                        try {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"zzzyans"},"content":"                            String[] deadlineParts \u003d userInput.split(\" /by \");","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"zzzyans"},"content":"                            String deadlineDescription \u003d deadlineParts[0].substring(9);","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"zzzyans"},"content":"                            if (deadlineDescription.isBlank() || deadlineParts[1].isBlank()) {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"zzzyans"},"content":"                                throw new BongException(\"Looks like your \u0027deadline\u0027 is missing details! Description or deadline cannot be empty.\");","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"zzzyans"},"content":"                            }","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"zzzyans"},"content":"                            list.add(new Deadline(deadlineDescription, deadlineParts[1]));","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(\"        \" + list.get(list.size() - 1).toString());","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(\"    \" + \"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(line);","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"zzzyans"},"content":"                            break;","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"zzzyans"},"content":"                        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"zzzyans"},"content":"                            throw new BongException(\"Looks like your \u0027deadline\u0027 is missing details! Description or deadline cannot be empty.\");","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"zzzyans"},"content":"                    case EVENT:","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"zzzyans"},"content":"                        try {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"zzzyans"},"content":"                            String regex \u003d \" /from | /to \";","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"zzzyans"},"content":"                            String[] eventParts \u003d userInput.split(regex);","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"zzzyans"},"content":"                            String description \u003d eventParts[0].substring(6);","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"zzzyans"},"content":"                            if (description.isBlank() || eventParts[1].isBlank() || eventParts[2].isBlank()) {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"zzzyans"},"content":"                                throw new BongException(\"Looks like your \u0027event\u0027 is missing details! Description, start time and end time cannot be empty.\");","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"zzzyans"},"content":"                            }","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"zzzyans"},"content":"                            list.add(new Event(description, eventParts[1], eventParts[2]));","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(\"        \" + list.get(list.size() - 1).toString());","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(\"    \" + \"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(line);","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"zzzyans"},"content":"                            break;","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"zzzyans"},"content":"                        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"zzzyans"},"content":"                            throw new BongException(\"Looks like your \u0027event\u0027 is missing details! Description, start time and end time cannot be empty.\");","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"zzzyans"},"content":"                    case DELETE:","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"zzzyans"},"content":"                        String taskNumberString \u003d userInput.substring(7);","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"zzzyans"},"content":"                        int taskNumber \u003d Integer.parseInt(taskNumberString);","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"zzzyans"},"content":"                        if (taskNumber \u003e list.size()) {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"zzzyans"},"content":"                            throw new BongException(\"You do not have this many tasks in your list!\");","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"zzzyans"},"content":"                        Task removedTask \u003d list.remove(taskNumber - 1);","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(\"        \" + removedTask);","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(\"    Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(line);","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"zzzyans"},"content":"                        break;","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"zzzyans"},"content":"                    case UNKNOWN:","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"zzzyans"},"content":"                    default:","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"zzzyans"},"content":"                        throw new BongException(\"    Hmm, I dont understand that command.\\n    Please try \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027, \u0027list\u0027, \u0027mark\u0027, \u0027unmark\u0027, \u0027delete\u0027 or \u0027bye\u0027.\");","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"zzzyans"},"content":"                }","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"zzzyans"},"content":"            } catch (BongException e) { ","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"zzzyans"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"zzzyans"},"content":"                System.out.println(line);","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"zzzyans"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"zzzyans"},"content":"                System.out.println(\"An unexpected error occurred: \" + e.getMessage());","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"zzzyans"},"content":"                System.out.println(line);","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"zzzyans"},"content":"            }","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"zzzyans"},"content":"        scanner.close();","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false}],"authorContributionMap":{"zzzyans":225}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"todo borrow book","lastModifiedDate":"2025-08-22T00:43:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-22T00:43:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-22T00:43:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"mark 2","lastModifiedDate":"2025-08-22T00:43:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"list","lastModifiedDate":"2025-08-22T00:43:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"unmark 2","lastModifiedDate":"2025-08-22T00:43:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"list","lastModifiedDate":"2025-08-22T00:43:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"delete 2","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"list","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"mark 3","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"unmark 3","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"hi","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"todo","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"deadline","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"event","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"bye","lastModifiedDate":"2025-08-22T00:43:38","isFullCredit":false}],"authorContributionMap":{"zzzyans":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"java -classpath ..\\bin Bong \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"zzzyans":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"java -classpath ../bin Bong \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"zzzyans":1,"-":37}}]
