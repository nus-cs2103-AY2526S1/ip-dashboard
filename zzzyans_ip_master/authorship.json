[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zzzyans"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zzzyans"},"content":"    archiveBaseName \u003d \"bong\"","lastModifiedDate":"2025-09-02T21:54:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"zzzyans":18,"-":39}},{"path":"data/bong.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"T | 0 | borrow book","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"D | 0 | return book | 2025-10-16 1200","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"E | 0 | project meeting | 2025-09-30 1200 | 2025-09-30 1500","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false}],"authorContributionMap":{"zzzyans":3}},{"path":"src/main/java/bong/Bong.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong;","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":" * The entry point for the console version of the Bong task application.","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":" * It instantiates BongCore and starts its console execution.","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"public class Bong {","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"     * Main method to launch the console Bong application.","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"     * Creates an instance of BongCore and runs its console interface.","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"     * ","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"     * @param args Command line arguments (unused).","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"        BongCore bongCore \u003d new BongCore();","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"        bongCore.runConsole();","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false}],"authorContributionMap":{"zzzyans":19}},{"path":"src/main/java/bong/BongCore.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong;","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import bong.command.Command;","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"import bong.exception.BongException;","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"import bong.parser.Parser;","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"import bong.storage.Storage;","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"import bong.task.TaskList;","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"import bong.ui.Ui;","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":" * Encapsulates the core logic of the Bong task management application.","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":" * This class handles initialisation of Ui, Storage and TaskList, and provides a","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":" * method to get responses from commands, suitable for both console and GUI interfaces.","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"public class BongCore {","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"    // File path where tasks are persistently stored","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"    private static final String FILE_PATH \u003d \"data/bong.txt\";","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"     * Represents the supported user command types in the Bong application.","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"    public static enum CommandType {","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"        LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND, BYE, UNKNOWN","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"    // Instance variables for the core components","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zzzyans"},"content":"    private Ui ui;","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zzzyans"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zzzyans"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zzzyans"},"content":"     * Constructs a BongCore instance, initialising its components and loading tasks.","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zzzyans"},"content":"     * This constructor sets up the essential backend components for the Bong application.","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zzzyans"},"content":"    public BongCore() {","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zzzyans"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zzzyans"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zzzyans"},"content":"        try {","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zzzyans"},"content":"            tasks \u003d new TaskList(storage.loadTasks(ui));","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zzzyans"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zzzyans"},"content":"            ui.showLoadingError(\"Failed to load tasks: \" + e.getMessage());","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zzzyans"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zzzyans"},"content":"     * Processes a user input command and returns a response string.","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zzzyans"},"content":"     * Useful for GUI where direct console interaction by UI/Command classes is undesirable.","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zzzyans"},"content":"     * @param input Raw command string from the user.","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zzzyans"},"content":"     * @return String containing the response from the executed command, or an error message.","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zzzyans"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zzzyans"},"content":"        try {","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zzzyans"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zzzyans"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zzzyans"},"content":"        } catch (BongException e) {","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zzzyans"},"content":"            return \"Error: \" + e.getMessage();","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zzzyans"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zzzyans"},"content":"            return \"An unexpected error occurred: \" + e.getMessage();","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zzzyans"},"content":"     * Runs the console version of the Bong application.","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zzzyans"},"content":"     * This uses the shared core logic (getResponse) but handles console-specific input/output.","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zzzyans"},"content":"    public void runConsole() {","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zzzyans"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zzzyans"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zzzyans"},"content":"        while (!isExit) {","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zzzyans"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zzzyans"},"content":"            String response \u003d getResponse(fullCommand);","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zzzyans"},"content":"            try {","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zzzyans"},"content":"                Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zzzyans"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zzzyans"},"content":"            } catch (BongException ignored) {","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zzzyans"},"content":"            }","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zzzyans"},"content":"            ui.showResponse(response);","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zzzyans"},"content":"        ui.closeScanner();","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false}],"authorContributionMap":{"zzzyans":89}},{"path":"src/main/java/bong/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.command;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import bong.exception.BongException;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"import bong.storage.Storage;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"import bong.task.Task;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"import bong.task.TaskList;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"import bong.ui.Ui;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":" * Abstract base class for commands that add a task to the list.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":" * Handles the common logic for adding a task and saving the updated list.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"    protected Task newTask;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"     * Constructs an AddCommand with the specified task.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"        this.newTask \u003d task;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"     * Executes the add command.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zzzyans"},"content":"     * Adds the task to the TaskList, saves the updated list to storage, and","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zzzyans"},"content":"     * returns a confirmation message.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zzzyans"},"content":"     * @param tasks The TaskList object to add the task to.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zzzyans"},"content":"     * @param ui The Ui object (not directly used).","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zzzyans"},"content":"     * @param storage The Storage object to save the updated tasks.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zzzyans"},"content":"     * @return String message confirming the task addition and current task count.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zzzyans"},"content":"     * @throws BongException If an error occurs during saving tasks.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zzzyans"},"content":"    @Override","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zzzyans"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BongException {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zzzyans"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zzzyans"},"content":"        try {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zzzyans"},"content":"            storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zzzyans"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zzzyans"},"content":"            throw new BongException(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zzzyans"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zzzyans"},"content":"                newTask.toString() + \"\\n\" +","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zzzyans"},"content":"                \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false}],"authorContributionMap":{"zzzyans":50}},{"path":"src/main/java/bong/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.command;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import bong.exception.BongException;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"import bong.storage.Storage;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"import bong.task.TaskList;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"import bong.ui.Ui;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":" * Represents an abstract command, where all specific commands extend this class.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":" * Provides an execute method to perform command logic and an isExit method to","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":" * signal if the command should terminate the application.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"public abstract class Command {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"     * Executes the command logic.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"     * This method is implemented by concrete command classes to perform","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"     * actions on the task list, interact with the UI, and update storage.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"     * @param tasks The TaskList object to operate on.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"     * @param ui The Ui object for displaying messages.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"     * @param storage The Storage object for saving/loading tasks.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"     * @return String message representing the outcome of the command execution.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"     * @throws BongException If an error occurs during command execution.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws BongException;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zzzyans"},"content":"     * Checks if this command is an exit command.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zzzyans"},"content":"     * @return True if this command signifies application exit, false otherwise.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zzzyans"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zzzyans"},"content":"        return false;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false}],"authorContributionMap":{"zzzyans":36}},{"path":"src/main/java/bong/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.command;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import bong.exception.BongException;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"import bong.task.Deadline;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":" * Represents a command to add a Deadline task.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":" * Inherits from AddCommand.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"public class DeadlineCommand extends AddCommand {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"     * Constructs a DeadlineCommand with the given description and deadline.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"     * @param description Description of the Deadline task.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"     * @param deadline Deadline date and time as a string.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"     * @throws BongException If the deadline string is in an invalid format.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"    public DeadlineCommand(String description, String deadline) throws BongException {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"        super(new Deadline(description, deadline));","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false}],"authorContributionMap":{"zzzyans":22}},{"path":"src/main/java/bong/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.command;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import bong.exception.BongException;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"import bong.storage.Storage;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"import bong.task.Task;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"import bong.task.TaskList;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"import bong.ui.Ui;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":" * Represents a command to delete a task from the list.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":" * Inherits from Command.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"    private final int taskNumber;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"     * Constructs a DeleteCommand with the specified task number.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"     * @param taskNumber The 1-based index of the task.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"     * Executes the delete command.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zzzyans"},"content":"     * Deletes the specified task from the TaskList, saves the updated list to storage,","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zzzyans"},"content":"     * and returns a confirmation message.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zzzyans"},"content":"     * @param tasks The TaskList object to delete the task from.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zzzyans"},"content":"     * @param ui The Ui object (not directly used).","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zzzyans"},"content":"     * @param storage The Storage object to save the updated tasks.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zzzyans"},"content":"     * @return String message confirming the task deletion and current task count.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zzzyans"},"content":"     * @throws BongException If the task number is out of bounds or an error occurs during saving.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zzzyans"},"content":"    @Override","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zzzyans"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BongException {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zzzyans"},"content":"        Task removedTask \u003d tasks.deleteTask(taskNumber);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zzzyans"},"content":"        try {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zzzyans"},"content":"            storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zzzyans"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zzzyans"},"content":"            throw new BongException(\"Error saving tasks: \" + e. getMessage());","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zzzyans"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zzzyans"},"content":"                removedTask.toString() + \"\\nNow you have \" +","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zzzyans"},"content":"                tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false}],"authorContributionMap":{"zzzyans":50}},{"path":"src/main/java/bong/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.command;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import bong.exception.BongException;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"import bong.task.Event;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":" * Represents a command to add an Event task.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":" * Inherits from AddCommand","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"public class EventCommand extends AddCommand {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"     * Constructs an EventCommand with the given description, start time and end time.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"     * @param start The event start date and time as a string.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"     * @param end The event end date and time as a string.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"     * @throws BongException If the start or end time string is in an invalid format.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"    public EventCommand(String description, String start, String end) throws BongException {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"        super(new Event(description, start, end));","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false}],"authorContributionMap":{"zzzyans":23}},{"path":"src/main/java/bong/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.command;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import bong.storage.Storage;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"import bong.task.Task;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"import bong.task.TaskList;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"import bong.ui.Ui;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"import java.util.List;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":" * Represents a command to exit the Bong application.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":" * Inherits from the abstract Command class.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"     * Executes the exit command.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"     * @param tasks The TaskList object (not directly used).","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"     * @param ui The Ui object (not directly used).","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"     * @param storage The Storage object (not directly used).","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"     * @return String message confirming the exit.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"    @Override","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"        return \"Bye, hope to see you again soon!\";","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zzzyans"},"content":"     * Indicates that this command is an exit command.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zzzyans"},"content":"     * @return True.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zzzyans"},"content":"    @Override","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zzzyans"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zzzyans"},"content":"        return true;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false}],"authorContributionMap":{"zzzyans":37}},{"path":"src/main/java/bong/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.command;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import bong.storage.Storage;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"import bong.task.Task;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"import bong.task.TaskList;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"import bong.ui.Ui;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"import java.util.List;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":" * Represents a command to find tasks by a keyword in their description.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":" * Inherits from Command.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"    private final String keyword;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"     * Constructs a FindCommand with the specified keyword.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"     * @param keyword Keyword to search for.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"     * Executes the find command.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"     * Searches the TaskList for tasks containing the keyword and returns a formatted string","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zzzyans"},"content":"     * listing the matching tasks or a \"no matches\" message.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zzzyans"},"content":"     * @param tasks The TaskList object to search within.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zzzyans"},"content":"     * @param ui The Ui object (not directly used).","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zzzyans"},"content":"     * @param storage The Storage object (not directly used).","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zzzyans"},"content":"     * @return String message with the list of matching tasks or a no-match message.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zzzyans"},"content":"    @Override","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zzzyans"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zzzyans"},"content":"        List\u003cTask\u003e matchingTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zzzyans"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zzzyans"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zzzyans"},"content":"            response.append(\"No matching tasks found in your list.\");","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zzzyans"},"content":"        } else {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zzzyans"},"content":"            response.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zzzyans"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zzzyans"},"content":"                response.append(i + 1).append(\". \").append(matchingTasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zzzyans"},"content":"            }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zzzyans"},"content":"        return response.toString();","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false}],"authorContributionMap":{"zzzyans":51}},{"path":"src/main/java/bong/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.command;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import bong.storage.Storage;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"import bong.task.Task;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"import bong.task.TaskList;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"import bong.ui.Ui;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"import java.util.List;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":" * Represents a command to list all tasks in the TaskList.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":" * Inherits from the abstract Command class.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"     * Executes the list command.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"     * It retrieves all tasks from the TaskList and returns a formatted string","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"     * containing the list of tasks.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"     * @param tasks The TaskList object containing the tasks.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"     * @param ui The Ui object (not directly used).","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"     * @param storage The Storage object (not directly used).","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"     * @return String message containing the formatted list of tasks.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"    @Override","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"        List\u003cTask\u003e currentTasks \u003d tasks.getTasks();","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zzzyans"},"content":"        if (currentTasks.isEmpty()) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zzzyans"},"content":"            response.append(\"Your task list is empty. Time to add some tasks!\");","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zzzyans"},"content":"        } else {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zzzyans"},"content":"            response.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zzzyans"},"content":"            for (int i \u003d 0; i \u003c currentTasks.size(); i++) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zzzyans"},"content":"                response.append(i + 1).append(\". \").append(currentTasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zzzyans"},"content":"            }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zzzyans"},"content":"        return response.toString();","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false}],"authorContributionMap":{"zzzyans":40}},{"path":"src/main/java/bong/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.command;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import bong.exception.BongException;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"import bong.storage.Storage;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"import bong.task.Task;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"import bong.task.TaskList;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"import bong.ui.Ui;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":" * Inherits from Command.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"    private final int taskNumber;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"     * Constructs a MarkCommand with the specified task number.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"     * @param taskNumber The 1-based index of the task.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"     * Executes the mark command.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zzzyans"},"content":"     * Marks the specified task as done, saves the updated list to storage,","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zzzyans"},"content":"     * and returns a confirmation message.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zzzyans"},"content":"     * @param tasks The TaskList object to mark the task in.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zzzyans"},"content":"     * @param ui The Ui object (not directly used).","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zzzyans"},"content":"     * @param storage The Storage object to save the updated tasks.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zzzyans"},"content":"     * @return String message confirming the task has been marked.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zzzyans"},"content":"     * @throws BongException If the task number is out of bounds or an error occurs during saving.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zzzyans"},"content":"    @Override","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zzzyans"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BongException {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zzzyans"},"content":"        Task markedTask \u003d tasks.markTask(taskNumber);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zzzyans"},"content":"        try {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zzzyans"},"content":"            storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zzzyans"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zzzyans"},"content":"            throw new BongException(\"Error saving tasks: \" + e. getMessage());","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zzzyans"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + markedTask.toString();","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false}],"authorContributionMap":{"zzzyans":48}},{"path":"src/main/java/bong/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.command;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import bong.task.Todo;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":" * Represents a command to add a Todo task.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":" * Inherits from AddCommand.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"public class TodoCommand extends AddCommand {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"     * Constructs a TodoCommand with the given description.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"     * @param description Description of the Todo task.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"        super(new Todo(description));","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false}],"authorContributionMap":{"zzzyans":19}},{"path":"src/main/java/bong/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.command;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import bong.exception.BongException;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"import bong.storage.Storage;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"import bong.task.Task;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"import bong.task.TaskList;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"import bong.ui.Ui;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":" * Represents a command to mark a task as not done.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":" * Inherits from Command.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"    private final int taskNumber;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"     * Constructs a UnmarkCommand with the specified task number.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"     * @param taskNumber The 1-based index of the task.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"     * Executes the unmark command.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zzzyans"},"content":"     * Marks the specified task as not done, saves the updated list to storage,","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zzzyans"},"content":"     * and returns a confirmation message.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zzzyans"},"content":"     * @param tasks The TaskList object to unmark the task in.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zzzyans"},"content":"     * @param ui The Ui object (not directly used).","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zzzyans"},"content":"     * @param storage The Storage object to save the updated tasks.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zzzyans"},"content":"     * @return String message confirming the task has been unmarked.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zzzyans"},"content":"     * @throws BongException If the task number is out of bounds or an error occurs during saving.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zzzyans"},"content":"    @Override","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zzzyans"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BongException {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zzzyans"},"content":"        Task unmarkedTask \u003d tasks.unmarkTask(taskNumber);","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zzzyans"},"content":"        try {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zzzyans"},"content":"            storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zzzyans"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zzzyans"},"content":"            throw new BongException(\"Error saving tasks: \" + e. getMessage());","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zzzyans"},"content":"        return \"Nice! I\u0027ve marked this task as not done yet:\\n\" + unmarkedTask.toString();","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false}],"authorContributionMap":{"zzzyans":48}},{"path":"src/main/java/bong/exception/BongException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.exception;","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":" * Represents an exception specific to the Bong application.","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":" * This custom exception is used to handle application-level errors,","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":" * providing more specific error messages to the user.","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"public class BongException extends Exception {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"     * Constructs a new BongException with the specified detail message.","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"     * @param msg The detail message explaining the reason for the exception.","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"    public BongException(String msg) {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"        super(msg);","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false}],"authorContributionMap":{"zzzyans":17}},{"path":"src/main/java/bong/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.gui;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":" * Represents a dialog box to display text and an image in a chat interface.","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"    @FXML","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"    @FXML","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zzzyans"},"content":"     * Constructs a DialogBox with the given text and image.","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zzzyans"},"content":"     * @param text Text content for the dialog box.","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zzzyans"},"content":"     * @param image Image for the speaker.","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zzzyans"},"content":"    private DialogBox(String text, Image image) {","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zzzyans"},"content":"        FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zzzyans"},"content":"        fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zzzyans"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zzzyans"},"content":"        try {","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zzzyans"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zzzyans"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zzzyans"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zzzyans"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zzzyans"},"content":"        displayPicture.setImage(image);","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zzzyans"},"content":"        // Circular image","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zzzyans"},"content":"        Circle clip \u003d new Circle(25, 25, 25);","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zzzyans"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zzzyans"},"content":"//        // Styling for text label","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zzzyans"},"content":"//        dialog.setStyle(\"-fx-text-fill: #5D4037; -fx-font-size: 14px; -fx-wrap-text: true;\");","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zzzyans"},"content":"//        dialog.setPadding(new Insets(5, 10, 5, 10));","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zzzyans"},"content":"//        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zzzyans"},"content":"//","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zzzyans"},"content":"//        // Styling for HBox itself","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zzzyans"},"content":"//        this.setPadding(new Insets(10));","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zzzyans"},"content":"//        this.setSpacing(10);","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zzzyans"},"content":"//        this.setStyle(","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zzzyans"},"content":"//            \"-fx-background-color: #FFFACD; \" +","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zzzyans"},"content":"//            \"-fx-border-color: #F0E68C; \" +","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zzzyans"},"content":"//            \"-fx-border-width: 1; \" +","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zzzyans"},"content":"//            \"-fx-border-radius: 5; \"","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zzzyans"},"content":"//        );","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zzzyans"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zzzyans"},"content":"    private void flip() {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zzzyans"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zzzyans"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zzzyans"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zzzyans"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zzzyans"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zzzyans"},"content":"     * Creates a DialogBox for a user message, styled and aligned to the right.","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zzzyans"},"content":"     * @param text The message text from the user.","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zzzyans"},"content":"     * @param img The user\u0027s display picture.","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zzzyans"},"content":"     * @return A DialogBox instance configured for a user message.","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zzzyans"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zzzyans"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zzzyans"},"content":"//        db.getChildren().addAll(db.dialog, db.displayPicture);","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zzzyans"},"content":"        db.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zzzyans"},"content":"        db.getStyleClass().remove(\"reply-label\");","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zzzyans"},"content":"        return db;","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zzzyans"},"content":"    public static DialogBox getBongDialog(String text, Image img) {","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zzzyans"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zzzyans"},"content":"        db.flip();","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zzzyans"},"content":"        return db;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false}],"authorContributionMap":{"zzzyans":99}},{"path":"src/main/java/bong/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.gui;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":" * A launcher class to work around classpath issues.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"public class Launcher {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false}],"authorContributionMap":{"zzzyans":12}},{"path":"src/main/java/bong/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.gui;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import bong.BongCore;","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":" * The main class for the JavaFX GUI of the Bong application.","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":" * This class sets up the primary stage and scene, and handles user interactions","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":" * with the chat interface, delegating logic to BongCore.","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"    private BongCore bongCore \u003d new BongCore();","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"    @Override","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"        try {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"            stage.setTitle(\"Bong\");","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zzzyans"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zzzyans"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zzzyans"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBongCore(bongCore);  // inject the Duke instance","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zzzyans"},"content":"            stage.show();","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zzzyans"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zzzyans"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false}],"authorContributionMap":{"zzzyans":37}},{"path":"src/main/java/bong/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.gui;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"import bong.BongCore;","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"import bong.command.Command;","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"import bong.exception.BongException;","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"import bong.parser.Parser;","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"    @FXML","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"    @FXML","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"    @FXML","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"    @FXML","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zzzyans"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zzzyans"},"content":"    private BongCore bongCore;","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zzzyans"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserCat.png\"));","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zzzyans"},"content":"    private Image bongImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/BongCat.png\"));","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zzzyans"},"content":"    @FXML","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zzzyans"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zzzyans"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zzzyans"},"content":"        sendButton.setOnAction(event -\u003e handleUserInput());","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zzzyans"},"content":"        userInput.setOnAction(event -\u003e handleUserInput());","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zzzyans"},"content":"     * Injects the BongCore instance into this controller.","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zzzyans"},"content":"     * This method is called by Main after loading the FXML.","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zzzyans"},"content":"     * @param b BongCore instance containing the application\u0027s logic.","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zzzyans"},"content":"    public void setBongCore(BongCore b) {","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zzzyans"},"content":"        bongCore \u003d b;","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zzzyans"},"content":"        String welcomeMessage \u003d bongCore.getResponse(\"list\");","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zzzyans"},"content":"        dialogContainer.getChildren().add(DialogBox.getBongDialog(welcomeMessage, bongImage));","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zzzyans"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zzzyans"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zzzyans"},"content":"    @FXML","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zzzyans"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zzzyans"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zzzyans"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zzzyans"},"content":"            return;","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zzzyans"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zzzyans"},"content":"                DialogBox.getUserDialog(input, userImage)","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zzzyans"},"content":"        );","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zzzyans"},"content":"        String response \u003d bongCore.getResponse(input);","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zzzyans"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zzzyans"},"content":"                DialogBox.getBongDialog(response, bongImage)","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zzzyans"},"content":"        );","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zzzyans"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zzzyans"},"content":"        try {","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zzzyans"},"content":"            Command parsedCommand \u003d Parser.parse(input);","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zzzyans"},"content":"            if (parsedCommand.isExit()) {","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zzzyans"},"content":"                Platform.exit();","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zzzyans"},"content":"            }","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zzzyans"},"content":"        } catch (BongException ignored) {","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false}],"authorContributionMap":{"zzzyans":90}},{"path":"src/main/java/bong/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.parser;","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import bong.BongCore.CommandType;","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"import bong.command.Command;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"import bong.command.DeleteCommand;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"import bong.command.DeadlineCommand;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"import bong.command.EventCommand;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"import bong.command.ExitCommand;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"import bong.command.FindCommand;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"import bong.command.ListCommand;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"import bong.command.MarkCommand;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"import bong.command.TodoCommand;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"import bong.command.UnmarkCommand;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"import bong.exception.BongException;","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":" * Deals with making sense of the user command.","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":" * The Parser class is responsible for interpreting raw user input strings","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":" * into a structured command object that the Bong application can execute.","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"public class Parser {","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"    private static final String DEADLINE_DELIM \u003d \" /by \";","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"    private static final String EVENT_DELIM_REGEX \u003d \" /from | /to \";","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"    * Parses the full user command string and returns a corresponding Command object.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"    * ","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zzzyans"},"content":"    * @param fullCommand The complete user input string.","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zzzyans"},"content":"    * @return A Command object ready for execution.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zzzyans"},"content":"    * @throws BongException If the command is not recognised or its format is invalid/incomplete.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zzzyans"},"content":"    */","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zzzyans"},"content":"    public static Command parse(String fullCommand) throws BongException {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zzzyans"},"content":"        String[] inputParts \u003d fullCommand.trim().split(\" \", 2);","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zzzyans"},"content":"        String commandWord \u003d inputParts[0].toUpperCase();","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zzzyans"},"content":"        String arguments \u003d inputParts.length \u003e 1 ? inputParts[1].trim() : \"\";","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zzzyans"},"content":"        CommandType commandEnum;","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zzzyans"},"content":"        try {","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zzzyans"},"content":"            commandEnum \u003d CommandType.valueOf(commandWord);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zzzyans"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zzzyans"},"content":"            throw new BongException(\"Hmm, I don\u0027t understand that command.\\n\"","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zzzyans"},"content":"                + \"Please try \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027, \u0027list\u0027, \u0027mark\u0027, \u0027unmark\u0027, \u0027delete\u0027, \u0027find\u0027, or \u0027bye\u0027.\");","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zzzyans"},"content":"        return switch (commandEnum) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zzzyans"},"content":"            case LIST -\u003e new ListCommand();","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zzzyans"},"content":"            case BYE -\u003e new ExitCommand();","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zzzyans"},"content":"            case MARK, UNMARK, DELETE -\u003e parseNumberedCommand(commandEnum, arguments, commandWord);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zzzyans"},"content":"            case TODO -\u003e parseTodoCommand(arguments);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zzzyans"},"content":"            case DEADLINE -\u003e parseDeadlineCommand(arguments);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zzzyans"},"content":"            case EVENT -\u003e parseEventCommand(arguments);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zzzyans"},"content":"            case FIND -\u003e parseFindCommand(arguments);","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zzzyans"},"content":"            default -\u003e throw new BongException(\"An unexpected command type was encountered during parsing.\");","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zzzyans"},"content":"        };","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zzzyans"},"content":"     * Parses commands that require a task number (MARK, UNMARK, DELETE).","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zzzyans"},"content":"     * @param command The type of command (MARK, UNMARK, DELETE).","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zzzyans"},"content":"     * @param arguments The arguments string containing the task number.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zzzyans"},"content":"     * @param commandWord The original command word (e.g., \"mark\", \"unmark\", \"delete\").","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zzzyans"},"content":"     * @return A Command object for marking, unmarking, or deleting a task.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zzzyans"},"content":"     * @throws BongException If the task number is empty or not a valid integer.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zzzyans"},"content":"    private static Command parseNumberedCommand(","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zzzyans"},"content":"            CommandType command, String arguments, String commandWord) throws BongException {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zzzyans"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zzzyans"},"content":"            throw new BongException(\"The task number cannot be empty for \" + commandWord.toLowerCase() + \" command.\");","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zzzyans"},"content":"        try {","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zzzyans"},"content":"            int taskNumber \u003d Integer.parseInt(arguments);","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zzzyans"},"content":"            return switch (command) {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zzzyans"},"content":"                case MARK -\u003e new MarkCommand(taskNumber);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zzzyans"},"content":"                case UNMARK -\u003e new UnmarkCommand(taskNumber);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zzzyans"},"content":"                case DELETE -\u003e new DeleteCommand(taskNumber);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zzzyans"},"content":"                default -\u003e throw new BongException(\"Invalid command type for parseNumberedCommand.\");","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zzzyans"},"content":"            };","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zzzyans"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zzzyans"},"content":"            throw new BongException(\"The task number provided is invalid. Please enter a valid number.\");","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zzzyans"},"content":"     * Parses a \u0027todo\u0027 command.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zzzyans"},"content":"     * @param arguments The arguments string containing the todo description.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zzzyans"},"content":"     * @return A Command object for adding a todo task.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zzzyans"},"content":"     * @throws BongException If the description is empty.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zzzyans"},"content":"    private static Command parseTodoCommand(String arguments) throws BongException {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zzzyans"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zzzyans"},"content":"            throw new BongException(\"A todo needs a description!\");","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zzzyans"},"content":"        return new TodoCommand(arguments);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zzzyans"},"content":"     * Parses a \u0027deadline\u0027 command.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zzzyans"},"content":"     * @param arguments The arguments string containing the description and deadline time.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zzzyans"},"content":"     * @return A Command object for adding a deadline task.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zzzyans"},"content":"     * @throws BongException If the deadline command is missing details.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zzzyans"},"content":"    private static Command parseDeadlineCommand(String arguments) throws BongException {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zzzyans"},"content":"        String[] deadlineParts \u003d arguments.split(DEADLINE_DELIM, 2);","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zzzyans"},"content":"        if (deadlineParts.length \u003c 2) {","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zzzyans"},"content":"            throw new BongException(\"Looks like your \u0027deadline\u0027 is missing details!\" +","lastModifiedDate":"2025-09-10T01:14:23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zzzyans"},"content":"                    \" Try \u0027deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd HHmm\u003e.\u0027\");","lastModifiedDate":"2025-09-10T01:14:23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zzzyans"},"content":"        String deadlineDescription \u003d deadlineParts[0].trim();","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zzzyans"},"content":"        String deadlineTime \u003d deadlineParts[1].trim();","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zzzyans"},"content":"        if (deadlineDescription.isEmpty() || deadlineTime.isEmpty()) {","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zzzyans"},"content":"            throw new BongException(\"Looks like your \u0027deadline\u0027 is missing details!\" +","lastModifiedDate":"2025-09-10T01:14:23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zzzyans"},"content":"                    \" Try \u0027deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd HHmm\u003e.\u0027\");","lastModifiedDate":"2025-09-10T01:14:23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zzzyans"},"content":"        return new DeadlineCommand(deadlineDescription, deadlineTime);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zzzyans"},"content":"     * Parses an \u0027event\u0027 command.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zzzyans"},"content":"     * @param arguments The arguments string containing the description, start time, and end time.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zzzyans"},"content":"     * @return A Command object for adding an event task.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zzzyans"},"content":"     * @throws BongException If the event command is missing details.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"zzzyans"},"content":"    private static Command parseEventCommand(String arguments) throws BongException {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zzzyans"},"content":"        String[] eventParts \u003d arguments.split(EVENT_DELIM_REGEX, 3);","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"zzzyans"},"content":"        if (eventParts.length \u003c 3) {","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"zzzyans"},"content":"            throw new BongException(\"Looks like your \u0027event\u0027 is missing details!\" +","lastModifiedDate":"2025-09-10T01:14:23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"zzzyans"},"content":"                    \" Try \u0027event \u003cdescription\u003e /from \u003cyyyy-MM-dd HHmm\u003e /to \u003cyyyy-MM-dd HHmm\u003e.\u0027\");","lastModifiedDate":"2025-09-10T01:14:23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"zzzyans"},"content":"        String eventDescription \u003d eventParts[0].trim();","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"zzzyans"},"content":"        String eventStartTime \u003d eventParts[1].trim();","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"zzzyans"},"content":"        String eventEndTime \u003d eventParts[2].trim();","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"zzzyans"},"content":"        if (eventDescription.isEmpty() || eventStartTime.isEmpty() || eventEndTime.isEmpty()) {","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"zzzyans"},"content":"            throw new BongException(\"Looks like your \u0027event\u0027 is missing details!\" +","lastModifiedDate":"2025-09-10T01:14:23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"zzzyans"},"content":"                    \" Try \u0027event \u003cdescription\u003e /from \u003cyyyy-MM-dd HHmm\u003e /to \u003cyyyy-MM-dd HHmm\u003e.\u0027\");","lastModifiedDate":"2025-09-10T01:14:23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"zzzyans"},"content":"        return new EventCommand(eventDescription, eventStartTime, eventEndTime);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"zzzyans"},"content":"     * Parses a \u0027find\u0027 command.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"zzzyans"},"content":"     * @param arguments The arguments string containing the keyword to search for.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"zzzyans"},"content":"     * @return A Command object for finding tasks.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"zzzyans"},"content":"     * @throws BongException If the keyword is empty.","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"zzzyans"},"content":"    private static Command parseFindCommand(String arguments) throws BongException {","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"zzzyans"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2025-09-10T23:50:44","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"zzzyans"},"content":"            throw new BongException(\"The \u0027find\u0027 command needs a keyword to search for!\");","lastModifiedDate":"2025-09-10T23:50:44","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-10T23:50:44","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"zzzyans"},"content":"        return new FindCommand(arguments);","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-02T19:58:31","isFullCredit":false}],"authorContributionMap":{"zzzyans":158}},{"path":"src/main/java/bong/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.storage;","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"import java.util.List;","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"import bong.ui.Ui;","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"import bong.task.Deadline;","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"import bong.task.Event;","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"import bong.task.Task;","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"import bong.task.Todo;","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"public class Storage {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"    private final Path filePath;","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"    private static final DateTimeFormatter STORAGE_DATE_TIME_FORMAT \u003d  ","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"        DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"); ","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"    ","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"    private static final DateTimeFormatter INPUT_DATE_TIME_FORMAT \u003d","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"        DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zzzyans"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zzzyans"},"content":"        this.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zzzyans"},"content":"     * Loads tasks from the storage file into a list of Task objects.","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zzzyans"},"content":"     * If the data directory or file does not exist, it will be created.","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zzzyans"},"content":"     * Corrupted lines in the storage file will be skipped with a warning displayed via the UI.","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zzzyans"},"content":"     * ","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zzzyans"},"content":"     * @param ui The Ui object for displaying warnings about corrupted data.","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zzzyans"},"content":"     * @return A List\u003cTask\u003e containing the tasks loaded from the file.","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zzzyans"},"content":"     * @throws IOException If an I/O error occurs while accessing the storage file.","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zzzyans"},"content":"    public List\u003cTask\u003e loadTasks(Ui ui) throws IOException {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zzzyans"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zzzyans"},"content":"        Path parent \u003d filePath.getParent();","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zzzyans"},"content":"        if (parent !\u003d null \u0026\u0026 Files.notExists(parent)) {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zzzyans"},"content":"            Files.createDirectories(parent);","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zzzyans"},"content":"        if (Files.notExists(filePath)) {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zzzyans"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zzzyans"},"content":"            return tasks;","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zzzyans"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(filePath, StandardCharsets.UTF_8);","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zzzyans"},"content":"        for (String line : lines) {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zzzyans"},"content":"            if (line \u003d\u003d null || line.trim().isEmpty()) {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zzzyans"},"content":"                continue;","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zzzyans"},"content":"            }","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zzzyans"},"content":"            String[] parts \u003d line.split(\"\\\\s*\\\\|\\\\s*\", -1);","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zzzyans"},"content":"            // Expect at least: type | done | description","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zzzyans"},"content":"            if (parts.length \u003c 3) {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zzzyans"},"content":"                ui.showStorageCorruptionWarning(line);","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zzzyans"},"content":"                continue;","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zzzyans"},"content":"            }","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zzzyans"},"content":"            String type \u003d parts[0].trim();","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zzzyans"},"content":"            boolean done \u003d parts[1].trim().equals(\"1\") || parts[1].trim().equalsIgnoreCase(\"true\");","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zzzyans"},"content":"            try {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zzzyans"},"content":"                switch (type) {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zzzyans"},"content":"                    case \"T\":","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zzzyans"},"content":"                        Task todo \u003d new Todo(parts[2].trim());","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zzzyans"},"content":"                        if (done) {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zzzyans"},"content":"                            todo.setMark();","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zzzyans"},"content":"                        tasks.add(todo);","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zzzyans"},"content":"                        break;","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zzzyans"},"content":"                    case \"D\":","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zzzyans"},"content":"                        if (parts.length \u003c 4) {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zzzyans"},"content":"                            throw new IllegalArgumentException(\"missing deadline field\");","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zzzyans"},"content":"                        LocalDateTime deadline \u003d LocalDateTime.parse(parts[3].trim(), STORAGE_DATE_TIME_FORMAT);","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zzzyans"},"content":"                        Deadline deadlineTask \u003d new Deadline(parts[2].trim(), deadline.format(INPUT_DATE_TIME_FORMAT));","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zzzyans"},"content":"                        if (done) {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zzzyans"},"content":"                            deadlineTask.setMark();","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zzzyans"},"content":"                        tasks.add(deadlineTask);","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zzzyans"},"content":"                        break;","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zzzyans"},"content":"                    case \"E\":","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zzzyans"},"content":"                        if (parts.length \u003c 5) {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zzzyans"},"content":"                            throw new IllegalArgumentException(\"missing event fields\");","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zzzyans"},"content":"                        LocalDateTime start \u003d LocalDateTime.parse(parts[3].trim(), STORAGE_DATE_TIME_FORMAT);","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zzzyans"},"content":"                        LocalDateTime end \u003d LocalDateTime.parse(parts[4].trim(), STORAGE_DATE_TIME_FORMAT);","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zzzyans"},"content":"                        Event eventTask \u003d new Event(parts[2].trim(), start.format(INPUT_DATE_TIME_FORMAT), end.format(INPUT_DATE_TIME_FORMAT));","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zzzyans"},"content":"                        if (done) {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zzzyans"},"content":"                            eventTask.setMark();","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zzzyans"},"content":"                        tasks.add(eventTask);","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zzzyans"},"content":"                        break;","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zzzyans"},"content":"                    default:","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zzzyans"},"content":"                        ui.showStorageCorruptionWarning(line);","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zzzyans"},"content":"                }","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zzzyans"},"content":"            } catch (Exception e ) {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zzzyans"},"content":"                ui.showStorageCorruptionWarning(line +  \" (\" + e.getMessage() + \")\");","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zzzyans"},"content":"            }","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zzzyans"},"content":"        return tasks;","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zzzyans"},"content":"    /* ","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zzzyans"},"content":"     * Saves all tasks to the storage file (overwrites).","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zzzyans"},"content":"     * ","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zzzyans"},"content":"     * @param tasks The list of tasks to save.","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zzzyans"},"content":"     * @throws IOException If writing fails","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zzzyans"},"content":"    public void saveTasks(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zzzyans"},"content":"        Path parent \u003d filePath.getParent();","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zzzyans"},"content":"        if (parent !\u003d null \u0026\u0026 Files.notExists(parent)) {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zzzyans"},"content":"            Files.createDirectories(parent);","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zzzyans"},"content":"        try (BufferedWriter writer \u003d Files.newBufferedWriter(","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zzzyans"},"content":"            filePath, StandardCharsets.UTF_8, StandardOpenOption.CREATE, StandardOpenOption.TRUNCATE_EXISTING)) {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zzzyans"},"content":"                for (Task t : tasks) {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zzzyans"},"content":"                    writer.write(serialiseTask(t));","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zzzyans"},"content":"                    writer.newLine();","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zzzyans"},"content":"                }","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zzzyans"},"content":"     /*","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"zzzyans"},"content":"     * Serialise a task into a single-line storage representation.","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"zzzyans"},"content":"     * ","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"zzzyans"},"content":"     * @param task The task to serialise.","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"zzzyans"},"content":"     * @return Serialised string.","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"zzzyans"},"content":"    private String serialiseTask(Task task) {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"zzzyans"},"content":"        String doneFlag \u003d task.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"zzzyans"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"zzzyans"},"content":"            return \"T\" + \" | \" + doneFlag + \" | \" + task.getDescription();","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"zzzyans"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"zzzyans"},"content":"            Deadline d \u003d (Deadline) task;","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"zzzyans"},"content":"            return \"D\" + \" | \" + doneFlag + \" | \" + d.getDescription() + \" | \" + d.getDeadline().format(STORAGE_DATE_TIME_FORMAT);","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"zzzyans"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"zzzyans"},"content":"            Event e \u003d (Event) task;","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"zzzyans"},"content":"            return \"E\" + \" | \" + doneFlag + \" | \" + e.getDescription() + \" | \" + ","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"zzzyans"},"content":"                e.getStart().format(STORAGE_DATE_TIME_FORMAT) + \" | \" + e.getEnd().format(STORAGE_DATE_TIME_FORMAT);","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"zzzyans"},"content":"        return \"T\" + \" | \" + doneFlag + \" | \" + task.getDescription();","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-02T17:02:27","isFullCredit":false}],"authorContributionMap":{"zzzyans":150}},{"path":"src/main/java/bong/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.task;","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"import bong.exception.BongException;","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":" * Represents a task that needs to be completed by a specific date and time.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":" * It extends the base Task class and includes a deadline (LocalDateTime).","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"    // Input date/time format for parsing user input","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"    private static final DateTimeFormatter INPUT_DATE_TIME_FORMAT \u003d","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"        DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"    // Output date/time format for saving to file","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"    private static final DateTimeFormatter OUTPUT_DATE_TIME_FORMAT \u003d  ","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"        DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"     * Constructs a Deadline task with the given description and deadline string.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"     * The deadline string is parsed into a LocalDateTime object.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zzzyans"},"content":"     * @param deadline The deadline date and time as a string in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zzzyans"},"content":"     * @throws BongException If the provided deadline string is in an invalid format.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zzzyans"},"content":"    public Deadline(String description, String deadline) throws BongException {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zzzyans"},"content":"        super(description);","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zzzyans"},"content":"        try {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zzzyans"},"content":"            this.deadline \u003d LocalDateTime.parse(deadline, INPUT_DATE_TIME_FORMAT);","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zzzyans"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zzzyans"},"content":"            throw new BongException(\"Invalid deadline date/time format!\\n\" +","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zzzyans"},"content":"                    \"Please use \u0027yyyy-MM-dd HHmm\u0027 (eg. 2019-10-15 1800).\");","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zzzyans"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zzzyans"},"content":"        return this.deadline;","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zzzyans"},"content":"    @Override","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zzzyans"},"content":"    public String toString() {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zzzyans"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.deadline.format(OUTPUT_DATE_TIME_FORMAT) + \")\";","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false}],"authorContributionMap":{"zzzyans":51}},{"path":"src/main/java/bong/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.task;","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"import bong.exception.BongException;","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":" * Represents a task that is an event, occurring within a specific start and end time.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":" * It extends the base Task class and includes a start and end time (LocalDateTime).","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"public class Event extends Task {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"    // Input date/time format for parsing user input","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"    private static final DateTimeFormatter INPUT_DATE_TIME_FORMAT \u003d","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"        DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"    // Output date/time format for saving to file","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"    private static final DateTimeFormatter OUTPUT_DATE_TIME_FORMAT \u003d  ","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"        DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"     * Constructs an Event task with the given description, start time string, and end time string.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"     * The start and end time strings are parsed into LocalDateTime objects.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zzzyans"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zzzyans"},"content":"     * @param start The event start date and time as a string in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zzzyans"},"content":"     * @param end The event end date and time as a string in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zzzyans"},"content":"     * @throws BongException If either the start or end date/time string is in an invalid format.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zzzyans"},"content":"    public Event(String description, String start, String end) throws BongException {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zzzyans"},"content":"        super(description);","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zzzyans"},"content":"        try {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zzzyans"},"content":"            this.start \u003d LocalDateTime.parse(start, INPUT_DATE_TIME_FORMAT);","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zzzyans"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zzzyans"},"content":"            throw new BongException(\"Invalid event start date/time format!\\n\" +","lastModifiedDate":"2025-09-10T01:14:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zzzyans"},"content":"                    \"Please use \u0027yyyy-MM-dd HHmm\u0027 (eg. 2019-10-15 1800).\");","lastModifiedDate":"2025-09-10T01:14:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zzzyans"},"content":"        try {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zzzyans"},"content":"            this.end \u003d LocalDateTime.parse(end, INPUT_DATE_TIME_FORMAT);","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zzzyans"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zzzyans"},"content":"            throw new BongException(\"Invalid event end date/time format!\\n\" +","lastModifiedDate":"2025-09-10T01:14:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zzzyans"},"content":"                    \"Please use \u0027yyyy-MM-dd HHmm\u0027 (eg. 2019-10-15 1800).\");","lastModifiedDate":"2025-09-10T01:14:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zzzyans"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zzzyans"},"content":"        return this.start;","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zzzyans"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zzzyans"},"content":"        return this.end;","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zzzyans"},"content":"    @Override","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zzzyans"},"content":"    public String toString() {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zzzyans"},"content":"        return \"[E]\" + super.toString() + \" (from \" + this.start.format(OUTPUT_DATE_TIME_FORMAT)","lastModifiedDate":"2025-09-10T01:14:23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zzzyans"},"content":"                + \" to \" + this.end.format(OUTPUT_DATE_TIME_FORMAT) + \")\";","lastModifiedDate":"2025-09-10T01:14:23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false}],"authorContributionMap":{"zzzyans":63}},{"path":"src/main/java/bong/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.task;","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":" * Represents a generic task in the Bong application.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":" * This is the base class for different types of tasks (Todo, Deadline, Event).","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":" * It stores a description and a completion status.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"public class Task {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"    protected String description;","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"     * Constructs a Task object with the given description.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"     * A new task is always initialised as not done.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"    public Task(String description) {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"     * Returns a string representing the status icon of the task.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"     * \"X\" if the task is done, \" \" (space) if it\u0027s not done.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"     * @return The status icon string.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zzzyans"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zzzyans"},"content":"        return (this.isDone ? \"X\" : \" \"); ","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zzzyans"},"content":"    public String getDescription() {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zzzyans"},"content":"        return this.description;","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zzzyans"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zzzyans"},"content":"        return this.isDone;","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zzzyans"},"content":"    public void setMark() {","lastModifiedDate":"2025-09-10T01:14:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zzzyans"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zzzyans"},"content":"    public void setUnmark() {","lastModifiedDate":"2025-09-10T01:14:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zzzyans"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zzzyans"},"content":"    @Override","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zzzyans"},"content":"    public String toString() {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zzzyans"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zzzyans"},"content":"    } ","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false}],"authorContributionMap":{"zzzyans":53}},{"path":"src/main/java/bong/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.task;","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"import java.util.List;","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"import bong.exception.BongException;","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"public class TaskList {","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"    /*","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"    public TaskList() {","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"    /*","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"     * Constructs a TaskList with an initial list of tasks.","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"     * This is useful when loading tasks from storage.","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"     * ","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"     * @param tasks The initial list of tasks.","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zzzyans"},"content":"        this.tasks.add(task);","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zzzyans"},"content":"    public Task deleteTask(int taskIndex) throws BongException {","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zzzyans"},"content":"        if (taskIndex \u003c\u003d 0 || taskIndex \u003e tasks.size()) {","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zzzyans"},"content":"            throw new BongException(\"You do not have this many tasks in your list!\");","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zzzyans"},"content":"        return tasks.remove(taskIndex - 1);","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zzzyans"},"content":"    public Task markTask(int taskIndex) throws BongException {","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zzzyans"},"content":"        if (taskIndex \u003c\u003d 0 || taskIndex \u003e tasks.size()) {","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zzzyans"},"content":"            throw new BongException(\"You do not have this many tasks in your list!\");","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zzzyans"},"content":"        tasks.get(taskIndex - 1).setMark();","lastModifiedDate":"2025-09-10T01:14:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zzzyans"},"content":"        return tasks.get(taskIndex - 1);","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zzzyans"},"content":"    public Task unmarkTask(int taskIndex) throws BongException {","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zzzyans"},"content":"        if (taskIndex \u003c\u003d 0 || taskIndex \u003e tasks.size()) {","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zzzyans"},"content":"            throw new BongException(\"You do not have this many tasks in your list!\");","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zzzyans"},"content":"        tasks.get(taskIndex - 1).setUnmark();","lastModifiedDate":"2025-09-10T01:14:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zzzyans"},"content":"        return tasks.get(taskIndex - 1);","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zzzyans"},"content":"    public Task getTask(int taskIndex) throws BongException {","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zzzyans"},"content":"        if (taskIndex \u003c\u003d 0 || taskIndex \u003e tasks.size()) {","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zzzyans"},"content":"            throw new BongException(\"You do not have this many tasks in your list!\");","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zzzyans"},"content":"        return tasks.get(taskIndex - 1);","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-11T00:09:10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-10T23:50:44","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zzzyans"},"content":"     * Finds tasks in the list whose descriptions contain the specified keyword (case-insensitive).","lastModifiedDate":"2025-09-10T23:50:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-10T23:50:44","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zzzyans"},"content":"     * @param keyword The string to search for within task descriptions.","lastModifiedDate":"2025-09-10T23:50:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zzzyans"},"content":"     * @return A List\u003cTask\u003e containing all matching tasks.","lastModifiedDate":"2025-09-10T23:50:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-10T23:50:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zzzyans"},"content":"    public List\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-09-10T23:50:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zzzyans"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-10T23:50:44","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zzzyans"},"content":"        String lowercaseKeyword \u003d keyword.toLowerCase();","lastModifiedDate":"2025-09-10T23:50:44","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zzzyans"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-09-10T23:50:44","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zzzyans"},"content":"            if (task.getDescription().toLowerCase().contains(lowercaseKeyword)) {","lastModifiedDate":"2025-09-10T23:50:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zzzyans"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-09-10T23:50:44","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zzzyans"},"content":"            }","lastModifiedDate":"2025-09-10T23:50:44","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-09-10T23:50:44","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zzzyans"},"content":"        return matchingTasks;","lastModifiedDate":"2025-09-10T23:50:44","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-10T23:50:44","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-10T23:50:44","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zzzyans"},"content":"     * Returns the current number of tasks in the list.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zzzyans"},"content":"     * @return An integer representing the total count of tasks.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zzzyans"},"content":"    public int size() {","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zzzyans"},"content":"        return tasks.size();","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zzzyans"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zzzyans"},"content":"        return tasks;","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-02T20:28:56","isFullCredit":false}],"authorContributionMap":{"zzzyans":92}},{"path":"src/main/java/bong/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.task;","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":" * Represents a simple todo task without any specific date/time constraints.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":" * It extends the base Task class.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"     * Constructs a Todo task with the given description.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-09T17:54:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"        super(description);","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"    @Override","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"    public String toString() {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false}],"authorContributionMap":{"zzzyans":21}},{"path":"src/main/java/bong/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.ui;","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T21:13:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"/**","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":" * Deals with interaction with the user.","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":" * The Ui class is responsible for all input and output operations,","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":" * including displaying messages, reading commands, and showing errors or warnings.","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"public class Ui {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"    private static final String LINE \u003d \"------------------------------\";","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"     * Constructs a Ui object.","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"     * Initialises a new Scanner to read input from System.in.","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"    public Ui() {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"     * Displays a horizontal separator line to format output.","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"    public void showLine() {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zzzyans"},"content":"     * Displays the welcome message when the Bong application starts.","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zzzyans"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zzzyans"},"content":"        System.out.println(\"Hello! I\u0027m Bong!\\nWhat can I do for you?\");","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zzzyans"},"content":"        showLine();","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zzzyans"},"content":"     * Reads a single line of command input from the user.","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zzzyans"},"content":"     * @return The trimmed string entered by the user.","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zzzyans"},"content":"    public String readCommand() {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zzzyans"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zzzyans"},"content":"     * Displays an error message indicating that tasks failed to load from storage.","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zzzyans"},"content":"     * @param message The specific error message about the loading failure.","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zzzyans"},"content":"    public void showLoadingError(String message) {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zzzyans"},"content":"        System.out.println(\"Failed to load tasks: \" + message);","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zzzyans"},"content":"        showLine();","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zzzyans"},"content":"     * Displays a general response message to the user, typically the result of a command execution.","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zzzyans"},"content":"     * @param message The message to be shown.","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zzzyans"},"content":"    public void showResponse(String message) {","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zzzyans"},"content":"        System.out.println(message);","lastModifiedDate":"2025-09-15T21:28:38","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zzzyans"},"content":"        showLine();","lastModifiedDate":"2025-09-10T23:50:44","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-10T23:50:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-10T23:50:44","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zzzyans"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zzzyans"},"content":"     * @param message The error message to be shown.","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zzzyans"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zzzyans"},"content":"        System.out.println(message);","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zzzyans"},"content":"        showLine();","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zzzyans"},"content":"     * Displays a warning message about a corrupted line found in the storage file.","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zzzyans"},"content":"     *","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zzzyans"},"content":"     * @param line The corrupted line from the storage file.","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zzzyans"},"content":"    public void showStorageCorruptionWarning(String line) {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zzzyans"},"content":"        System.out.println(\"Warning: Skipping corrupted line in storage: \" + line);","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zzzyans"},"content":"        showLine();","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zzzyans"},"content":"    /**","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zzzyans"},"content":"     * Closes the scanner used for reading user input.","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-09-09T18:04:28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zzzyans"},"content":"    public void closeScanner() {","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zzzyans"},"content":"        scanner.close();","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-02T15:14:43","isFullCredit":false}],"authorContributionMap":{"zzzyans":92}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50\" fitWidth\u003d\"50\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"        \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false}],"authorContributionMap":{"zzzyans":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bong.gui.MainWindow\"\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"      \u003cAnchorPane prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" stylesheets\u003d\"@../css/main.css\" /\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"      \u003cAnchorPane prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" stylesheets\u003d\"@../css/main.css\" /\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"      \u003cAnchorPane prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" stylesheets\u003d\"@../css/main.css\" /\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"      \u003cAnchorPane prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" /\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"      \u003cAnchorPane prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" stylesheets\u003d\"@../css/main.css\" /\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"      \u003cAnchorPane prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" stylesheets\u003d\"@../css/main.css\" /\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"      \u003cAnchorPane prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" /\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-15T21:04:16","isFullCredit":false}],"authorContributionMap":{"zzzyans":26}},{"path":"src/test/java/bong/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.parser;","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import bong.Bong;","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"import bong.exception.BongException;","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"import bong.parser.Parser.ParsedCommand;","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"public class ParserTest {","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"    void parse_listCommand_returnsCorrectCommandType() throws BongException {","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"        ParsedCommand command \u003d Parser.parse(\"list\");","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"        assertEquals(Bong.Command.LIST, command.command);","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"    void parse_todoCommand_returnsCorrectDescription() throws BongException {","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"        ParsedCommand command \u003d Parser.parse(\"todo read book\");","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"        assertEquals(Bong.Command.TODO, command.command);","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"        assertEquals(\"read book\", command.description);","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"    void parse_todoCommandEmptyDescription_throwsBongException() {","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zzzyans"},"content":"        Exception exception \u003d assertThrows(BongException.class, () -\u003e Parser.parse(\"todo \"));","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zzzyans"},"content":"        assertEquals(\"A todo needs a description!\", exception.getMessage());","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zzzyans"},"content":"    void parse_deadlineCommand_returnsCorrectDetails() throws BongException {","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zzzyans"},"content":"        ParsedCommand command \u003d Parser.parse(\"deadline return book /by 2025-10-16 1800\");","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zzzyans"},"content":"        assertEquals(Bong.Command.DEADLINE, command.command);","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zzzyans"},"content":"        assertEquals(\"return book\", command.description);","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zzzyans"},"content":"        assertEquals(\"2025-10-16 1800\", command.deadline);","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zzzyans"},"content":"    void parse_deadlineCommandMissingBy_throwsBongException() {","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zzzyans"},"content":"        Exception exception \u003d assertThrows(BongException.class, () -\u003e Parser.parse(\"deadline return book\"));","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zzzyans"},"content":"        assertTrue(exception.getMessage().contains(\"Looks like your \u0027deadline\u0027 is missing details!\"));","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zzzyans"},"content":"    void parse_deadlineCommandEmptyDescription_throwsBongException() {","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zzzyans"},"content":"        Exception exception \u003d assertThrows(BongException.class, () -\u003e Parser.parse(\"deadline /by 2025-10-16 1800\"));","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zzzyans"},"content":"        assertTrue(exception.getMessage().contains(\"Looks like your \u0027deadline\u0027 is missing details!\"));","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zzzyans"},"content":"    void parse_deadlineCommandEmptyTime_throwsBongException() {","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zzzyans"},"content":"        Exception exception \u003d assertThrows(BongException.class, () -\u003e Parser.parse(\"deadline return book /by \"));","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zzzyans"},"content":"        assertTrue(exception.getMessage().contains(\"Looks like your \u0027deadline\u0027 is missing details!\"));","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zzzyans"},"content":"    void parse_eventCommand_returnsCorrectDetails() throws BongException {","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zzzyans"},"content":"        ParsedCommand command \u003d Parser.parse(\"event project meeting /from 2025-09-30 1200 /to 2025-09-30 1500\");","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zzzyans"},"content":"        assertEquals(Bong.Command.EVENT, command.command);","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zzzyans"},"content":"        assertEquals(\"project meeting\", command.description);","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zzzyans"},"content":"        assertEquals(\"2025-09-30 1200\", command.eventStart);","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zzzyans"},"content":"        assertEquals(\"2025-09-30 1500\", command.eventEnd);","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zzzyans"},"content":"    void parse_eventCommandMissingFrom_throwsBongException() {","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zzzyans"},"content":"        Exception exception \u003d assertThrows(BongException.class, () -\u003e Parser.parse(\"event project meeting /to 2025-09-30 1500\"));","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zzzyans"},"content":"        assertTrue(exception.getMessage().contains(\"Looks like your \u0027event\u0027 is missing details!\"));","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zzzyans"},"content":"    void parse_eventCommandMissingTo_throwsBongException() {","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zzzyans"},"content":"        Exception exception \u003d assertThrows(BongException.class, () -\u003e Parser.parse(\"event project meeting /from 2025-09-30 1200\"));","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zzzyans"},"content":"        assertTrue(exception.getMessage().contains(\"Looks like your \u0027event\u0027 is missing details!\"));","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zzzyans"},"content":"    void parse_eventCommandEmptyDescription_throwsBongException() {","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zzzyans"},"content":"        Exception exception \u003d assertThrows(BongException.class, () -\u003e Parser.parse(\"event /from 2025-09-30 1200 /to 2025-09-30 1500\"));","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zzzyans"},"content":"        assertTrue(exception.getMessage().contains(\"Looks like your \u0027event\u0027 is missing details!\"));","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zzzyans"},"content":"    void parse_markCommand_returnsCorrectTaskNumber() throws BongException {","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zzzyans"},"content":"        ParsedCommand command \u003d Parser.parse(\"mark 1\");","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zzzyans"},"content":"        assertEquals(Bong.Command.MARK, command.command);","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zzzyans"},"content":"        assertEquals(1, command.taskNumber);","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zzzyans"},"content":"    void parse_markCommandNonNumeric_throwsBongException() {","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zzzyans"},"content":"        Exception exception \u003d assertThrows(BongException.class, () -\u003e Parser.parse(\"mark abc\"));","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zzzyans"},"content":"        assertEquals(\"The task number provided is invalid. Please enter a valid number.\", exception.getMessage());","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zzzyans"},"content":"    void parse_markCommandEmptyNumber_throwsBongException() {","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zzzyans"},"content":"        Exception exception \u003d assertThrows(BongException.class, () -\u003e Parser.parse(\"mark \"));","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zzzyans"},"content":"        assertEquals(\"The task number cannot be empty for mark command.\", exception.getMessage());","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zzzyans"},"content":"    void parse_unmarkCommand_returnsCorrectTaskNumber() throws BongException {","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zzzyans"},"content":"        ParsedCommand command \u003d Parser.parse(\"unmark 5\");","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zzzyans"},"content":"        assertEquals(Bong.Command.UNMARK, command.command);","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zzzyans"},"content":"        assertEquals(5, command.taskNumber);","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zzzyans"},"content":"    void parse_deleteCommand_returnsCorrectTaskNumber() throws BongException {","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zzzyans"},"content":"        ParsedCommand command \u003d Parser.parse(\"delete 2\");","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zzzyans"},"content":"        assertEquals(Bong.Command.DELETE, command.command);","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zzzyans"},"content":"        assertEquals(2, command.taskNumber);","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zzzyans"},"content":"    void parse_unknownCommand_throwsBongException() {","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zzzyans"},"content":"        Exception exception \u003d assertThrows(BongException.class, () -\u003e Parser.parse(\"abcde command\"));","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zzzyans"},"content":"        assertTrue(exception.getMessage().contains(\"I don\u0027t understand that command.\"));","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zzzyans"},"content":"    void parse_emptyInput_throwsBongException() {","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zzzyans"},"content":"        Exception exception \u003d assertThrows(BongException.class, () -\u003e Parser.parse(\"\"));","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zzzyans"},"content":"        assertTrue(exception.getMessage().contains(\"I don\u0027t understand that command.\"));","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-07T03:23:38","isFullCredit":false}],"authorContributionMap":{"zzzyans":130}},{"path":"src/test/java/bong/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"package bong.task;","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import bong.exception.BongException;","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"public class TaskListTest {","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"    void setUp() {","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"    void addTask_singleTask_sizeIncreases() {","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"        Task task \u003d new Task(\"Test Task\");","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"        assertEquals(task, taskList.getTasks().get(0));","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zzzyans"},"content":"    void addTask_multipleTasks_correctOrderAndSize() throws BongException {","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zzzyans"},"content":"        Task task1 \u003d new Todo(\"Read Book\");","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zzzyans"},"content":"        Task task2 \u003d new Deadline(\"Return Book\", \"2025-10-16 1800\");","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zzzyans"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zzzyans"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zzzyans"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zzzyans"},"content":"        assertEquals(task1, taskList.getTasks().get(0));","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zzzyans"},"content":"        assertEquals(task2, taskList.getTasks().get(1));","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zzzyans"},"content":"    void deleteTask_validIndex_taskRemovedAndSizeDecreases() throws BongException {","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zzzyans"},"content":"        Task task1 \u003d new Todo(\"Task One\");","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zzzyans"},"content":"        Task task2 \u003d new Todo(\"Task Two\");","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zzzyans"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zzzyans"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zzzyans"},"content":"        Task removed \u003d taskList.deleteTask(1);","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zzzyans"},"content":"        assertEquals(task1, removed);","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zzzyans"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zzzyans"},"content":"        assertEquals(task2, taskList.getTasks().get(0));","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zzzyans"},"content":"    void deleteTask_lastTask_listBecomesEmpty() throws BongException {","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zzzyans"},"content":"        Task task \u003d new Todo(\"Single Task\");","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zzzyans"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zzzyans"},"content":"        Task removed \u003d taskList.deleteTask(1);","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zzzyans"},"content":"        assertEquals(task, removed);","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zzzyans"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zzzyans"},"content":"        assertTrue(taskList.getTasks().isEmpty());","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zzzyans"},"content":"    void deleteTask_invalidIndexTooSmall_throwsBongException() {","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zzzyans"},"content":"        taskList.addTask(new Todo(\"Task One\"));","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zzzyans"},"content":"        Exception exception \u003d assertThrows(BongException.class, () -\u003e taskList.deleteTask(0));","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zzzyans"},"content":"        assertEquals(\"You do not have this many tasks in your list!\", exception.getMessage());","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zzzyans"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zzzyans"},"content":"    void deleteTask_invalidIndexTooLarge_throwsBongException() {","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zzzyans"},"content":"        taskList.addTask(new Todo(\"Task One\"));","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zzzyans"},"content":"        Exception exception \u003d assertThrows(BongException.class, () -\u003e taskList.deleteTask(2));","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zzzyans"},"content":"        assertEquals(\"You do not have this many tasks in your list!\", exception.getMessage());","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zzzyans"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zzzyans"},"content":"    void markTask_validIndex_taskIsDone() throws BongException {","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zzzyans"},"content":"        Task task \u003d new Todo(\"Unmarked Task\");","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zzzyans"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zzzyans"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zzzyans"},"content":"        Task marked \u003d taskList.markTask(1);","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zzzyans"},"content":"        assertTrue(marked.isDone());","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zzzyans"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zzzyans"},"content":"    void markTask_invalidIndex_throwsBongException() {","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zzzyans"},"content":"        taskList.addTask(new Todo(\"Task One\"));","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zzzyans"},"content":"        Exception exception \u003d assertThrows(BongException.class, () -\u003e taskList.markTask(0));","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zzzyans"},"content":"        assertEquals(\"You do not have this many tasks in your list!\", exception.getMessage());","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zzzyans"},"content":"    void unmarkTask_validIndex_taskIsDone() throws BongException {","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zzzyans"},"content":"        Task task \u003d new Todo(\"Marked Task\");","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zzzyans"},"content":"        task.mark();","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zzzyans"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zzzyans"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zzzyans"},"content":"        Task unmarked \u003d taskList.unmarkTask(1);","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zzzyans"},"content":"        assertFalse(unmarked.isDone());","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zzzyans"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zzzyans"},"content":"    void unmarkTask_invalidIndex_throwsBongException() {","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zzzyans"},"content":"        taskList.addTask(new Todo(\"Task One\"));","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zzzyans"},"content":"        Exception exception \u003d assertThrows(BongException.class, () -\u003e taskList.markTask(99));","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zzzyans"},"content":"        assertEquals(\"You do not have this many tasks in your list!\", exception.getMessage());","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zzzyans"},"content":"    void getTask_validIndex_returnsCorrectTask() throws BongException {","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zzzyans"},"content":"        Task task1 \u003d new Todo(\"Task One\");","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zzzyans"},"content":"        Task task2 \u003d new Todo(\"Task Two\");","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zzzyans"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zzzyans"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"zzzyans"},"content":"        assertEquals(task1, taskList.getTask(1));","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zzzyans"},"content":"        assertEquals(task2, taskList.getTask(2));","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"zzzyans"},"content":"    void getTask_invalidIndex_throwsBongException() {","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"zzzyans"},"content":"        taskList.addTask(new Todo(\"Task One\"));","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"zzzyans"},"content":"        assertThrows(BongException.class, () -\u003e taskList.getTask(0));","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"zzzyans"},"content":"        assertThrows(BongException.class, () -\u003e taskList.getTask(2));","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"zzzyans"},"content":"    void size_emptyList_returnsZero() {","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"zzzyans"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"zzzyans"},"content":"    void size_afterAddingTasks_returnsCorrectCount() {","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"zzzyans"},"content":"        taskList.addTask(new Todo(\"Task One\"));","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"zzzyans"},"content":"        taskList.addTask(new Todo(\"Task Two\"));","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"zzzyans"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"zzzyans"},"content":"    @Test","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"zzzyans"},"content":"    void size_afterDeletingTasks_returnsCorrectCount() throws BongException {","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"zzzyans"},"content":"        taskList.addTask(new Todo(\"Task One\"));","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"zzzyans"},"content":"        taskList.addTask(new Todo(\"Task Two\"));","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"zzzyans"},"content":"        taskList.deleteTask(1);","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"zzzyans"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-09-06T16:54:22","isFullCredit":false}],"authorContributionMap":{"zzzyans":160}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"todo borrow book","lastModifiedDate":"2025-08-22T00:43:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"deadline return book /by 2025-10-16 1800","lastModifiedDate":"2025-09-08T17:08:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"event project meeting /from 2025-09-30 1200 /to 2025-09-30 1500","lastModifiedDate":"2025-09-01T21:31:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"find book","lastModifiedDate":"2025-09-15T23:32:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"mark 2","lastModifiedDate":"2025-08-22T00:43:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"list","lastModifiedDate":"2025-08-22T00:43:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"unmark 2","lastModifiedDate":"2025-08-22T00:43:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"list","lastModifiedDate":"2025-08-22T00:43:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"delete 2","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"list","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"mark 3","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"unmark 3","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"hi","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"todo","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"deadline","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"event","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"bye","lastModifiedDate":"2025-08-22T00:43:38","isFullCredit":false}],"authorContributionMap":{"zzzyans":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"java -classpath ..\\bin Bong \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"zzzyans":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"java -classpath ../bin Bong \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"zzzyans":1,"-":37}}]
