[{"path":"src/main/java/Bong.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"import java.util.List;","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"/*","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":" * Bong is a simple task management command-line application.","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":" * It allows users to add, list, mark, unmark, and delete tasks.","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":" * Tasks can be Todos, Deadlines, or Events.","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":" */","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zzzyans"},"content":"public class Bong {","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zzzyans"},"content":"    /* Storage configuration */","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zzzyans"},"content":"    private static final String DATA_DIR \u003d \"data\";","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zzzyans"},"content":"    private static final String DATA_FILE \u003d \"bong.txt\";","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zzzyans"},"content":"    private static final Path STORAGE_PATH \u003d Paths.get(DATA_DIR, DATA_FILE);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zzzyans"},"content":"    private static final String LINE \u003d \"------------------------------\";","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zzzyans"},"content":"    /*","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zzzyans"},"content":"     * Command represents the supported user command types.","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zzzyans"},"content":"    public static enum Command {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zzzyans"},"content":"        LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, UNKNOWN","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zzzyans"},"content":"    public static class Task {","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zzzyans"},"content":"        protected String description;","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zzzyans"},"content":"        protected boolean isDone;","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zzzyans"},"content":"    ","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zzzyans"},"content":"        public Task(String description) {","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zzzyans"},"content":"            this.description \u003d description;","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zzzyans"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zzzyans"},"content":"    ","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zzzyans"},"content":"        public String getStatusIcon() {","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zzzyans"},"content":"            return (this.isDone ? \"X\" : \" \"); ","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zzzyans"},"content":"        public String getDescription() {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zzzyans"},"content":"            return this.description;","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zzzyans"},"content":"        public boolean isDone() {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zzzyans"},"content":"            return this.isDone;","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zzzyans"},"content":"        public void mark() {","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zzzyans"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zzzyans"},"content":"        public void unmark() {","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zzzyans"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zzzyans"},"content":"        @Override","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zzzyans"},"content":"        public String toString() {","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zzzyans"},"content":"            return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zzzyans"},"content":"        } ","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zzzyans"},"content":"    public static class Todo extends Task {","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zzzyans"},"content":"        public Todo(String description) {","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zzzyans"},"content":"            super(description);","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zzzyans"},"content":"        @Override","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zzzyans"},"content":"        public String toString() {","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zzzyans"},"content":"            return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zzzyans"},"content":"    public static class Deadline extends Task {","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zzzyans"},"content":"        protected String deadline;","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zzzyans"},"content":"        public Deadline(String description, String deadline) {","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zzzyans"},"content":"            super(description);","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zzzyans"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zzzyans"},"content":"        public String getDeadline() {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zzzyans"},"content":"            return this.deadline;","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zzzyans"},"content":"        @Override","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zzzyans"},"content":"        public String toString() {","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zzzyans"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + this.deadline + \")\";","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zzzyans"},"content":"    public static class Event extends Task {","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zzzyans"},"content":"        protected String start;","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zzzyans"},"content":"        protected String end;","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zzzyans"},"content":"        public Event(String description, String start, String end) {","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zzzyans"},"content":"            super(description);","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zzzyans"},"content":"            this.start \u003d start;","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zzzyans"},"content":"            this.end \u003d end;","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zzzyans"},"content":"        public String getStart() {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zzzyans"},"content":"            return this.start;","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zzzyans"},"content":"        public String getEnd() {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zzzyans"},"content":"            return this.end;","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zzzyans"},"content":"        @Override","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zzzyans"},"content":"        public String toString() {","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zzzyans"},"content":"            return \"[E]\" + super.toString() + \" (from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zzzyans"},"content":"    public static class BongException extends Exception {","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zzzyans"},"content":"        public BongException(String msg) {","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zzzyans"},"content":"            super(msg);","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"zzzyans"},"content":"    /*","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zzzyans"},"content":"     * Main method to run the Bong application.","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"zzzyans"},"content":"     * It initialises the task list, loads existing tasks, and processes user commands.","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"zzzyans"},"content":"     * ","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"zzzyans"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"zzzyans"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"zzzyans"},"content":"        System.out.println(\"    Hello! I\u0027m Bong!\\n    What can I do for you?\");","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"zzzyans"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"zzzyans"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"zzzyans"},"content":"        String userInput;","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"zzzyans"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"zzzyans"},"content":"        try {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"zzzyans"},"content":"            loadTasks(tasks);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"zzzyans"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"zzzyans"},"content":"            System.out.println(\"    Failed to load tasks: \" + e.getMessage());","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"zzzyans"},"content":"            System.out.println(LINE);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T18:19:18","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"zzzyans"},"content":"        while (true) {","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"zzzyans"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"zzzyans"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"zzzyans"},"content":"                System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"zzzyans"},"content":"                break;","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"zzzyans"},"content":"            }","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"zzzyans"},"content":"            try {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"zzzyans"},"content":"                Command command \u003d Command.UNKNOWN;","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"zzzyans"},"content":"                String[] inputParts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"zzzyans"},"content":"                String commandWord \u003d inputParts[0].toUpperCase();","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"zzzyans"},"content":"                if (commandWord.isEmpty()) {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"zzzyans"},"content":"                    command \u003d Command.UNKNOWN;","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"zzzyans"},"content":"                } else {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"zzzyans"},"content":"                    try {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"zzzyans"},"content":"                        command \u003d Command.valueOf(commandWord);","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"zzzyans"},"content":"                    } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"zzzyans"},"content":"                    }","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"zzzyans"},"content":"                } ","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"zzzyans"},"content":"                switch (command) {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"zzzyans"},"content":"                    case LIST:","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"zzzyans"},"content":"                        int listNumber \u003d 1;","lastModifiedDate":"2025-08-21T18:19:18","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"zzzyans"},"content":"                        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(\"    \" + listNumber + \". \" + tasks.get(i).toString());","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"zzzyans"},"content":"                            listNumber++;","lastModifiedDate":"2025-08-21T18:19:18","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-08-21T18:19:18","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"zzzyans"},"content":"                        break;","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"zzzyans"},"content":"                    case MARK:","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"zzzyans"},"content":"                        String markNumberString \u003d userInput.substring(5);","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"zzzyans"},"content":"                        int markNumber \u003d Integer.parseInt(markNumberString);","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"zzzyans"},"content":"                        if (markNumber \u003e tasks.size() || markNumber \u003c\u003d 0) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"zzzyans"},"content":"                            throw new BongException(\"You do not have this many tasks in your list!\");","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"zzzyans"},"content":"                        tasks.get(markNumber - 1).mark();","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(\"        \" + tasks.get(markNumber - 1).toString());","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"zzzyans"},"content":"                        saveTasks(tasks);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"zzzyans"},"content":"                        break;","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"zzzyans"},"content":"                    case UNMARK:","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"zzzyans"},"content":"                        String unmarkNumberString \u003d userInput.substring(7);","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"zzzyans"},"content":"                        int unmarkNumber \u003d Integer.parseInt(unmarkNumberString);","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"zzzyans"},"content":"                        if (unmarkNumber \u003e tasks.size() || unmarkNumber \u003c\u003d 0) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"zzzyans"},"content":"                            throw new BongException(\"You do not have this many tasks in your list!\");","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"zzzyans"},"content":"                        tasks.get(unmarkNumber - 1).unmark();","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(\"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-08-21T19:11:47","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(\"        \" + tasks.get(unmarkNumber - 1).toString());","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"zzzyans"},"content":"                        saveTasks(tasks);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"zzzyans"},"content":"                        break;","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"zzzyans"},"content":"                    case TODO:","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"zzzyans"},"content":"                        try {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"zzzyans"},"content":"                            String todoDescription \u003d userInput.substring(5).trim();","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"zzzyans"},"content":"                            if (todoDescription.isEmpty()) {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"zzzyans"},"content":"                                throw new BongException(\"A todo needs a description!\");","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"zzzyans"},"content":"                            }","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"zzzyans"},"content":"                            tasks.add(new Todo(todoDescription));","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(\"        \" + tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(\"    \" + \"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(LINE);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"zzzyans"},"content":"                            saveTasks(tasks);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"zzzyans"},"content":"                            break;","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"zzzyans"},"content":"                        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"zzzyans"},"content":"                            throw new BongException(\"A todo needs a description!\");","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"zzzyans"},"content":"                    case DEADLINE:","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"zzzyans"},"content":"                        try {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"zzzyans"},"content":"                            String[] deadlineParts \u003d userInput.split(\" /by \", 2);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"zzzyans"},"content":"                            if (deadlineParts.length \u003c 2) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"zzzyans"},"content":"                                throw new BongException(\"Looks like your \u0027deadline\u0027 is missing details! Format: deadline \u003cdescription\u003e /by time\");","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"zzzyans"},"content":"                            }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"zzzyans"},"content":"                            String deadlineDescription \u003d deadlineParts[0].substring(9).trim();","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"zzzyans"},"content":"                            String deadlineTime \u003d deadlineParts[1].trim();","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"zzzyans"},"content":"                            if (deadlineDescription.isEmpty() || deadlineTime.isEmpty()) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"zzzyans"},"content":"                                throw new BongException(\"Looks like your \u0027deadline\u0027 is missing details! Description or deadline cannot be empty.\");","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"zzzyans"},"content":"                            }","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"zzzyans"},"content":"                            tasks.add(new Deadline(deadlineDescription, deadlineTime));","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(\"        \" + tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(\"    \" + \"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(LINE);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"zzzyans"},"content":"                            saveTasks(tasks);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"zzzyans"},"content":"                            break;","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"zzzyans"},"content":"                        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"zzzyans"},"content":"                            throw new BongException(\"Looks like your \u0027deadline\u0027 is missing details! Format: deadline \u003cdescription\u003e /by time\");","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"zzzyans"},"content":"                    case EVENT:","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"zzzyans"},"content":"                        try {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"zzzyans"},"content":"                            String regex \u003d \" /from | /to \";","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"zzzyans"},"content":"                            String[] eventParts \u003d userInput.split(regex, 3);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"zzzyans"},"content":"                            if (eventParts.length \u003c 3) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"zzzyans"},"content":"                                throw new BongException(\"Looks like your \u0027event\u0027 is missing details! Format: event \u003cdescription\u003e /from \u003cstart time\u003e /to \u003cend time\u003e\");","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"zzzyans"},"content":"                            }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"zzzyans"},"content":"                            String description \u003d eventParts[0].substring(6).trim();","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"zzzyans"},"content":"                            String startTime \u003d eventParts[1].trim();","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"zzzyans"},"content":"                            String endTime \u003d eventParts[2].trim();","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"zzzyans"},"content":"                            if (description.isEmpty() || startTime.isEmpty() || endTime.isEmpty()) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"zzzyans"},"content":"                                throw new BongException(\"Looks like your \u0027event\u0027 is missing details! Description, start time and end time cannot be empty.\");","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"zzzyans"},"content":"                            }","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"zzzyans"},"content":"                            tasks.add(new Event(description, eventParts[1], eventParts[2]));","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-22T00:40:14","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(\"        \" + tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(\"    \" + \"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"zzzyans"},"content":"                            System.out.println(LINE);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"zzzyans"},"content":"                            saveTasks(tasks);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"zzzyans"},"content":"                            break;","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"zzzyans"},"content":"                        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"zzzyans"},"content":"                            throw new BongException(\"Looks like your \u0027event\u0027 is missing details! Description, start time and end time cannot be empty.\");","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"zzzyans"},"content":"                    case DELETE:","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"zzzyans"},"content":"                        String taskNumberString \u003d userInput.substring(7);","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"zzzyans"},"content":"                        int taskNumber \u003d Integer.parseInt(taskNumberString);","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"zzzyans"},"content":"                        if (taskNumber \u003e tasks.size() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"zzzyans"},"content":"                            throw new BongException(\"You do not have this many tasks in your list!\");","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"zzzyans"},"content":"                        Task removedTask \u003d tasks.remove(taskNumber - 1);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(\"        \" + removedTask);","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"zzzyans"},"content":"                        saveTasks(tasks);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"zzzyans"},"content":"                        break;","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"zzzyans"},"content":"                    case UNKNOWN:","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"zzzyans"},"content":"                    default:","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"zzzyans"},"content":"                        throw new BongException(\"    Hmm, I dont understand that command.\\n    Please try \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027, \u0027list\u0027, \u0027mark\u0027, \u0027unmark\u0027, \u0027delete\u0027 or \u0027bye\u0027.\");","lastModifiedDate":"2025-08-22T17:29:47","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"zzzyans"},"content":"                }","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"zzzyans"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"zzzyans"},"content":"                System.out.println(\"    The task number provided is invalid. Please enter a valid number.\");","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"zzzyans"},"content":"                System.out.println(LINE);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"zzzyans"},"content":"            } catch (BongException e) { ","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"zzzyans"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"zzzyans"},"content":"                System.out.println(LINE);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"zzzyans"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"zzzyans"},"content":"                System.out.println(\"An unexpected error occurred: \" + e.getMessage());","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"zzzyans"},"content":"                System.out.println(LINE);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"zzzyans"},"content":"            }","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"zzzyans"},"content":"        scanner.close();","lastModifiedDate":"2025-08-21T17:47:59","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"zzzyans"},"content":"    /*","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"zzzyans"},"content":"     * Loads tasks from the from the storage file into the provided task list.","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"zzzyans"},"content":"     * If the data directory or file does not exist, it will be created.","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"zzzyans"},"content":"     * Corrupted lines in the storage file will be skipped with a warning.","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"zzzyans"},"content":"     * ","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"zzzyans"},"content":"     * @param tasks The list where loaded tasks will be added.","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"zzzyans"},"content":"     * @throws IOException If an I/O error occurs while accessing the storage file.","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"zzzyans"},"content":"    private static void loadTasks(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"zzzyans"},"content":"        Path parent \u003d STORAGE_PATH.getParent();","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"zzzyans"},"content":"        if (parent !\u003d null \u0026\u0026 Files.notExists(parent)) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"zzzyans"},"content":"            Files.createDirectories(parent);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"zzzyans"},"content":"        if (Files.notExists(STORAGE_PATH)) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"zzzyans"},"content":"            Files.createFile(STORAGE_PATH);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"zzzyans"},"content":"            return;","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"zzzyans"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(STORAGE_PATH, StandardCharsets.UTF_8);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"zzzyans"},"content":"        for (String line : lines) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"zzzyans"},"content":"            if (line \u003d\u003d null || line.trim().isEmpty()) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"zzzyans"},"content":"                continue;","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"zzzyans"},"content":"            }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"zzzyans"},"content":"            String[] parts \u003d line.split(\"\\\\s*\\\\|\\\\s*\", -1);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"zzzyans"},"content":"            // Expect at least: type | done | description","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"zzzyans"},"content":"            if (parts.length \u003c 3) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"zzzyans"},"content":"                System.out.println(\"    Warning: Skipping corrupted line in storage: \" + line);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"zzzyans"},"content":"                continue;","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"zzzyans"},"content":"            }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"zzzyans"},"content":"            String type \u003d parts[0].trim();","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"zzzyans"},"content":"            boolean done \u003d parts[1].trim().equals(\"1\") || parts[1].trim().equalsIgnoreCase(\"true\");","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"zzzyans"},"content":"            try {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"zzzyans"},"content":"                switch (type) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"zzzyans"},"content":"                    case \"T\":","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"zzzyans"},"content":"                        Task todo \u003d new Todo(parts[2].trim());","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"zzzyans"},"content":"                        if (done) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"zzzyans"},"content":"                            todo.mark();","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"zzzyans"},"content":"                        tasks.add(todo);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"zzzyans"},"content":"                        break;","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"zzzyans"},"content":"                    case \"D\":","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"zzzyans"},"content":"                        if (parts.length \u003c 4) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"zzzyans"},"content":"                            throw new IllegalArgumentException(\"missing deadline field\");","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"zzzyans"},"content":"                        Task deadline \u003d new Deadline(parts[2].trim(), parts[3].trim());","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"zzzyans"},"content":"                        if (done) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"zzzyans"},"content":"                            deadline.mark();","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"zzzyans"},"content":"                        tasks.add(deadline);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"zzzyans"},"content":"                        break;","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"zzzyans"},"content":"                    case \"E\":","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"zzzyans"},"content":"                        if (parts.length \u003c 5) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"zzzyans"},"content":"                            throw new IllegalArgumentException(\"missing event fields\");","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"zzzyans"},"content":"                        Task event \u003d new Event(parts[2].trim(), parts[3].trim(), parts[4].trim());","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"zzzyans"},"content":"                        if (done) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"zzzyans"},"content":"                            event.mark();","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"zzzyans"},"content":"                        }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"zzzyans"},"content":"                        tasks.add(event);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"zzzyans"},"content":"                        break;","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"zzzyans"},"content":"                    default:","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"zzzyans"},"content":"                        System.out.println(\"    Warning: Skipping unknown task type in storage: \" + line);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"zzzyans"},"content":"                }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"zzzyans"},"content":"            } catch (Exception e ) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"zzzyans"},"content":"                System.out.println(\"    Warning: Skipping corrupted line in storage: \" + line);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"zzzyans"},"content":"            }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"zzzyans"},"content":"    /* ","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"zzzyans"},"content":"     * Saves all tasks to the storage file (overwrites).","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"zzzyans"},"content":"     * ","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"zzzyans"},"content":"     * @param tasks The list of tasks to save.","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"zzzyans"},"content":"     * @throws IOException If writing fails","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"zzzyans"},"content":"    private static void saveTasks(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"zzzyans"},"content":"        Path parent \u003d STORAGE_PATH.getParent();","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"zzzyans"},"content":"        if (parent !\u003d null \u0026\u0026 Files.notExists(parent)) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"zzzyans"},"content":"            Files.createDirectories(parent);","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"zzzyans"},"content":"        try (BufferedWriter writer \u003d Files.newBufferedWriter(","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"zzzyans"},"content":"            STORAGE_PATH, StandardCharsets.UTF_8, StandardOpenOption.CREATE, StandardOpenOption.TRUNCATE_EXISTING)) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"zzzyans"},"content":"                for (Task t : tasks) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"zzzyans"},"content":"                    writer.write(serialiseTask(t));","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"zzzyans"},"content":"                    writer.newLine();","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"zzzyans"},"content":"                }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"zzzyans"},"content":"","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"zzzyans"},"content":"    /*","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"zzzyans"},"content":"     * Serialise a task into a single-line storage representation.","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"zzzyans"},"content":"     * ","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"zzzyans"},"content":"     * @param task The task to serialise.","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"zzzyans"},"content":"     * @return Serialised string.","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"zzzyans"},"content":"     */","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"zzzyans"},"content":"    private static String serialiseTask(Task task) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"zzzyans"},"content":"        String doneFlag \u003d task.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"zzzyans"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"zzzyans"},"content":"            return \"T\" + \" | \" + doneFlag + \" | \" + task.getDescription();","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"zzzyans"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"zzzyans"},"content":"            Deadline d \u003d (Deadline) task;","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"zzzyans"},"content":"            return \"D\" + \" | \" + doneFlag + \" | \" + d.getDescription() + \" | \" + d.getDeadline();","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"zzzyans"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"zzzyans"},"content":"            Event e \u003d (Event) task;","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"zzzyans"},"content":"            return \"E\" + \" | \" + doneFlag + \" | \" + e.getDescription() + \" | \" + e.getStart() + \" to \" + e.getEnd();","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"zzzyans"},"content":"        }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"zzzyans"},"content":"        return \"T\" + \" | \" + doneFlag + \" | \" + task.getDescription();","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"zzzyans"},"content":"    }","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"zzzyans"},"content":"}","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false}],"authorContributionMap":{"zzzyans":410}},{"path":"src/main/java/data/bong.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"T | 0 | borrow book","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"D | 1 | return book | Sunday","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"E | 0 | project meeting | Mon 2pm to 4pm","lastModifiedDate":"2025-08-31T16:45:18","isFullCredit":false}],"authorContributionMap":{"zzzyans":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zzzyans"},"content":"todo borrow book","lastModifiedDate":"2025-08-22T00:43:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zzzyans"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-22T00:43:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zzzyans"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-22T00:43:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zzzyans"},"content":"mark 2","lastModifiedDate":"2025-08-22T00:43:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zzzyans"},"content":"list","lastModifiedDate":"2025-08-22T00:43:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zzzyans"},"content":"unmark 2","lastModifiedDate":"2025-08-22T00:43:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zzzyans"},"content":"list","lastModifiedDate":"2025-08-22T00:43:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zzzyans"},"content":"delete 2","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zzzyans"},"content":"list","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zzzyans"},"content":"mark 3","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zzzyans"},"content":"unmark 3","lastModifiedDate":"2025-08-22T15:26:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zzzyans"},"content":"hi","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zzzyans"},"content":"todo","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zzzyans"},"content":"deadline","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zzzyans"},"content":"event","lastModifiedDate":"2025-08-22T01:33:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zzzyans"},"content":"bye","lastModifiedDate":"2025-08-22T00:43:38","isFullCredit":false}],"authorContributionMap":{"zzzyans":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zzzyans"},"content":"java -classpath ..\\bin Bong \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"zzzyans":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zzzyans"},"content":"java -classpath ../bin Bong \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-21T17:31:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"zzzyans":1,"-":37}}]
