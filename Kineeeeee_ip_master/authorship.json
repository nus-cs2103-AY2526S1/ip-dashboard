[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-08-30T16:02:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kineeeeee"},"content":"    mainClass.set(\"sora.gui.Launcher\")","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kineeeeee"},"content":"jar {","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kineeeeee"},"content":"    manifest {","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kineeeeee"},"content":"        attributes(","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kineeeeee"},"content":"                \u0027Main-Class\u0027: application.mainClass.get()","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kineeeeee"},"content":"        )","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kineeeeee"},"content":"    archiveBaseName \u003d \"sora.jar\"","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kineeeeee"},"content":"checkstyle {","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kineeeeee"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":29,"-":39}},{"path":"data/sora.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"T | 1 | play football","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":1}},{"path":"docs/AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"# AI Enhancements in Sora","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"This file documents the recent AI-assisted improvements made to the Sora project.","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"## Code Quality Improvements","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"- Refactored code to improve readability and maintainability.","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"- Used assertions where applicable to enforce expected behavior.","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"- Simplified control flow and removed redundant code.","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"## Documentation Improvements","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"- Added **Javadoc comments** to all public classes and methods.","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"- Ensures future developers can understand and use the code easily.","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"These changes aim to make the Sora codebase more robust, readable, and easier to maintain.","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":14}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"# Sora User Guide","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"Sora Chatbot","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"Sora is a simple task management chatbot that helps you keep track of your todos, deadlines, afters and events through a friendly CLI or GUI interface.","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"---","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"## 🚀 Getting Started","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"### Prerequisites","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"- Java 17 or above installed on your machine.","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"### Running Duke","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"1. Clone this repository.","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"2. Compile the code:","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"   ```bash","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"   javac -classpath src -d bin src/**/*.java","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"   ```","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"3. Run the chatbot:","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"   ```bash","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"   java -classpath bin Sora","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"   ```","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"4. A GUI window will open, and you can start typing commands.","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"---","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"## ✨ Features","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"### 1. Add a Todo","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"```text","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"todo TASK_DESCRIPTION","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"Example:","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"```text","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"todo read book","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"### 2. Add a Deadline","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"```text","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"deadline TASK_DESCRIPTION /by dd/mm/yyyy HHmm","lastModifiedDate":"2025-09-19T19:04:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"```","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"Example:","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"```text","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"deadline return book /by 15/10/2025 2359","lastModifiedDate":"2025-09-19T19:04:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kineeeeee"},"content":"```","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kineeeeee"},"content":"### 3. Add an After","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kineeeeee"},"content":"```text","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kineeeeee"},"content":"after TASK_DESCRIPTION /required dd/mm/yyyy HHmm","lastModifiedDate":"2025-09-19T19:04:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kineeeeee"},"content":"```","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kineeeeee"},"content":"Example:","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kineeeeee"},"content":"```text","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kineeeeee"},"content":"after return book /required 15/10/2025 2359","lastModifiedDate":"2025-09-19T19:04:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kineeeeee"},"content":"```","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kineeeeee"},"content":"### 4. Add an Event","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kineeeeee"},"content":"```text","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kineeeeee"},"content":"event TASK_DESCRIPTION /from dd/mm/yyyy HHmm /to dd/mm/yyyy HHmm","lastModifiedDate":"2025-09-19T19:04:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kineeeeee"},"content":"```","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kineeeeee"},"content":"Example:","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kineeeeee"},"content":"```text","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kineeeeee"},"content":"event project meeting /from 15/10/2025 1400 /to 15/10/2025 1600","lastModifiedDate":"2025-09-19T19:04:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kineeeeee"},"content":"```","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kineeeeee"},"content":"### 5. List All Tasks","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kineeeeee"},"content":"```text","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kineeeeee"},"content":"list","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kineeeeee"},"content":"```","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kineeeeee"},"content":"### 6. Mark/Unmark a Task","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kineeeeee"},"content":"```text","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kineeeeee"},"content":"mark INDEX","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kineeeeee"},"content":"unmark INDEX","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kineeeeee"},"content":"```","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kineeeeee"},"content":"Example:","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kineeeeee"},"content":"```text","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kineeeeee"},"content":"mark 2","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kineeeeee"},"content":"```","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kineeeeee"},"content":"### 7. Delete a Task","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kineeeeee"},"content":"```text","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kineeeeee"},"content":"delete INDEX","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kineeeeee"},"content":"```","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kineeeeee"},"content":"Example:","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kineeeeee"},"content":"```text","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kineeeeee"},"content":"delete 1","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kineeeeee"},"content":"```","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kineeeeee"},"content":"### 8. Find Tasks by Keyword","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kineeeeee"},"content":"```text","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kineeeeee"},"content":"find KEYWORD","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kineeeeee"},"content":"Example:","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kineeeeee"},"content":"```text","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kineeeeee"},"content":"find book","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kineeeeee"},"content":"---","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kineeeeee"},"content":"## 📝 Example Session","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kineeeeee"},"content":"```text","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kineeeeee"},"content":"Hello! I\u0027m Sora","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kineeeeee"},"content":"What can I do for you today?","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kineeeeee"},"content":"todo read book","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Kineeeeee"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Kineeeeee"},"content":"  [T][ ] read book","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Kineeeeee"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Kineeeeee"},"content":"list","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Kineeeeee"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Kineeeeee"},"content":"1. [T][ ] read book","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Kineeeeee"},"content":"bye","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Kineeeeee"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Kineeeeee"},"content":"```","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Kineeeeee"},"content":"---","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Kineeeeee"},"content":"## 📸 Screenshot","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Kineeeeee"},"content":"![UI](./Ui.png)","lastModifiedDate":"2025-09-19T19:11:58","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":99,"-":22}},{"path":"src/main/java/sora/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"import java.util.Locale;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"import sora.list.TaskList;","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"import sora.storage.Storage;","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"import sora.task.After;","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"import sora.task.Deadline;","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"import sora.task.Event;","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"import sora.task.Task;","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"import sora.task.Todo;","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":" * The {@code Parser} class handles the parsing and execution of user commands.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":" * It interprets user input and modifies the {@code TaskList} accordingly.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"public class Parser {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"    private static final DateTimeFormatter format \u003d","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\", Locale.ENGLISH);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"     * Parses and executes the given user command.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"     * @param command the raw user input string.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"     * @param tasks the current {@code TaskList} to modify.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"     * @param ui the {@code Ui} instance to handle interactions.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"     * @param storage the {@code Storage} used for saving/loading tasks.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"     * @throws SoraException if the command is invalid or malformed.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"    public static String parse(String command, TaskList tasks, Ui ui,","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"                             Storage storage) throws SoraException {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"        assert command !\u003d null : \"Command must not be null\";","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"        assert tasks !\u003d null : \"TaskList must not be null\";","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"        assert ui !\u003d null : \"Ui must not be null\";","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"        assert storage !\u003d null : \"Storage must not be null\";","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"        String[] parts \u003d command.trim().split(\" \", 2);","lastModifiedDate":"2025-09-19T02:49:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"        String startWord \u003d parts[0].trim();","lastModifiedDate":"2025-09-19T02:46:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"        String description \u003d parts.length \u003d\u003d 1 ? \"\" : parts[1].trim();","lastModifiedDate":"2025-09-19T02:46:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"            return ui.showGoodbye();","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kineeeeee"},"content":"        } else {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kineeeeee"},"content":"            switch (startWord) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kineeeeee"},"content":"            case \"find\":","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kineeeeee"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kineeeeee"},"content":"                    throw new SoraException(\"Lack of keyword\");","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kineeeeee"},"content":"                ArrayList\u003cTask\u003e foundTask \u003d tasks.findTasks(description);","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kineeeeee"},"content":"                return ui.showFoundTask(foundTask);","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kineeeeee"},"content":"            case \"list\":","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kineeeeee"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kineeeeee"},"content":"                    return ui.showTaskList(tasks);","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kineeeeee"},"content":"                } else {","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kineeeeee"},"content":"                    throw new SoraException(\"Not a valid input\");","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kineeeeee"},"content":"            case \"mark\":","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kineeeeee"},"content":"                int x \u003d Integer.parseInt(description);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kineeeeee"},"content":"                tasks.mark(x - 1);","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kineeeeee"},"content":"                try {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kineeeeee"},"content":"                    storage.save(tasks);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kineeeeee"},"content":"                } catch (IOException e) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kineeeeee"},"content":"                    System.out.println(\"Can not save! \" + e.getMessage());","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kineeeeee"},"content":"                return ui.showMarkedTask(tasks.getTask(x - 1));","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kineeeeee"},"content":"            case \"unmark\":","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kineeeeee"},"content":"                int y \u003d Integer.parseInt(description);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kineeeeee"},"content":"                tasks.unmark(y - 1);","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kineeeeee"},"content":"                try {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kineeeeee"},"content":"                    storage.save(tasks);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kineeeeee"},"content":"                } catch (IOException e) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kineeeeee"},"content":"                    System.out.println(\"Can not save! \" + e.getMessage());","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kineeeeee"},"content":"                return ui.showUnmarkedTask(tasks.getTask(y - 1));","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kineeeeee"},"content":"            case \"delete\":","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kineeeeee"},"content":"                int z \u003d Integer.parseInt(description);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kineeeeee"},"content":"                Task deleted \u003d tasks.deleteTask(z - 1);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kineeeeee"},"content":"                try {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kineeeeee"},"content":"                    storage.save(tasks);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kineeeeee"},"content":"                } catch (IOException e) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kineeeeee"},"content":"                    System.out.println(\"Can not save! \" + e.getMessage());","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kineeeeee"},"content":"                return ui.showDeletedTask(deleted, tasks.size());","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kineeeeee"},"content":"            case \"todo\":","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kineeeeee"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kineeeeee"},"content":"                    throw new SoraException(\"Cannot todo nothing\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kineeeeee"},"content":"                } else {","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kineeeeee"},"content":"                    Task todo \u003d new Todo(description);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kineeeeee"},"content":"                    tasks.addTask(todo);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kineeeeee"},"content":"                    return ui.showAddedTask(todo, tasks.size());","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kineeeeee"},"content":"            case \"deadline\":","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kineeeeee"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kineeeeee"},"content":"                    throw new SoraException(\"Invalid deadline\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kineeeeee"},"content":"                } else {","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kineeeeee"},"content":"                    if (!description.contains(\"/by\")) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kineeeeee"},"content":"                        throw new SoraException(\"Lack of deadline time!\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kineeeeee"},"content":"                    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kineeeeee"},"content":"                    String[] time \u003d description.split(\"/by\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kineeeeee"},"content":"                    LocalDateTime by \u003d LocalDateTime.parse(time[1].trim(), format);","lastModifiedDate":"2025-09-19T02:46:33","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kineeeeee"},"content":"                    Task deadline \u003d new Deadline(time[0].trim(), by);","lastModifiedDate":"2025-09-19T02:46:33","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kineeeeee"},"content":"                    tasks.addTask(deadline);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kineeeeee"},"content":"                    return ui.showAddedTask(deadline, tasks.size());","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Kineeeeee"},"content":"            case \"after\":","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Kineeeeee"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Kineeeeee"},"content":"                    throw new SoraException(\"Invalid after\");","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Kineeeeee"},"content":"                } else {","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Kineeeeee"},"content":"                    if (!description.contains(\"/required\")) {","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Kineeeeee"},"content":"                        throw new SoraException(\"Lack of required time!\");","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Kineeeeee"},"content":"                    }","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Kineeeeee"},"content":"                    String[] time \u003d description.split(\"/required\");","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Kineeeeee"},"content":"                    LocalDateTime required \u003d LocalDateTime.parse(time[1].trim(), format);","lastModifiedDate":"2025-09-19T02:46:33","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Kineeeeee"},"content":"                    Task after \u003d new After(time[0].trim(), required);","lastModifiedDate":"2025-09-19T02:46:33","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Kineeeeee"},"content":"                    tasks.addTask(after);","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Kineeeeee"},"content":"                    return ui.showAddedTask(after, tasks.size());","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Kineeeeee"},"content":"            case \"event\":","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Kineeeeee"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Kineeeeee"},"content":"                    throw new SoraException(\"Invalid event\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Kineeeeee"},"content":"                } else {","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Kineeeeee"},"content":"                    if (!description.contains(\"/from\")) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Kineeeeee"},"content":"                        throw new SoraException(\"Lack of start time!\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Kineeeeee"},"content":"                    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Kineeeeee"},"content":"                    String[] time \u003d description.split(\"/from\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Kineeeeee"},"content":"                    if (!time[1].trim().contains(\"/to\")) {","lastModifiedDate":"2025-09-19T02:46:33","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Kineeeeee"},"content":"                        throw new SoraException(\"Lack of end time!\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Kineeeeee"},"content":"                    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Kineeeeee"},"content":"                    String[] range \u003d time[1].trim().split(\"/to\");","lastModifiedDate":"2025-09-19T02:46:33","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Kineeeeee"},"content":"                    LocalDateTime from \u003d LocalDateTime.parse(range[0].trim(), format);","lastModifiedDate":"2025-09-19T02:46:33","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Kineeeeee"},"content":"                    LocalDateTime to \u003d LocalDateTime.parse(range[1].trim(), format);","lastModifiedDate":"2025-09-19T02:46:33","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Kineeeeee"},"content":"                    Task event \u003d new Event(time[0].trim(), from, to);","lastModifiedDate":"2025-09-19T02:46:33","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Kineeeeee"},"content":"                    tasks.addTask(event);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Kineeeeee"},"content":"                    return ui.showAddedTask(event, tasks.size());","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Kineeeeee"},"content":"            default:","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Kineeeeee"},"content":"                throw new SoraException(\"Not a valid input\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Kineeeeee"},"content":"            }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":144}},{"path":"src/main/java/sora/Sora.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"import sora.list.TaskList;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"import sora.storage.Storage;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-19T23:09:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":" * The {@code Sora} class is the main entry point of the Sora chatbot application.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"public class Sora {","lastModifiedDate":"2025-08-19T23:06:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"    private static Storage storage;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"    private static TaskList tasks;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"    private static Ui ui;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"     * Constructs a new instance of {@code Sora}.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"     * @param filePath the file path to the data storage file.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"    public Sora(String filePath) {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"        try {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"            tasks \u003d new TaskList(storage.load().getFullTasks());","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"            System.out.print(ui.showError(\"Cannot load storage tasks\"));","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-19T23:09:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"     * Runs the main loop of the application.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"    public void run() {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"        System.out.print(ui.showWelcome());","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"        while (!isExit) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"            try {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"                String command \u003d ui.readCommand();","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"                String output \u003d executeCommand(command);","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"                System.out.print(output);","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"            } catch (SoraException e) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kineeeeee"},"content":"                System.out.print(ui.showError(e.getMessage()));","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kineeeeee"},"content":"            }","lastModifiedDate":"2025-08-21T19:48:40","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kineeeeee"},"content":"     * Executes a user command by parsing it and performing the corresponding action.","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kineeeeee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kineeeeee"},"content":"     * If the command is \"bye\", the application will be flagged to exit. Otherwise,","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kineeeeee"},"content":"     * the command is delegated to the {@link Parser#parse(String, TaskList, Ui, Storage)}","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kineeeeee"},"content":"     * method to perform the required task operations.","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kineeeeee"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kineeeeee"},"content":"     * @param command the command input from the user","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kineeeeee"},"content":"     * @throws SoraException if the command is invalid or an error occurs during execution","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kineeeeee"},"content":"    private String executeCommand(String command) throws SoraException {","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kineeeeee"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kineeeeee"},"content":"            isExit \u003d true;","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kineeeeee"},"content":"        return Parser.parse(command, tasks, ui, storage);","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kineeeeee"},"content":"     * The main entry point of the application.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kineeeeee"},"content":"     * @param args command-line arguments.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kineeeeee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kineeeeee"},"content":"        new Sora(\"./data/sora.txt\").run();","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-19T23:06:32","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kineeeeee"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kineeeeee"},"content":"    public static String getResponse(String input) throws SoraException {","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kineeeeee"},"content":"        return Parser.parse(input, tasks, ui, storage);","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-19T23:06:32","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":84}},{"path":"src/main/java/sora/SoraException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":" * Represents an exception specific to the Sora application.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"public class SoraException extends Exception {","lastModifiedDate":"2025-08-21T19:48:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"     * Constructs a new {@code SoraException} with the specified detail message.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"     * @param str the detail message explaining the cause of the exception.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"    public SoraException(String str) {","lastModifiedDate":"2025-08-21T19:48:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"        super(str);","lastModifiedDate":"2025-08-21T19:48:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-21T19:48:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-21T19:48:40","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":15}},{"path":"src/main/java/sora/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"import sora.list.TaskList;","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"import sora.task.Task;","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":" * The {@code Ui} class handles all interactions with the user.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":" * It is responsible for displaying messages.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"public class Ui {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"     * Constructs a new {@code Ui} instance.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"    public Ui() {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"     * Displays the welcome message when the application starts.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"    public String showWelcome() {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"        String logo \u003d \"  ____\\n\"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"                + \" / ___|  ____ ______ __\\n\"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"                + \" \\\\___ \\\\ / __ \\\\| \u0027__/ _  \\\\\\n\"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"                + \"  ___\\\\ | |__| | | | |_| |\\n\"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"                + \" |____/ \\\\____/|_|  \\\\___/|\\n\";","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"        return \"Hello from\\n\" + logo + \"Hello! I\u0027m Sora\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"     *  Displays the goodbye message when the application terminates.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"    public String showGoodbye() {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"        return \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"     * @param message the error message to display.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kineeeeee"},"content":"    public String showError(String message) {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kineeeeee"},"content":"        assert message !\u003d null : \"Error message must not be null\";","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kineeeeee"},"content":"        return \"Oh no! \" + message + \"\\n\";","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kineeeeee"},"content":"     * Displays a message when a task is added.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kineeeeee"},"content":"     * @param task the added task.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kineeeeee"},"content":"     * @param size the size of the task list after the task is added.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kineeeeee"},"content":"    public String showAddedTask(Task task, int size) {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kineeeeee"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task + \"\\n\" + \"Now you have \" + size + \" tasks in the list.\\n\";","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kineeeeee"},"content":"     * Displays a message when a task is deleted.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kineeeeee"},"content":"     * @param task the deleted task.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kineeeeee"},"content":"     * @param size the size of the task list after the task is deleted.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kineeeeee"},"content":"    public String showDeletedTask(Task task, int size) {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kineeeeee"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + task + \"\\n\" + \"Now you have \"","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kineeeeee"},"content":"                + size + \" tasks in the list.\\n\";","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kineeeeee"},"content":"     * Displays the current task list.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kineeeeee"},"content":"     * @param tasks the current task list.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kineeeeee"},"content":"    public String showTaskList(TaskList tasks) {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kineeeeee"},"content":"        assert tasks !\u003d null : \"TaskList must not be null\";","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kineeeeee"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the task in your list:\\n\");","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kineeeeee"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kineeeeee"},"content":"            output.append((i + 1)).append(\".\").append(tasks.getTask(i).toString()).append(\"\\n\");","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kineeeeee"},"content":"        return output.toString();","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kineeeeee"},"content":"     * Displays a message when a task is marked as done.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kineeeeee"},"content":"     * @param task the task which is marked as done.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kineeeeee"},"content":"    public String showMarkedTask(Task task) {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kineeeeee"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task + \"\\n\";","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kineeeeee"},"content":"     * Displays a message when a task is marked as not done.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kineeeeee"},"content":"     * @param task the task which is marked as not done.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kineeeeee"},"content":"    public String showUnmarkedTask(Task task) {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kineeeeee"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + task + \"\\n\";","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kineeeeee"},"content":"     * Displays the list of tasks that match a user\u0027s search keyword.","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Kineeeeee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Kineeeeee"},"content":"     * If the list of matching tasks is empty, a message will be shown to indicate","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Kineeeeee"},"content":"     * that no tasks were found. Otherwise, the tasks are printed in order with","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Kineeeeee"},"content":"     * their corresponding index numbers starting from 1.","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Kineeeeee"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Kineeeeee"},"content":"     * @param tasks the list of tasks that matched the search keyword.","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Kineeeeee"},"content":"    public String showFoundTask(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Kineeeeee"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Kineeeeee"},"content":"            return \"Oh no, there is not any task with this keyword in the list\\n\";","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Kineeeeee"},"content":"        } else {","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Kineeeeee"},"content":"            StringBuilder output \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Kineeeeee"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Kineeeeee"},"content":"                output.append((i + 1)).append(\".\").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Kineeeeee"},"content":"            }","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Kineeeeee"},"content":"            return output.toString();","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Kineeeeee"},"content":"     * Reads a command from the user. If there is none, returns \"bye\"","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Kineeeeee"},"content":"     * for the application to terminate","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Kineeeeee"},"content":"     * @return the full user input as a string.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Kineeeeee"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Kineeeeee"},"content":"        if (scanner.hasNextLine()) {","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Kineeeeee"},"content":"            return scanner.nextLine();","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Kineeeeee"},"content":"        } else {","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Kineeeeee"},"content":"            return \"bye\";","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":140}},{"path":"src/main/java/sora/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.gui;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"    @FXML","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"    @FXML","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"        try {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"    public static DialogBox getErrorDialog(String text, Image img) {","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"        var db \u003d getSoraDialog(text, img);","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"        db.dialog.getStyleClass().add(\"error-label\");","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"        return db;","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kineeeeee"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kineeeeee"},"content":"    private void flip() {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kineeeeee"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kineeeeee"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kineeeeee"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kineeeeee"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kineeeeee"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kineeeeee"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kineeeeee"},"content":"    public static DialogBox getSoraDialog(String text, Image img) {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kineeeeee"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kineeeeee"},"content":"        db.flip();","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kineeeeee"},"content":"        return db;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":69}},{"path":"src/main/java/sora/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.gui;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"public class Launcher {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":13}},{"path":"src/main/java/sora/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.gui;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"import sora.Sora;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"    private Sora sora \u003d new Sora(\"./data/sora.txt\");","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"    @Override","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"        try {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"            stage.setTitle(\"Sora\");","lastModifiedDate":"2025-09-19T18:55:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"            scene.getStylesheets().add(Main.class.getResource(\"/view/style.css\").toExternalForm());","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"            fxmlLoader.\u003cMainWindow\u003e getController().setSora(sora); // inject the Duke instance","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"            stage.show();","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":37}},{"path":"src/main/java/sora/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.gui;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"import sora.Sora;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"import sora.SoraException;","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"    @FXML","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"    @FXML","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"    @FXML","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"    @FXML","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"    private Sora sora \u003d new Sora(\"./data/sora.txt\");","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"     * Initializes the main window of the GUI.","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"     * This method is automatically called by JavaFX after the FXML","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"     * elements have been loaded. It performs the following:","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"     *   \u003cli\u003eBinds the vertical scroll position of the {@code scrollPane} to","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"     *       the height of the {@code dialogContainer}, ensuring the scroll","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"     *       automatically moves to show the latest dialog.\u003c/li\u003e","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"     *   \u003cli\u003eAdds an initial welcome message from Sora to the {@code dialogContainer}.\u003c/li\u003e","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"     * The welcome message is displayed as a {@link DialogBox} with the Sora image.","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kineeeeee"},"content":"    @FXML","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kineeeeee"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kineeeeee"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kineeeeee"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kineeeeee"},"content":"                DialogBox.getSoraDialog(\"Hello! I\u0027m Sora\\nWhat can I do for you today?\", dukeImage)","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kineeeeee"},"content":"        );","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kineeeeee"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kineeeeee"},"content":"    public void setSora(Sora s) {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kineeeeee"},"content":"        sora \u003d s;","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kineeeeee"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kineeeeee"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kineeeeee"},"content":"    @FXML","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kineeeeee"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kineeeeee"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kineeeeee"},"content":"        assert input !\u003d null : \"User input must not be null\";","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kineeeeee"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kineeeeee"},"content":"                DialogBox.getUserDialog(input, userImage)","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kineeeeee"},"content":"        );","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kineeeeee"},"content":"        try {","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kineeeeee"},"content":"            String response \u003d Sora.getResponse(input);","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kineeeeee"},"content":"            assert response !\u003d null : \"Sora response must not be null\";","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kineeeeee"},"content":"            dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kineeeeee"},"content":"                    DialogBox.getSoraDialog(response, dukeImage)","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kineeeeee"},"content":"            );","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kineeeeee"},"content":"        } catch (SoraException e) {","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kineeeeee"},"content":"            dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kineeeeee"},"content":"                    DialogBox.getErrorDialog(\"⚠ \" + e.getMessage(), dukeImage)","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kineeeeee"},"content":"            );","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kineeeeee"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":90}},{"path":"src/main/java/sora/list/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.list;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"import sora.task.Task;","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":" * Represents a list of tasks and provides methods to manipulate them.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"public class TaskList {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"     * Constructs a TaskList with an existing list of tasks.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"     * @param tasks The list of tasks to initialize the TaskList with.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"     * @param task the task to add.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"        tasks.add(task);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"     * Deletes and returns the task at the specified index.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"     * @param index the index of the task to delete.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"     * @return the task which is deleted.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kineeeeee"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kineeeeee"},"content":"     * @param index the index of the task to retrieve.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kineeeeee"},"content":"     * @return the task at the specified index.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kineeeeee"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kineeeeee"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kineeeeee"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kineeeeee"},"content":"     * @return the size of the task list.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kineeeeee"},"content":"    public int size() {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kineeeeee"},"content":"        return tasks.size();","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kineeeeee"},"content":"     * Returns the full list of tasks.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kineeeeee"},"content":"     * @return the list of tasks as an {@link ArrayList}.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kineeeeee"},"content":"    public ArrayList\u003cTask\u003e getFullTasks() {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kineeeeee"},"content":"        return tasks;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kineeeeee"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kineeeeee"},"content":"     * @param index the index of the task to mark.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kineeeeee"},"content":"    public void mark(int index) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kineeeeee"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kineeeeee"},"content":"     * Marks the task at the specified index as not done.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kineeeeee"},"content":"     * @param index the index of the task to unmark.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kineeeeee"},"content":"    public void unmark(int index) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kineeeeee"},"content":"        tasks.get(index).markAsNotDone();","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kineeeeee"},"content":"     * Find and return all the tasks which contain the specified keyword","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kineeeeee"},"content":"     * @param keyword the keyword to search","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kineeeeee"},"content":"     * @return an {@link ArrayList} of all tasks that contain the keyword","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kineeeeee"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kineeeeee"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kineeeeee"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kineeeeee"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kineeeeee"},"content":"                matchedTasks.add(task);","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kineeeeee"},"content":"            }","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Kineeeeee"},"content":"        return matchedTasks;","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":110}},{"path":"src/main/java/sora/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.storage;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import java.io.File;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"import java.util.Locale;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"import sora.list.TaskList;","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"import sora.task.After;","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"import sora.task.Deadline;","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"import sora.task.Event;","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"import sora.task.Task;","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"import sora.task.Todo;","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":" * Handles the loading and saving of tasks to a file.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":" * This class is responsible for reading tasks from a file into a {@link TaskList}","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":" * and saving tasks from a {@link TaskList} back to the file.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"public class Storage {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"    private final String filePath;","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"    private final DateTimeFormatter format \u003d","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\", Locale.ENGLISH);","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"     * @param filePath the path to the file for storing tasks.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"     * If the file or its parent directories do not exist, they will be created,","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"     * and an empty {@link TaskList} is returned.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"     * @return a {@link TaskList} containing all tasks loaded from the file.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"     * @throws IOException if an I/O error occurs while reading the file.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kineeeeee"},"content":"    public TaskList load() throws IOException {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kineeeeee"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kineeeeee"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kineeeeee"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kineeeeee"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kineeeeee"},"content":"            file.createNewFile();","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kineeeeee"},"content":"            return tasks;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kineeeeee"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kineeeeee"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kineeeeee"},"content":"            String line \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-09-19T02:49:49","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kineeeeee"},"content":"            String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kineeeeee"},"content":"            String type \u003d parts[0].trim();","lastModifiedDate":"2025-09-19T02:46:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kineeeeee"},"content":"            boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2025-09-19T02:46:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kineeeeee"},"content":"            String description \u003d parts[2].trim();","lastModifiedDate":"2025-09-19T02:46:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-09T19:42:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kineeeeee"},"content":"            switch (type) {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kineeeeee"},"content":"            case \"T\":","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kineeeeee"},"content":"                Todo todo \u003d new Todo(description);","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kineeeeee"},"content":"                if (isDone) {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kineeeeee"},"content":"                    todo.markAsDone();","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kineeeeee"},"content":"                tasks.addTask(todo);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kineeeeee"},"content":"                break;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kineeeeee"},"content":"            case \"D\":","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kineeeeee"},"content":"                LocalDateTime by \u003d LocalDateTime.parse(parts[3].trim(), format);","lastModifiedDate":"2025-09-19T02:46:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kineeeeee"},"content":"                Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kineeeeee"},"content":"                if (isDone) {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kineeeeee"},"content":"                    deadline.markAsDone();","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kineeeeee"},"content":"                tasks.addTask(deadline);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kineeeeee"},"content":"                break;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kineeeeee"},"content":"            case \"E\":","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kineeeeee"},"content":"                LocalDateTime from \u003d LocalDateTime.parse(parts[3].trim(), format);","lastModifiedDate":"2025-09-19T02:46:33","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kineeeeee"},"content":"                LocalDateTime to \u003d LocalDateTime.parse(parts[4].trim(), format);","lastModifiedDate":"2025-09-19T02:46:33","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kineeeeee"},"content":"                Event event \u003d new Event(description, from, to);","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kineeeeee"},"content":"                if (isDone) {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kineeeeee"},"content":"                    event.markAsDone();","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kineeeeee"},"content":"                tasks.addTask(event);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kineeeeee"},"content":"                break;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kineeeeee"},"content":"            case \"A\":","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kineeeeee"},"content":"                LocalDateTime required \u003d LocalDateTime.parse(parts[3].trim(), format);","lastModifiedDate":"2025-09-19T02:46:33","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kineeeeee"},"content":"                After after \u003d new After(description, required);","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kineeeeee"},"content":"                if (isDone) {","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kineeeeee"},"content":"                    after.markAsDone();","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kineeeeee"},"content":"                tasks.addTask(after);","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kineeeeee"},"content":"                break;","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kineeeeee"},"content":"            default:","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kineeeeee"},"content":"                System.out.println(\"Invalid line: \" + line);","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kineeeeee"},"content":"            }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kineeeeee"},"content":"        return tasks;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kineeeeee"},"content":"     * Saves the given list of tasks to the storage file.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kineeeeee"},"content":"     * @param tasks the {@link TaskList} containing tasks to save.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Kineeeeee"},"content":"     * @throws IOException if an I/O error occurs while writing to the file.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Kineeeeee"},"content":"    public void save(TaskList tasks) throws IOException {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Kineeeeee"},"content":"        FileWriter file \u003d new FileWriter(filePath);","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Kineeeeee"},"content":"        for (Task task : tasks.getFullTasks()) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Kineeeeee"},"content":"            file.write(task.toFormat() + System.lineSeparator());","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Kineeeeee"},"content":"        file.close();","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":116}},{"path":"src/main/java/sora/task/After.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.task;","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"import java.util.Locale;","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":" * Represents a {@code After} task that must be completed after a specific date and time.","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"public class After extends Task {","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"    protected LocalDateTime required;","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"     * Constructs a {@code After} task with the specified description and required time.","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"     * @param description the description of the task.","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"     * @param required the date and time that we need to do the task.","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"    public After(String description, LocalDateTime required) {","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"        super(Task.TaskType.AFTER, description);","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"        assert required !\u003d null : \"The date/time should not be null\";","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"        this.required \u003d required;","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"     * Formats the required time into a different string.","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"     * @return the formatted required time in the pattern \"MMM dd yyyy HHmm\".","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"    public String requiredToFormat() {","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"        assert required !\u003d null : \"The \u0027required\u0027 field must not be null before formatting\";","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"        return required.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\", Locale.ENGLISH));","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"     * Returns a string representation of the {@code After} task,","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"     * including its description, status, and required time.","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"     * @return the formatted string representing the after task.","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"    @Override","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"    public String toString() {","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"        return super.toString() + \" (required: \" + this.requiredToFormat() + \")\";","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":45}},{"path":"src/main/java/sora/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.task;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"import java.util.Locale;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":" * Represents a {@code After} task that must be completed by a specific date and time.","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-31T13:27:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"     * Constructs a {@code After} task with the specified description and deadline.","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"     * @param description the description of the task.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"     * @param by the deadline date and time.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"        super(Task.TaskType.DEADLINE, description);","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"        assert by !\u003d null : \"The date/time should not be null\";","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"     * Formats the deadline time into a different string.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"     * @return the formatted deadline time in the pattern \"MMM dd yyyy HHmm\".","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"    public String byToFormat() {","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"        assert by !\u003d null : \"The \u0027by\u0027 field must not be null before formatting\";","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\", Locale.ENGLISH));","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-31T13:27:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"     * Returns a string representation of the {@code After} task,","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"     * including its description, status, and deadline time.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"     * @return the formatted string representing the deadline task.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"    @Override","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"        return super.toString() + \" (by: \" + this.byToFormat() + \")\";","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":45}},{"path":"src/main/java/sora/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.task;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"import java.util.Locale;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":" * Represents an {@code Event} task that occurs within a specific time range.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":" * It includes a start time and an end time.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"     * Constructs an {@code Event} task with the specified description,","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"     * start time, and end time.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"     * @param description the description of the event.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"     * @param from the start time of the event.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"     * @param to the end time of the event.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"        super(TaskType.EVENT, description);","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"        assert from !\u003d null : \"The \u0027from\u0027 time must not be null\";","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"        assert to !\u003d null : \"The \u0027to\u0027 time must not be null\";","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"     * Formats the start time into a different string.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"     * @return the formatted start time in the pattern \"MMM dd yyyy HHmm\".","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"    public String fromToFormat() {","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"        assert from !\u003d null : \"The \u0027from\u0027 must not be null before formatting\";","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"        return from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\", Locale.ENGLISH));","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"     * Formats the end time into a different string.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"     * @return the formatted start time in the pattern \"MMM dd yyyy HHmm\"","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kineeeeee"},"content":"    public String toToFormat() {","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kineeeeee"},"content":"        assert to !\u003d null : \"The \u0027to\u0027 must not be null before formatting\";","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kineeeeee"},"content":"        return to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\", Locale.ENGLISH));","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kineeeeee"},"content":"     * Returns the string representation of the {@code Event} task,","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kineeeeee"},"content":"     * including its description, status, start time and end time.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kineeeeee"},"content":"     * @return the formatted event task string.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kineeeeee"},"content":"    @Override","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kineeeeee"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kineeeeee"},"content":"        return super.toString() + \" (from: \"","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kineeeeee"},"content":"                + this.fromToFormat() + \" to: \" + this.toToFormat() + \")\";","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":62}},{"path":"src/main/java/sora/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.task;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":" * Represents a task in the Sora task management system.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":" * This is the abstract base class for specific types of tasks:","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":" * {@code Todo}, {@code After}, and {@code Event}.","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"public class Task {","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"     * Enum representing the type of the task.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"    public enum TaskType {","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"        TODO,","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"        DEADLINE,","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"        EVENT,","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"        AFTER","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"    protected String description;","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"    protected TaskType type;","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"     * Constructs a {@code Task} with the given type and description.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"     * By default, the task is marked as not done.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"     * @param type the type of task.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"     * @param description the description of the task.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"    public Task(TaskType type, String description) {","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"        assert type !\u003d null : \"Task type should not be null\";","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"        assert description !\u003d null \u0026\u0026 !description.isBlank() : \"Description should not be null or empty\";","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"     * @return the description.","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"        return this.description;","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kineeeeee"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kineeeeee"},"content":"     * @return \"X\" if the task is done, otherwise a space \" \".","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kineeeeee"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kineeeeee"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kineeeeee"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kineeeeee"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kineeeeee"},"content":"        assert !isDone : \"Task is already marked as done\";","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kineeeeee"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kineeeeee"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kineeeeee"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kineeeeee"},"content":"        assert isDone : \"Task is already marked as not done\";","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kineeeeee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-31T13:27:25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kineeeeee"},"content":"     * Returns a user-friendly string representation of the task.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kineeeeee"},"content":"     * @return the formatted string with task type, status, and description.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kineeeeee"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kineeeeee"},"content":"        assert description !\u003d null : \"Description must not be null when converting toString\";","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-09T20:01:37","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kineeeeee"},"content":"        String typeIcon \u003d switch (type) {","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kineeeeee"},"content":"        case TODO -\u003e \"T\";","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kineeeeee"},"content":"        case DEADLINE -\u003e \"D\";","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kineeeeee"},"content":"        case EVENT -\u003e \"E\";","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kineeeeee"},"content":"        case AFTER -\u003e \"A\";","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kineeeeee"},"content":"        };","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kineeeeee"},"content":"        return \"[\" + typeIcon + \"]\" + \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kineeeeee"},"content":"     * Returns a formatted string suitable for saving to file.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kineeeeee"},"content":"     * @return the formatted string for storage.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kineeeeee"},"content":"     * @throws UnsupportedOperationException if called on the wrong subclass.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kineeeeee"},"content":"    public String toFormat() throws UnsupportedOperationException {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kineeeeee"},"content":"        String isDoneNumber \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kineeeeee"},"content":"        switch (type) {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kineeeeee"},"content":"        case TODO:","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kineeeeee"},"content":"            return \"T \" + \"| \" + isDoneNumber + \" | \" + description;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kineeeeee"},"content":"        case DEADLINE:","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kineeeeee"},"content":"            if (!(this instanceof Deadline)) {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kineeeeee"},"content":"                throw new UnsupportedOperationException(\"Not a deadline type\");","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kineeeeee"},"content":"            }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Kineeeeee"},"content":"            String by \u003d ((Deadline) this).byToFormat();","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Kineeeeee"},"content":"            return \"D \" + \"| \" + isDoneNumber + \" | \" + description + \" | \" + by;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Kineeeeee"},"content":"        case EVENT:","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Kineeeeee"},"content":"            if (!(this instanceof Event)) {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Kineeeeee"},"content":"                throw new UnsupportedOperationException(\"Not an event type\");","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Kineeeeee"},"content":"            }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Kineeeeee"},"content":"            String from \u003d ((Event) this).fromToFormat();","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Kineeeeee"},"content":"            String to \u003d ((Event) this).toToFormat();","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Kineeeeee"},"content":"            return \"E \" + \"| \" + isDoneNumber + \" | \" + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Kineeeeee"},"content":"        case AFTER:","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Kineeeeee"},"content":"            if (!(this instanceof After)) {","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Kineeeeee"},"content":"                throw new UnsupportedOperationException(\"Not a after type\");","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Kineeeeee"},"content":"            }","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Kineeeeee"},"content":"            String required \u003d ((After) this).requiredToFormat();","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Kineeeeee"},"content":"            return \"A \" + \"| \" + isDoneNumber + \" | \" + description + \" | \" + required;","lastModifiedDate":"2025-09-09T20:53:26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Kineeeeee"},"content":"        default:","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Kineeeeee"},"content":"            throw new UnsupportedOperationException(\"Unknown type\");","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":127}},{"path":"src/main/java/sora/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.task;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":" * Represents a {@code Todo} task that has only a description.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"     * Constructs a {@code Todo} task with the specified description.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"     * @param description the description of the todo task.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"        super(TaskType.TODO, description);","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-31T13:27:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"     * Returns the string representation of the {@code Todo} task,","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"     * including its type, status, and description.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"     * @return the formatted string representing the todo task.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"    @Override","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"        return super.toString();","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":26}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" styleClass\u003d\"dialog-label\" /\u003e","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-16T00:37:29","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"            fx:controller\u003d\"sora.gui.MainWindow\"\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-06T15:49:28","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":45}},{"path":"src/test/java/sora/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.task;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"class DeadlineTest {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"    public void toString_notDone_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime by \u003d LocalDateTime.of(2006, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"        Deadline deadline \u003d new Deadline(\"Do something\", by);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"[D][ ] Do something (by: Feb 08 2006 2359)\", deadline.toString());","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"    public void toString_markedDone_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime by \u003d LocalDateTime.of(2006, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"        Deadline deadline \u003d new Deadline(\"Do something\", by);","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"        deadline.markAsDone();","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"[D][X] Do something (by: Feb 08 2006 2359)\", deadline.toString());","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"    public void toFormat_notDone_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime by \u003d LocalDateTime.of(2006, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"        Deadline deadline \u003d new Deadline(\"Do something\", by);","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"D | 0 | Do something | Feb 08 2006 2359\", deadline.toFormat());","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"    public void toFormat_done_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime by \u003d LocalDateTime.of(2006, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"        Deadline deadline \u003d new Deadline(\"Do something\", by);","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"        deadline.markAsDone();","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"D | 1 | Do something | Feb 08 2006 2359\", deadline.toFormat());","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":40}},{"path":"src/test/java/sora/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.task;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"class EventTest {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"    public void toString_notDone_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2006, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2025, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"        Event event \u003d new Event(\"Do something\", from, to);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"[E][ ] Do something (from: Feb 08 2006 2359 to: Feb 08 2025 2359)\", event.toString());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"    public void toString_markedDone_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2006, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2025, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"        Event event \u003d new Event(\"Do something\", from, to);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"        event.markAsDone();","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"[E][X] Do something (from: Feb 08 2006 2359 to: Feb 08 2025 2359)\", event.toString());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"    public void toFormat_notDone_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2006, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2025, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"        Event event \u003d new Event(\"Do something\", from, to);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"E | 0 | Do something | Feb 08 2006 2359 | Feb 08 2025 2359\", event.toFormat());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"    public void toFormat_done_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2006, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2025, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"        Event event \u003d new Event(\"Do something\", from, to);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"        event.markAsDone();","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"E | 1 | Do something | Feb 08 2006 2359 | Feb 08 2025 2359\", event.toFormat());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":45}},{"path":"src/test/java/sora/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.task;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"public class TaskTest {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"    public void getStatusIcon_notDone_returnsSpace() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"        Task task \u003d new Task(Task.TaskType.TODO, \"Do something\");","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\" \", task.getStatusIcon());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"    public void getStatusIcon_done_returnsX() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"        Task task \u003d new Task(Task.TaskType.TODO, \"Do something\");","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"        task.markAsDone();","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"X\", task.getStatusIcon());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"    public void toFormat_todoTask_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"        Task task \u003d new Task(Task.TaskType.TODO, \"Do something\");","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"T | 0 | Do something\", task.toFormat());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"    public void toFormat_doneTodoTask_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"        Task task \u003d new Task(Task.TaskType.TODO, \"Do something\");","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"        task.markAsDone();","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"T | 1 | Do something\", task.toFormat());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"    public void toFormat_deadlineWithoutSubclass_throwsException() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"        try {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"            assertEquals(\"\", new Task(Task.TaskType.DEADLINE, \"Do something\").toFormat());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"            fail();","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"            assertEquals(\"Not a deadline type\", e.getMessage());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":46}},{"path":"src/test/java/sora/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.task;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-09-02T21:37:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"public class TodoTest {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"    public void toString_notDone_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"        Todo todo \u003d new Todo(\"Do something\");","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"[T][ ] Do something\", todo.toString());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"    public void toString_markedDone_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"        Todo todo \u003d new Todo(\"Do something\");","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"[T][X] Do something\", todo.toString());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"    public void toFormat_todoTask_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"        Todo todo \u003d new Todo(\"Do something\");","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"T | 0 | Do something\", todo.toFormat());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"    public void toFormat_doneTodoTask_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"        Todo todo \u003d new Todo(\"Do something\");","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"T | 1 | Do something\", todo.toFormat());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"todo borrow book","lastModifiedDate":"2025-08-21T02:42:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"list","lastModifiedDate":"2025-08-21T02:42:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-21T02:42:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-21T02:42:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"mark 1","lastModifiedDate":"2025-08-21T02:42:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"mark 2","lastModifiedDate":"2025-08-21T02:42:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"unmark 1","lastModifiedDate":"2025-08-21T02:42:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"list","lastModifiedDate":"2025-08-21T02:42:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"bye","lastModifiedDate":"2025-08-21T02:42:25","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"java -classpath ..\\bin Sora \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-21T02:42:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":1,"-":20}}]
