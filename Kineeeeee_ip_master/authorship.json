[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-08-30T16:02:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"    mainClass.set(\"sora.Sora\")","lastModifiedDate":"2025-08-30T16:02:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"jar {","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"    manifest {","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"        attributes(","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"                \u0027Main-Class\u0027: application.mainClass.get()","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"        )","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"    archiveBaseName \u003d \"sora.jar\"","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":11,"-":39}},{"path":"data/sora.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"T | 1 | x","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":1}},{"path":"src/main/java/sora/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import sora.task.Deadline;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"import sora.task.Event;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"import sora.task.Task;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"import sora.task.Todo;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"import sora.list.TaskList;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"import sora.storage.Storage;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"import java.util.Locale;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":" * The {@code Parser} class handles the parsing and execution of user commands.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":" * It interprets user input and modifies the {@code TaskList} accordingly.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"public class Parser {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"    private static final DateTimeFormatter format \u003d","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\", Locale.ENGLISH);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"     * Parses and executes the given user command.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"     * @param command the raw user input string.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"     * @param tasks the current {@code TaskList} to modify.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"     * @param ui the {@code Ui} instance to handle interactions.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"     * @param storage the {@code Storage} used for saving/loading tasks.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"     * @throws SoraException if the command is invalid or malformed.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"    public static void parse(String command, TaskList tasks, Ui ui,","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"                             Storage storage) throws SoraException {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"        String[] parts \u003d command.split(\" \",2);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"        String startWord \u003d parts[0];","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"        String description \u003d parts.length \u003d\u003d 1 ? \"\" : parts[1];","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"            ui.showGoodbye();","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"        } else {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"            switch (startWord) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"            case \"find\" :","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"                    throw new SoraException(\"Lack of keyword\");","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kineeeeee"},"content":"                ArrayList\u003cTask\u003e foundTask \u003d tasks.findTasks(description);","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kineeeeee"},"content":"                ui.showFoundTask(foundTask);","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kineeeeee"},"content":"                break;","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kineeeeee"},"content":"            case \"list\" :","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kineeeeee"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kineeeeee"},"content":"                    ui.showTaskList(tasks);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kineeeeee"},"content":"                    break;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kineeeeee"},"content":"            case \"mark\" :","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kineeeeee"},"content":"                int x \u003d Integer.parseInt(description);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kineeeeee"},"content":"                tasks.getTask(x-1).markAsDone();","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kineeeeee"},"content":"                ui.showMarkedTask(tasks.getTask(x-1));","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kineeeeee"},"content":"                try {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kineeeeee"},"content":"                    storage.save(tasks);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kineeeeee"},"content":"                } catch (IOException e) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kineeeeee"},"content":"                    System.out.println(\"Can not save! \" +e.getMessage());","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kineeeeee"},"content":"                break;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kineeeeee"},"content":"            case \"unmark\" :","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kineeeeee"},"content":"                int y \u003d Integer.parseInt(description);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kineeeeee"},"content":"                tasks.getTask(y-1).markAsNotDone();","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kineeeeee"},"content":"                ui.showUnmarkedTask(tasks.getTask(y-1));","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kineeeeee"},"content":"                try {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kineeeeee"},"content":"                    storage.save(tasks);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kineeeeee"},"content":"                } catch (IOException e) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kineeeeee"},"content":"                    System.out.println(\"Can not save! \" +e.getMessage());","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kineeeeee"},"content":"                break;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kineeeeee"},"content":"            case \"delete\" :","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kineeeeee"},"content":"                int z \u003d Integer.parseInt(description);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kineeeeee"},"content":"                Task deleted \u003d tasks.deleteTask(z-1);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kineeeeee"},"content":"                ui.showDeletedTask(deleted, tasks.size());","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kineeeeee"},"content":"                try {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kineeeeee"},"content":"                    storage.save(tasks);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kineeeeee"},"content":"                } catch (IOException e) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kineeeeee"},"content":"                    System.out.println(\"Can not save! \" +e.getMessage());","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kineeeeee"},"content":"                break;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kineeeeee"},"content":"            case \"todo\" :","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kineeeeee"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kineeeeee"},"content":"                    throw new SoraException(\"Cannot todo nothing\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kineeeeee"},"content":"                else {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kineeeeee"},"content":"                    Task todo \u003d new Todo(description);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kineeeeee"},"content":"                    tasks.addTask(todo);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kineeeeee"},"content":"                    ui.showAddedTask(todo, tasks.size());","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kineeeeee"},"content":"                break;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kineeeeee"},"content":"            case \"deadline\" :","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kineeeeee"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kineeeeee"},"content":"                    throw new SoraException(\"Invalid deadline\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kineeeeee"},"content":"                else {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kineeeeee"},"content":"                    if (!description.contains(\"/by\")) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kineeeeee"},"content":"                        throw new SoraException(\"Lack of deadline time!\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kineeeeee"},"content":"                    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kineeeeee"},"content":"                    String[] time \u003d description.split(\" /by \");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kineeeeee"},"content":"                    LocalDateTime by \u003d LocalDateTime.parse(time[1],format);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kineeeeee"},"content":"                    Task deadline \u003d new Deadline(time[0], by);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kineeeeee"},"content":"                    tasks.addTask(deadline);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kineeeeee"},"content":"                    ui.showAddedTask(deadline, tasks.size());","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Kineeeeee"},"content":"                break;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Kineeeeee"},"content":"            case \"event\" :","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Kineeeeee"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Kineeeeee"},"content":"                    throw new SoraException(\"Invalid event\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Kineeeeee"},"content":"                else {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Kineeeeee"},"content":"                    if (!description.contains(\"/from\")) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Kineeeeee"},"content":"                        throw new SoraException(\"Lack of start time!\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Kineeeeee"},"content":"                    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Kineeeeee"},"content":"                    String[] time \u003d description.split(\" /from \");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Kineeeeee"},"content":"                    if (!time[1].contains(\"/to\")) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Kineeeeee"},"content":"                        throw new SoraException(\"Lack of end time!\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Kineeeeee"},"content":"                    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Kineeeeee"},"content":"                    String[] range  \u003d time[1].split(\" /to \");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Kineeeeee"},"content":"                    LocalDateTime from \u003d LocalDateTime.parse(range[0],format);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Kineeeeee"},"content":"                    LocalDateTime to \u003dLocalDateTime.parse(range[1],format);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Kineeeeee"},"content":"                    Task event \u003d new Event(time[0], from, to);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Kineeeeee"},"content":"                    tasks.addTask(event);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Kineeeeee"},"content":"                    ui.showAddedTask(event, tasks.size());","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Kineeeeee"},"content":"                break;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Kineeeeee"},"content":"            default:","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Kineeeeee"},"content":"                throw new SoraException(\"Not a valid input\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Kineeeeee"},"content":"            }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":134}},{"path":"src/main/java/sora/Sora.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import sora.list.TaskList;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"import sora.storage.Storage;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"import java.util.Locale;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-19T23:09:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":" * The {@code Sora} class is the main entry point of the Sora chatbot application.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"public class Sora {","lastModifiedDate":"2025-08-19T23:06:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"    private Ui ui;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"    private static final DateTimeFormatter format \u003d","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\",Locale.ENGLISH);","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"     * Constructs a new instance of {@code Sora}.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"     * @param filePath the file path to the data storage file.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"    public Sora(String filePath) {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"        try {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"            tasks \u003d new TaskList(storage.load().getFullTasks());","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"            ui.showError(\"Cannot load storage tasks\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"            tasks \u003dnew TaskList();","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-19T23:09:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"     * Runs the main loop of the application.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"    public void run() {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"        while(!isExit) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"            try {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"                String command \u003d ui.readCommand();","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kineeeeee"},"content":"                if (command.equals(\"bye\")) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kineeeeee"},"content":"                    isExit \u003d true;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kineeeeee"},"content":"                Parser.parse(command, tasks, ui, storage);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kineeeeee"},"content":"            } catch (SoraException e) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kineeeeee"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kineeeeee"},"content":"            }","lastModifiedDate":"2025-08-21T19:48:40","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kineeeeee"},"content":"     * The main entry point of the application.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kineeeeee"},"content":"     * @param args command-line arguments.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kineeeeee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kineeeeee"},"content":"        new Sora(\"./data/sora.txt\").run();","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-19T23:06:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-19T23:06:32","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":64}},{"path":"src/main/java/sora/SoraException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":" * Represents an exception specific to the Sora application.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"public class SoraException extends Exception{","lastModifiedDate":"2025-08-21T19:48:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"     * Constructs a new {@code SoraException} with the specified detail message.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"     * @param str the detail message explaining the cause of the exception.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"    public SoraException(String str) {","lastModifiedDate":"2025-08-21T19:48:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"        super(str);","lastModifiedDate":"2025-08-21T19:48:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-21T19:48:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-21T19:48:40","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":15}},{"path":"src/main/java/sora/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import sora.task.Task;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"import sora.list.TaskList;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":" * The {@code Ui} class handles all interactions with the user.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":" * It is responsible for displaying messages.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"public class Ui {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"     * Constructs a new {@code Ui} instance.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"    public Ui() {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"     * Displays the welcome message when the application starts.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"        String logo \u003d \"  ____\\n\"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"                + \" / ___|  ____ ______ __\\n\"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"                + \" \\\\___ \\\\ / __ \\\\| \u0027__/ _  \\\\\\n\"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"                + \"  ___\\\\ | |__| | | | |_| |\\n\"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"                + \" |____/ \\\\____/|_|  \\\\___/|\\n\";","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"        System.out.println(\"Hello from\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"        System.out.println(logo);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"        System.out.println(\"Hello! I\u0027m Sora\");","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"     *  Displays the goodbye message when the application terminates.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kineeeeee"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kineeeeee"},"content":"     * @param message the error message to display.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kineeeeee"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kineeeeee"},"content":"        System.out.println(\"Oh no! \" + message);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kineeeeee"},"content":"     * Displays a message when a task is added.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kineeeeee"},"content":"     * @param task the added task.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kineeeeee"},"content":"     * @param size the size of the task list after the task is added.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kineeeeee"},"content":"    public void showAddedTask(Task task, int size) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kineeeeee"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kineeeeee"},"content":"        System.out.println(task);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kineeeeee"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kineeeeee"},"content":"     * Displays a message when a task is deleted.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kineeeeee"},"content":"     * @param task the deleted task.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kineeeeee"},"content":"     * @param size the size of the task list after the task is deleted.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kineeeeee"},"content":"    public void showDeletedTask(Task task, int size) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kineeeeee"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kineeeeee"},"content":"        System.out.println(task);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kineeeeee"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kineeeeee"},"content":"     * Displays the current task list.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kineeeeee"},"content":"     * @param tasks the current task list.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kineeeeee"},"content":"    public void showTaskList(TaskList tasks) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kineeeeee"},"content":"        System.out.println(\"Here are the task in your list:\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kineeeeee"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kineeeeee"},"content":"            System.out.println((i + 1) + \".\" + tasks.getTask(i).toString());","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kineeeeee"},"content":"     * Displays a message when a task is marked as done.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kineeeeee"},"content":"     * @param task the task which is marked as done.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kineeeeee"},"content":"    public void showMarkedTask(Task task) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kineeeeee"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kineeeeee"},"content":"        System.out.println(task);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kineeeeee"},"content":"     * Displays a message when a task is marked as not done.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kineeeeee"},"content":"     * @param task the task which is marked as not done.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kineeeeee"},"content":"    public void showUnmarkedTask(Task task) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kineeeeee"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Kineeeeee"},"content":"        System.out.println(task);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Kineeeeee"},"content":"     * Displays the list of tasks that match a user\u0027s search keyword.","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Kineeeeee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Kineeeeee"},"content":"     * If the list of matching tasks is empty, a message will be shown to indicate","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Kineeeeee"},"content":"     * that no tasks were found. Otherwise, the tasks are printed in order with","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Kineeeeee"},"content":"     * their corresponding index numbers starting from 1.","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Kineeeeee"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Kineeeeee"},"content":"     * @param tasks the list of tasks that matched the search keyword.","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Kineeeeee"},"content":"    public void showFoundTask(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Kineeeeee"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Kineeeeee"},"content":"            System.out.println(\"Oh no, there is not any task with this keyword in the list\");","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Kineeeeee"},"content":"        else {","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Kineeeeee"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Kineeeeee"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Kineeeeee"},"content":"                System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Kineeeeee"},"content":"            }","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Kineeeeee"},"content":"     * Reads a command from the user. If there is none, returns \"bye\"","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Kineeeeee"},"content":"     * for the application to terminate","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Kineeeeee"},"content":"     * @return the full user input as a string.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Kineeeeee"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Kineeeeee"},"content":"        if (scanner.hasNextLine()) {","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Kineeeeee"},"content":"            return scanner.nextLine();","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Kineeeeee"},"content":"        } else {","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Kineeeeee"},"content":"            return \"bye\";","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":145}},{"path":"src/main/java/sora/list/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.list;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import sora.task.Task;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":" * Represents a list of tasks and provides methods to manipulate them.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"public class TaskList {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"    public TaskList(){","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"     * Constructs a TaskList with an existing list of tasks.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"     * @param tasks The list of tasks to initialize the TaskList with.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"     * @param task the task to add.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"        tasks.add(task);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"     * Deletes and returns the task at the specified index.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"     * @param index the index of the task to delete.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"     * @return the task which is deleted.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kineeeeee"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kineeeeee"},"content":"     * @param index the index of the task to retrieve.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kineeeeee"},"content":"     * @return the task at the specified index.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kineeeeee"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kineeeeee"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kineeeeee"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kineeeeee"},"content":"     * @return the size of the task list.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kineeeeee"},"content":"    public int size() {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kineeeeee"},"content":"        return tasks.size();","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kineeeeee"},"content":"     * Returns the full list of tasks.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kineeeeee"},"content":"     * @return the list of tasks as an {@link ArrayList}.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kineeeeee"},"content":"    public ArrayList\u003cTask\u003e getFullTasks() {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kineeeeee"},"content":"        return tasks;","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kineeeeee"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kineeeeee"},"content":"     * @param index the index of the task to mark.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kineeeeee"},"content":"    public void mark(int index) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kineeeeee"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kineeeeee"},"content":"     * Marks the task at the specified index as not done.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kineeeeee"},"content":"     * @param index the index of the task to unmark.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kineeeeee"},"content":"    public void unmark(int index) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kineeeeee"},"content":"        tasks.get(index).markAsNotDone();","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kineeeeee"},"content":"     * Find and return all the tasks which contain the specified keyword","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kineeeeee"},"content":"     * @param keyword the keyword to search","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kineeeeee"},"content":"     * @return an {@link ArrayList} of all tasks that contain the keyword","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kineeeeee"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kineeeeee"},"content":"        ArrayList\u003cTask\u003e check \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kineeeeee"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kineeeeee"},"content":"            if (task.getDescription().contains(keyword)){","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kineeeeee"},"content":"                check.add(task);","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kineeeeee"},"content":"            }","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Kineeeeee"},"content":"        return check;","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":110}},{"path":"src/main/java/sora/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.storage;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import sora.task.Deadline;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"import sora.task.Event;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"import sora.task.Task;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"import sora.task.Todo;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"import sora.list.TaskList;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"import java.io.File;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"import java.util.Locale;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":" * Handles the loading and saving of tasks to a file.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":" * This class is responsible for reading tasks from a file into a {@link TaskList}","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":" * and saving tasks from a {@link TaskList} back to the file.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"public class Storage {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"    private String filePath;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"    DateTimeFormatter format \u003d","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\", Locale.ENGLISH);","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"     * @param filePath the path to the file for storing tasks.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"    public Storage(String filePath){","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"     * If the file or its parent directories do not exist, they will be created,","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"     * and an empty {@link TaskList} is returned.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"     * @return a {@link TaskList} containing all tasks loaded from the file.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"     * @throws IOException if an I/O error occurs while reading the file.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kineeeeee"},"content":"    public TaskList load() throws IOException {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kineeeeee"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kineeeeee"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kineeeeee"},"content":"        if(!file.exists()) {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kineeeeee"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kineeeeee"},"content":"            file.createNewFile();","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kineeeeee"},"content":"            return tasks;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kineeeeee"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kineeeeee"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kineeeeee"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kineeeeee"},"content":"            String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kineeeeee"},"content":"            String type \u003d parts[0];","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kineeeeee"},"content":"            boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kineeeeee"},"content":"            String description \u003d parts[2];","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kineeeeee"},"content":"            switch (type) {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kineeeeee"},"content":"            case \"T\":","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kineeeeee"},"content":"                Todo todo \u003d new Todo(description);","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kineeeeee"},"content":"                if (isDone) {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kineeeeee"},"content":"                    todo.markAsDone();","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kineeeeee"},"content":"                tasks.addTask(todo);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kineeeeee"},"content":"                break;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kineeeeee"},"content":"            case \"D\":","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kineeeeee"},"content":"                LocalDateTime by \u003d LocalDateTime.parse(parts[3], format);","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kineeeeee"},"content":"                Deadline deadline \u003dnew Deadline(description,by);","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kineeeeee"},"content":"                if (isDone) {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kineeeeee"},"content":"                    deadline.markAsDone();","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kineeeeee"},"content":"                tasks.addTask(deadline);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kineeeeee"},"content":"                break;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kineeeeee"},"content":"            case \"E\":","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kineeeeee"},"content":"                LocalDateTime from \u003d LocalDateTime.parse(parts[3], format);","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kineeeeee"},"content":"                LocalDateTime to \u003d LocalDateTime.parse(parts[4], format);","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kineeeeee"},"content":"                Event event \u003d new Event(description,from,to);","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kineeeeee"},"content":"                if(isDone) {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kineeeeee"},"content":"                    event.markAsDone();","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kineeeeee"},"content":"                }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kineeeeee"},"content":"                tasks.addTask(event);","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kineeeeee"},"content":"                break;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kineeeeee"},"content":"            default:","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kineeeeee"},"content":"                System.out.println(\"Invalid line: \" + line);","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kineeeeee"},"content":"            }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kineeeeee"},"content":"        return tasks;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kineeeeee"},"content":"     * Saves the given list of tasks to the storage file.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kineeeeee"},"content":"     * @param tasks the {@link TaskList} containing tasks to save.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kineeeeee"},"content":"     * @throws IOException if an I/O error occurs while writing to the file.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kineeeeee"},"content":"    public void save(TaskList tasks) throws IOException {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kineeeeee"},"content":"        FileWriter file \u003d new FileWriter(filePath);","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kineeeeee"},"content":"        for (Task task : tasks.getFullTasks()) {","lastModifiedDate":"2025-08-29T17:44:22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kineeeeee"},"content":"            file.write(task.toFormat() + System.lineSeparator());","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kineeeeee"},"content":"        file.close();","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":106}},{"path":"src/main/java/sora/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.task;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"import java.util.Locale;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":" * Represents a {@code Deadline} task that must be completed by a specific date and time.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-31T13:27:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"     * Constructs a {@code Deadline} task with the specified description and deadline.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"     * @param description the description of the task.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"     * @param by the deadline date and time.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"        super(Task.TaskType.DEADLINE, description);","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"     * Formats the deadline time into a different string.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"     * @return the formatted deadline time in the pattern \"MMM dd yyyy HHmm\".","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"    public String byToFormat() {","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\", Locale.ENGLISH));","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-31T13:27:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"     * Returns a string representation of the {@code Deadline} task,","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"     * including its description, status, and deadline time.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"     * @return the formatted string representing the deadline task.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"    @Override","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"        return super.toString() + \" (by: \" + this.byToFormat() + \")\";","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":43}},{"path":"src/main/java/sora/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.task;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"import java.util.Locale;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":" * Represents an {@code Event} task that occurs within a specific time range.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":" * It includes a start time and an end time.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"     * Constructs an {@code Event} task with the specified description,","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"     * start time, and end time.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"     * @param description the description of the event.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"     * @param from the start time of the event.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"     * @param to the end time of the event.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) { ","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"        super(TaskType.EVENT, description);","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"     * Formats the start time into a different string.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"     * @return the formatted start time in the pattern \"MMM dd yyyy HHmm\".","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"    public String fromToFormat() {","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"        return from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\", Locale.ENGLISH));","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"     * Formats the end time into a different string.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"     * @return the formatted start time in the pattern \"MMM dd yyyy HHmm\"","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"    public String toToFormat() {","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"        return to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\", Locale.ENGLISH));","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kineeeeee"},"content":"     * Returns the string representation of the {@code Event} task,","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kineeeeee"},"content":"     * including its description, status, start time and end time.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kineeeeee"},"content":"     * @return the formatted event task string.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kineeeeee"},"content":"    @Override","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kineeeeee"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kineeeeee"},"content":"        return super.toString() + \" (from: \"","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kineeeeee"},"content":"                + this.fromToFormat() + \" to: \" + this.toToFormat() + \")\";","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":58}},{"path":"src/main/java/sora/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.task;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":" * Represents a task in the Sora task management system.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":" * This is the abstract base class for specific types of tasks:","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":" * {@code Todo}, {@code Deadline}, and {@code Event}.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"public class Task {","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"     * Enum representing the type of the task.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"    public enum TaskType {","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"        TODO,","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"        DEADLINE,","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"        EVENT","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"    protected String description;","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"    protected TaskType type;","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"     * Constructs a {@code Task} with the given type and description.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"     * By default, the task is marked as not done.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"     * @param type the type of task.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"     * @param description the description of the task.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"    public Task(TaskType type,String description) {","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"     * @return the description.","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"        return this.description;","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-31T14:13:53","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kineeeeee"},"content":"     * @return \"X\" if the task is done, otherwise a space \" \".","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kineeeeee"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kineeeeee"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kineeeeee"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kineeeeee"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kineeeeee"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kineeeeee"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kineeeeee"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kineeeeee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-31T13:27:25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kineeeeee"},"content":"     * Returns a user-friendly string representation of the task.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kineeeeee"},"content":"     * @return the formatted string with task type, status, and description.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kineeeeee"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kineeeeee"},"content":"        String typeIcon \u003d switch (type) {","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kineeeeee"},"content":"            case TODO -\u003e \"T\";","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kineeeeee"},"content":"            case DEADLINE -\u003e \"D\";","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kineeeeee"},"content":"            case EVENT -\u003e \"E\";","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kineeeeee"},"content":"        };","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kineeeeee"},"content":"        return \"[\" + typeIcon + \"]\" + \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kineeeeee"},"content":"     * Returns a formatted string suitable for saving to file.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kineeeeee"},"content":"     * @return the formatted string for storage.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kineeeeee"},"content":"     * @throws UnsupportedOperationException if called on the wrong subclass.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kineeeeee"},"content":"    public String toFormat() throws UnsupportedOperationException{","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kineeeeee"},"content":"        String isDoneNumber \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kineeeeee"},"content":"        switch (type) {","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kineeeeee"},"content":"        case TODO :","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kineeeeee"},"content":"            return \"T \" + \"| \" + isDoneNumber + \" | \" + description;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kineeeeee"},"content":"        case DEADLINE:","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kineeeeee"},"content":"            if (!(this instanceof Deadline)) {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kineeeeee"},"content":"                throw new UnsupportedOperationException(\"Not a deadline type\");","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kineeeeee"},"content":"            }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kineeeeee"},"content":"            String by \u003d ((Deadline)this).byToFormat();","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kineeeeee"},"content":"            return \"D \" + \"| \" + isDoneNumber + \" | \" + description + \" | \" + by;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kineeeeee"},"content":"        case EVENT:","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kineeeeee"},"content":"            if (!(this instanceof Event)) {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kineeeeee"},"content":"                throw new UnsupportedOperationException(\"Not an event type\");","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kineeeeee"},"content":"            }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kineeeeee"},"content":"            String from \u003d ((Event)this).fromToFormat();","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kineeeeee"},"content":"            String to \u003d ((Event)this).toToFormat();","lastModifiedDate":"2025-08-29T02:42:13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kineeeeee"},"content":"            return \"E \" + \"| \" + isDoneNumber + \" | \" + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kineeeeee"},"content":"        default:","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kineeeeee"},"content":"            throw new UnsupportedOperationException(\"Unknown type\");","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-28T00:11:32","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-20T23:06:23","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":110}},{"path":"src/main/java/sora/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.task;","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-29T23:43:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"/**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":" * Represents a {@code Todo} task that has only a description.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":" */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"     * Constructs a {@code Todo} task with the specified description.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"     * @param description the description of the todo task.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"        super(TaskType.TODO, description);","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-31T13:27:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"    /**","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"     * Returns the string representation of the {@code Todo} task,","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"     * including its type, status, and description.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"     *","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"     * @return the formatted string representing the todo task.","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"     */","lastModifiedDate":"2025-08-31T13:05:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"    @Override","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"        return super.toString();","lastModifiedDate":"2025-08-21T20:44:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-21T01:42:02","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":26}},{"path":"src/test/java/sora/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.task;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"class DeadlineTest {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"    public void toString_notDone_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime by \u003d LocalDateTime.of(2006, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"        Deadline deadline \u003d new Deadline(\"Do something\", by);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"[D][ ] Do something (by: Feb 08 2006 2359)\", deadline.toString());","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"    public void toString_markedDone_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime by \u003d LocalDateTime.of(2006, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"        Deadline deadline \u003d new Deadline(\"Do something\", by);","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"        deadline.markAsDone();","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"[D][X] Do something (by: Feb 08 2006 2359)\", deadline.toString());","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"    public void toFormat_notDone_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime by \u003d LocalDateTime.of(2006, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"        Deadline deadline \u003d new Deadline(\"Do something\", by);","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"D | 0 | Do something | Feb 08 2006 2359\", deadline.toFormat());","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"    public void toFormat_done_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime by \u003d LocalDateTime.of(2006, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"        Deadline deadline \u003d new Deadline(\"Do something\", by);","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"        deadline.markAsDone();","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"D | 1 | Do something | Feb 08 2006 2359\", deadline.toFormat());","lastModifiedDate":"2025-08-31T01:41:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":40}},{"path":"src/test/java/sora/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.task;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"class EventTest {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"    public void toString_notDone_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2006, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2025, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"        Event event \u003d new Event(\"Do something\", from, to);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"[E][ ] Do something (from: Feb 08 2006 2359 to: Feb 08 2025 2359)\", event.toString());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"    public void toString_markedDone_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2006, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2025, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"        Event event \u003d new Event(\"Do something\", from, to);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"        event.markAsDone();","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"[E][X] Do something (from: Feb 08 2006 2359 to: Feb 08 2025 2359)\", event.toString());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"    public void toFormat_notDone_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2006, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2025, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"        Event event \u003d new Event(\"Do something\", from, to);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"E | 0 | Do something | Feb 08 2006 2359 | Feb 08 2025 2359\", event.toFormat());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"    public void toFormat_done_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2006, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2025, 2, 8, 23, 59);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"        Event event \u003d new Event(\"Do something\", from, to);","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"        event.markAsDone();","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"E | 1 | Do something | Feb 08 2006 2359 | Feb 08 2025 2359\", event.toFormat());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":45}},{"path":"src/test/java/sora/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.task;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"public class TaskTest {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"    public void getStatusIcon_notDone_returnsSpace() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"        Task task \u003d new Task(Task.TaskType.TODO, \"Do something\");","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\" \", task.getStatusIcon());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"    public void getStatusIcon_done_returnsX() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"        Task task \u003d new Task(Task.TaskType.TODO, \"Do something\");","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"        task.markAsDone();","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"X\", task.getStatusIcon());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"    public void toFormat_todoTask_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"        Task task \u003d new Task(Task.TaskType.TODO, \"Do something\");","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"T | 0 | Do something\", task.toFormat());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"    public void toFormat_doneTodoTask_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"        Task task \u003d new Task(Task.TaskType.TODO, \"Do something\");","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"        task.markAsDone();","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"T | 1 | Do something\", task.toFormat());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kineeeeee"},"content":"    public void toFormat_deadlineWithoutSubclass_throwsException() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kineeeeee"},"content":"        try {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kineeeeee"},"content":"            assertEquals(\"\", new Task(Task.TaskType.DEADLINE, \"Do something\").toFormat());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kineeeeee"},"content":"            fail();","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kineeeeee"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kineeeeee"},"content":"            assertEquals(\"Not a deadline type\", e.getMessage());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kineeeeee"},"content":"        }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":47}},{"path":"src/test/java/sora/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"package sora.task;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"public class TodoTest {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kineeeeee"},"content":"    public void toString_notDone_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kineeeeee"},"content":"        Todo todo \u003d new Todo(\"Do something\");","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"[T][ ] Do something\", todo.toString());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kineeeeee"},"content":"    public void toString_markedDone_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kineeeeee"},"content":"        Todo todo \u003d new Todo(\"Do something\");","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"[T][X] Do something\", todo.toString());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kineeeeee"},"content":"    public void toFormat_todoTask_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kineeeeee"},"content":"        Todo todo \u003d new Todo( \"Do something\");","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"T | 0 | Do something\", todo.toFormat());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kineeeeee"},"content":"","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kineeeeee"},"content":"    @Test","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kineeeeee"},"content":"    public void toFormat_doneTodoTask_returnsCorrectFormat() {","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kineeeeee"},"content":"        Todo todo \u003d new Todo(\"Do something\");","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kineeeeee"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kineeeeee"},"content":"        assertEquals(\"T | 1 | Do something\", todo.toFormat());","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kineeeeee"},"content":"    }","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kineeeeee"},"content":"}","lastModifiedDate":"2025-08-30T17:23:24","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kineeeeee"},"content":"todo borrow book","lastModifiedDate":"2025-08-21T02:42:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kineeeeee"},"content":"list","lastModifiedDate":"2025-08-21T02:42:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kineeeeee"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-21T02:42:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kineeeeee"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-21T02:42:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kineeeeee"},"content":"mark 1","lastModifiedDate":"2025-08-21T02:42:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kineeeeee"},"content":"mark 2","lastModifiedDate":"2025-08-21T02:42:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kineeeeee"},"content":"unmark 1","lastModifiedDate":"2025-08-21T02:42:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kineeeeee"},"content":"list","lastModifiedDate":"2025-08-21T02:42:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kineeeeee"},"content":"bye","lastModifiedDate":"2025-08-21T02:42:25","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kineeeeee"},"content":"java -classpath ..\\bin Sora \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-21T02:42:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"Kineeeeee":1,"-":20}}]
