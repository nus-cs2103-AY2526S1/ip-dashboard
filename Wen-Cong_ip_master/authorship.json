[{"path":"src/main/java/Bot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-21T15:57:17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"public class Bot {","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"    /** Name of the bot */","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"    private final String name;","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"    /** List of text entered by user **/","lastModifiedDate":"2025-08-21T15:57:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T15:57:17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"    /** File service API that write and read from file **/","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"    private final FileServices fileServices;","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"    public Bot(String name) {","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"        this.fileServices \u003d new FileServices(\"data/taskData.txt\");","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"        loadTaskList(); // Load task list from file","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"     * Print greeting message","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"    public void greet() {","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"        this.printSeparator();","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"        System.out.println(\"Hello! I\u0027m \" + name);","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"        this.printSeparator();","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"     * Print program exit message","lastModifiedDate":"2025-08-21T15:57:17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"    public void exit() {","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"        this.printSeparator();","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"     * Prompt the user for input","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"     * @param scanner Scanner object to read input from console","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"     * @return Command string input entered by the user","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"    public String promptUser(Scanner scanner) {","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"        System.out.print(\"Enter your command: \");","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"        // Read input from console","lastModifiedDate":"2025-08-21T15:57:17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"        String cmd \u003d scanner.nextLine();","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"        this.printSeparator();","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"        return cmd;","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"     * Add To-do task to task list and write task string to file","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskName Task name to be added to taskList","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-21T15:57:17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"    public void addTask(String taskName) {","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"        Task newTask \u003d new Todo(taskName); // create new to-do task","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"        this.taskList.add(newTask); // add task to task list","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"        // Write task list to file","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wen-Cong"},"content":"        boolean isSuccess \u003d saveTaskList();","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"        if (!isSuccess) {","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wen-Cong"},"content":"            return;","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wen-Cong"},"content":"        // Print success message","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wen-Cong"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wen-Cong"},"content":"        System.out.println(\"\\t\" + newTask);","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wen-Cong"},"content":"        System.out.println(\"Now you have \"","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wen-Cong"},"content":"                + this.taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wen-Cong"},"content":"        this.printSeparator();","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wen-Cong"},"content":"     * Add Deadline task to task list and write task string to file","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskName Task name to be added to taskList","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wen-Cong"},"content":"     * @param deadline Date time of the task deadline","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wen-Cong"},"content":"    public void addTask(String taskName, String deadline) {","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wen-Cong"},"content":"        Task newTask \u003d new Deadline(taskName, deadline); // create new deadline task","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wen-Cong"},"content":"        this.taskList.add(newTask); // add task to task list","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wen-Cong"},"content":"        // Write task list to file","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wen-Cong"},"content":"        boolean isSuccess \u003d saveTaskList();","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wen-Cong"},"content":"        if (!isSuccess) {","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Wen-Cong"},"content":"            return;","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Wen-Cong"},"content":"        // Print success message","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Wen-Cong"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Wen-Cong"},"content":"        System.out.println(\"\\t\" + newTask);","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Wen-Cong"},"content":"        System.out.println(\"Now you have \"","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Wen-Cong"},"content":"                + this.taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Wen-Cong"},"content":"        this.printSeparator();","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Wen-Cong"},"content":"     * Add Event task to task list and write task string to file","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskName Task name to be added to taskList","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Wen-Cong"},"content":"     * @param startTime start date time of the event task","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Wen-Cong"},"content":"     * @param endTime end date time of the event task","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Wen-Cong"},"content":"    public void addTask(String taskName, String startTime, String endTime) {","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Wen-Cong"},"content":"        Task newTask \u003d new Event(taskName, startTime, endTime); // create new event task","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Wen-Cong"},"content":"        this.taskList.add(newTask); // add task to task list","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Wen-Cong"},"content":"        // Write task list to file","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Wen-Cong"},"content":"        boolean isSuccess \u003d saveTaskList();","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Wen-Cong"},"content":"        if (!isSuccess) {","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Wen-Cong"},"content":"            return;","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Wen-Cong"},"content":"        // Print success message","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Wen-Cong"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Wen-Cong"},"content":"        System.out.println(\"\\t\" + newTask);","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Wen-Cong"},"content":"        System.out.println(\"Now you have \"","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Wen-Cong"},"content":"                + this.taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-21T21:22:56","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Wen-Cong"},"content":"        this.printSeparator();","lastModifiedDate":"2025-08-21T15:57:17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T15:57:17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T15:57:17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Wen-Cong"},"content":"     * Remove the task from task list and print confirmation message","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Wen-Cong"},"content":"     * @param index Task index position in Task List, starting from 1","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Wen-Cong"},"content":"     * @throws InvalidCommandException if index is out of bound","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Wen-Cong"},"content":"    public void removeTask(int index) throws InvalidCommandException {","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Wen-Cong"},"content":"        // Validation for index number","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Wen-Cong"},"content":"        if (index \u003e this.taskList.size() || index \u003c 1) {","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Wen-Cong"},"content":"            throw new InvalidCommandException(\"Invalid task number\");","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Wen-Cong"},"content":"        // Remove the task from task list","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Wen-Cong"},"content":"        Task task \u003d this.taskList.remove(index - 1); // Index given starts from 1","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Wen-Cong"},"content":"        // Write task list to file","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Wen-Cong"},"content":"        boolean isSuccess \u003d saveTaskList();","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Wen-Cong"},"content":"        if (!isSuccess) {","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Wen-Cong"},"content":"            return;","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Wen-Cong"},"content":"        // Print confirmation message and list count","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Wen-Cong"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Wen-Cong"},"content":"        System.out.println(\"\\t\" + task);","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Wen-Cong"},"content":"        System.out.println(\"Now you have \"","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Wen-Cong"},"content":"                + this.taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Wen-Cong"},"content":"        this.printSeparator();","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-21T15:57:17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Wen-Cong"},"content":"     * Print every task in taskList","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Wen-Cong"},"content":"    public void listTasks() {","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Wen-Cong"},"content":"        if (this.taskList.isEmpty()) {","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Wen-Cong"},"content":"            System.out.println(\"There are no tasks at the moment\");","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Wen-Cong"},"content":"            return;","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Wen-Cong"},"content":"        // Iterate task list and print task","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Wen-Cong"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Wen-Cong"},"content":"            int indexNum \u003d i + 1; // Index numbering should start from 1 instead of 0","lastModifiedDate":"2025-08-21T15:57:17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Wen-Cong"},"content":"            System.out.println(indexNum + \". \" + this.taskList.get(i));","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Wen-Cong"},"content":"        this.printSeparator();","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Wen-Cong"},"content":"     * Set task status as done and print confirmation message","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Wen-Cong"},"content":"     * @param index Task index position in Task List, starts from 1","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Wen-Cong"},"content":"     * @throws InvalidCommandException if index is out of bound","lastModifiedDate":"2025-08-21T22:54:27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Wen-Cong"},"content":"    public void markTaskAsDone(int index) throws InvalidCommandException {","lastModifiedDate":"2025-08-21T22:54:27","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Wen-Cong"},"content":"        // Validation for index number","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Wen-Cong"},"content":"        if (index \u003e this.taskList.size() || index \u003c 1) {","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Wen-Cong"},"content":"            throw new InvalidCommandException(\"Invalid task number\");","lastModifiedDate":"2025-08-21T22:54:27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-21T15:57:17","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Wen-Cong"},"content":"        Task task \u003d this.taskList.get(index - 1); // Index given starts from 1","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Wen-Cong"},"content":"        task.markDone(); // Set task status to done","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Wen-Cong"},"content":"        // Write task list to file","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Wen-Cong"},"content":"        boolean isSuccess \u003d saveTaskList();","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Wen-Cong"},"content":"        if (!isSuccess) {","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Wen-Cong"},"content":"            return;","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Wen-Cong"},"content":"        // Print confirmation message and new status","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Wen-Cong"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Wen-Cong"},"content":"        System.out.println(\"\\t\" + task);","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Wen-Cong"},"content":"        this.printSeparator();","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Wen-Cong"},"content":"     * Set task status as not done and print confirmation message","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Wen-Cong"},"content":"     * @param index Task index position in Task List, starts from 1","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Wen-Cong"},"content":"     * @throws InvalidCommandException if index is out of bound","lastModifiedDate":"2025-08-21T22:54:27","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Wen-Cong"},"content":"    public void markTaskAsNotDone(int index) throws InvalidCommandException {","lastModifiedDate":"2025-08-21T22:54:27","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Wen-Cong"},"content":"        // Validation for index number","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Wen-Cong"},"content":"        if (index \u003e this.taskList.size() || index \u003c 1) {","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Wen-Cong"},"content":"            throw new InvalidCommandException(\"Invalid task number\");","lastModifiedDate":"2025-08-21T22:54:27","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Wen-Cong"},"content":"        Task task \u003d this.taskList.get(index - 1); // Index given starts from 1","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Wen-Cong"},"content":"        task.markNotDone(); // Set task status to not done","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Wen-Cong"},"content":"        // Write task list to file","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Wen-Cong"},"content":"        boolean isSuccess \u003d saveTaskList();","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Wen-Cong"},"content":"        if (!isSuccess) {","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Wen-Cong"},"content":"            return;","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Wen-Cong"},"content":"        // Print confirmation message and new status","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Wen-Cong"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Wen-Cong"},"content":"        System.out.println(\"\\t\" + task);","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Wen-Cong"},"content":"        this.printSeparator();","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T15:57:17","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Wen-Cong"},"content":"     * Saves the current list of tasks to a file using the {@link FileServices}.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Wen-Cong"},"content":"     * If the save operation is successful, the method returns true.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Wen-Cong"},"content":"     * If an exception occurs during the file write process, an error message","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Wen-Cong"},"content":"     * is printed to the console and the method returns false.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Wen-Cong"},"content":"     * @return {@code true} if the task list was successfully written to the file;","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Wen-Cong"},"content":"     *         {@code false} otherwise.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Wen-Cong"},"content":"    private boolean saveTaskList() {","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Wen-Cong"},"content":"        // Write updated task list to file","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Wen-Cong"},"content":"        try {","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Wen-Cong"},"content":"            this.fileServices.writeToFile(this.taskList);","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Wen-Cong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Wen-Cong"},"content":"            // Print error message","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Wen-Cong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Wen-Cong"},"content":"            this.printSeparator();","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Wen-Cong"},"content":"            return false;","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Wen-Cong"},"content":"        return true;","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Wen-Cong"},"content":"     * Loads the task list from the file using the {@code FileServices}.","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Wen-Cong"},"content":"     * This method attempts to read the task data from the file and populates","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Wen-Cong"},"content":"     * the instance\u0027s task list.","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Wen-Cong"},"content":"     * Any {@link IOException} that occurs during file reading or an","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Wen-Cong"},"content":"     * {@link IllegalArgumentException} resulting from improperly formatted data","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Wen-Cong"},"content":"     * within the file will be caught, an error message will be printed to the","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Wen-Cong"},"content":"     * console, and the program will continue with an empty task list.","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Wen-Cong"},"content":"    private void loadTaskList() {","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Wen-Cong"},"content":"        try {","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Wen-Cong"},"content":"            this.taskList \u003d fileServices.readFromFile();","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Wen-Cong"},"content":"        } catch (IOException | IllegalArgumentException e) {","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Wen-Cong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Wen-Cong"},"content":"            this.printSeparator();","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Wen-Cong"},"content":"     * Print separator line that can be used between prompts and messages","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Wen-Cong"},"content":"    private void printSeparator() {","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Wen-Cong"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":276}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"    /** Deadline date time of the task */","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"    private final String deadline;","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"    public Deadline(String taskName, String deadline) {","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"        super(taskName);","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"    public Deadline(String taskName, String deadline, boolean isDone) {","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"        super(taskName, isDone);","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"     * Return the string format of the Deadline to be written into a file","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"     * @return The string format of Deadline suitable for file writing","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"     **/","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"        return \"D | \" + super.toFileString()","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"                + \" | \" + deadline + \"\\n\";","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"     * Display string format of Deadline task with status, task name","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"     * and deadline","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"     **/","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"                + \" (by: \" + this.deadline + \")\";","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":35}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"    /** Start date time of the event task */","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"    private final String startTime;","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"    /** End date time of the event task */","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"    private final String endTime;","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"    public Event(String taskName, String startTime, String endTime) {","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"        super(taskName);","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"    public Event(String taskName, String startTime, String endTime, boolean isDone) {","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"        super(taskName, isDone);","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"     * Return the string format of the Event to be written into a file","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"     * @return The string format of Event suitable for file writing","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"     **/","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"        return \"E | \" + super.toFileString()","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"                + \" | \" + startTime","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"                + \" | \" + endTime + \"\\n\";","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"     * Display string format of Event task with status, task name,","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"     * start time and end time","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"     **/","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"                + \" (from: \" + this.startTime","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"                + \", to: \" + this.endTime + \")\";","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":42}},{"path":"src/main/java/FileServices.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":" * A utility class for handling file-based operations, specifically for managing a list of tasks.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":" * This class uses the `java.nio.file` API for file system access.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"public class FileServices {","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"    private final Path path;","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"     * Constructs a {@code FileServices} instance to operate on a file at the specified path.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"     * The file does not need to exist when this object is created.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"     * @param path The string representation of the file path.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"    public FileServices(String path) {","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"        this.path \u003d Paths.get(path);","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"     * Writes a list of tasks to the file specified during construction.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"     * The method first ensures that the file and its parent directories exist.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"     * It then iterates through the provided task list, converts each task into","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"     * a string representation suitable for file storage, and writes the combined","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"     * string to the file, overwriting its contents.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskList The list of {@code Task} objects to be written to the file.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"     * @throws IOException If an I/O error occurs during file or directory creation,","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"     *                     or during the writing process.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"    public void writeToFile(List\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"        // Check if file exist. Create path + file if it doesn\u0027t exist","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"        ensureFileExists();","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"        // Format task list into String for writing to file","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"        StringBuilder data \u003d new StringBuilder();","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"            data.append(task.toFileString());","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"        // Write to data to file","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"        Files.writeString(path, data.toString());","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"     * Reads tasks from the file specified and returns them","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"     * as a list of Task objects.","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"     * The method uses {@code Files.readAllLines()} to read all lines from the file.","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"     * It then iterates through the list of strings, converting each line back into","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"     * a Task object","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"     * @return A list of {@code Task} objects read from the file.","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"     * @throws IOException If an I/O error occurs during the file reading process.","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"    public List\u003cTask\u003e readFromFile() throws IOException, IllegalArgumentException {","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wen-Cong"},"content":"        // Check if file exist. Create path + file if it doesn\u0027t exist","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"        ensureFileExists();","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wen-Cong"},"content":"        // Read all lines from the file","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wen-Cong"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wen-Cong"},"content":"        // Process each line and create Task objects","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wen-Cong"},"content":"        for (String line : lines) {","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wen-Cong"},"content":"            // Create a task from a string","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wen-Cong"},"content":"            Task task \u003d Task.createTaskFromFileString(line);","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wen-Cong"},"content":"            taskList.add(task);","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wen-Cong"},"content":"        return taskList;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wen-Cong"},"content":"     * Ensures that the file specified by the {@code path} and its parent directories exist.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wen-Cong"},"content":"     * If the file does not exist, it creates the necessary parent directories and then creates","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wen-Cong"},"content":"     * an empty file.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wen-Cong"},"content":"     * @throws IOException If an I/O error occurs while creating directories or the file.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wen-Cong"},"content":"    private void ensureFileExists() throws IOException {","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wen-Cong"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wen-Cong"},"content":"            // Create parent folder directories if it doesn\u0027t exist","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Wen-Cong"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wen-Cong"},"content":"            // Create an empty file","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Wen-Cong"},"content":"            Files.createFile(path);","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":98}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2025-08-21T22:12:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-21T22:12:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"     * Constructor","lastModifiedDate":"2025-08-21T22:12:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-21T22:12:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"     * @param message Message regarding more info of Exception thrown","lastModifiedDate":"2025-08-21T22:12:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-21T22:12:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2025-08-21T22:12:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"        super(\"Invalid Command: \" + message);","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T22:12:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-21T22:12:40","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"public class Main {","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"        // Init a Bot to begin program","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"        Bot bot \u003d new Bot(\"Lovely\");","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"        // Create a Scanner object to read input from the console","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"        // Print greeting message","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"        bot.greet();","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"        // Read user commands and perform actions repeatedly till \"bye\" command","lastModifiedDate":"2025-08-21T18:10:19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"        // to exit program","lastModifiedDate":"2025-08-21T18:10:19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"        while (true) {","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"            // Prompt user and read input from console","lastModifiedDate":"2025-08-21T18:10:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"            String input \u003d bot.promptUser(scanner);","lastModifiedDate":"2025-08-21T18:10:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"            // Split input by space into command type (first word)","lastModifiedDate":"2025-08-21T18:10:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"            // and other command information (e.g. input param)","lastModifiedDate":"2025-08-21T18:10:19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"            // commandInfo[0] \u003d command instruction","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"            // commandInfo[1] \u003d other command info","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"            String[] commandInfo \u003d input.split(\" \", 2);","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T18:10:19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"            try {","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"                // Redirect command type to invoke respective operations","lastModifiedDate":"2025-08-21T18:10:19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"                switch (commandInfo[0]) {","lastModifiedDate":"2025-08-21T18:10:19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"                case \"bye\": // Exit program","lastModifiedDate":"2025-08-21T18:10:19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"                    bot.exit();","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"                    System.exit(0);","lastModifiedDate":"2025-08-20T19:23:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"                case \"list\": // Display task list","lastModifiedDate":"2025-08-21T18:10:19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"                    bot.listTasks();","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"                    break;","lastModifiedDate":"2025-08-21T15:57:17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"                case \"mark\": // Mark a task as done","lastModifiedDate":"2025-08-21T18:10:19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"                    // Validate command format, re-prompt if incorrect command format","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"                    if (commandInfo.length !\u003d 2 || !commandInfo[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"                        throw new InvalidCommandException(","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"                                \"Please ensure command is in this format: \" +","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"                                        \"mark \u003cTask Index\u003e\");","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"                    }","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"                    bot.markTaskAsDone(Integer.parseInt(commandInfo[1]));","lastModifiedDate":"2025-08-21T18:10:19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"                    break;","lastModifiedDate":"2025-08-21T18:10:19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"                case \"unmark\": // Mark a task as not done","lastModifiedDate":"2025-08-21T18:10:19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"                    // Validate command format, re-prompt if incorrect command format","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"                    if (commandInfo.length !\u003d 2 || !commandInfo[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"                        throw new InvalidCommandException(","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"                                \"Please ensure command is in this format: \" +","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"                                        \"mark \u003cTask Index\u003e\");","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"                    }","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"                    bot.markTaskAsNotDone(Integer.parseInt(commandInfo[1]));","lastModifiedDate":"2025-08-21T18:10:19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"                    break;","lastModifiedDate":"2025-08-21T18:10:19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"                case \"todo\": // Add to-do task to task list","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"                    // Validate command format, re-prompt if incorrect command format","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"                    if (commandInfo.length !\u003d 2) {","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"                        throw new InvalidCommandException(","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"                                \"Please ensure command is in this format: \" +","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"                                        \"todo \u003cTask Name\u003e\");","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"                    }","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"                    // Add to-do task to task list","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wen-Cong"},"content":"                    bot.addTask(commandInfo[1]);","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wen-Cong"},"content":"                    break;","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wen-Cong"},"content":"                case \"deadline\": // Add deadline task to task list","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wen-Cong"},"content":"                    // Validate command format, re-prompt if incorrect command format","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wen-Cong"},"content":"                    if (commandInfo.length !\u003d 2) {","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wen-Cong"},"content":"                        throw new InvalidCommandException(","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wen-Cong"},"content":"                                \"Please ensure command is in this format: \" +","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wen-Cong"},"content":"                                        \"deadline \u003cTask Name\u003e /by \u003cDate\u003e\");","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wen-Cong"},"content":"                    }","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wen-Cong"},"content":"                    // Split the command info with by \"/by\" to extract task name and deadline","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wen-Cong"},"content":"                    String[] deadlineInfo \u003d commandInfo[1].split(\" /by \");","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wen-Cong"},"content":"                    // Validate command format, re-prompt if incorrect command format","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wen-Cong"},"content":"                    if (deadlineInfo.length !\u003d 2) {","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wen-Cong"},"content":"                        throw new InvalidCommandException(","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wen-Cong"},"content":"                                \"Please ensure command is in this format: \" +","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wen-Cong"},"content":"                                        \"deadline \u003cTask Name\u003e /by \u003cDate\u003e\");","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wen-Cong"},"content":"                    }","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wen-Cong"},"content":"                    // Add deadline task to task list","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wen-Cong"},"content":"                    bot.addTask(deadlineInfo[0], deadlineInfo[1]);","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wen-Cong"},"content":"                    break;","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Wen-Cong"},"content":"                case \"event\": // Add event task to task list","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wen-Cong"},"content":"                    // Validate command format, re-prompt if incorrect command format","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Wen-Cong"},"content":"                    if (commandInfo.length !\u003d 2) {","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Wen-Cong"},"content":"                        throw new InvalidCommandException(","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Wen-Cong"},"content":"                                \"Please ensure command is in this format: \" +","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Wen-Cong"},"content":"                                        \"event \u003cTask Name\u003e /from \u003cStart Date\u003e /to \u003cEnd Date\u003e\");","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Wen-Cong"},"content":"                    }","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Wen-Cong"},"content":"                    // Split the command info with by \"/from\" to extract task name","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Wen-Cong"},"content":"                    // eventInfo[0] \u003d task name","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Wen-Cong"},"content":"                    // eventInfo[1] \u003d start date and end date","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Wen-Cong"},"content":"                    String[] eventInfo \u003d commandInfo[1].split(\" /from \");","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Wen-Cong"},"content":"                    // Validate command format, re-prompt if incorrect command format","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Wen-Cong"},"content":"                    if (eventInfo.length !\u003d 2) {","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Wen-Cong"},"content":"                        throw new InvalidCommandException(","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Wen-Cong"},"content":"                                \"Please ensure command is in this format: \" +","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Wen-Cong"},"content":"                                        \"event \u003cTask Name\u003e /from \u003cStart Date\u003e /to \u003cEnd Date\u003e\");","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Wen-Cong"},"content":"                    }","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Wen-Cong"},"content":"                    // Extract start and end date from the separated eventInfo (taskName, date)","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Wen-Cong"},"content":"                    String[] dateInfo \u003d eventInfo[1].split(\" /to \");","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Wen-Cong"},"content":"                    // Validate command format, re-prompt if incorrect command format","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Wen-Cong"},"content":"                    if (dateInfo.length !\u003d 2) {","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Wen-Cong"},"content":"                        throw new InvalidCommandException(","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Wen-Cong"},"content":"                                \"Please ensure command is in this format: \" +","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Wen-Cong"},"content":"                                        \"event \u003cTask Name\u003e /from \u003cStart Date\u003e /to \u003cEnd Date\u003e\");","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Wen-Cong"},"content":"                    }","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Wen-Cong"},"content":"                    // Add event task to task list","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Wen-Cong"},"content":"                    bot.addTask(eventInfo[0], dateInfo[0], dateInfo[1]);","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Wen-Cong"},"content":"                    break;","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Wen-Cong"},"content":"                case \"delete\":","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Wen-Cong"},"content":"                    // Validate command format, re-prompt if incorrect command format","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Wen-Cong"},"content":"                    if (commandInfo.length !\u003d 2 || !commandInfo[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Wen-Cong"},"content":"                        throw new InvalidCommandException(","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Wen-Cong"},"content":"                                \"Please ensure command is in this format: \" +","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Wen-Cong"},"content":"                                        \"delete \u003cTask Index\u003e\");","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Wen-Cong"},"content":"                    }","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Wen-Cong"},"content":"                    // Delete task from task list","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Wen-Cong"},"content":"                    bot.removeTask(Integer.parseInt(commandInfo[1]));","lastModifiedDate":"2025-08-21T23:07:29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Wen-Cong"},"content":"                    break;","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Wen-Cong"},"content":"                default:","lastModifiedDate":"2025-08-21T21:26:22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Wen-Cong"},"content":"                    throw new InvalidCommandException(\"No such command\");","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Wen-Cong"},"content":"                }","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Wen-Cong"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Wen-Cong"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-08-21T22:37:29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Wen-Cong"},"content":"            }","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":146}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":" * Represents a generic task with a description and a completion status.","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":" * This abstract class serves as the base for more specific types of tasks","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"public abstract class Task {","lastModifiedDate":"2025-08-21T18:35:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"    /** Name of the task */","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"    private final String name;","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"    /** Status of the task, true if task is marked as done */","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"    private boolean isDone;","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"    public Task(String name) {","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"     * Sets the task as done","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"     **/","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"    public void markDone() {","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"     * Sets the task as not done","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"     **/","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"    public void markNotDone() {","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"     * Return the string format of the Task to be written into a file","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"     * @return The string format of Task suitable for file writing","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"     **/","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"        String isDoneString \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"        return isDoneString + \" | \" + name;","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"     * Creates and returns a {@code Task} object from a formatted string retrieved from a file.","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"     * This static factory method parses a single line of text. The method","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"     * determines the specific type of task (To-do, Deadline, or Event) based on a type","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"     * identifier and then constructs the appropriate subclass instance.","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"     * The expected format for the input string is a set of pipe-separated values:","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"     *     \u003cli\u003eFor a To-do: {@code \"T | \u003cisDone\u003e | \u003ctaskName\u003e\"}\u003c/li\u003e","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"     *     \u003cli\u003eFor a Deadline: {@code \"D | \u003cisDone\u003e | \u003ctaskName\u003e | \u003cdeadline\u003e\"}\u003c/li\u003e","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"     *     \u003cli\u003eFor an Event: {@code \"E | \u003cisDone\u003e | \u003ctaskName\u003e | \u003cfrom\u003e | \u003cto\u003e\"}\u003c/li\u003e","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"     * The {@code \u003cisDone\u003e} value should be \"1\" for a completed task and \"0\" otherwise.","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"     * @param fileString The single line of text read from the task file.","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wen-Cong"},"content":"     * @return A {@code Task} object, which could be a {@code To-do}, {@code Deadline},","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"     *         or {@code Event} instance, corresponding to the data in the input string.","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wen-Cong"},"content":"     * @throws IllegalArgumentException If the file string is not in the expected format.","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wen-Cong"},"content":"    public static Task createTaskFromFileString(String fileString)","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wen-Cong"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wen-Cong"},"content":"        // Split string by \u0027 | \u0027","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wen-Cong"},"content":"        String[] parts \u003d fileString.split(\" \\\\| \");","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wen-Cong"},"content":"        // Check if splied string parts is valid","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wen-Cong"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wen-Cong"},"content":"            throw new IllegalArgumentException(\"Invalid task format in file: \" + fileString);","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wen-Cong"},"content":"        // Extract string parts","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wen-Cong"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wen-Cong"},"content":"        boolean isDone \u003d parts[1].equals(\"1\"); // True, if isDone \u003d \"1\".","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wen-Cong"},"content":"        String taskName \u003d parts[2];","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wen-Cong"},"content":"        Task task;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wen-Cong"},"content":"        // Based on the task type, create the appropriate subclass","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wen-Cong"},"content":"        switch (type) {","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wen-Cong"},"content":"        case \"T\":","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wen-Cong"},"content":"            task \u003d new Todo(taskName, isDone);","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wen-Cong"},"content":"            break;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Wen-Cong"},"content":"        case \"D\":","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wen-Cong"},"content":"            String deadline \u003d parts[3];","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Wen-Cong"},"content":"            task \u003d new Deadline(taskName, deadline, isDone);","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Wen-Cong"},"content":"            break;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Wen-Cong"},"content":"        case \"E\":","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Wen-Cong"},"content":"            String from \u003d parts[3];","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Wen-Cong"},"content":"            String to \u003d parts[4];","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Wen-Cong"},"content":"            task \u003d new Event(taskName, from, to, isDone);","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Wen-Cong"},"content":"            break;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Wen-Cong"},"content":"        default:","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Wen-Cong"},"content":"            // Handle unexpected format","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Wen-Cong"},"content":"            throw new IllegalArgumentException(\"Invalid task format in file: \" + fileString);","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Wen-Cong"},"content":"        return task;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Wen-Cong"},"content":"     * Display string format of Task instance with status and task name","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Wen-Cong"},"content":"     **/","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Wen-Cong"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Wen-Cong"},"content":"        String status \u003d \"[ ]\";","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Wen-Cong"},"content":"        if (isDone) {","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Wen-Cong"},"content":"            status \u003d \"[X]\";","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Wen-Cong"},"content":"        return status + \" \" + name;","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":122}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"        super(taskName);","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"    public Todo(String taskName, boolean isDone) {","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"        super(taskName, isDone);","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"     * Return the string format of the To-do to be written into a file","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"     * @return The string format of To-do suitable for file writing","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"     **/","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"        return \"T | \" + super.toFileString() + \"\\n\";","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"     * Display string format of To-do task with status and task name","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"     **/","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"list","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"todo buy book","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"deadline complete tutorial /by Sunday","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"event party /from Mon 2pm /to 8pm","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"list","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"mark 1","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"mark 2","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"mark 3","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"unmark 2","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"unmark 3","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"list","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"deadline wrong command task","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"event wrong command task","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"bye","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"-":20,"Wen-Cong":1}}]
