[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"### A-MoreErrorHandling","lastModifiedDate":"2025-09-15T23:08:59","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"AI Used: **Qwen3-Coder**","lastModifiedDate":"2025-09-15T23:08:59","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-15T23:08:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"Prompt: **Write a java method to compare 2 LocalDateTime (startTime, endTime) in java and ","lastModifiedDate":"2025-09-15T23:08:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"ensure that startTime should be before or equal to endTime. Provide JavaDoc for this method as well.**","lastModifiedDate":"2025-09-15T23:08:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-15T23:08:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"Code Location: \u003cb\u003eDateTimeUtils.java, line 143 to 152\u003c/b\u003e","lastModifiedDate":"2025-09-15T23:08:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-15T23:08:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"### Interesting Observation:","lastModifiedDate":"2025-09-15T23:08:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"- Date compare method work well with well written JavaDoc that follows coding standard guideline","lastModifiedDate":"2025-09-15T23:08:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"- Method implemented in under 2 mins. ","lastModifiedDate":"2025-09-15T23:08:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"- Saves 10 mins searching forums and writing JavaDoc for the method implemented.","lastModifiedDate":"2025-09-15T23:08:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"- It is able to write good quality JavaDoc.","lastModifiedDate":"2025-09-15T23:08:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-15T23:08:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"### Personal Thoughts","lastModifiedDate":"2025-09-15T23:08:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"- Using AI to assist with tedious task like writing JavaDoc can save plenty of time so that","lastModifiedDate":"2025-09-15T23:08:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"I can spend more time on code logic.","lastModifiedDate":"2025-09-15T23:08:59","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":17}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-01T19:58:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-09-01T19:58:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-01T19:58:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"checkstyle {","lastModifiedDate":"2025-09-01T19:58:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-09-01T19:58:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"    mainClass.set(\"bot.Launcher\")","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"    archiveBaseName \u003d \"lovely\"","lastModifiedDate":"2025-09-15T23:20:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-08-29T20:33:17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"-":39,"Wen-Cong":23}},{"path":"src/main/java/bot/Bot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import bot.command.Command;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"import bot.service.FileService;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"import bot.task.TaskList;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"import bot.util.Parser;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-20T12:04:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":" * Main class for the bot application that manages tasks and user interactions.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":" * This class orchestrates the entire application flow, handling user input,","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":" * command execution, and data persistence.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"public class Bot {","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"    /** Name of the bot */","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"    private final String name;","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"    /** List of tasks **/","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T15:57:17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"    /** File service API that write and read from file **/","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"    private final FileService fileService;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"     * Constructs a Bot instance with the specified name and storage path.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"     * Initializes the user interface, file services, and loads existing tasks","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"     * from the storage file if available.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"     * @param name the name of the bot to be displayed to users","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"     * @param storagePath the file path where task data will be stored","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"    public Bot(String name, String storagePath) {","lastModifiedDate":"2025-08-28T22:55:19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"        this.fileService \u003d new FileService(storagePath);","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"        try {","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"            this.taskList \u003d new TaskList(fileService.readFromFile());","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"        } catch (IOException | IllegalArgumentException e) {","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T22:55:19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"     * Processes user input, executes the corresponding command, and returns a response.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"     * This method parses the input string into a {@link Command}, executes it, and","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"     * returns the resulting message. If the command is an exit command, it","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"     * terminates the application.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"     * @param input The raw input string from the user.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"     * @return The response message generated by the executed command.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"    public String generateResponse(String input) {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"        // Parse user input into Command object","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T22:55:19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"        command.execute(taskList, fileService);","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T22:55:19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"        if (command.isExit()) {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"            System.exit(0);","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-28T22:55:19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"        return command.getResponse();","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wen-Cong"},"content":"     * Generates the initial greeting message from the bot.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wen-Cong"},"content":"     * @return A string containing the bot\u0027s name and a welcome message.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wen-Cong"},"content":"    public String getGreetingMessage() {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wen-Cong"},"content":"        return \"Hello! I\u0027m \" + name + \"\\n What can I do for you?\";","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-28T22:55:19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":74}},{"path":"src/main/java/bot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot;","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"public class Launcher {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":12}},{"path":"src/main/java/bot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot;","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"import bot.ui.MainWindow;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":" * A GUI for Lovely using FXML.","lastModifiedDate":"2025-09-15T23:20:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"    private final Bot bot \u003d new Bot(\"Lovely\", \"data/taskData.txt\");","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"        try {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBot(bot);  // inject the bot instance","lastModifiedDate":"2025-09-15T23:20:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"            stage.show();","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":32}},{"path":"src/main/java/bot/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.command;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import bot.service.FileService;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"import bot.exception.InvalidCommandException;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"import bot.task.TaskList;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"import bot.task.Task;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"import bot.ui.ResponseMessage;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":" * Represents a command to add a deadline task to the task list.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":" * This command parses deadline information from user input and creates a new deadline task.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":" * The command format should be: \"deadline \u003ctask name\u003e /by \u003cdeadline date\u003e\"","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"    private final String[] commandInfo;","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"     * Constructs an AddDeadlineCommand with the provided command information.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"     * @param commandInfo an array containing the command details where:","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"     *                    - commandInfo[0] should be \"deadline\"","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"     *                    - commandInfo[1] should contain the task name and deadline separated by \" /by \"","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"    public AddDeadlineCommand(String[] commandInfo) {","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"        this.commandInfo \u003d commandInfo;","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"     * Executes the add deadline command by parsing the command information,","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"     * validating the format, creating a new deadline task, and saving it to file.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskList the task list to which the new deadline task will be added","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"     * @param fileService the file services for writing the updated task list to storage","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"    public void execute(TaskList taskList, FileService fileService) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"        try {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"            // Validate command format, re-prompt if incorrect command format","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"            boolean isValidCommandInfo \u003d commandInfo.length \u003d\u003d 2;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"            if (!isValidCommandInfo) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"                        \"Oh no, command format is not right, let me give you a hint: \" +","lastModifiedDate":"2025-09-15T21:22:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"                                \"deadline \u003cTask Name\u003e /by \u003cDate\u003e\");","lastModifiedDate":"2025-08-30T00:26:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"            }","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"            // Split the command info with by \" /by \" to extract task name and deadline","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"            String[] deadlineInfo \u003d commandInfo[1].split(\" /by \");","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"            // Validate command format, re-prompt if incorrect command format","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"            boolean isValidDeadlineInfo \u003d deadlineInfo.length \u003d\u003d 2;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"            if (!isValidDeadlineInfo) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"                        \"Oh no, command format is not right, let me give you a hint: \" +","lastModifiedDate":"2025-09-15T21:22:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"                                \"deadline \u003cTask Name\u003e /by \u003cDate\u003e\");","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"            }","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"            String taskName \u003d deadlineInfo[0];","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"            String deadline \u003d deadlineInfo[1];","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"            // Add deadline task","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"            Task newTask \u003d taskList.addTask(taskName, deadline);","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"            assert newTask !\u003d null : \"Task added should not be null\";","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wen-Cong"},"content":"            // Write task list to file","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"            fileService.writeToFile(taskList);","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wen-Cong"},"content":"            // Set success message","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wen-Cong"},"content":"            super.setResponse(ResponseMessage.getAddTaskSuccessMessage(newTask, taskList.getSize()));","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wen-Cong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wen-Cong"},"content":"            super.setResponse(e.getMessage());","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wen-Cong"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wen-Cong"},"content":"        return false;","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":79}},{"path":"src/main/java/bot/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.command;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import bot.service.FileService;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"import bot.exception.InvalidCommandException;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"import bot.task.TaskList;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"import bot.ui.ResponseMessage;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"import bot.task.Task;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":" * Represents a command to add an event task to the task list.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":" * This command parses event information from user input and creates a new event task.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":" * The command format should be: \"event \u003ctask name\u003e /from \u003cstart date\u003e /to \u003cend date\u003e\"","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"    private final String[] commandInfo;","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"     * Constructs an AddEventCommand with the provided command information.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"     * @param commandInfo an array containing the command details where:","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"     *                    - commandInfo[0] should be \"event\"","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"     *                    - commandInfo[1] should contain the task name, start date, and end date","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"     *                      in the format: \"\u003ctask name\u003e /from \u003cstart date\u003e /to \u003cend date\u003e\"","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"    public AddEventCommand(String[] commandInfo) {","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"        this.commandInfo \u003d commandInfo;","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"     * Executes the add event command by parsing the command information,","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"     * validating the format, creating a new event task, and saving it to file.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskList the task list to which the new event task will be added","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"     * @param fileService the file services for writing the updated task list to storage","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"    public void execute(TaskList taskList, FileService fileService) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"        try {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"            // Validate command format, re-prompt if incorrect command format","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"            boolean isValidCommandInfo \u003d commandInfo.length \u003d\u003d 2;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"            if (!isValidCommandInfo) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"                        \"Oh no, command format is not right, let me give you a hint: \" +","lastModifiedDate":"2025-09-15T21:22:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"                                \"event \u003cTask Name\u003e /from \u003cStart Date\u003e /to \u003cEnd Date\u003e\");","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"            }","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"            // Split the command info with by \"/from\" to extract task name","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"            // eventInfo[0] \u003d task name","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"            // eventInfo[1] \u003d start date and end date","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"            String[] eventInfo \u003d commandInfo[1].split(\" /from \");","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"            // Validate command format, re-prompt if incorrect command format","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"            boolean isValidEventInfo \u003d eventInfo.length \u003d\u003d 2;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"            if (!isValidEventInfo) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"                        \"Oh no, command format is not right, let me give you a hint: \" +","lastModifiedDate":"2025-09-15T21:22:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"                                \"event \u003cTask Name\u003e /from \u003cStart Date\u003e /to \u003cEnd Date\u003e\");","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"            }","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"            // Extract start and end date from the separated eventInfo (taskName, date)","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"            String[] dateInfo \u003d eventInfo[1].split(\" /to \");","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"            // Validate command format, re-prompt if incorrect command format","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"            boolean isValidDateInfo \u003d dateInfo.length \u003d\u003d 2;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wen-Cong"},"content":"            if (!isValidDateInfo) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wen-Cong"},"content":"                        \"Oh no, command format is not right, let me give you a hint: \" +","lastModifiedDate":"2025-09-15T21:22:38","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wen-Cong"},"content":"                                \"event \u003cTask Name\u003e /from \u003cStart Date\u003e /to \u003cEnd Date\u003e\");","lastModifiedDate":"2025-08-30T00:26:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wen-Cong"},"content":"            }","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wen-Cong"},"content":"            String taskName \u003d eventInfo[0];","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wen-Cong"},"content":"            String from \u003d dateInfo[0];","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wen-Cong"},"content":"            String to \u003d dateInfo[1];","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wen-Cong"},"content":"            // Add event task","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wen-Cong"},"content":"            Task newTask \u003d taskList.addTask(taskName, from, to);","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wen-Cong"},"content":"            assert newTask !\u003d null : \"Task added should not be null\";","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wen-Cong"},"content":"            // Write task list to file","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wen-Cong"},"content":"            fileService.writeToFile(taskList);","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wen-Cong"},"content":"            // Set success message","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wen-Cong"},"content":"            super.setResponse(ResponseMessage.getAddTaskSuccessMessage(newTask, taskList.getSize()));","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wen-Cong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wen-Cong"},"content":"            super.setResponse(e.getMessage());","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Wen-Cong"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Wen-Cong"},"content":"        return false;","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":94}},{"path":"src/main/java/bot/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.command;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import bot.service.FileService;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"import bot.exception.InvalidCommandException;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"import bot.task.TaskList;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"import bot.ui.ResponseMessage;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"import bot.task.Task;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":" * Represents a command to add a to-do task to the task list.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":" * This command parses to-do information from user input and creates a new to-do task.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":" * The command format should be: \"todo \u003ctask name\u003e\"","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"    private final String[] commandInfo;","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"     * Constructs an AddTodoCommand with the provided command information.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"     * @param commandInfo an array containing the command details where:","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"     *                    - commandInfo[0] should be \"todo\"","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"     *                    - commandInfo[1] should contain the task name","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"    public AddTodoCommand(String[] commandInfo) {","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"        this.commandInfo \u003d commandInfo;","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"     * Executes the add to-do command by parsing the command information,","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"     * validating the format, creating a new to-do task, and saving it to file.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskList the task list to which the new to-do task will be added","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"     * @param fileService the file services for writing the updated task list to storage","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"    public void execute(TaskList taskList, FileService fileService) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"        try {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"            // Validate command format, re-prompt if incorrect command format","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"            boolean isValidCommandInfo \u003d commandInfo.length \u003d\u003d 2;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"            if (!isValidCommandInfo) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"                        \"Oh no, command format is not right, let me give you a hint: \" +","lastModifiedDate":"2025-09-15T21:22:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"                                \"todo \u003cTask Name\u003e\");","lastModifiedDate":"2025-08-30T00:26:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"            }","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"            String taskName \u003d commandInfo[1];","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"            // Add To-do task","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"            Task newTask \u003d taskList.addTask(taskName);","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"            assert newTask !\u003d null : \"Task added should not be null\";","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"            // Write task list to file","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"            fileService.writeToFile(taskList);","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"            // Set success message","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"            super.setResponse(ResponseMessage.getAddTaskSuccessMessage(newTask, taskList.getSize()));","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"            super.setResponse(e.getMessage());","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wen-Cong"},"content":"        return false;","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":67}},{"path":"src/main/java/bot/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.command;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import bot.service.FileService;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"import bot.task.TaskList;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":" * Abstract base class for all commands in the bot application.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":" * This class defines the common interface that all command classes must implement.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":" * Each concrete command class should extend this class and provide specific","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":" * implementations for executing the command and determining if it should exit the application.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"public abstract class Command {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"    private String response;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"     * Executes the command with the given parameters.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"     * This method should contain the specific logic for each command type.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskList the task list to operate on","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"     * @param fileService the file services for reading from and writing to storage","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"    public abstract void execute(TaskList taskList, FileService fileService);","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"     * Determines whether this command should cause the application to exit.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"     * @return true if the application should exit after executing this command, false otherwise","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"     * Return the generated response message after task execution","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"     * @return The command response string message","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"    public String getResponse() {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"        return response;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"     * Set the generated response message","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"     * @param response The command response string message","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"    protected void setResponse(String response) {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"        this.response \u003d response;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":48}},{"path":"src/main/java/bot/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.command;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import bot.service.FileService;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"import bot.task.TaskList;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":" * This command displays an exit message to the user and signals that the application","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":" * should terminate after execution.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"    private boolean isExecuted \u003d false;","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"    public ExitCommand() {}","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"     * Executes the exit command by displaying an exit message to the user","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"     * and marking the command as executed.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskList the task list (not used in this command)","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"     * @param fileService the file services (not used in this command)","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"    public void execute(TaskList taskList, FileService fileService) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"        isExecuted \u003d true;","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"     * Determines if this command should exit the application.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"     * @return true if the command has been executed, false otherwise","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"        return isExecuted;","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":37}},{"path":"src/main/java/bot/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.command;","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import bot.exception.InvalidCommandException;","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"import bot.service.FileService;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"import bot.task.Task;","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"import bot.task.TaskList;","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"import bot.ui.ResponseMessage;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"import java.util.List;","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":" * Represents a command to find tasks containing a specific keyword.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":" * This command searches the current task list for tasks whose names contain the provided keyword.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"    private final String[] commandInfo;","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"     * Constructs a {@code FindCommand} with the provided command information.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"     * The command information is expected to be an array where the first element is the","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"     * command name (\"find\") and the second element is the search keyword.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"     * @param commandInfo The array containing the command name and the search keyword.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"    public FindCommand(String[] commandInfo) {","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"        this.commandInfo \u003d commandInfo;","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"     * Executes the find command.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"     * This method validates the command format, searches for tasks matching the keyword,","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"     * and sets the response message to display the filtered list of tasks.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskList The {@link TaskList} to be searched.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"     * @param fileService The {@link FileService} (not used in this command, but required by the parent class).","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"    public void execute(TaskList taskList, FileService fileService) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"        try {","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"            // Validate command format, re-prompt if incorrect command format","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"            boolean isValidCommandInfo \u003d commandInfo.length \u003d\u003d 2;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"            if (!isValidCommandInfo) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"                        \"Oh no, command format is not right, let me give you a hint: \" +","lastModifiedDate":"2025-09-15T21:22:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"                                \"find \u003cSearch Keyword\u003e\");","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"            }","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"            String keyword \u003d commandInfo[1];","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"            // Find all tasks that matches keyword","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"            List\u003cTask\u003e filteredList \u003d taskList.searchTasksByName(keyword);","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"            // Set success message","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"            super.setResponse(ResponseMessage.getSearchTaskListMessage(filteredList));","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"            super.setResponse(e.getMessage());","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"        return false;","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":64}},{"path":"src/main/java/bot/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.command;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import bot.service.FileService;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"import bot.task.TaskList;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":" * Represents an invalid command that is executed when an unrecognized command is entered.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":" * This command displays an error message to the user indicating that the command is not valid.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"    public InvalidCommand() {}","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"     * Executes the invalid command by displaying an error message to the user.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskList the task list (not used in this command)","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"     * @param fileService the file services (not used in this command)","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"    public void execute(TaskList taskList, FileService fileService) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"        super.setResponse(\"I can\u0027t do this yet, I\u0027m still learning. Please give me some time\");","lastModifiedDate":"2025-09-15T21:22:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"        return false;","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":28}},{"path":"src/main/java/bot/command/ListTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.command;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import bot.service.FileService;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"import bot.task.TaskList;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"import bot.ui.ResponseMessage;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":" * Represents a command to display the list of all tasks.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":" * This command retrieves and displays all tasks currently in the task list.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"    public ListTaskCommand() {}","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"     * Executes the list task command by displaying all tasks in the task list.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskList the task list containing tasks to be displayed","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"     * @param fileService the file services (not used in this command)","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"    public void execute(TaskList taskList, FileService fileService) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"        super.setResponse(ResponseMessage.getTaskListMessage(taskList.getTaskList()));","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"        return false;","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":29}},{"path":"src/main/java/bot/command/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.command;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import bot.service.FileService;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"import bot.exception.InvalidCommandException;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"import bot.task.TaskList;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"import bot.ui.ResponseMessage;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"import bot.task.Task;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":" * Represents a command to mark a task as completed.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":" * This command takes a task index and marks the corresponding task as done.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":" * The command format should be: \"mark \u003ctask index\u003e\"","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"    private final String[] commandInfo;","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"     * Constructs a MarkTaskCommand with the provided command information.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"     * @param commandInfo an array containing the command details where:","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"     *                    - commandInfo[0] should be \"mark\"","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"     *                    - commandInfo[1] should contain the task index as a positive integer","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"    public MarkTaskCommand(String[] commandInfo) {","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"        this.commandInfo \u003d commandInfo;","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"     * Executes the mark task command by parsing the task index, validating the format,","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"     * marking the specified task as completed, and saving the updated task list to file.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskList the task list containing the task to be marked","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"     * @param fileService the file services for writing the updated task list to storage","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"    public void execute(TaskList taskList, FileService fileService) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"        try {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"            // Validate command format, re-prompt if incorrect command format","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"            boolean isValidCommandInfo \u003d commandInfo.length \u003d\u003d 2 \u0026\u0026 commandInfo[1].matches(\"\\\\d+\");","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"            if (!isValidCommandInfo) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"                        \"Oh no, command format is not right, let me give you a hint: \" +","lastModifiedDate":"2025-09-15T21:22:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"                                \"mark \u003cTask Index\u003e\");","lastModifiedDate":"2025-08-30T00:26:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"            }","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"            int index \u003d Integer.parseInt(commandInfo[1]);","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"            // Mark task","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"            Task task \u003d taskList.markTaskAsDone(index);","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"            assert task !\u003d null : \"Task mark done should not be null\";","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"            // Write task list to file","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"            fileService.writeToFile(taskList);","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"            // Set confirmation message and new status as response","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"            super.setResponse(ResponseMessage.getMarkTaskSuccessMessage(task));","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"            super.setResponse(e.getMessage());","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wen-Cong"},"content":"        return false;","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":67}},{"path":"src/main/java/bot/command/RemoveTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.command;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import bot.service.FileService;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"import bot.exception.InvalidCommandException;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"import bot.task.TaskList;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"import bot.ui.ResponseMessage;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"import bot.task.Task;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":" * Represents a command to remove a task from the task list.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":" * This command takes a task index and removes the corresponding task from the list.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":" * The command format should be: \"delete \u003ctask index\u003e\"","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"public class RemoveTaskCommand extends Command {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"    private final String[] commandInfo;","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"     * Constructs a RemoveTaskCommand with the provided command information.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"     * @param commandInfo an array containing the command details where:","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"     *                    - commandInfo[0] should be \"delete\"","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"     *                    - commandInfo[1] should contain the task index as a positive integer","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"    public RemoveTaskCommand(String[] commandInfo) {","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"        this.commandInfo \u003d commandInfo;","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"     * Executes the remove task command by parsing the task index, validating the format,","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"     * removing the specified task from the task list, and saving the updated task list to file.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskList the task list from which the task will be removed","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"     * @param fileService the file services for writing the updated task list to storage","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"    public void execute(TaskList taskList, FileService fileService) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"        try {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"            // Validate command format, re-prompt if incorrect command format","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"            boolean isValidCommandInfo \u003d commandInfo.length \u003d\u003d 2 \u0026\u0026 commandInfo[1].matches(\"\\\\d+\");","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"            if (!isValidCommandInfo) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"                        \"Oh no, command format is not right, let me give you a hint: \" +","lastModifiedDate":"2025-09-15T21:22:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"                                \"delete \u003cTask Index\u003e\");","lastModifiedDate":"2025-08-30T00:26:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"            }","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"            int index \u003d Integer.parseInt(commandInfo[1]);","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"            Task task \u003d taskList.removeTask(index);","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"            assert task !\u003d null : \"task should not be null\";","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"            // Write task list to file","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"            fileService.writeToFile(taskList);","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"            // Set confirmation message and list count as response","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"            super.setResponse(ResponseMessage.getRemoveTaskSuccessMessage(task, taskList.getSize()));","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"            super.setResponse(e.getMessage());","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"        return false;","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":66}},{"path":"src/main/java/bot/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.command;","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import bot.exception.InvalidCommandException;","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"import bot.service.FileService;","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"import bot.task.TaskList;","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"import bot.ui.ResponseMessage;","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":" * Represents a command to sort tasks in the task list.","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":" * This command allows users to sort tasks either alphabetically by name or chronologically by date.","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":" * The command format should be: \"sort name\" or \"sort date\"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"    private final String[] commandInfo;","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"     * Constructs a SortCommand with the provided command information.","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"     * @param commandInfo an array containing the command details where:","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"     *                    - commandInfo[0] should be \"sort\"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"     *                    - commandInfo[1] should be either \"name\" or \"date\"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"    public SortCommand(String[] commandInfo) {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"        this.commandInfo \u003d commandInfo;","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"     * Executes the sort command by validating the command format, sorting the task list","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"     * based on the specified sort type, saving the sorted task list to file, and","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"     * setting an appropriate response message.","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"     * If the command format is invalid or the sort type is not recognized, an error","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"     * message is set as the response.","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskList the task list to be sorted","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"     * @param fileService the file service for writing the sorted task list to storage","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"    public void execute(TaskList taskList, FileService fileService) {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"        try {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"            // Validate command format, re-prompt if incorrect command format","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"            boolean isValidCommandInfo \u003d commandInfo.length \u003d\u003d 2;","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"            if (!isValidCommandInfo) {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"                        \"\"\"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"                                Oh no, command format is not right, let me give you a hint:\\s","lastModifiedDate":"2025-09-15T21:22:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"                                sort name","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"                                sort date\"\"\");","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"            }","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"            String sortType \u003d commandInfo[1];","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"            // Sort task list based on sorting typing","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"            switch (sortType) {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"            case \"name\" -\u003e taskList.sortTaskByName();","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"            case \"date\" -\u003e taskList.sortTaskByDate();","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"            default -\u003e throw new InvalidCommandException(","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"                    \"\"\"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"                            Oh no, command format is not right, let me give you a hint: \\s","lastModifiedDate":"2025-09-15T21:22:38","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"                            sort name","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"                            sort date\"\"\");","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"            }","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wen-Cong"},"content":"            // Write task list to file","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"            fileService.writeToFile(taskList);","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wen-Cong"},"content":"            // Set success message","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wen-Cong"},"content":"            super.setResponse(ResponseMessage.getSortListMessage(taskList.getTaskList()));","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wen-Cong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wen-Cong"},"content":"            super.setResponse(e.getMessage());","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wen-Cong"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wen-Cong"},"content":"        return false;","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":79}},{"path":"src/main/java/bot/command/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.command;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import bot.service.FileService;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"import bot.exception.InvalidCommandException;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"import bot.task.TaskList;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"import bot.ui.ResponseMessage;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"import bot.task.Task;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":" * Represents a command to unmark a task (mark it as not completed).","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":" * This command takes a task index and marks the corresponding task as not done.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":" * The command format should be: \"unmark \u003ctask index\u003e\"","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"    private final String[] commandInfo;","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"     * Constructs an UnmarkTaskCommand with the provided command information.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"     * @param commandInfo an array containing the command details where:","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"     *                    - commandInfo[0] should be \"unmark\"","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"     *                    - commandInfo[1] should contain the task index as a positive integer","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"    public UnmarkTaskCommand(String[] commandInfo) {","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"        this.commandInfo \u003d commandInfo;","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"     * Executes the unmark task command by parsing the task index, validating the format,","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"     * marking the specified task as not completed, and saving the updated task list to file.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskList the task list containing the task to be unmarked","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"     * @param fileService the file services for writing the updated task list to storage","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"    public void execute(TaskList taskList, FileService fileService) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"        try {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"            // Validate command format, re-prompt if incorrect command format","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"            boolean isValidCommandInfo \u003d commandInfo.length \u003d\u003d 2 \u0026\u0026 commandInfo[1].matches(\"\\\\d+\");","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"            if (!isValidCommandInfo) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"                        \"Oh no, command format is not right, let me give you a hint: \" +","lastModifiedDate":"2025-09-15T21:22:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"                                \"unmark \u003cTask Index\u003e\");","lastModifiedDate":"2025-08-30T00:26:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"            }","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"            int index \u003d Integer.parseInt(commandInfo[1]);","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"            // Unmark Task","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"            Task task \u003d taskList.markTaskAsNotDone(index);","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"            assert task !\u003d null : \"Task mark undone should not be null\";","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"            // Write task list to file","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"            fileService.writeToFile(taskList);","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"            // Set confirmation message and new status as response","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"            super.setResponse(ResponseMessage.getUnmarkTaskSuccessMessage(task));","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"            super.setResponse(e.getMessage());","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wen-Cong"},"content":"        return false;","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-29T00:08:52","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":67}},{"path":"src/main/java/bot/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.exception;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":" * Exception thrown when an invalid command is encountered in the bot application.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":" * This exception is used to indicate that a command does not conform to the expected","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":" * format or is not recognized by the system.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2025-08-21T22:12:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-21T22:12:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"     * Constructor","lastModifiedDate":"2025-08-21T22:12:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-21T22:12:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"     * @param message Message regarding more info of Exception thrown","lastModifiedDate":"2025-08-21T22:12:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-21T22:12:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2025-08-21T22:12:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"        super(\"Invalid Command: \" + message);","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T22:12:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-21T22:12:40","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":17}},{"path":"src/main/java/bot/service/FileService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.service;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import bot.task.TaskList;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"import bot.task.Task;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-09-10T00:19:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":" * A utility class for handling file-based operations, specifically for managing a list of tasks.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":" * This class uses the `java.nio.file` API for file system access.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"public class FileService {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"    private final Path path;","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"     * Constructs a {@code bot.service.FileService} instance to operate on a file at the specified path.","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"     * The file does not need to exist when this object is created.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"     * @param path The string representation of the file path.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"    public FileService(String path) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"        this.path \u003d Paths.get(path);","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"     * Writes a list of tasks to the file specified during construction.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"     * The method first ensures that the file and its parent directories exist.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"     * It then iterates through the provided task list, converts each task into","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"     * a string representation suitable for file storage, and writes the combined","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"     * string to the file, overwriting its contents.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskList The list of {@code bot.task.Task} objects to be written to the file.","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"     * @throws IOException If an I/O error occurs during file or directory creation,","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"     *                     or during the writing process.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"    public void writeToFile(TaskList taskList) throws IOException {","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"        // Check if file exist. Create path + file if it doesn\u0027t exist","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"        ensureFileExists();","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"        // Format task list into String for writing to file","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"        StringBuilder data \u003d new StringBuilder();","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"        for (Task task : taskList.getTaskList()) {","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"            data.append(task.toFileString());","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"        // Write to data to file","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"        Files.writeString(path, data.toString());","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"     * Reads tasks from the file specified and returns them","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"     * as a list of bot.task.Task objects.","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"     * The method uses {@code Files.readAllLines()} to read all lines from the file.","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"     * It then iterates through the list of strings, converting each line back into","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"     * a bot.task.Task object","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wen-Cong"},"content":"     * @return A list of {@code bot.task.Task} objects read from the file.","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"     * @throws IOException If an I/O error occurs during the file reading process.","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wen-Cong"},"content":"    public List\u003cTask\u003e readFromFile() throws IOException, IllegalArgumentException {","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wen-Cong"},"content":"        // Check if file exist. Create path + file if it doesn\u0027t exist","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wen-Cong"},"content":"        ensureFileExists();","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wen-Cong"},"content":"        // Read all lines from the file","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wen-Cong"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wen-Cong"},"content":"        // Process each line and create bot.task.Task objects","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wen-Cong"},"content":"        return lines.stream().map(Task::createTaskFromFileString).toList();","lastModifiedDate":"2025-09-10T00:19:31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wen-Cong"},"content":"     * Ensures that the file specified by the {@code path} and its parent directories exist.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wen-Cong"},"content":"     * If the file does not exist, it creates the necessary parent directories and then creates","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wen-Cong"},"content":"     * an empty file.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wen-Cong"},"content":"     * @throws IOException If an I/O error occurs while creating directories or the file.","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wen-Cong"},"content":"    private void ensureFileExists() throws IOException {","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wen-Cong"},"content":"        if (Files.exists(path)) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wen-Cong"},"content":"            // File exist, do nothing","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wen-Cong"},"content":"            return;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Wen-Cong"},"content":"        // Create parent folder directories if it doesn\u0027t exist","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wen-Cong"},"content":"        Files.createDirectories(path.getParent());","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Wen-Cong"},"content":"        // Create an empty file","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Wen-Cong"},"content":"        Files.createFile(path);","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T15:43:10","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":99}},{"path":"src/main/java/bot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.task;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import bot.util.DateTimeUtils;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":" * Represents a deadline task that has a specific due date and time.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":" * This class extends the base Task class and adds deadline-specific functionality.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"    private static final String TASK_TYPE \u003d \"D\";","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"    /** Deadline date time of the task */","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"     * Constructs a Deadline task with the specified task name and deadline.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"     * The task is initially marked as not completed.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskName the name/description of the task","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"     * @param deadline the deadline date and time as a string in a supported format","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"     * @throws IllegalArgumentException if the deadline string cannot be parsed into a valid date/time","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"    public Deadline(String taskName, String deadline)","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"        super(taskName);","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"        this.deadline \u003d DateTimeUtils.fromString(deadline);","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"     * Constructs a Deadline task with the specified task name, deadline, and completion status.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskName the name/description of the task","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"     * @param deadline the deadline date and time as a string in a supported format","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"     * @param isDone the completion status of the task","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"     * @throws IllegalArgumentException if the deadline string cannot be parsed into a valid date/time","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"    public Deadline(String taskName, String deadline, boolean isDone)","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"        super(taskName, isDone);","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"        this.deadline \u003d DateTimeUtils.fromString(deadline);","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"        return deadline;","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"     * Return the string format of the bot.task.Deadline to be written into a file","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"     * @return The string format of bot.task.Deadline suitable for file writing","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"     **/","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"        String fieldSeparator \u003d \" | \";","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"        return TASK_TYPE + fieldSeparator + super.toFileString()","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"                + fieldSeparator + DateTimeUtils.toFileString(deadline) + \"\\n\";","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"     * Compares this deadline task to another task based on their date/time for sorting.","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"     * @param otherTask the task to be compared with this deadline task","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wen-Cong"},"content":"     * @return a negative integer if this task should come before the other task,","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"     *         zero if they are considered equal for date sorting,","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wen-Cong"},"content":"     *         or a positive integer if this task should come after the other task","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wen-Cong"},"content":"     * @throws IllegalArgumentException if the {@code otherTask} is not a recognized subclass","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wen-Cong"},"content":"    public int compareDateTo(Task otherTask) {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wen-Cong"},"content":"        if (otherTask instanceof Todo) {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wen-Cong"},"content":"            return -1;","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wen-Cong"},"content":"        } else if (otherTask instanceof Deadline) {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wen-Cong"},"content":"            return deadline.compareTo(((Deadline) otherTask).getDeadline());","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wen-Cong"},"content":"        } else if (otherTask instanceof Event) {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wen-Cong"},"content":"            return deadline.compareTo(((Event) otherTask).getEndTime());","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wen-Cong"},"content":"        } else {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wen-Cong"},"content":"            throw new IllegalArgumentException(\"Invalid task type\");","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wen-Cong"},"content":"     * Display string format of bot.task.Deadline task with status, task name","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wen-Cong"},"content":"     * and deadline","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wen-Cong"},"content":"     * @return The string format of bot.task.Deadline suitable for display","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wen-Cong"},"content":"     **/","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wen-Cong"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Wen-Cong"},"content":"        return \"[\" + TASK_TYPE + \"]\" + super.toString()","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Wen-Cong"},"content":"                + \" (by: \" + DateTimeUtils.toDisplayString(deadline) + \")\";","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-21T20:54:36","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":94}},{"path":"src/main/java/bot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.task;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import bot.util.DateTimeUtils;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":" * Represents an event task that has a specific start and end date/time.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":" * This class extends the base Task class and adds event-specific functionality.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"    private static final String TASK_TYPE \u003d \"E\";","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"    /** Start date time of the event task */","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"    /** End date time of the event task */","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"     * Constructs an Event task with the specified task name, start time, and end time.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"     * The task is initially marked as not completed.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskName the name/description of the event","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"     * @param startTime the start date and time as a string in a supported format","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"     * @param endTime the end date and time as a string in a supported format","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"     * @throws IllegalArgumentException if the start or end time strings cannot be parsed into valid date/time","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"    public Event(String taskName, String startTime, String endTime)","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"        super(taskName);","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"        LocalDateTime start \u003d DateTimeUtils.fromString(startTime);","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"        LocalDateTime end \u003d DateTimeUtils.fromString(endTime);","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"        if (!DateTimeUtils.isValidTimeRange(start, end)) {","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"            String invalidTimeMsg \u003d \"Hey, the date doesn\u0027t sound right, do you want to check again?\";","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"            throw new IllegalArgumentException(invalidTimeMsg);","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"        this.startTime \u003d start;","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"        this.endTime \u003d end;","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"     * Constructs an Event task with the specified task name, start time, end time, and completion status.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskName the name/description of the event","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"     * @param startTime the start date and time as a string in a supported format","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"     * @param endTime the end date and time as a string in a supported format","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"     * @param isDone the completion status of the task","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"     * @throws IllegalArgumentException if the start or end time strings cannot be parsed into valid date/time","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"    public Event(String taskName, String startTime, String endTime, boolean isDone)","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"        super(taskName, isDone);","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"        this.startTime \u003d DateTimeUtils.fromString(startTime);","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"        this.endTime \u003d DateTimeUtils.fromString(endTime);","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"        return endTime;","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"     * Return the string format of the bot.task.Event to be written into a file","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wen-Cong"},"content":"     * @return The string format of bot.task.Event suitable for file writing","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wen-Cong"},"content":"     **/","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wen-Cong"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wen-Cong"},"content":"        String fieldSeparator \u003d \" | \";","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wen-Cong"},"content":"        return TASK_TYPE + fieldSeparator + super.toFileString()","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wen-Cong"},"content":"                + fieldSeparator + DateTimeUtils.toFileString(startTime)","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wen-Cong"},"content":"                + fieldSeparator + DateTimeUtils.toFileString(endTime) + \"\\n\";","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wen-Cong"},"content":"     * Compares this event task to another task based on their date/time for sorting.","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wen-Cong"},"content":"     * @param otherTask the task to be compared with this event task","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wen-Cong"},"content":"     * @return a negative integer if this task should come before the other task,","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wen-Cong"},"content":"     *         zero if they are considered equal for date sorting,","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wen-Cong"},"content":"     *         or a positive integer if this task should come after the other task","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wen-Cong"},"content":"     * @throws IllegalArgumentException if the {@code otherTask} is not a recognized subclass","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wen-Cong"},"content":"    public int compareDateTo(Task otherTask) {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wen-Cong"},"content":"        if (otherTask instanceof Todo) {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wen-Cong"},"content":"            return -1;","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Wen-Cong"},"content":"        } else if (otherTask instanceof Deadline) {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Wen-Cong"},"content":"            return endTime.compareTo(((Deadline) otherTask).getDeadline());","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wen-Cong"},"content":"        } else if (otherTask instanceof Event) {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Wen-Cong"},"content":"            return endTime.compareTo(((Event) otherTask).endTime);","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Wen-Cong"},"content":"        } else {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Wen-Cong"},"content":"            throw new IllegalArgumentException(\"Invalid task type\");","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Wen-Cong"},"content":"     * Display string format of bot.task.Event task with status, task name,","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Wen-Cong"},"content":"     * start time and end time","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Wen-Cong"},"content":"     * @return The string format of bot.task.Event suitable for display","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Wen-Cong"},"content":"     **/","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Wen-Cong"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Wen-Cong"},"content":"        return \"[\" + TASK_TYPE + \"]\" + super.toString()","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Wen-Cong"},"content":"                + \" (from: \" + DateTimeUtils.toDisplayString(startTime)","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Wen-Cong"},"content":"                + \", to: \" + DateTimeUtils.toDisplayString(endTime) + \")\";","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-21T21:16:28","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":112}},{"path":"src/main/java/bot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.task;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":" * Represents a generic task with a description and a completion status.","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":" * This abstract class serves as the base for more specific types of tasks","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"public abstract class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"    /** Name of the task */","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"    private final String name;","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"    /** Status of the task, true if task is marked as done */","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"    private boolean isDone;","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"     * Constructs a Task with the specified name.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"     * The task is initially marked as not completed.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"     * @param name the name/description of the task","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"    public Task(String name) {","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"     * Constructs a Task with the specified name and completion status.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"     * @param name the name/description of the task","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"     * @param isDone the completion status of the task","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"     * Sets the task as done","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"     **/","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"    public void markDone() {","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"     * Sets the task as not done","lastModifiedDate":"2025-08-21T17:52:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"     **/","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"    public void markNotDone() {","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"     * Return the string format of the Task to be written into a file","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"     * @return The string format of Task suitable for file writing","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"     **/","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"        String isDoneString \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"        return isDoneString + \" | \" + name;","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"     * Checks if the task name contains the specified keyword (case-insensitive).","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wen-Cong"},"content":"     * @param keyword the keyword to search for within the task name","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"     * @return true if the task name contains the keyword (ignoring case), false otherwise","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wen-Cong"},"content":"    public boolean isNameMatch(String keyword) {","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wen-Cong"},"content":"        return name.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wen-Cong"},"content":"     * Creates and returns a {@code Task} object from a formatted string retrieved from a file.","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wen-Cong"},"content":"     * This static factory method parses a single line of text. The method","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wen-Cong"},"content":"     * determines the specific type of task (To-do, Deadline, or Event) based on a type","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wen-Cong"},"content":"     * identifier and then constructs the appropriate subclass instance.","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wen-Cong"},"content":"     * The expected format for the input string is a set of pipe-separated values:","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wen-Cong"},"content":"     *     \u003cli\u003eFor a To-do: {@code \"T | \u003cisDone\u003e | \u003ctaskName\u003e\"}\u003c/li\u003e","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wen-Cong"},"content":"     *     \u003cli\u003eFor a Deadline: {@code \"D | \u003cisDone\u003e | \u003ctaskName\u003e | \u003cdeadline\u003e\"}\u003c/li\u003e","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wen-Cong"},"content":"     *     \u003cli\u003eFor a Event: {@code \"E | \u003cisDone\u003e | \u003ctaskName\u003e | \u003cfrom\u003e | \u003cto\u003e\"}\u003c/li\u003e","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wen-Cong"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wen-Cong"},"content":"     * The {@code \u003cisDone\u003e} value should be \"1\" for a completed task and \"0\" otherwise.","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wen-Cong"},"content":"     * @param fileString The single line of text read from the task file.","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wen-Cong"},"content":"     * @return A {@code Task} object, which could be a {@code To-do}, {@code Deadline},","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wen-Cong"},"content":"     *         or {@code Event} instance, corresponding to the data in the input string.","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wen-Cong"},"content":"     * @throws IllegalArgumentException If the file string is not in the expected format.","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Wen-Cong"},"content":"    public static Task createTaskFromFileString(String fileString)","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wen-Cong"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Wen-Cong"},"content":"        // Split string by \u0027 | \u0027","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Wen-Cong"},"content":"        String fileStringSeparator \u003d \" \\\\| \";","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Wen-Cong"},"content":"        String[] parts \u003d fileString.split(fileStringSeparator);","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Wen-Cong"},"content":"        // Check if split string parts is valid","lastModifiedDate":"2025-08-28T22:00:07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Wen-Cong"},"content":"        int minFieldLen \u003d 3;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Wen-Cong"},"content":"        if (parts.length \u003c minFieldLen) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Wen-Cong"},"content":"            throw new IllegalArgumentException(\"Invalid task format in file: \" + fileString);","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Wen-Cong"},"content":"        // Extract string parts","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Wen-Cong"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Wen-Cong"},"content":"        boolean isDone \u003d parts[1].equals(\"1\"); // True, if isDone \u003d \"1\".","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Wen-Cong"},"content":"        String taskName \u003d parts[2];","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Wen-Cong"},"content":"        Task task;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Wen-Cong"},"content":"        // Based on the task type, create the appropriate subclass","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Wen-Cong"},"content":"        switch (type) {","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Wen-Cong"},"content":"        case \"T\":","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Wen-Cong"},"content":"            task \u003d new Todo(taskName, isDone);","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Wen-Cong"},"content":"            break;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Wen-Cong"},"content":"        case \"D\":","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Wen-Cong"},"content":"            String deadline \u003d parts[3];","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Wen-Cong"},"content":"            task \u003d new Deadline(taskName, deadline, isDone);","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Wen-Cong"},"content":"            break;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Wen-Cong"},"content":"        case \"E\":","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Wen-Cong"},"content":"            String from \u003d parts[3];","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Wen-Cong"},"content":"            String to \u003d parts[4];","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Wen-Cong"},"content":"            task \u003d new Event(taskName, from, to, isDone);","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Wen-Cong"},"content":"            break;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Wen-Cong"},"content":"        default:","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Wen-Cong"},"content":"            // Handle unexpected format","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Wen-Cong"},"content":"            throw new IllegalArgumentException(\"Invalid task format in file: \" + fileString);","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Wen-Cong"},"content":"        return task;","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Wen-Cong"},"content":"     * Return string format of Task instance with status and task name","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Wen-Cong"},"content":"     * @return The string format of Task suitable for display","lastModifiedDate":"2025-09-09T23:00:50","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Wen-Cong"},"content":"     **/","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Wen-Cong"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Wen-Cong"},"content":"        String status \u003d \"[ ]\";","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Wen-Cong"},"content":"        if (isDone) {","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Wen-Cong"},"content":"            status \u003d \"[X]\";","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Wen-Cong"},"content":"        return status + \" \" + name;","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Wen-Cong"},"content":"     * Compares this task to another task based on their names in a case-insensitive manner.","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Wen-Cong"},"content":"     * @param otherTask the task to be compared with this task","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Wen-Cong"},"content":"     * @return a negative integer, zero, or a positive integer as this task\u0027s name","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Wen-Cong"},"content":"     *         is less than, equal to, or greater than the specified task\u0027s name","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Wen-Cong"},"content":"     *         (case-insensitive comparison)","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Wen-Cong"},"content":"     * @throws NullPointerException if the specified task is null","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Wen-Cong"},"content":"    public int compareTo(Task otherTask) {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Wen-Cong"},"content":"        return name.toLowerCase().compareTo(otherTask.name.toLowerCase());","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Wen-Cong"},"content":"    public abstract int compareDateTo(Task otherTask);","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-21T16:28:02","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":165}},{"path":"src/main/java/bot/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.task;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import bot.exception.InvalidCommandException;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"import java.util.List;","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":" * Represents a collection of tasks and provides methods to manage them.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":" * This class encapsulates a list of tasks and offers operations such as adding,","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":" * removing, and marking tasks as complete or incomplete.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"public class TaskList {","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"     * Constructs a TaskList with the provided list of tasks.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskList the initial list of tasks","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(taskList);","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"     * Add To-do task to task list","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskName Task name to be added to taskList","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"     * @return The To-do task that is added to task list","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"    public Task addTask(String taskName) {","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"        Task newTask \u003d new Todo(taskName); // create new to-do task","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"        this.taskList.add(newTask); // add task to task list","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"        return newTask;","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"     * Add deadline task to task list","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskName Task name to be added to taskList","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"     * @param deadline Date time of the task deadline","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"     * @throws IllegalArgumentException If string date time is in unsupported format","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"     * @return The new Deadline task that is added to task list","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"    public Task addTask(String taskName, String deadline) throws IllegalArgumentException {","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"        Task newTask \u003d new Deadline(taskName, deadline); // create new deadline task","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"        return newTask;","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"     * Add event task to task list","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskName Task name to be added to taskList","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"     * @param startTime start date time of the event task","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"     * @param endTime end date time of the event task","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"     * @throws IllegalArgumentException If string date time is in unsupported format","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wen-Cong"},"content":"     * @return The new event task that is added to task list","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wen-Cong"},"content":"    public Task addTask(String taskName, String startTime, String endTime)","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wen-Cong"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wen-Cong"},"content":"        Task newTask \u003d new Event(taskName, startTime, endTime); // create new event task","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wen-Cong"},"content":"        this.taskList.add(newTask); // add task to task list","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wen-Cong"},"content":"        return newTask;","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wen-Cong"},"content":"     * Remove the task from task list","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wen-Cong"},"content":"     * @param index Task index position in task List, starting from 1","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wen-Cong"},"content":"     * @throws InvalidCommandException if index is out of bound","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wen-Cong"},"content":"     * @return The task that is removed from task list","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wen-Cong"},"content":"    public Task removeTask(int index) throws InvalidCommandException {","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wen-Cong"},"content":"        // Validation for index number","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wen-Cong"},"content":"        boolean isValidIndex \u003d index \u003c\u003d this.taskList.size() \u0026\u0026 index \u003e\u003d 1;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wen-Cong"},"content":"        if (!isValidIndex) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wen-Cong"},"content":"            throw new InvalidCommandException(\"Invalid task number\");","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wen-Cong"},"content":"        // Remove the task from task list","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wen-Cong"},"content":"        // Index given starts from 1","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wen-Cong"},"content":"        int actualIndex \u003d index - 1;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Wen-Cong"},"content":"        return this.taskList.remove(actualIndex);","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Wen-Cong"},"content":"     * Set task status as done","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Wen-Cong"},"content":"     * @param index Task index position in task List, starts from 1","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Wen-Cong"},"content":"     * @throws InvalidCommandException if index is out of bound","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Wen-Cong"},"content":"     * @return The task which status is mark as done","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Wen-Cong"},"content":"    public Task markTaskAsDone(int index) throws InvalidCommandException {","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Wen-Cong"},"content":"        // Validation for index number","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Wen-Cong"},"content":"        boolean isValidIndex \u003d index \u003c\u003d this.taskList.size() \u0026\u0026 index \u003e\u003d 1;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Wen-Cong"},"content":"        if (!isValidIndex) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Wen-Cong"},"content":"            throw new InvalidCommandException(\"Invalid task number\");","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Wen-Cong"},"content":"        int actualIndex \u003d index - 1;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Wen-Cong"},"content":"        Task task \u003d this.taskList.get(actualIndex); // Index given starts from 1","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Wen-Cong"},"content":"        task.markDone(); // Set task status to done","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Wen-Cong"},"content":"        return task;","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Wen-Cong"},"content":"     * Set task status as not done","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Wen-Cong"},"content":"     * @param index Task index position in task List, starts from 1","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Wen-Cong"},"content":"     * @throws InvalidCommandException if index is out of bound","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Wen-Cong"},"content":"     * @return The task which status is mark as not done","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Wen-Cong"},"content":"    public Task markTaskAsNotDone(int index) throws InvalidCommandException {","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Wen-Cong"},"content":"        // Validation for index number","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Wen-Cong"},"content":"        boolean isValidIndex \u003d index \u003c\u003d this.taskList.size() \u0026\u0026 index \u003e\u003d 1;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Wen-Cong"},"content":"        if (!isValidIndex) {","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Wen-Cong"},"content":"            throw new InvalidCommandException(\"Invalid task number\");","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Wen-Cong"},"content":"        int actualIndex \u003d index - 1;","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Wen-Cong"},"content":"        Task task \u003d this.taskList.get(actualIndex); // Index given starts from 1","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Wen-Cong"},"content":"        task.markNotDone(); // Set task status to not done","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Wen-Cong"},"content":"        return task;","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Wen-Cong"},"content":"     * Search for tasks whose names contain the specified keyword (case-insensitive).","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Wen-Cong"},"content":"     * @param keyword the keyword to search for within task names","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Wen-Cong"},"content":"     * @return a list of tasks whose names contain the keyword, or an empty list if no matches are found","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Wen-Cong"},"content":"    public List\u003cTask\u003e searchTasksByName(String keyword) {","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Wen-Cong"},"content":"        List\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Wen-Cong"},"content":"        // Add to filter list if task name matches keyword","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Wen-Cong"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Wen-Cong"},"content":"            if (task.isNameMatch(keyword)) {","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Wen-Cong"},"content":"                filteredList.add(task);","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Wen-Cong"},"content":"            }","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Wen-Cong"},"content":"        return filteredList;","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Wen-Cong"},"content":"     * Sorts the tasks in the task list alphabetically by their name in ascending order.","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Wen-Cong"},"content":"     * This method modifies the internal task list by sorting it based on the","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Wen-Cong"},"content":"     * lexicographical order of the task names. The sorting is performed using","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Wen-Cong"},"content":"     * the {@code compareTo} method implemented in the {@code Task} class.","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Wen-Cong"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Wen-Cong"},"content":"     * @see Task#compareTo(Task)","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Wen-Cong"},"content":"    public void sortTaskByName() {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Wen-Cong"},"content":"        taskList.sort(Task::compareTo);","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Wen-Cong"},"content":"     * Sorts the tasks in the task list by their date/time in ascending order.","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Wen-Cong"},"content":"     * This method modifies the internal task list by sorting it based on the","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Wen-Cong"},"content":"     * chronological order of the tasks. The sorting behavior depends on the","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Wen-Cong"},"content":"     * specific task types:","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Wen-Cong"},"content":"     *   \u003cli\u003e{@code To-do} tasks are sorted before {@code Deadline} and {@code Event} tasks\u003c/li\u003e","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Wen-Cong"},"content":"     *   \u003cli\u003e{@code Deadline} tasks are compared by their deadline date/time\u003c/li\u003e","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Wen-Cong"},"content":"     *   \u003cli\u003e{@code Event} tasks are compared by their end date/time\u003c/li\u003e","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Wen-Cong"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Wen-Cong"},"content":"     * The sorting is performed using the {@code compareDateTo} method implemented","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Wen-Cong"},"content":"     * in each task subclass.","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Wen-Cong"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Wen-Cong"},"content":"    public void sortTaskByDate() {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Wen-Cong"},"content":"        taskList.sort(Task::compareDateTo);","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Wen-Cong"},"content":"     * Getter for task list","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Wen-Cong"},"content":"     * @return Task list in {@code List\u003cTask\u003e}","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Wen-Cong"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Wen-Cong"},"content":"        return this.taskList;","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Wen-Cong"},"content":"     * Return the count for task list","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Wen-Cong"},"content":"     * @return Task count in task list","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Wen-Cong"},"content":"    public int getSize() {","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Wen-Cong"},"content":"        return this.taskList.size();","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-28T22:45:29","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":205}},{"path":"src/main/java/bot/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.task;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":" * Represents a simple to-do task without any specific date or time constraints.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":" * This class extends the base Task class and provides to-do specific functionality.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"    private static final String TASK_TYPE \u003d \"T\";","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"     * Constructs a To-do task with the specified task name.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"     * The task is initially marked as not completed.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskName the name/description of the to-do task","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"        super(taskName);","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"     * Constructs a To-do task with the specified task name and completion status.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskName the name/description of the to-do task","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"     * @param isDone the completion status of the task","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"    public Todo(String taskName, boolean isDone) {","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"        super(taskName, isDone);","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T16:36:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"     * Return the string format of the To-do to be written into a file.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"     * The format is: \"T | [status] | [task name]\"","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"     * @return The string format of To-do suitable for file writing","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"     **/","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"        String fieldSeparator \u003d \" | \";","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"        return TASK_TYPE + fieldSeparator + super.toFileString() + \"\\n\";","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-27T11:35:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"     * Compares this to-do task to another task based on their date/time for sorting.","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"     * Note: The current implementation implies that {@code To-do} tasks do not have a","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"     * specific date/time and will sort in a predetermined order relative to","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"     * {@code Deadline} and {@code Event} tasks. The value returned (1) when compared","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"     * to non-To-do tasks means this To-do task will be considered \"greater than\" (i.e.,","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"     * come after) those tasks during a sort.","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"     * @param otherTask the task to be compared with this to-do task","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"     * @return 0 if the other task is also a {@code To-do}, 1 if the other task is","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"     *         a {@code Deadline} or {@code Event}","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"    public int compareDateTo(Task otherTask) {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"        if (otherTask instanceof Todo) {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"            return 0;","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"        return 1;","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"     * Display string format of To-do task with status and task name.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wen-Cong"},"content":"     * The format is: \"[T][status] [task name]\"","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wen-Cong"},"content":"     * @return The string format of To-do suitable for display","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wen-Cong"},"content":"     **/","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wen-Cong"},"content":"    @Override","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wen-Cong"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wen-Cong"},"content":"        return \"[\" + TASK_TYPE + \"]\" + super.toString();","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-21T18:30:00","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":75}},{"path":"src/main/java/bot/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.ui;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"    @FXML","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"    @FXML","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"        try {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"    private void flip() {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"        // Add CSS styling with flipped dialog box","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"    public static DialogBox getBotDialog(String text, Image img) {","lastModifiedDate":"2025-09-15T23:20:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"        db.flip();","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"        return db;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":63}},{"path":"src/main/java/bot/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.ui;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import bot.Bot;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"    @FXML","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"    @FXML","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"    @FXML","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"    @FXML","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"    private Bot bot;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"    private final Image botImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaBot.png\"));","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"    @FXML","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"    /** Injects the Bot instance */","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"    public void setBot(Bot b) {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"        bot \u003d b;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"                DialogBox.getBotDialog(bot.getGreetingMessage(), botImage)","lastModifiedDate":"2025-09-15T23:20:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"        );","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing bot reply and then appends them to","lastModifiedDate":"2025-09-15T23:20:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"    @FXML","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"        String trimmedInput \u003d input.trim();","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"        String response \u003d bot.generateResponse(trimmedInput);","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"                DialogBox.getBotDialog(response, botImage)","lastModifiedDate":"2025-09-15T23:20:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"        );","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":58}},{"path":"src/main/java/bot/ui/ResponseMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.ui;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import bot.task.Task;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"import java.util.List;","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"public class ResponseMessage {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"     * Generates a success message for adding a task.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"     * @param task The task that was successfully added.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskCount The total number of tasks in the list after the addition.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"     * @return A formatted string confirming the task addition and showing the new task count.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"    public static String getAddTaskSuccessMessage(Task task, int taskCount) {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"        return \"YAY! You now have another task to work on: \" + task","lastModifiedDate":"2025-09-15T21:22:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"                + \"\\nNow you have \" + taskCount + \" tasks in the list.\";","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"     * Generates a success message for removing a task.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"     * @param task The task that was successfully removed.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskCount The total number of tasks remaining in the list.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"     * @return A formatted string confirming the task removal and showing the new task count.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"    public static String getRemoveTaskSuccessMessage(Task task, int taskCount) {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"        return \"MAGIC!! I have made the task disappear: \" + task","lastModifiedDate":"2025-09-15T21:22:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"                + \"\\nNow you have \" + taskCount + \" tasks in the list.\";","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"     * Generates a success message for marking a task as done.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"     * @return A formatted string confirming the task has been marked.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"    public static String getMarkTaskSuccessMessage(Task task) {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"        return \"You\u0027re so good that you manage to complete this task:\" + \"\\n\" + task;","lastModifiedDate":"2025-09-15T21:22:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"     * Generates a success message for unmarking a task (marking as not done).","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"     * @param task The task that was marked as not done.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"     * @return A formatted string confirming the task has been unmarked.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"    public static String getUnmarkTaskSuccessMessage(Task task) {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"        return \"Work harder to mark this task as done again! I\u0027m sure you can do it:\" + \"\\n\" + task;","lastModifiedDate":"2025-09-15T21:22:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"     * Formats a list of tasks into a numbered, human-readable string.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"     * If the list is empty, it returns a message indicating no tasks are present.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskList The list of tasks to format.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"     * @return A numbered string representation of the tasks, or a \"No tasks found\" message.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"    public static String getTaskListMessage(List\u003cTask\u003e taskList) {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"            return \"No tasks found, you look free! YAY!\";","lastModifiedDate":"2025-09-15T21:22:38","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wen-Cong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wen-Cong"},"content":"        // Iterate task list and print task","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wen-Cong"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wen-Cong"},"content":"            int indexNum \u003d i + 1; // Index numbering should start from 1 instead of 0","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wen-Cong"},"content":"            sb.append(indexNum).append(\". \").append(taskList.get(i)).append(\"\\n\");","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wen-Cong"},"content":"        return sb.toString();","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wen-Cong"},"content":"     * Generates a message to display the results of a task search.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wen-Cong"},"content":"     * @param taskList The list of tasks that matched the search query.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wen-Cong"},"content":"     * @return A formatted string introducing the search results, followed by the numbered list of matching tasks.","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wen-Cong"},"content":"    public static String getSearchTaskListMessage(List\u003cTask\u003e taskList) {","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wen-Cong"},"content":"        return \"Now I found these task for you, thank me later: \\n\" + getTaskListMessage(taskList);","lastModifiedDate":"2025-09-15T21:22:38","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wen-Cong"},"content":"    public static String getSortListMessage(List\u003cTask\u003e taskList) {","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wen-Cong"},"content":"        return \"I have arranged it neat and nice, here you go: \\n\" + getTaskListMessage(taskList);","lastModifiedDate":"2025-09-15T21:22:38","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":89}},{"path":"src/main/java/bot/util/DateTimeUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.util;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"import java.util.List;","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":" * A utility class for handling various date and time conversion tasks.","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":" * This class provides a set of static methods to convert between","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":" * {@link LocalDateTime} objects and their {@link String} representations. It","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":" * supports parsing from multiple formats and formatting into specific,","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":" * pre-defined patterns for file storage and user display.","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":" * The class uses a prioritized list of {@link DateTimeFormatter} objects","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":" * to handle flexible parsing of different date-time string formats.","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"public class DateTimeUtils {","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"     * Define a formatter matching the \"dd-MM-yyyy HHmm\" pattern.","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"     * * The valid format to be converted into date is \u002702-05-2025 1300\u0027","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"     * This formatter is used for parsing user input and read file input from","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"     * string to {@code LocalDateTime}","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"     **/","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"    private static final DateTimeFormatter FILE_FORMATTER","lastModifiedDate":"2025-08-29T12:34:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"            \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"     * Define a formatter matching the \"dd MMM yy HH:mm\" pattern.","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"     * * The valid format to be converted into date is \u002702 May 25 13:00\u0027","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"     * This formatter is used for displaying date time in","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"     * user-friendly format","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"     **/","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"    private static final DateTimeFormatter DISPLAY_FORMATTER","lastModifiedDate":"2025-08-29T12:34:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"            \u003d DateTimeFormatter.ofPattern(\"dd MMM yy HH:mm\");","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"     * A list of {@code DateTimeFormatter} objects used for parsing a variety of","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"     * common date and time string formats.","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"     * The supported formats are:","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"     *   \u003cli\u003e{@code fileFormatter}: \"dd-MM-yyyy HHmm\" (e.g., \u002702-05-2025 1300\u0027)\u003c/li\u003e","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"     *   \u003cli\u003e{@code displayFormatter}: \"dd MMM yy HH:mm\" (e.g., \u002702 May 25 13:00\u0027)\u003c/li\u003e","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"     *   \u003cli\u003e\"dd-MM-yyyy\" (e.g., \u002702-05-2025\u0027)\u003c/li\u003e","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"     *   \u003cli\u003e\"dd/MM/yyyy\" (e.g., \u002702/05/2025\u0027)\u003c/li\u003e","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"     *   \u003cli\u003e\"dd/MM/yyyy HH:mm\" (e.g., \u002702/05/2025 13:00\u0027)\u003c/li\u003e","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"    private static final List\u003cDateTimeFormatter\u003e DATE_FORMATTERS \u003d Arrays.asList(","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"            FILE_FORMATTER,","lastModifiedDate":"2025-08-29T12:34:56","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"),","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"            // Add formatters that append a default time to handle date-only inputs","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"            new DateTimeFormatterBuilder().appendPattern(\"dd-MM-yyyy\")","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"                    .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wen-Cong"},"content":"                    .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"                    .toFormatter(),","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wen-Cong"},"content":"            new DateTimeFormatterBuilder().appendPattern(\"dd/MM/yyyy\")","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wen-Cong"},"content":"                    .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wen-Cong"},"content":"                    .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wen-Cong"},"content":"                    .toFormatter(),","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wen-Cong"},"content":"            DISPLAY_FORMATTER","lastModifiedDate":"2025-08-29T12:34:56","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wen-Cong"},"content":"    );","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wen-Cong"},"content":"     * Parses a date-time string using a list of supported formatters.","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wen-Cong"},"content":"     * The method iterates through the predefined list of {@code formatters} and","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wen-Cong"},"content":"     * attempts to parse the input string. The first formatter that successfully","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wen-Cong"},"content":"     * parses the string is used.","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wen-Cong"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wen-Cong"},"content":"     * @param dateStr The date-time string to parse.","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wen-Cong"},"content":"     * @return The parsed {@code LocalDateTime} object.","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wen-Cong"},"content":"     * @throws IllegalArgumentException if the date string does not match any of the","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wen-Cong"},"content":"     *                                  supported formats. The error message will list the expected formats.","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wen-Cong"},"content":"    public static LocalDateTime fromString(String dateStr)","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wen-Cong"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wen-Cong"},"content":"        for (DateTimeFormatter formatter : DATE_FORMATTERS) {","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wen-Cong"},"content":"            try {","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Wen-Cong"},"content":"                // Attempt to parse with the current formatter","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Wen-Cong"},"content":"                return LocalDateTime.parse(dateStr, formatter);","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wen-Cong"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Wen-Cong"},"content":"                // Ignore the exception and try the next formatter","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Wen-Cong"},"content":"            }","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Wen-Cong"},"content":"        // Date string doesn\u0027t match with any of the supported formatters","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Wen-Cong"},"content":"        throw new IllegalArgumentException(","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Wen-Cong"},"content":"                \"\"\"","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Wen-Cong"},"content":"                        Oh no! I don\u0027t support this date format, but you can choose one of these format:\\","lastModifiedDate":"2025-09-15T21:22:38","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Wen-Cong"},"content":"                        ","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Wen-Cong"},"content":"                        dd-mm-yyyy\\","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Wen-Cong"},"content":"                        ","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Wen-Cong"},"content":"                        dd-mm-yyyy HHmm\\","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Wen-Cong"},"content":"                        ","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Wen-Cong"},"content":"                        dd/mm/yyyy\\","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Wen-Cong"},"content":"                        ","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Wen-Cong"},"content":"                        dd/mm/yyyy HHmm\"\"\");","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Wen-Cong"},"content":"     * Converts a {@code LocalDateTime} object into a user-friendly string format.","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Wen-Cong"},"content":"     * This method uses the {@code displayFormatter} to format the date and time","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Wen-Cong"},"content":"     * into the \"dd MMM yy HH:mm\" pattern, which is suitable for displaying to users.","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Wen-Cong"},"content":"     * For example, \u002702-05-2025 1300\u0027 would be formatted as \u002702 May 25 13:00\u0027.","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Wen-Cong"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Wen-Cong"},"content":"     * @param dateTime The {@code LocalDateTime} object to format.","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Wen-Cong"},"content":"     * @return A string representing the date and time in a human-readable format.","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Wen-Cong"},"content":"    public static String toDisplayString(LocalDateTime dateTime) {","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Wen-Cong"},"content":"        return dateTime.format(DISPLAY_FORMATTER);","lastModifiedDate":"2025-08-29T12:34:56","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Wen-Cong"},"content":"     * Converts a {@code LocalDateTime} object into a string suitable for file storage.","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Wen-Cong"},"content":"     * This method uses the {@code fileFormatter} to format the date and time","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Wen-Cong"},"content":"     * into the \"dd-MM-yyyy HHmm\" pattern. The resulting string can be","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Wen-Cong"},"content":"     * converted back to a {@code LocalDateTime} object using the {@link #fromString(String)}","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Wen-Cong"},"content":"     * method.","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Wen-Cong"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Wen-Cong"},"content":"     * @param dateTime The {@code LocalDateTime} object to format.","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Wen-Cong"},"content":"     * @return A string representing the date and time in a machine-readable format.","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Wen-Cong"},"content":"    public static String toFileString(LocalDateTime dateTime) {","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Wen-Cong"},"content":"        return dateTime.format(FILE_FORMATTER);","lastModifiedDate":"2025-08-29T12:34:56","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Wen-Cong"},"content":"     * Checks if the start time is before or equal to the end time.","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Wen-Cong"},"content":"     * @param startTime the start time to check","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Wen-Cong"},"content":"     * @param endTime the end time to check against","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Wen-Cong"},"content":"     * @return true if startTime is before or equal to endTime, false otherwise","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Wen-Cong"},"content":"    public static boolean isValidTimeRange(LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Wen-Cong"},"content":"        return !startTime.isAfter(endTime);","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-09-15T23:04:16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-28T15:30:14","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":153}},{"path":"src/main/java/bot/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.util;","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import bot.command.AddDeadlineCommand;","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"import bot.command.AddEventCommand;","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"import bot.command.AddTodoCommand;","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"import bot.command.Command;","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"import bot.command.ExitCommand;","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"import bot.command.FindCommand;","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"import bot.command.InvalidCommand;","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"import bot.command.ListTaskCommand;","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"import bot.command.MarkTaskCommand;","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"import bot.command.RemoveTaskCommand;","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"import bot.command.SortCommand;","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"import bot.command.UnmarkTaskCommand;","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T11:54:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"/**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":" * A utility class for parsing user input strings into executable commands.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":" * This class analyzes the first word of the input to determine the command type","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":" * and creates the appropriate Command object with the remaining input parameters.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":" */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"public class Parser {","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"     * Parses a user input string and returns the corresponding Command object.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"     * The input is split into the command keyword and its parameters, then the","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"     * appropriate Command subclass is instantiated based on the keyword.","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"     * Supported commands:","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"     * - \"bye\": Exit the application","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"     * - \"list\": Display all tasks","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"     * - \"mark\": Mark a task as completed","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"     * - \"unmark\": Mark a task as not completed","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"     * - \"todo\": Add a new to-do task","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"     * - \"deadline\": Add a new deadline task","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"     * - \"event\": Add a new event task","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"     * - \"delete\": Remove a task","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"     * - \"sort\": Sort task list","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"     * - Any other input: Invalid command","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"     *","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"     * @param input the user input string to parse","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"     * @return the Command object corresponding to the parsed input","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-08-30T00:13:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"        // Split input by space into command type (first word)","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"        // and other command information (e.g. input param)","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"        String commandSeparator \u003d \" \";","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"        String[] commandInfo \u003d input.split(commandSeparator, 2);","lastModifiedDate":"2025-09-10T00:00:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"        String instruction \u003d commandInfo[0];","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"        // Redirect command type to invoke respective operations","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"        return switch (instruction) {","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"            case \"bye\" -\u003e // Exit program","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"                    new ExitCommand();","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"            case \"list\" -\u003e // Display task list","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"                    new ListTaskCommand();","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"            case \"mark\" -\u003e // Mark a task as done","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"                    new MarkTaskCommand(commandInfo);","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"            case \"unmark\" -\u003e // Mark a task as not done","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"                    new UnmarkTaskCommand(commandInfo);","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"            case \"todo\" -\u003e // Add to-do task to task list","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"                    new AddTodoCommand(commandInfo);","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"            case \"deadline\" -\u003e // Add deadline task to task list","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"                    new AddDeadlineCommand(commandInfo);","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"            case \"event\" -\u003e // Add event task to task list","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wen-Cong"},"content":"                    new AddEventCommand(commandInfo);","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"            case \"delete\" -\u003e // Delete task from task list","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wen-Cong"},"content":"                    new RemoveTaskCommand(commandInfo);","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wen-Cong"},"content":"            case \"find\" -\u003e // Search for tasks by name","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wen-Cong"},"content":"                    new FindCommand(commandInfo);","lastModifiedDate":"2025-08-30T00:53:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wen-Cong"},"content":"            case \"sort\" -\u003e // Sort task list by name or date","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wen-Cong"},"content":"                    new SortCommand(commandInfo);","lastModifiedDate":"2025-09-10T17:24:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wen-Cong"},"content":"            default -\u003e new InvalidCommand();","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wen-Cong"},"content":"        };","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-29T00:46:26","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":75}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"            prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bot.ui.MainWindow\"\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\"/\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"                AnchorPane.rightAnchor\u003d\"0.0\"/\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"                    prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"                    AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-04T00:53:38","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":26}},{"path":"src/test/java/bot/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.task;","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import bot.exception.InvalidCommandException;","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"import java.util.List;","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"public class TaskListTest {","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"    @Test","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"    public void removeTask_validIndex_success() throws InvalidCommandException {","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"        Task removeTarget \u003d new Deadline(\"homework\", \"23-09-2025 2359\", false);","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"        List\u003cTask\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"        data.add(new Todo(\"buy food\", true));","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"        data.add(removeTarget);","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"        data.add(new Event(\"Alibaba Earnings Call\", \"30-08-2025 0000\",","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"                \"30-08-2025 2359\", false));","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"        TaskList taskList \u003d new TaskList(data);","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"        Task removedTask \u003d taskList.removeTask(2);","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"        assertEquals(removeTarget, removedTask);","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"        assertEquals(2, taskList.getSize());","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"    @Test","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"    public void removeTask_outOfBoundIndex_failure() {","lastModifiedDate":"2025-08-29T21:55:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"        Task removeTarget \u003d new Deadline(\"homework\", \"23-09-2025 2359\", false);","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"        List\u003cTask\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"        data.add(new Todo(\"buy food\", true));","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"        data.add(removeTarget);","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"        data.add(new Event(\"Alibaba Earnings Call\", \"30-08-2025 0000\",","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"                \"30-08-2025 2359\", false));","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"        TaskList taskList \u003d new TaskList(data);","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"        try {","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"            taskList.removeTask(5);","lastModifiedDate":"2025-08-29T21:55:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"            assertEquals(\"Invalid Command: Invalid task number\", e.getMessage());","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":45}},{"path":"src/test/java/bot/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"package bot.task;","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"public class TaskTest {","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"    @Test","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"    public void createTaskFromFileString_todoString_success() {","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"        Task expectedTask \u003d new Todo(\"buy food\", true);","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"        String input \u003d \"T | 1 | buy food\";","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"        assertEquals(expectedTask.toString(), Task.createTaskFromFileString(input).toString());","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"    @Test","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"    public void createTaskFromFileString_deadlineString_success() {","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"        Task expectedTask \u003d new Deadline(\"homework\", \"23-09-2025 2359\", false);","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"        String input \u003d \"D | 0 | homework | 23-09-2025 2359\";","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"        assertEquals(expectedTask.toString(), Task.createTaskFromFileString(input).toString());","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"    @Test","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"    public void createTaskFromFileString_eventString_success() {","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"        Task expectedTask \u003d new Event(","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wen-Cong"},"content":"                \"Alibaba Earnings Call\",","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wen-Cong"},"content":"                \"30-08-2025 0000\",","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wen-Cong"},"content":"                \"30-08-2025 2359\",","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wen-Cong"},"content":"                false);","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wen-Cong"},"content":"        String input \u003d \"E | 0 | Alibaba Earnings Call | 30-08-2025 0000 | 30-08-2025 2359\";","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wen-Cong"},"content":"        assertEquals(expectedTask.toString(), Task.createTaskFromFileString(input).toString());","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"    @Test","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"    public void createTaskFromFileString_invalidStringFormat_failure() {","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"        Task expectedTask \u003d new Todo(\"buy food\", true);","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"        String input \u003d \"I | 1 | buy food\";","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"        try {","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"            assertEquals(expectedTask.toString(), Task.createTaskFromFileString(input).toString());","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"            assertEquals(\"Invalid task format in file: \" + input, e.getMessage());","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"    @Test","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"    public void createTaskFromFileString_invalidDateDeadline_failure() {","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"        Task expectedTask \u003d new Deadline(\"homework\", \"23-09-2025 2359\", false);","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"        String input \u003d \"D | 0 | homework | 23.09.2025 2359\";","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wen-Cong"},"content":"        try {","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"            assertEquals(expectedTask.toString(), Task.createTaskFromFileString(input).toString());","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"            assertEquals(\"\"\"","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"                        Invalid date string format! Ensure date is in these supported format:\\","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"                        ","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"                        dd-mm-yyyy\\","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"                        ","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"                        dd-mm-yyyy HHmm\\","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wen-Cong"},"content":"                        ","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"                        dd/mm/yyyy\\","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wen-Cong"},"content":"                        ","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"                        dd/mm/yyyy HHmm\"\"\", e.getMessage());","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wen-Cong"},"content":"}","lastModifiedDate":"2025-08-29T21:54:15","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":69}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"list","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"todo buy book","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"deadline complete tutorial /by Sunday","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"event party /from Mon 2pm /to 8pm","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"list","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"mark 1","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"mark 2","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"mark 3","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"unmark 2","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"unmark 3","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"list","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"deadline wrong command task","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"event wrong command task","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"bye","lastModifiedDate":"2025-08-21T21:43:50","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-20T11:31:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"-":20,"Wen-Cong":1}}]
