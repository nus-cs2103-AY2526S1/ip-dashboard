[{"path":"src/main/java/Byte.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhurr"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-19T17:08:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lhurr"},"content":"import java.util.List;","lastModifiedDate":"2025-08-19T17:35:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lhurr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-19T17:35:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lhurr"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-19T17:08:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lhurr"},"content":"/**","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lhurr"},"content":" * Entry point for the Byte chatbot","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lhurr"},"content":" */","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lhurr"},"content":"public class Byte {","lastModifiedDate":"2025-08-19T15:33:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lhurr"},"content":"    private static final List\u003cTask\u003e storage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lhurr"},"content":"    private static final Storage fileStorage \u003d new Storage();","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-19T17:35:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lhurr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-19T15:33:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lhurr"},"content":"        String line \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2025-08-19T15:33:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lhurr"},"content":"        String greetMessage \u003d \"Hello! I\u0027m Byte.\\nWhat can I do for you?\\n\";","lastModifiedDate":"2025-08-19T15:33:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-19T15:33:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lhurr"},"content":"        System.out.println(line + greetMessage + line);","lastModifiedDate":"2025-08-19T15:33:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-19T17:08:27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lhurr"},"content":"        loadTasksFromFile(line);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lhurr"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-19T17:08:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-19T17:08:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lhurr"},"content":"        String command \u003d \"\";","lastModifiedDate":"2025-08-19T17:08:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lhurr"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2025-08-19T17:08:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lhurr"},"content":"            command \u003d scanner.nextLine();","lastModifiedDate":"2025-08-19T17:08:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lhurr"},"content":"            try {","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lhurr"},"content":"                System.out.println(reply(command, line));","lastModifiedDate":"2025-08-19T17:08:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lhurr"},"content":"            } catch (ByteException e) {","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lhurr"},"content":"                System.out.println(\"\\t\" + line + \"\\t\" + e.getMessage() + \"\\n\" + \"\\t\" + line);","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lhurr"},"content":"            }","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lhurr"},"content":"        }","lastModifiedDate":"2025-08-19T17:08:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lhurr"},"content":"        scanner.close();","lastModifiedDate":"2025-08-19T17:08:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-19T17:08:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-19T17:08:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lhurr"},"content":"    /**","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lhurr"},"content":"     * Loads tasks from file and adds them to storage.","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lhurr"},"content":"     *","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lhurr"},"content":"     * @param line Horizontal rule string used for formatting","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lhurr"},"content":"     */","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lhurr"},"content":"    private static void loadTasksFromFile(String line) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lhurr"},"content":"        try {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lhurr"},"content":"            List\u003cTask\u003e loadedTasks \u003d fileStorage.loadTasks();","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lhurr"},"content":"            storage.addAll(loadedTasks);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lhurr"},"content":"            if (!loadedTasks.isEmpty()) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lhurr"},"content":"                System.out.println(\"\\t\" + line + \"\\t\" + \"Loaded \" + loadedTasks.size() + \" tasks from file.\\n\" + \"\\t\" + line);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lhurr"},"content":"            }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lhurr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lhurr"},"content":"            System.out.println(\"\\t\" + line + \"\\t\" + \"Warning: Could not load tasks from file: \" + e.getMessage() + \"\\n\" + \"\\t\" + line);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lhurr"},"content":"        }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lhurr"},"content":"    /**","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lhurr"},"content":"     * Saves the current task list to file.","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lhurr"},"content":"     */","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lhurr"},"content":"    private static void saveTasks() {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lhurr"},"content":"        try {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lhurr"},"content":"            fileStorage.saveTasks(storage);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lhurr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lhurr"},"content":"            System.err.println(\"Warning: Could not save tasks to file: \" + e.getMessage());","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lhurr"},"content":"        }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lhurr"},"content":"    /**","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lhurr"},"content":"     * Adds the given task to storage and returns a reply.","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lhurr"},"content":"     *","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lhurr"},"content":"     * @param task Task to add","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lhurr"},"content":"     * @param line Horizontal rule string used for formatting","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lhurr"},"content":"     * @return Reply after adding the task","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lhurr"},"content":"     */","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lhurr"},"content":"    private static String addTaskAndReply(Task task, String line) {","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lhurr"},"content":"        storage.add(task);","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lhurr"},"content":"        saveTasks(); // Save after adding task","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lhurr"},"content":"        return \"\\t\" + line + \"\\t\" + \"Got it, I\u0027ve added this task:\\n\\t  \" + task + \"\\n\\tNow you have \" + storage.size() + \" tasks in the list.\" + \"\\n\" + \"\\t\" + line;","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lhurr"},"content":"    /**","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lhurr"},"content":"     * Parses commands into three segments","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lhurr"},"content":"     *","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lhurr"},"content":"     * @param options Command split by spaces","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lhurr"},"content":"     * @return Array of 3 strings","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lhurr"},"content":"     */","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lhurr"},"content":"    private static String[] parseSegments(String[] options) {","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lhurr"},"content":"        String[] segments \u003d new String[3];","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lhurr"},"content":"        StringBuilder currentSegment \u003d new StringBuilder();","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lhurr"},"content":"        int segmentIndex \u003d 0;","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lhurr"},"content":"        for (String option : options) {","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lhurr"},"content":"            if (option.startsWith(\"/\")) {","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lhurr"},"content":"                segments[segmentIndex] \u003d currentSegment.toString().trim();","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lhurr"},"content":"                segmentIndex++;","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lhurr"},"content":"                currentSegment.setLength(0);","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lhurr"},"content":"            } else {","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lhurr"},"content":"                if (!currentSegment.isEmpty()) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lhurr"},"content":"                    currentSegment.append(\" \");","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lhurr"},"content":"                }","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lhurr"},"content":"                currentSegment.append(option);","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lhurr"},"content":"            }","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lhurr"},"content":"        }","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lhurr"},"content":"        if (segmentIndex \u003c segments.length) {","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lhurr"},"content":"            segments[segmentIndex] \u003d currentSegment.toString().trim();","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lhurr"},"content":"        }","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lhurr"},"content":"        return segments;","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-19T17:08:27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lhurr"},"content":"    /**","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lhurr"},"content":"     * Processes a raw command and returns the formatted reply string.","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lhurr"},"content":"     *","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lhurr"},"content":"     * @param command Command entered","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lhurr"},"content":"     * @param line    Line (for format)","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lhurr"},"content":"     * @return Formatted reply","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lhurr"},"content":"     */","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lhurr"},"content":"    public static String reply(String command, String line) throws ByteException {","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lhurr"},"content":"        String[] parts \u003d command.split(\" \", 2);","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lhurr"},"content":"        String keyword \u003d parts[0];","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lhurr"},"content":"        switch (keyword) {","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lhurr"},"content":"        case \"bye\":","lastModifiedDate":"2025-08-19T17:08:27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lhurr"},"content":"            return \"\\t\" + line + \"\\t\" + \"Bye, hope to see you again soon!\\n\" + \"\\t\" + line;","lastModifiedDate":"2025-08-19T17:08:27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lhurr"},"content":"        case \"list\": {","lastModifiedDate":"2025-08-19T17:35:32","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lhurr"},"content":"            StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2025-08-19T17:35:32","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"lhurr"},"content":"            output.append(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lhurr"},"content":"            for (int i \u003d 0; i \u003c storage.size(); i++) {","lastModifiedDate":"2025-08-19T17:35:32","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lhurr"},"content":"                output.append(\"\\n\\t\").append(i + 1).append(\".\").append(storage.get(i).toString());","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"lhurr"},"content":"            }","lastModifiedDate":"2025-08-19T17:35:32","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lhurr"},"content":"            return \"\\t\" + line + \"\\t\" + output.toString() + \"\\n\" + \"\\t\" + line;","lastModifiedDate":"2025-08-19T17:35:32","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"lhurr"},"content":"        }","lastModifiedDate":"2025-08-19T17:35:32","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"lhurr"},"content":"        case \"todo\": {","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"lhurr"},"content":"            String[] options \u003d command.split(\" \");","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"lhurr"},"content":"            String[] segment \u003d parseSegments(options);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lhurr"},"content":"            if (segment[0] \u003d\u003d null || segment[0].trim().equals(\"todo\")) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"lhurr"},"content":"                throw new ByteException(\"Note that the description of a todo cannot be empty\");","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lhurr"},"content":"            }","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lhurr"},"content":"            Task task \u003d new Todo(segment[0]);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lhurr"},"content":"            return addTaskAndReply(task, line);","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lhurr"},"content":"        }","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"lhurr"},"content":"        case \"deadline\": {","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"lhurr"},"content":"            String[] segment \u003d parseSegments(command.split(\" \"));","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lhurr"},"content":"            if (segment[0] \u003d\u003d null || segment[0].trim().equals(\"deadline\")) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lhurr"},"content":"                throw new ByteException(\"The description of a deadline cant be empty\");","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"lhurr"},"content":"            }","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lhurr"},"content":"            if (segment[1] \u003d\u003d null || segment[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"lhurr"},"content":"                throw new ByteException(\"The /by time of a deadline cant be empty\");","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"lhurr"},"content":"            }","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"lhurr"},"content":"            Task task \u003d new Deadline(segment[0], segment[1]);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"lhurr"},"content":"            return addTaskAndReply(task, line);","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"lhurr"},"content":"        }","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"lhurr"},"content":"        case \"event\": {","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"lhurr"},"content":"            String[] segment \u003d parseSegments(command.split(\" \"));","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"lhurr"},"content":"            if (segment[0] \u003d\u003d null || segment[0].trim().equals(\"event\")) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"lhurr"},"content":"                throw new ByteException(\"The description of an event cant be empty\");","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"lhurr"},"content":"            }","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"lhurr"},"content":"            if (segment[1] \u003d\u003d null || segment[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"lhurr"},"content":"                throw new ByteException(\"The /from time of an event cant be empty\");","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"lhurr"},"content":"            }","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"lhurr"},"content":"            if (segment[2] \u003d\u003d null || segment[2].trim().isEmpty()) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"lhurr"},"content":"                throw new ByteException(\"The /to time of an event cant be empty\");","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"lhurr"},"content":"            }","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"lhurr"},"content":"            Task task \u003d new Event(segment[0], segment[1], segment[2]);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"lhurr"},"content":"            return addTaskAndReply(task, line);","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"lhurr"},"content":"        }","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"lhurr"},"content":"        case \"mark\": {","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"lhurr"},"content":"            int index \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"lhurr"},"content":"            Task task \u003d storage.get(index - 1);","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"lhurr"},"content":"            task.mark();","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"lhurr"},"content":"            saveTasks();","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"lhurr"},"content":"            return \"\\t\" + line + \"\\t\" + \"Nice! I\u0027ve marked this task as done:\\n\\t  \" + task.toString() + \"\\n\" + \"\\t\" + line;","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"lhurr"},"content":"        }","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"lhurr"},"content":"        case \"unmark\": {","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"lhurr"},"content":"            int index \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"lhurr"},"content":"            Task task \u003d storage.get(index - 1);","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"lhurr"},"content":"            task.unmark();","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"lhurr"},"content":"            saveTasks(); // Save after unmarking task","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"lhurr"},"content":"            return \"\\t\" + line + \"\\t\" + \"OK, I\u0027ve marked this task as not done yet:\\n\\t  \" + task.toString() + \"\\n\" + \"\\t\" + line;","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"lhurr"},"content":"        }","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"lhurr"},"content":"        case \"delete\": {","lastModifiedDate":"2025-08-20T21:59:19","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"lhurr"},"content":"            if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-20T21:59:19","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"lhurr"},"content":"                throw new ByteException(\"Specify the task number to delete\");","lastModifiedDate":"2025-08-20T21:59:19","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"lhurr"},"content":"            }","lastModifiedDate":"2025-08-20T21:59:19","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-20T21:59:19","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"lhurr"},"content":"            int index \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2025-08-20T21:59:19","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-20T21:59:19","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"lhurr"},"content":"            if (index \u003c 1 || index \u003e storage.size()) {","lastModifiedDate":"2025-08-20T21:59:19","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"lhurr"},"content":"                throw new ByteException(\"The number to delete is invalid\");","lastModifiedDate":"2025-08-20T21:59:19","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"lhurr"},"content":"            }","lastModifiedDate":"2025-08-20T21:59:19","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"lhurr"},"content":"            Task removed \u003d storage.remove(index - 1);","lastModifiedDate":"2025-08-20T21:59:19","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"lhurr"},"content":"            saveTasks(); // Save after deleting task","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"lhurr"},"content":"            return \"\\t\" + line + \"\\t\" + \"I have removed this task:\\n\\t  \" + removed.toString() + \"\\n\\tNow you have \" + storage.size() + \" tasks in the list.\" + \"\\n\" + \"\\t\" + line;","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"lhurr"},"content":"        }","lastModifiedDate":"2025-08-20T21:59:19","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"lhurr"},"content":"        default:","lastModifiedDate":"2025-08-19T17:08:27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"lhurr"},"content":"            throw new ByteException(\"I dont know what that means!\");","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"lhurr"},"content":"        }","lastModifiedDate":"2025-08-19T17:08:27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-19T15:33:55","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"lhurr"},"content":"}","lastModifiedDate":"2025-08-19T15:33:55","isFullCredit":false}],"authorContributionMap":{"lhurr":195}},{"path":"src/main/java/ByteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhurr"},"content":"/**","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lhurr"},"content":" * Represents errors in the Byte chatbot.","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lhurr"},"content":" */","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lhurr"},"content":"public class ByteException extends Exception {","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lhurr"},"content":"    /**","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lhurr"},"content":"     * Creates a new ByteException with the given message.","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lhurr"},"content":"     * The message is prefixed with \"OOPS!!! \" as per UI spec.","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lhurr"},"content":"     *","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lhurr"},"content":"     * @param message error details","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lhurr"},"content":"     */","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lhurr"},"content":"    public ByteException(String message) {","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lhurr"},"content":"        super(\"Bzzzz, Byte does not accept this command!!! \" + message);","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lhurr"},"content":"}","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-20T21:32:15","isFullCredit":false}],"authorContributionMap":{"lhurr":17}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhurr"},"content":"/**","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lhurr"},"content":" * Represents a task that needs to be completed by a specific time.","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lhurr"},"content":" */","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lhurr"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lhurr"},"content":"    private final String by;","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lhurr"},"content":"    /**","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lhurr"},"content":"     * Creates a deadline task.","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lhurr"},"content":"     *","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lhurr"},"content":"     * @param description Description of the task","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lhurr"},"content":"     * @param by Deadline ","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lhurr"},"content":"     */","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lhurr"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lhurr"},"content":"        super(description);","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lhurr"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lhurr"},"content":"    @Override","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lhurr"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lhurr"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lhurr"},"content":"}","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false}],"authorContributionMap":{"lhurr":25}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhurr"},"content":"/**","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lhurr"},"content":" * Represents a task that has a start and end time.","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lhurr"},"content":" */","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lhurr"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lhurr"},"content":"    private final String from;","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lhurr"},"content":"    private final String to;","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lhurr"},"content":"    /**","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lhurr"},"content":"     * Creates an event task.","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lhurr"},"content":"     *","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lhurr"},"content":"     * @param description Description of the event","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lhurr"},"content":"     * @param from Start time","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lhurr"},"content":"     * @param to End time","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lhurr"},"content":"     */","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lhurr"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lhurr"},"content":"        super(description);","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lhurr"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lhurr"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lhurr"},"content":"    @Override","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lhurr"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lhurr"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lhurr"},"content":"}","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false}],"authorContributionMap":{"lhurr":28}},{"path":"src/main/java/Status.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhurr"},"content":"/**","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lhurr"},"content":" * Represents the completion status of a task.","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lhurr"},"content":" */","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lhurr"},"content":"public enum Status {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lhurr"},"content":"    DONE(\"1\"),","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lhurr"},"content":"    NOT_DONE(\"0\");","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lhurr"},"content":"    private final String value;","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lhurr"},"content":"    Status(String value) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lhurr"},"content":"        this.value \u003d value;","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lhurr"},"content":"    public String getValue() {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lhurr"},"content":"        return value;","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lhurr"},"content":"    public static Status fromString(String status) throws ByteException {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lhurr"},"content":"        for (Status s : Status.values()) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lhurr"},"content":"            if (s.value.equals(status)) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lhurr"},"content":"                return s;","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lhurr"},"content":"            }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lhurr"},"content":"        }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lhurr"},"content":"        throw new ByteException(\"Invalid status: \" + status);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lhurr"},"content":"}","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false}],"authorContributionMap":{"lhurr":26}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhurr"},"content":"import java.io.File;","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lhurr"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lhurr"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lhurr"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lhurr"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lhurr"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lhurr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lhurr"},"content":"import java.util.List;","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lhurr"},"content":"/**","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lhurr"},"content":" * Handles saving and loading tasks to/from a file.","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lhurr"},"content":" */","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lhurr"},"content":"public class Storage {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lhurr"},"content":"    private static final String DATA_DIR \u003d \"data\";","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lhurr"},"content":"    private static final String FILE_NAME \u003d \"byte.txt\";","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lhurr"},"content":"    private final Path filePath;","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lhurr"},"content":"    /**","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lhurr"},"content":"     * Creates a Storage instance with the default file path.","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lhurr"},"content":"     */","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lhurr"},"content":"    public Storage() {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lhurr"},"content":"        this.filePath \u003d Paths.get(DATA_DIR, FILE_NAME);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lhurr"},"content":"    /**","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lhurr"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lhurr"},"content":"     * Creates the directory and file if they don\u0027t exist.","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lhurr"},"content":"     *","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lhurr"},"content":"     * @return List of loaded tasks","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lhurr"},"content":"     * @throws IOException if there\u0027s an error reading the file","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lhurr"},"content":"     */","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lhurr"},"content":"    public List\u003cTask\u003e loadTasks() throws IOException {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lhurr"},"content":"        File dataDir \u003d new File(DATA_DIR);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lhurr"},"content":"        if (!dataDir.exists()) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lhurr"},"content":"            dataDir.mkdirs();","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lhurr"},"content":"        }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lhurr"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lhurr"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lhurr"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lhurr"},"content":"        }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lhurr"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lhurr"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lhurr"},"content":"        for (String line : lines) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lhurr"},"content":"            if (!line.trim().isEmpty()) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lhurr"},"content":"                try {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lhurr"},"content":"                    Task task \u003d parseTaskFromString(line);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lhurr"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lhurr"},"content":"                } catch (ByteException e) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lhurr"},"content":"                    System.err.println(\"Invalid task line: \" + line + \" - \" + e.getMessage());","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lhurr"},"content":"                }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lhurr"},"content":"            }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lhurr"},"content":"        }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lhurr"},"content":"        return tasks;","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lhurr"},"content":"    /**","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lhurr"},"content":"     * Saves tasks to the file.","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lhurr"},"content":"     *","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lhurr"},"content":"     * @param tasks List of tasks to save","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lhurr"},"content":"     * @throws IOException if there\u0027s an error writing to the file","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lhurr"},"content":"     */","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lhurr"},"content":"    public void saveTasks(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lhurr"},"content":"        // Create directory if it doesn\u0027t exist","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lhurr"},"content":"        File dataDir \u003d new File(DATA_DIR);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lhurr"},"content":"        if (!dataDir.exists()) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lhurr"},"content":"            dataDir.mkdirs();","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lhurr"},"content":"        }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lhurr"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath.toFile())) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lhurr"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lhurr"},"content":"                writer.write(taskToFileString(task) + \"\\n\");","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lhurr"},"content":"            }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lhurr"},"content":"        }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lhurr"},"content":"    /**","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lhurr"},"content":"     * Converts a task to its file representation.","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lhurr"},"content":"     *","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lhurr"},"content":"     * @param task Task to convert","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lhurr"},"content":"     * @return String representation for file storage","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lhurr"},"content":"     */","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lhurr"},"content":"    private String taskToFileString(Task task) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lhurr"},"content":"        Status status \u003d task.isDone ? Status.DONE : Status.NOT_DONE;","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lhurr"},"content":"        return status.getValue() + \" | \" + task.toString();","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lhurr"},"content":"    /**","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lhurr"},"content":"     * Parses a task from its file string representation.","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lhurr"},"content":"     *","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lhurr"},"content":"     * @param line String representation from file","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lhurr"},"content":"     * @return Parsed Task object","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lhurr"},"content":"     * @throws ByteException if the line format is invalid","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lhurr"},"content":"     */","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lhurr"},"content":"    private Task parseTaskFromString(String line) throws ByteException {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lhurr"},"content":"        String[] tokens \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lhurr"},"content":"        Status status \u003d Status.fromString(tokens[0]);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lhurr"},"content":"        String taskString \u003d tokens[1];","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lhurr"},"content":"        Task task \u003d switch (taskString.substring(1, 2)) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lhurr"},"content":"            case \"T\" -\u003e {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lhurr"},"content":"                String description \u003d taskString.substring(taskString.indexOf(\"] \") + 2);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lhurr"},"content":"                yield new Todo(description);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lhurr"},"content":"            }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lhurr"},"content":"            case \"D\" -\u003e {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lhurr"},"content":"                int byStart \u003d taskString.indexOf(\"(by: \") + 5;","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lhurr"},"content":"                int byEnd \u003d taskString.indexOf(\")\");","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lhurr"},"content":"                String by \u003d taskString.substring(byStart, byEnd);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lhurr"},"content":"                String description \u003d taskString.substring(taskString.indexOf(\"] \") + 2, taskString.indexOf(\" (by:\"));","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lhurr"},"content":"                yield new Deadline(description, by);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lhurr"},"content":"            }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lhurr"},"content":"            case \"E\" -\u003e {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lhurr"},"content":"                int fromStart \u003d taskString.indexOf(\"(from: \") + 7;","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lhurr"},"content":"                int fromEnd \u003d taskString.indexOf(\" to:\");","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lhurr"},"content":"                int toStart \u003d taskString.indexOf(\"to: \") + 4;","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lhurr"},"content":"                int toEnd \u003d taskString.indexOf(\")\");","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lhurr"},"content":"                String from \u003d taskString.substring(fromStart, fromEnd);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lhurr"},"content":"                String to \u003d taskString.substring(toStart, toEnd);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"lhurr"},"content":"                String description \u003d taskString.substring(taskString.indexOf(\"] \") + 2, taskString.indexOf(\" (from:\"));","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lhurr"},"content":"                yield new Event(description, from, to);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"lhurr"},"content":"            }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"lhurr"},"content":"            default -\u003e throw new ByteException(\"Unknown task type in string: \" + taskString);","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"lhurr"},"content":"        };","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lhurr"},"content":"        if (status \u003d\u003d Status.DONE) {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"lhurr"},"content":"            task.mark();","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lhurr"},"content":"        } else {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lhurr"},"content":"            task.unmark();","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lhurr"},"content":"        }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"lhurr"},"content":"        return task;","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lhurr"},"content":"}","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false}],"authorContributionMap":{"lhurr":139}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhurr"},"content":"/**","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lhurr"},"content":" * Represents a generic task with a description and completion status.","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lhurr"},"content":" * This is the base class for specific task types","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lhurr"},"content":" */","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lhurr"},"content":"class Task {","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lhurr"},"content":"    protected String description;","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lhurr"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lhurr"},"content":"    /**","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lhurr"},"content":"     * Creates a task with the given description. Tasks not marked as not done by default.","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lhurr"},"content":"     *","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lhurr"},"content":"     * @param description Description of the task","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lhurr"},"content":"     */","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lhurr"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lhurr"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lhurr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lhurr"},"content":"    /**","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lhurr"},"content":"     * Returns the status icon telling whether the task is done.","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lhurr"},"content":"     *","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lhurr"},"content":"     * @return \"X\" if the task is done","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lhurr"},"content":"     */","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lhurr"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lhurr"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lhurr"},"content":"    /**","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lhurr"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lhurr"},"content":"     */","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lhurr"},"content":"    public void mark() {","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lhurr"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lhurr"},"content":"    /**","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lhurr"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lhurr"},"content":"     */","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lhurr"},"content":"    public void unmark() {","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lhurr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lhurr"},"content":"    @Override","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lhurr"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lhurr"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lhurr"},"content":"}","lastModifiedDate":"2025-08-19T20:01:23","isFullCredit":false}],"authorContributionMap":{"lhurr":46}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhurr"},"content":"/**","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lhurr"},"content":" * Represents a to-do task without any associated time.","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lhurr"},"content":" */","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lhurr"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lhurr"},"content":"    /**","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lhurr"},"content":"     * Creates a to-do task with the given description.","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lhurr"},"content":"     *","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lhurr"},"content":"     * @param description Description of the to-do","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lhurr"},"content":"     */","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lhurr"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lhurr"},"content":"        super(description);","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lhurr"},"content":"    @Override","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lhurr"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lhurr"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lhurr"},"content":"    }","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lhurr"},"content":"}","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-20T19:05:57","isFullCredit":false}],"authorContributionMap":{"lhurr":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lhurr"},"content":"list","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lhurr"},"content":"deadline homework /by tonight","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lhurr"},"content":"list","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lhurr"},"content":"todo cs2103","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lhurr"},"content":"list","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lhurr"},"content":"event carnival /from today /to tomorrow","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lhurr"},"content":"event birthday /from Aug 20 /to Aug 21","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lhurr"},"content":"mark 2","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lhurr"},"content":"list","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lhurr"},"content":"mark 1","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lhurr"},"content":"list","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lhurr"},"content":"unmark 1","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lhurr"},"content":"list","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lhurr"},"content":"delete 1","lastModifiedDate":"2025-08-20T21:59:19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lhurr"},"content":"bye","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false}],"authorContributionMap":{"lhurr":15}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lhurr"},"content":"if [ -e \"./data/byte.txt\" ]","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lhurr"},"content":"then","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lhurr"},"content":"    rm ./data/byte.txt","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lhurr"},"content":"fi","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lhurr"},"content":"","lastModifiedDate":"2025-08-26T00:50:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lhurr"},"content":"java -classpath ../bin Byte \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-20T21:14:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"lhurr":6,"-":37}}]
