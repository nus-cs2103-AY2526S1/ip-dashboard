[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"coolprogrammer000"},"content":"# John project template","lastModifiedDate":"2025-08-22T12:40:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"coolprogrammer000"},"content":"1. After that, locate the `src/main/java/John.java` file, right-click it, and choose `Run John.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-08-22T12:40:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"-":24,"coolprogrammer000":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"coolprogrammer000"},"content":"# John User Guide","lastModifiedDate":"2025-08-22T12:40:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"-":29,"coolprogrammer000":1}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"coolprogrammer000"},"content":"public class Deadline extends Task{","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"coolprogrammer000"},"content":"    private final String deadline;","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"coolprogrammer000"},"content":"    public Deadline(String title, String deadline) {","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"coolprogrammer000"},"content":"        super(title);","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"coolprogrammer000"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"coolprogrammer000"},"content":"    }","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"coolprogrammer000"},"content":"    @Override","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"coolprogrammer000"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"coolprogrammer000"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"coolprogrammer000"},"content":"    }","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"coolprogrammer000"},"content":"}","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false}],"authorContributionMap":{"coolprogrammer000":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"coolprogrammer000"},"content":"public class Event extends Task{","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"coolprogrammer000"},"content":"    private final String from;","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"coolprogrammer000"},"content":"    private final String to;","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"coolprogrammer000"},"content":"","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"coolprogrammer000"},"content":"    public Event(String title, String from, String to) {","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"coolprogrammer000"},"content":"        super(title);","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"coolprogrammer000"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"coolprogrammer000"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"coolprogrammer000"},"content":"    }","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"coolprogrammer000"},"content":"","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"coolprogrammer000"},"content":"    @Override","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"coolprogrammer000"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"coolprogrammer000"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"coolprogrammer000"},"content":"    }","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"coolprogrammer000"},"content":"}","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false}],"authorContributionMap":{"coolprogrammer000":15}},{"path":"src/main/java/John.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"coolprogrammer000"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-22T12:40:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"coolprogrammer000"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"coolprogrammer000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"coolprogrammer000"},"content":"import java.util.List;","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"coolprogrammer000"},"content":"","lastModifiedDate":"2025-08-22T12:40:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"coolprogrammer000"},"content":"public class John {","lastModifiedDate":"2025-08-22T12:40:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"coolprogrammer000"},"content":"    private static final List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"coolprogrammer000"},"content":"","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"coolprogrammer000"},"content":"        command(new String[] {\"start\"});","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"coolprogrammer000"},"content":"        try (Scanner listen \u003d new Scanner(System.in)) {","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"coolprogrammer000"},"content":"            while (true) {","lastModifiedDate":"2025-08-22T12:40:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"coolprogrammer000"},"content":"                String line \u003d listen.nextLine().trim();","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"coolprogrammer000"},"content":"                if (line.isEmpty()) continue;","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"coolprogrammer000"},"content":"                String[] cmd \u003d line.split(\"\\\\s+\");","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"coolprogrammer000"},"content":"                command(cmd);","lastModifiedDate":"2025-08-22T12:40:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"coolprogrammer000"},"content":"                if (cmd[0].equals(\"bye\")) break;","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"coolprogrammer000"},"content":"            }","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"coolprogrammer000"},"content":"        }","lastModifiedDate":"2025-08-22T12:40:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"coolprogrammer000"},"content":"    }","lastModifiedDate":"2025-08-22T12:40:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"coolprogrammer000"},"content":"","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"coolprogrammer000"},"content":"    private static Integer parseIndex(String token) {","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"coolprogrammer000"},"content":"        try {","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"coolprogrammer000"},"content":"            int idx \u003d Integer.parseInt(token) - 1; // user-facing 1-based","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"coolprogrammer000"},"content":"            if (idx \u003c 0 || idx \u003e\u003d tasks.size()) return null;","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"coolprogrammer000"},"content":"            return idx;","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"coolprogrammer000"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"coolprogrammer000"},"content":"            return null;","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"coolprogrammer000"},"content":"        }","lastModifiedDate":"2025-08-22T12:40:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"coolprogrammer000"},"content":"    }","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"coolprogrammer000"},"content":"","lastModifiedDate":"2025-08-22T12:40:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"coolprogrammer000"},"content":"    public static void command(String[] cmd) {","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"coolprogrammer000"},"content":"        try {","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"coolprogrammer000"},"content":"            switch (cmd[0]) {","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"coolprogrammer000"},"content":"                case \"start\":","lastModifiedDate":"2025-08-22T12:40:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"coolprogrammer000"},"content":"                    System.out.println(\"Hello! I\u0027m John\");","lastModifiedDate":"2025-08-22T12:40:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"coolprogrammer000"},"content":"                    System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-08-22T12:40:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"coolprogrammer000"},"content":"                    break;","lastModifiedDate":"2025-08-22T12:40:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"coolprogrammer000"},"content":"","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"coolprogrammer000"},"content":"                case \"bye\":","lastModifiedDate":"2025-08-22T12:40:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"coolprogrammer000"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-22T12:40:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"coolprogrammer000"},"content":"                    break;","lastModifiedDate":"2025-08-22T12:40:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"coolprogrammer000"},"content":"","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"coolprogrammer000"},"content":"                case \"list\":","lastModifiedDate":"2025-08-22T12:47:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"coolprogrammer000"},"content":"                    if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"coolprogrammer000"},"content":"                        System.out.println(\"Your list is empty.\");","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"coolprogrammer000"},"content":"                    } else {","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"coolprogrammer000"},"content":"                        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"coolprogrammer000"},"content":"                        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"coolprogrammer000"},"content":"                            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"coolprogrammer000"},"content":"                        }","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"coolprogrammer000"},"content":"                    }","lastModifiedDate":"2025-08-22T12:47:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"coolprogrammer000"},"content":"                    break;","lastModifiedDate":"2025-08-22T12:47:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"coolprogrammer000"},"content":"","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"coolprogrammer000"},"content":"                case \"mark\": {","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"coolprogrammer000"},"content":"                    if (cmd.length \u003c 2) { System.out.println(\"Usage: mark \u003ctask-number\u003e\"); break; }","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"coolprogrammer000"},"content":"                    Integer idx \u003d parseIndex(cmd[1]);","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"coolprogrammer000"},"content":"                    if (idx \u003d\u003d null) { System.out.println(\"Please provide a valid task number between 1 and \" + tasks.size() + \".\"); break; }","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"coolprogrammer000"},"content":"                    tasks.get(idx).markAsComplete();","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"coolprogrammer000"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"coolprogrammer000"},"content":"                    System.out.println(tasks.get(idx));","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"coolprogrammer000"},"content":"                    break;","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"coolprogrammer000"},"content":"                }","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"coolprogrammer000"},"content":"","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"coolprogrammer000"},"content":"                case \"unmark\": {","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"coolprogrammer000"},"content":"                    if (cmd.length \u003c 2) { System.out.println(\"Usage: unmark \u003ctask-number\u003e\"); break; }","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"coolprogrammer000"},"content":"                    Integer idx \u003d parseIndex(cmd[1]);","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"coolprogrammer000"},"content":"                    if (idx \u003d\u003d null) { System.out.println(\"Please provide a valid task number between 1 and \" + tasks.size() + \".\"); break; }","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"coolprogrammer000"},"content":"                    tasks.get(idx).markAsIncomplete();","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"coolprogrammer000"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"coolprogrammer000"},"content":"                    System.out.println(tasks.get(idx));","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"coolprogrammer000"},"content":"                    break;","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"coolprogrammer000"},"content":"                }","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"coolprogrammer000"},"content":"","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"coolprogrammer000"},"content":"                case \"delete\": {","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"coolprogrammer000"},"content":"                    if (cmd.length \u003c 2) { System.out.println(\"Usage: delete \u003ctask-number\u003e\"); break; }","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"coolprogrammer000"},"content":"                    Integer idx \u003d parseIndex(cmd[1]);","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"coolprogrammer000"},"content":"                    if (idx \u003d\u003d null) { System.out.println(\"Please provide a valid task number between 1 and \" + tasks.size() + \".\"); break; }","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"coolprogrammer000"},"content":"                    Task removed \u003d tasks.remove((int) idx);","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"coolprogrammer000"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"coolprogrammer000"},"content":"                    System.out.println(removed);","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"coolprogrammer000"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"coolprogrammer000"},"content":"                    break;","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"coolprogrammer000"},"content":"                }","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"coolprogrammer000"},"content":"","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"coolprogrammer000"},"content":"                case \"todo\": {","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"coolprogrammer000"},"content":"                    if (cmd.length \u003c 2) { System.out.println(\"Usage: todo \u003cdescription\u003e\"); break; }","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"coolprogrammer000"},"content":"                    String todoDesc \u003d String.join(\" \", Arrays.copyOfRange(cmd, 1, cmd.length)).trim();","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"coolprogrammer000"},"content":"                    tasks.add(new Todo(todoDesc));","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"coolprogrammer000"},"content":"                    System.out.println(\"added: \" + todoDesc);","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"coolprogrammer000"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"coolprogrammer000"},"content":"                    break;","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"coolprogrammer000"},"content":"                }","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"coolprogrammer000"},"content":"","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"coolprogrammer000"},"content":"                case \"deadline\": {","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"coolprogrammer000"},"content":"                    if (cmd.length \u003c 2) { System.out.println(\"Usage: deadline \u003cdescription\u003e /by \u003cwhen\u003e\"); break; }","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"coolprogrammer000"},"content":"                    String dFull \u003d String.join(\" \", Arrays.copyOfRange(cmd, 1, cmd.length)).trim();","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"coolprogrammer000"},"content":"                    int byPos \u003d dFull.lastIndexOf(\" /by \");","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"coolprogrammer000"},"content":"                    if (byPos \u003d\u003d -1) { System.out.println(\"Usage: deadline \u003cdescription\u003e /by \u003cwhen\u003e\"); break; }","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"coolprogrammer000"},"content":"                    String dDesc \u003d dFull.substring(0, byPos).trim();","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"coolprogrammer000"},"content":"                    String dWhen \u003d dFull.substring(byPos + 5).trim();","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"coolprogrammer000"},"content":"                    if (dDesc.isEmpty() || dWhen.isEmpty()) { System.out.println(\"Usage: deadline \u003cdescription\u003e /by \u003cwhen\u003e\"); break; }","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"coolprogrammer000"},"content":"                    tasks.add(new Deadline(dDesc, dWhen));","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"coolprogrammer000"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"coolprogrammer000"},"content":"                    System.out.println(tasks.get(tasks.size() - 1));","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"coolprogrammer000"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"coolprogrammer000"},"content":"                    break;","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"coolprogrammer000"},"content":"                }","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"coolprogrammer000"},"content":"","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"coolprogrammer000"},"content":"                case \"event\": {","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"coolprogrammer000"},"content":"                    if (cmd.length \u003c 2) { System.out.println(\"Usage: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\"); break; }","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"coolprogrammer000"},"content":"                    String eFull \u003d String.join(\" \", Arrays.copyOfRange(cmd, 1, cmd.length)).trim();","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"coolprogrammer000"},"content":"                    int fromPos \u003d eFull.lastIndexOf(\" /from \");","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"coolprogrammer000"},"content":"                    int toPos \u003d eFull.lastIndexOf(\" /to \");","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"coolprogrammer000"},"content":"                    if (fromPos \u003d\u003d -1 || toPos \u003d\u003d -1 || toPos \u003c\u003d fromPos) { System.out.println(\"Usage: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\"); break; }","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"coolprogrammer000"},"content":"                    String eDesc \u003d eFull.substring(0, fromPos).trim();","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"coolprogrammer000"},"content":"                    String eFrom \u003d eFull.substring(fromPos + 7, toPos).trim();","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"coolprogrammer000"},"content":"                    String eTo \u003d eFull.substring(toPos + 5).trim();","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"coolprogrammer000"},"content":"                    if (eDesc.isEmpty() || eFrom.isEmpty() || eTo.isEmpty()) { System.out.println(\"Usage: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\"); break; }","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"coolprogrammer000"},"content":"                    tasks.add(new Event(eDesc, eFrom, eTo));","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"coolprogrammer000"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"coolprogrammer000"},"content":"                    System.out.println(tasks.get(tasks.size() - 1));","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"coolprogrammer000"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"coolprogrammer000"},"content":"                    break;","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"coolprogrammer000"},"content":"                }","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"coolprogrammer000"},"content":"","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"coolprogrammer000"},"content":"                default: {","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"coolprogrammer000"},"content":"                    System.out.println(\"No such command, try: \u0027list\u0027, \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027, \u0027mark\u0027, \u0027unmark\u0027, or \u0027delete\u0027\");","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"coolprogrammer000"},"content":"                }","lastModifiedDate":"2025-08-22T12:40:38","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"coolprogrammer000"},"content":"            }","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"coolprogrammer000"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"coolprogrammer000"},"content":"            System.out.println(\"Hmm, that command was missing arguments. Try \u0027list\u0027, \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027, \u0027mark\u0027, \u0027unmark\u0027, or \u0027delete\u0027.\");","lastModifiedDate":"2025-08-22T15:28:52","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"coolprogrammer000"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"coolprogrammer000"},"content":"            System.out.println(\"That task number doesn\u0027t exist yet.\");","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"coolprogrammer000"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"coolprogrammer000"},"content":"            System.out.println(\"Unexpected error: \" + e.getMessage());","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"coolprogrammer000"},"content":"        } finally {","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"coolprogrammer000"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"coolprogrammer000"},"content":"}","lastModifiedDate":"2025-08-22T15:23:32","isFullCredit":false}],"authorContributionMap":{"-":3,"coolprogrammer000":138}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"coolprogrammer000"},"content":"public class Task {","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"coolprogrammer000"},"content":"    private boolean completed \u003d false;","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"coolprogrammer000"},"content":"    private final String title;","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"coolprogrammer000"},"content":"","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"coolprogrammer000"},"content":"    public Task(String title) {","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"coolprogrammer000"},"content":"        this.title \u003d title;","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"coolprogrammer000"},"content":"    }","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"coolprogrammer000"},"content":"","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"coolprogrammer000"},"content":"    public void markAsComplete() {","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"coolprogrammer000"},"content":"        this.completed \u003d true;","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"coolprogrammer000"},"content":"    }","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"coolprogrammer000"},"content":"","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"coolprogrammer000"},"content":"    public void markAsIncomplete() {","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"coolprogrammer000"},"content":"        this.completed \u003d false;","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"coolprogrammer000"},"content":"    }","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"coolprogrammer000"},"content":"    @Override","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"coolprogrammer000"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"coolprogrammer000"},"content":"        return String.format(\"[\" + this.convert() + \"] \" + title);","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"coolprogrammer000"},"content":"    }","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"coolprogrammer000"},"content":"","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"coolprogrammer000"},"content":"    private String convert() {","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"coolprogrammer000"},"content":"        return completed ? \"X\" : \" \";","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"coolprogrammer000"},"content":"    }","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"coolprogrammer000"},"content":"}","lastModifiedDate":"2025-08-22T13:10:47","isFullCredit":false}],"authorContributionMap":{"coolprogrammer000":24}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"coolprogrammer000"},"content":"public class Todo extends Task{","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"coolprogrammer000"},"content":"    public Todo(String title) {","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"coolprogrammer000"},"content":"        super(title);","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"coolprogrammer000"},"content":"    }","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"coolprogrammer000"},"content":"","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"coolprogrammer000"},"content":"    @Override","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"coolprogrammer000"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"coolprogrammer000"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"coolprogrammer000"},"content":"    }","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"coolprogrammer000"},"content":"}","lastModifiedDate":"2025-08-22T15:19:40","isFullCredit":false}],"authorContributionMap":{"coolprogrammer000":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"coolprogrammer000"},"content":"java -classpath ..\\bin John \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-22T12:40:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"-":20,"coolprogrammer000":1}}]
