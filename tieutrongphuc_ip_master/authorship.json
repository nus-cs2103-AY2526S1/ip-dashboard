[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tieutrongphuc"},"content":"    mainClass.set(\"July\")","lastModifiedDate":"2025-08-30T09:07:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tieutrongphuc"},"content":"    archiveBaseName \u003d \"July\"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":2,"-":39}},{"path":"src/main/java/July.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:26:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"import July.command.CommandRoute;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":"import July.error.JulyException;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":"import July.data.Storage;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":"import July.tasks.Task;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":"import July.ui.Ui;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":"import July.command.Command;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-21T19:43:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":"/**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":" * Main class for the July task management application.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":" * This class serves as the entry point and orchestrates the interaction between","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":" * the user interface, command processing, task management, and data storage components.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":" */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"public class July {","lastModifiedDate":"2025-08-21T19:33:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"    private Ui ui;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-21T21:24:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tieutrongphuc"},"content":"     * Constructs a July application instance with the specified storage file path.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tieutrongphuc"},"content":"     * Initializes the user interface, storage system, and loads existing tasks from the file.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tieutrongphuc"},"content":"     * @param filePath the path to the file used for storing task data","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tieutrongphuc"},"content":"    public July(String filePath) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tieutrongphuc"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tieutrongphuc"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tieutrongphuc"},"content":"        tasks \u003d storage.load();","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-21T21:24:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-22T12:42:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tieutrongphuc"},"content":"     * Runs the main application loop.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tieutrongphuc"},"content":"     * Displays the greeting message and continuously processes user commands","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tieutrongphuc"},"content":"     * until an exit command is received. Handles exceptions by displaying","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tieutrongphuc"},"content":"     * error messages to the user.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tieutrongphuc"},"content":"    public void run() {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tieutrongphuc"},"content":"        ui.greet();","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tieutrongphuc"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tieutrongphuc"},"content":"        while (!isDone) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tieutrongphuc"},"content":"            try {","lastModifiedDate":"2025-08-22T12:52:34","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tieutrongphuc"},"content":"                String fullCommand \u003d ui.read();","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tieutrongphuc"},"content":"                Command c \u003d CommandRoute.parse(fullCommand);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tieutrongphuc"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tieutrongphuc"},"content":"                isDone \u003d c.isDone();","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tieutrongphuc"},"content":"            } catch (JulyException e) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tieutrongphuc"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tieutrongphuc"},"content":"            }","lastModifiedDate":"2025-08-22T12:52:34","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-22T12:52:34","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-21T19:43:20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tieutrongphuc"},"content":"     * Main method that serves as the entry point for the July application.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tieutrongphuc"},"content":"     * Creates a new July instance with a default storage file and starts the application.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tieutrongphuc"},"content":"     * @param args command line arguments (not used)","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tieutrongphuc"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tieutrongphuc"},"content":"        new July(\"data/savefile.txt\").run();","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-21T19:33:14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-21T19:33:14","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":63}},{"path":"src/main/java/July/command/CheckCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.command;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":"import July.tasks.Task;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":"import July.ui.Ui;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":"import July.data.Storage;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":"import July.error.JulyException;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":"import July.datetime.StringTime;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":"/**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":" * Command to check for tasks that are not completed on a specific date.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":" * This command allows users to query for incomplete tasks on a given date","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":" * and displays them to the user.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":" */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"public class CheckCommand extends Command {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"    private String argument;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":"     * Constructs a CheckCommand with the specified date argument.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tieutrongphuc"},"content":"     * @param argument the date string to check for incomplete tasks","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tieutrongphuc"},"content":"    public CheckCommand(String argument) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tieutrongphuc"},"content":"        this.argument \u003d argument;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tieutrongphuc"},"content":"     * Executes the check command to find and display incomplete tasks on the specified date.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tieutrongphuc"},"content":"     * Check the date format and find tasks that are not completed on the given date.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tieutrongphuc"},"content":"     * @param tasks the ArrayList of tasks to search through","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tieutrongphuc"},"content":"     * @param ui the user interface component for displaying output","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tieutrongphuc"},"content":"     * @param storage the storage component for data persistence","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tieutrongphuc"},"content":"     * @throws JulyException if the date format is invalid","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tieutrongphuc"},"content":"    @Override","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tieutrongphuc"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) throws JulyException {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tieutrongphuc"},"content":"        StringTime temp \u003d new StringTime(argument);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tieutrongphuc"},"content":"        if (temp.isString()) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tieutrongphuc"},"content":"            throw new JulyException(\"Please give a valid date: example dd/mm/yyyy\");","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tieutrongphuc"},"content":"        System.out.printf(\"Okay let me check if you have any task not done yet on %s%n\", temp);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tieutrongphuc"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tieutrongphuc"},"content":"            if (tasks.get(i).check(temp)) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tieutrongphuc"},"content":"                System.out.println(tasks.get(i));","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tieutrongphuc"},"content":"            }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":51}},{"path":"src/main/java/July/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.command;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":"import July.error.JulyException;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":"import July.tasks.Task;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":"import July.ui.Ui;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":"import July.data.Storage;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":"public abstract class Command {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":"     * Executes the event command to create and add a new event task.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":"     * Processes the argument to create an Event object, adds it to the task list,","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":"     * and displays a confirmation message to the user.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"     * @param tasks the ArrayList of tasks to add the new event to","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"     * @param ui the user interface component for displaying output","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"     * @param storage the storage component for data persistence","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"     * @throws JulyException there is any error in the execute process","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tieutrongphuc"},"content":"    public abstract void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) throws JulyException;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tieutrongphuc"},"content":"     * Indicates whether the command represents a termination request.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tieutrongphuc"},"content":"     * This method is set to false by default","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tieutrongphuc"},"content":"     * @return false, indicating that the application should continue","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tieutrongphuc"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tieutrongphuc"},"content":"        return false;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":31}},{"path":"src/main/java/July/command/CommandRoute.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.command;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"import July.error.JulyException;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":"/**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":" * Router class responsible for parsing user input and creating appropriate Command objects.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":" * This class serves as the main entry point for command parsing, analyzing input strings","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":" * and returning the corresponding command instances based on keywords and arguments.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":" */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":"public class CommandRoute {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":"     * Parses a full command string and returns the appropriate Command object.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":"     * This method processes user input by extracting keywords and arguments,","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"     * then creates and returns the corresponding command instance.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"     * @param fullCommand the complete command string entered by the user","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"     * @return the appropriate Command object based on the parsed input","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":"     * @throws JulyException if the command requires an argument but none is provided,","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tieutrongphuc"},"content":"     *                       or if there are issues with command parsing","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tieutrongphuc"},"content":"    public static Command parse(String fullCommand) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tieutrongphuc"},"content":"        String input \u003d fullCommand.trim().replaceAll(\"\\\\s+\", \" \").toLowerCase();","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tieutrongphuc"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tieutrongphuc"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tieutrongphuc"},"content":"        String[] splitInput \u003d keywords.parse(input);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tieutrongphuc"},"content":"        String keyword \u003d splitInput[0];","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tieutrongphuc"},"content":"        String argument \u003d splitInput[1].trim();","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tieutrongphuc"},"content":"        // Check if argument is empty for commands that require it","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tieutrongphuc"},"content":"        if (argument.isEmpty() \u0026\u0026 !keyword.equals(\"list\")) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tieutrongphuc"},"content":"            throw new JulyException(\"Can you give the description of the task on one line\");","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tieutrongphuc"},"content":"        switch (keyword) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tieutrongphuc"},"content":"        case \"check\":","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tieutrongphuc"},"content":"            return new CheckCommand(argument);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tieutrongphuc"},"content":"        case \"list\":","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tieutrongphuc"},"content":"            return new ListCommand();","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tieutrongphuc"},"content":"        case \"mark\":","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tieutrongphuc"},"content":"            return new MarkCommand(argument, true);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tieutrongphuc"},"content":"        case \"unmark\":","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tieutrongphuc"},"content":"            return new MarkCommand(argument, false);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tieutrongphuc"},"content":"        case \"todo\":","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tieutrongphuc"},"content":"            return new TodoCommand(argument);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tieutrongphuc"},"content":"        case \"deadline\":","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tieutrongphuc"},"content":"            return new DeadlineCommand(argument);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tieutrongphuc"},"content":"        case \"event\":","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tieutrongphuc"},"content":"            return new EventCommand(argument);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tieutrongphuc"},"content":"        case \"delete\":","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tieutrongphuc"},"content":"            return new DeleteCommand(argument);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tieutrongphuc"},"content":"        case \"find\":","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tieutrongphuc"},"content":"            return new FindCommand(argument);","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tieutrongphuc"},"content":"        default:","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tieutrongphuc"},"content":"            return new UnknownCommand();","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":61}},{"path":"src/main/java/July/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.command;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":"import July.tasks.Task;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":"import July.tasks.Deadline;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":"import July.ui.Ui;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":"import July.data.Storage;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":"import July.error.JulyException;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":"import July.error.InvalidDeadlineException;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":"/**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":" * Command to create and add a new deadline task to the task list.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":" * This command processes user input to create a deadline task with a specific","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":" * due date and adds it to the current task collection.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":" */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"    private String argument;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tieutrongphuc"},"content":"     * Constructs a DeadlineCommand with the specified argument string.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tieutrongphuc"},"content":"     * @param argument the string containing the deadline task description and due date","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tieutrongphuc"},"content":"    public DeadlineCommand(String argument) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tieutrongphuc"},"content":"        this.argument \u003d argument;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tieutrongphuc"},"content":"     * Executes the deadline command to create and add a new deadline task.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tieutrongphuc"},"content":"     * Processes the argument to create a Deadline object, adds it to the task list,","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tieutrongphuc"},"content":"     * and displays a confirmation message to the user.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tieutrongphuc"},"content":"     * @param tasks the ArrayList of tasks to add the new deadline to","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tieutrongphuc"},"content":"     * @param ui the user interface component for displaying output","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tieutrongphuc"},"content":"     * @param storage the storage component for data persistence","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tieutrongphuc"},"content":"     * @throws JulyException if the deadline format is invalid or cannot be processed","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tieutrongphuc"},"content":"    @Override","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tieutrongphuc"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) throws JulyException {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tieutrongphuc"},"content":"        try {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tieutrongphuc"},"content":"            Deadline tmp \u003d Deadline.process(argument);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tieutrongphuc"},"content":"            tasks.add(tmp);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tieutrongphuc"},"content":"            System.out.printf(\"Okie no problem, I\u0027ve added a new deadline:%n%s%n\", tasks.get(tasks.size() - 1));","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tieutrongphuc"},"content":"        } catch (InvalidDeadlineException e) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tieutrongphuc"},"content":"            throw new JulyException(e.getMessage());","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":48}},{"path":"src/main/java/July/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.command;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":"import July.tasks.Task;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":"import July.ui.Ui;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":"import July.data.Storage;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":"import July.error.JulyException;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":"/**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":" * Command to delete a task from the task list by its index number.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":" * This command removes a specified task from the task ArrayList and","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":" * provides feedback about the deletion and remaining task count.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":" */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"    private String argument;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"     * Constructs a DeleteCommand with the specified task number argument.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tieutrongphuc"},"content":"     * @param argument the string representing the task number to delete","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tieutrongphuc"},"content":"    public DeleteCommand(String argument) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tieutrongphuc"},"content":"        this.argument \u003d argument;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tieutrongphuc"},"content":"     * Executes the delete command to remove a task from the task list.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tieutrongphuc"},"content":"     * Validates the task number, removes the specified task, and displays","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tieutrongphuc"},"content":"     * confirmation messages including the deleted task and remaining count.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tieutrongphuc"},"content":"     * @param tasks the ArrayList of tasks from which to delete the specified task","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tieutrongphuc"},"content":"     * @param ui the user interface component for displaying output","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tieutrongphuc"},"content":"     * @param storage the storage component for data persistence","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tieutrongphuc"},"content":"     * @throws JulyException if the argument is not a valid number or if the","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tieutrongphuc"},"content":"     *                       task number is out of range (less than 1 or greater than task list size)","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tieutrongphuc"},"content":"    @Override","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tieutrongphuc"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) throws JulyException {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tieutrongphuc"},"content":"        try {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tieutrongphuc"},"content":"            int i \u003d Integer.parseInt(argument);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tieutrongphuc"},"content":"            if (i \u003c\u003d 0 || i \u003e tasks.size()) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tieutrongphuc"},"content":"                throw new JulyException(\"You are giving me an invalid task number: \" + argument);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tieutrongphuc"},"content":"            } else {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tieutrongphuc"},"content":"                System.out.printf(\"I\u0027ve deleted task %d:%n%s%n\", i, tasks.get(i - 1));","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tieutrongphuc"},"content":"                tasks.remove(i - 1);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tieutrongphuc"},"content":"                System.out.printf(\"You have now %d remaining tasks%n\", tasks.size());","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tieutrongphuc"},"content":"            }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tieutrongphuc"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tieutrongphuc"},"content":"            throw new JulyException(\"Sorry \" + argument + \" is not a valid number\");","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":52}},{"path":"src/main/java/July/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.command;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":"import July.tasks.Task;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":"import July.tasks.Event;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":"import July.ui.Ui;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":"import July.data.Storage;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":"import July.error.JulyException;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":"import July.error.InvalidEventException;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":"/**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":" * Command to create and add a new event task to the task list.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":" * This command processes user input to create an event task with a specific","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":" * time period and adds it to the current task collection.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":" */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"    private String argument;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tieutrongphuc"},"content":"     * Constructs an EventCommand with the specified argument string.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tieutrongphuc"},"content":"     * @param argument the string containing the event task description and time details","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tieutrongphuc"},"content":"    public EventCommand(String argument) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tieutrongphuc"},"content":"        this.argument \u003d argument;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tieutrongphuc"},"content":"     * Executes the event command to create and add a new event task.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tieutrongphuc"},"content":"     * Processes the argument to create an Event object, adds it to the task list,","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tieutrongphuc"},"content":"     * and displays a confirmation message to the user.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tieutrongphuc"},"content":"     * @param tasks the ArrayList of tasks to add the new event to","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tieutrongphuc"},"content":"     * @param ui the user interface component for displaying output","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tieutrongphuc"},"content":"     * @param storage the storage component for data persistence","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tieutrongphuc"},"content":"     * @throws JulyException if the event format is invalid or cannot be processed","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tieutrongphuc"},"content":"    @Override","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tieutrongphuc"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) throws JulyException {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tieutrongphuc"},"content":"        try {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tieutrongphuc"},"content":"            Event tmp \u003d Event.process(argument);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tieutrongphuc"},"content":"            tasks.add(tmp);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tieutrongphuc"},"content":"            System.out.printf(\"Okie no problem, I\u0027ve added a new event:%n%s%n\", tasks.get(tasks.size() - 1));","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tieutrongphuc"},"content":"        } catch (InvalidEventException e) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tieutrongphuc"},"content":"            throw new JulyException(e.getMessage());","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":48}},{"path":"src/main/java/July/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.command;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":"import July.tasks.Task;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":"import July.ui.Ui;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":"import July.data.Storage;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":"/**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":" * Command to exit the application gracefully.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":" * This command handles the termination process by saving all tasks","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":" * to storage and displaying a farewell message to the user.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":" */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"     * Executes the exit command to terminate the application gracefully.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"     * Saves all current tasks to storage and displays a goodbye message","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"     * through the user interface.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tieutrongphuc"},"content":"     * @param tasks the ArrayList of tasks to save before exiting","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tieutrongphuc"},"content":"     * @param ui the user interface component for displaying the goodbye message","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tieutrongphuc"},"content":"     * @param storage the storage component for persisting task data","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tieutrongphuc"},"content":"    @Override","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tieutrongphuc"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tieutrongphuc"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tieutrongphuc"},"content":"        ui.bye();","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tieutrongphuc"},"content":"     * Indicates whether the command represents a termination request.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tieutrongphuc"},"content":"     * This method returns true to signal that the application should exit","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tieutrongphuc"},"content":"     * after this command is executed.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tieutrongphuc"},"content":"     * @return true, indicating that the application should terminate","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tieutrongphuc"},"content":"    @Override","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tieutrongphuc"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tieutrongphuc"},"content":"        return true;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":41}},{"path":"src/main/java/July/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.command;","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":"import July.data.Storage;","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":"import July.error.JulyException;","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":"import July.tasks.Task;","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":"import July.ui.Ui;","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":"    private String argument;","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":"    public FindCommand(String s) {","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":"        this.argument \u003d s;","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) throws JulyException {","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"        if (argument \u003d\u003d null) {","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"            throw new JulyException(\"I can only find a String data :\u003c\");","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":"        ArrayList\u003cTask\u003e save \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tieutrongphuc"},"content":"        ArrayList\u003cInteger\u003e cnt \u003d new ArrayList\u003cInteger\u003e();","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tieutrongphuc"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tieutrongphuc"},"content":"            if (tasks.get(i).checkDescription(argument)) {","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tieutrongphuc"},"content":"                save.add(tasks.get(i));","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tieutrongphuc"},"content":"                cnt.add(i + 1);","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tieutrongphuc"},"content":"            }","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tieutrongphuc"},"content":"        if (save.size() \u003e 0) {","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tieutrongphuc"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tieutrongphuc"},"content":"            for (int i \u003d 0; i \u003c save.size(); i++) {","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tieutrongphuc"},"content":"                System.out.printf(\"%d.%s%n\", cnt.get(i), save.get(i));","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tieutrongphuc"},"content":"            }","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tieutrongphuc"},"content":"        } else {","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tieutrongphuc"},"content":"            System.out.println(\"There are no match tasks in your list :\u003c\");","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":36}},{"path":"src/main/java/July/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.command;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":"import July.tasks.Task;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":"import July.ui.Ui;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":"import July.data.Storage;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":"/**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":" * Command to display all tasks in the current task list.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":" * This command shows the total number of tasks and lists each task","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":" * with its corresponding index number for user reference.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":" */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"     * Executes the list command to display all tasks in the task list.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"     * Shows the total task count and prints each task with its numbered index","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"     * (starting from 1) for easy identification by the user.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tieutrongphuc"},"content":"     * @param tasks the ArrayList of tasks to display","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tieutrongphuc"},"content":"     * @param ui the user interface component for displaying output","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tieutrongphuc"},"content":"     * @param storage the storage component for data persistence","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tieutrongphuc"},"content":"    @Override","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tieutrongphuc"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tieutrongphuc"},"content":"        System.out.printf(\"You currently have %d task in your list%n\", tasks.size());","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tieutrongphuc"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tieutrongphuc"},"content":"            System.out.printf(\"%d.%s%n\", i + 1, tasks.get(i));","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":31}},{"path":"src/main/java/July/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.command;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":"import July.tasks.Task;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":"import July.ui.Ui;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":"import July.data.Storage;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":"import July.error.JulyException;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":"/**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":" * Command to mark or unmark a task as done by its index number.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":" * This command allows users to change the completion status of a specific task","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":" * and provides appropriate feedback based on the marking action performed.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":" */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"    private String argument;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"    private boolean markAsDone;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":"     * Constructs a MarkCommand with the specified task number and marking action.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tieutrongphuc"},"content":"     * @param argument the string representing the task number to mark/unmark","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tieutrongphuc"},"content":"     * @param markAsDone true to mark the task as done, false to mark as not done","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tieutrongphuc"},"content":"    public MarkCommand(String argument, boolean markAsDone) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tieutrongphuc"},"content":"        this.argument \u003d argument;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tieutrongphuc"},"content":"        this.markAsDone \u003d markAsDone;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tieutrongphuc"},"content":"     * Executes the mark command to change the completion status of a specified task.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tieutrongphuc"},"content":"     * Validates the task number, updates the task\u0027s completion status, and displays","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tieutrongphuc"},"content":"     * an appropriate confirmation message based on whether the task was marked or unmarked.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tieutrongphuc"},"content":"     * @param tasks the ArrayList of tasks containing the task to mark/unmark","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tieutrongphuc"},"content":"     * @param ui the user interface component for displaying output","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tieutrongphuc"},"content":"     * @param storage the storage component for data persistence","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tieutrongphuc"},"content":"     * @throws JulyException if the argument is not a valid number or if the","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tieutrongphuc"},"content":"     *                       task number is out of range (less than 1 or greater than task list size)","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tieutrongphuc"},"content":"    @Override","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tieutrongphuc"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) throws JulyException {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tieutrongphuc"},"content":"        try {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tieutrongphuc"},"content":"            int i \u003d Integer.parseInt(argument);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tieutrongphuc"},"content":"            if (i \u003c\u003d 0 || i \u003e tasks.size()) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tieutrongphuc"},"content":"                throw new JulyException(\"You are giving me an invalid task number: \" + argument);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tieutrongphuc"},"content":"            } else {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tieutrongphuc"},"content":"                tasks.get(i - 1).setDone(markAsDone);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tieutrongphuc"},"content":"                if (markAsDone) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tieutrongphuc"},"content":"                    System.out.printf(\"Okie no problem, I\u0027ve set task %d to done:%n%s%n\", i, tasks.get(i - 1));","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tieutrongphuc"},"content":"                } else {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tieutrongphuc"},"content":"                    System.out.printf(\"Okie no problem, I\u0027ve set task %d to not done yet:%n%s%n\", i, tasks.get(i - 1));","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tieutrongphuc"},"content":"                }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tieutrongphuc"},"content":"            }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tieutrongphuc"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tieutrongphuc"},"content":"            throw new JulyException(\"Sorry \" + argument + \" is not a valid number\");","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":58}},{"path":"src/main/java/July/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.command;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":"import July.tasks.Task;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":"import July.tasks.Todo;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":"import July.ui.Ui;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":"import July.data.Storage;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":"/**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":" * Command to create and add a new todo task to the task list.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":" * This command creates a basic todo task with a description and adds it","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":" * to the current task collection without any specific deadline or time constraints.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":" */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"    private String description;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"     * Constructs a TodoCommand with the specified task description.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tieutrongphuc"},"content":"     * @param description the description text for the new todo task","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tieutrongphuc"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tieutrongphuc"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tieutrongphuc"},"content":"     * Executes the todo command to create and add a new todo task.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tieutrongphuc"},"content":"     * Creates a new Todo object with the provided description, adds it to the","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tieutrongphuc"},"content":"     * task list, and displays a confirmation message to the user.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tieutrongphuc"},"content":"     * @param tasks the ArrayList of tasks to add the new todo to","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tieutrongphuc"},"content":"     * @param ui the user interface component for displaying output","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tieutrongphuc"},"content":"     * @param storage the storage component for data persistence","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tieutrongphuc"},"content":"    @Override","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tieutrongphuc"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tieutrongphuc"},"content":"        tasks.add(new Todo(description));","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tieutrongphuc"},"content":"        System.out.printf(\"Okie no problem, I\u0027ve add the given task:%n%s%n\", tasks.get(tasks.size() - 1));","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":40}},{"path":"src/main/java/July/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.command;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":"import July.tasks.Task;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":"import July.ui.Ui;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":"import July.data.Storage;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":"/**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":" * Command to handle unrecognized or invalid user input.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":" * This command is used as a fallback when the user enters a command","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":" * that is not recognized by the command parser, displaying an appropriate","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":" * error message through the user interface.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":" */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"     * Executes the unknown command to display an error message for unrecognized input.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"     * This method calls the user interface to show a sorry/error message when","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":"     * the user enters an invalid or unrecognized command.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tieutrongphuc"},"content":"     * @param tasks the ArrayList of tasks (not used in this command)","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tieutrongphuc"},"content":"     * @param ui the user interface component for displaying the error message","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tieutrongphuc"},"content":"     * @param storage the storage component for data persistence (not used in this command)","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tieutrongphuc"},"content":"    @Override","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tieutrongphuc"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tieutrongphuc"},"content":"        ui.sorry();","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":29}},{"path":"src/main/java/July/command/keywords.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.command;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"/**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":" * Enumeration of valid command keywords for the July task management system.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":" * This enum defines all supported command keywords and provides functionality","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":" * to parse user input and extract keywords along with their arguments.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":" */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":"public enum keywords {","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":"    LIST(\"list\"),","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2025-08-22T12:52:34","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"    CHECK(\"check\"),","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"    FIND(\"find\");","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":"    private final String keyword;","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tieutrongphuc"},"content":"     * Constructs a keyword enum value with the specified string representation.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tieutrongphuc"},"content":"     * @param s the string representation of the keyword","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tieutrongphuc"},"content":"    keywords(String s) {","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tieutrongphuc"},"content":"        this.keyword \u003d s;","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tieutrongphuc"},"content":"     * Gets the string representation of this keyword.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tieutrongphuc"},"content":"     * @return the keyword string","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tieutrongphuc"},"content":"    public String getKeyword() {","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tieutrongphuc"},"content":"        return this.keyword;","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tieutrongphuc"},"content":"     * Parses user input to extract the command keyword and remaining argument.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tieutrongphuc"},"content":"     * This method checks if the input starts with any valid keyword and splits","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tieutrongphuc"},"content":"     * the input into the keyword and the remaining description/argument.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tieutrongphuc"},"content":"     * @param input the user input string to parse","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tieutrongphuc"},"content":"     * @return a String array where index 0 contains the matched keyword (or empty string","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tieutrongphuc"},"content":"     *         if no match) and index 1 contains the remaining input after the keyword","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tieutrongphuc"},"content":"    public static String[] parse(String input) {","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tieutrongphuc"},"content":"        for (keywords k : values()) {","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tieutrongphuc"},"content":"            if (input.startsWith(k.getKeyword())) {","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tieutrongphuc"},"content":"                String description \u003d input.substring(k.getKeyword().length());","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tieutrongphuc"},"content":"                return new String[]{k.getKeyword(), description};","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tieutrongphuc"},"content":"            }","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tieutrongphuc"},"content":"        return new String[]{\"\",input};","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":58}},{"path":"src/main/java/July/data/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.data;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"import java.io.File;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":"import July.tasks.Task;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":"import July.tasks.Todo;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":"import July.tasks.Event;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":"import July.tasks.Deadline;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":"import July.error.InvalidEventException;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"import July.error.InvalidDeadlineException;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"/**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":" * Write and red data to and from the file system.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":" * This class manages loading tasks from a file on startup and saving","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tieutrongphuc"},"content":" * tasks to a file for persistence across application sessions.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tieutrongphuc"},"content":" */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tieutrongphuc"},"content":"public class Storage {","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tieutrongphuc"},"content":"    private final File f;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tieutrongphuc"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tieutrongphuc"},"content":"     * Creates the file and its parent directories if they don\u0027t exist.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tieutrongphuc"},"content":"     * @param filePath the path to the file used for storing task data","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tieutrongphuc"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tieutrongphuc"},"content":"        this.f \u003d new File(filePath);","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tieutrongphuc"},"content":"        f.getParentFile().mkdirs();","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tieutrongphuc"},"content":"        try {","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tieutrongphuc"},"content":"            f.createNewFile(); // create if missing","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tieutrongphuc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tieutrongphuc"},"content":"            System.out.println(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tieutrongphuc"},"content":"     * Loads tasks from the storage file and returns them as an ArrayList of task.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tieutrongphuc"},"content":"     * Reads each line from the file, parses it into a Task object, and adds","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tieutrongphuc"},"content":"     * valid tasks to the returned list. Corrupted or invalid lines are skipped.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tieutrongphuc"},"content":"     * @return an ArrayList containing all successfully loaded tasks, or an empty list","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tieutrongphuc"},"content":"     *         if the file doesn\u0027t exist or contains no valid tasks","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tieutrongphuc"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tieutrongphuc"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tieutrongphuc"},"content":"        try (Scanner s \u003d new Scanner(f)) {","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tieutrongphuc"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tieutrongphuc"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tieutrongphuc"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tieutrongphuc"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tieutrongphuc"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tieutrongphuc"},"content":"                }","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tieutrongphuc"},"content":"            }","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tieutrongphuc"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tieutrongphuc"},"content":"            return tasks;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tieutrongphuc"},"content":"        return tasks;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tieutrongphuc"},"content":"     * Saves the provided task list to the storage file.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tieutrongphuc"},"content":"     * Writes each task\u0027s save representation to the file, with each task","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tieutrongphuc"},"content":"     * on a separate line. Overwrites any existing file content.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tieutrongphuc"},"content":"     * @param tasks the list of tasks to save to the file","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tieutrongphuc"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tieutrongphuc"},"content":"        try (FileWriter fw \u003d new FileWriter(f)) {","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tieutrongphuc"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tieutrongphuc"},"content":"                fw.write(task.toSave() + System.lineSeparator());","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tieutrongphuc"},"content":"            }","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tieutrongphuc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tieutrongphuc"},"content":"            System.out.println(\"Error saving file: \" + e.getMessage());","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tieutrongphuc"},"content":"     * Parses a single line from the storage file into a Task object.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tieutrongphuc"},"content":"     * Attempts to reconstruct a task from its saved format by parsing the","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tieutrongphuc"},"content":"     * task type, completion status, and description. Handles corrupted lines","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tieutrongphuc"},"content":"     * gracefully by returning null and logging error messages.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tieutrongphuc"},"content":"     * @param line the line from the file to parse into a Task","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tieutrongphuc"},"content":"     * @return the parsed Task object, or null if the line is corrupted or invalid","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tieutrongphuc"},"content":"    private Task parseTask(String line) {","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tieutrongphuc"},"content":"        try {","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tieutrongphuc"},"content":"            String[] argument \u003d line.split(\"\\\\s+\", 3);","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tieutrongphuc"},"content":"            String keyword \u003d argument[0].trim();","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tieutrongphuc"},"content":"            String isDone \u003d argument[1].trim();","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tieutrongphuc"},"content":"            String description \u003d argument[2].trim();","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tieutrongphuc"},"content":"            switch (keyword) {","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tieutrongphuc"},"content":"            case \"T\":","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tieutrongphuc"},"content":"                return new Todo(description);","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tieutrongphuc"},"content":"            case \"D\":","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tieutrongphuc"},"content":"                try {","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tieutrongphuc"},"content":"                    Task tmp \u003d Deadline.process(description);","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tieutrongphuc"},"content":"                    tmp.setDone(isDone.equals(\"1\"));","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tieutrongphuc"},"content":"                    return tmp;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tieutrongphuc"},"content":"                } catch (InvalidDeadlineException e) {","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tieutrongphuc"},"content":"                    System.out.println(\"Error reading Deadline task\");","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tieutrongphuc"},"content":"                }","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tieutrongphuc"},"content":"                break;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tieutrongphuc"},"content":"            case \"E\":","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tieutrongphuc"},"content":"                try {","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tieutrongphuc"},"content":"                    Task tmp \u003d Event.process(description);","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tieutrongphuc"},"content":"                    tmp.setDone(isDone.equals(\"1\"));","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tieutrongphuc"},"content":"                    return tmp;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tieutrongphuc"},"content":"                } catch (InvalidEventException e) {","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tieutrongphuc"},"content":"                    System.out.println(\"Error reading Event task\");","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tieutrongphuc"},"content":"                }","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tieutrongphuc"},"content":"                break;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tieutrongphuc"},"content":"            default:","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tieutrongphuc"},"content":"                return null;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tieutrongphuc"},"content":"            }","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tieutrongphuc"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tieutrongphuc"},"content":"            System.out.println(\"Found corrupted line: \" + line);","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tieutrongphuc"},"content":"            return null;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tieutrongphuc"},"content":"        return null;","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-29T11:51:49","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":128}},{"path":"src/main/java/July/datetime/StringTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.datetime;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":"import java.util.List;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":"/**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":" * A utility class for parsing and handling date/time strings in various formats.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":" * This class attempts to parse input strings as either date-time or date-only formats","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":" * and provides methods for validation, comparison, and formatting of the parsed values.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":" */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"public class StringTime {","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"    private String input;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"    private LocalDateTime dateTime \u003d null;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":"    private static final List\u003cString\u003e DATE_TIME \u003d Arrays.asList(","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tieutrongphuc"},"content":"            \"dd/MM/yyyy HH:mm\",","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tieutrongphuc"},"content":"            \"dd/MM/yyyy HH:mm\",","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tieutrongphuc"},"content":"            \"yyyy-MM-dd HH:mm\",","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tieutrongphuc"},"content":"            \"dd-MM-yyyy HH:mm\"","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tieutrongphuc"},"content":"    );","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tieutrongphuc"},"content":"    private static final List\u003cString\u003e DATE_ONLY \u003d Arrays.asList(","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tieutrongphuc"},"content":"            \"d/M/yyyy\",","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tieutrongphuc"},"content":"            \"dd/MM/yyyy\",","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tieutrongphuc"},"content":"            \"yyyy-MM-dd\",","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tieutrongphuc"},"content":"            \"dd-MM-yyyy\"","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tieutrongphuc"},"content":"    );","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tieutrongphuc"},"content":"     * Constructs a StringTime object by parsing the provided input string.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tieutrongphuc"},"content":"     * Attempts to parse the input as a date-time first, then as a date-only format","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tieutrongphuc"},"content":"     * if the date-time parsing fails.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tieutrongphuc"},"content":"     * @param s the input string to parse as a date/time","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tieutrongphuc"},"content":"    public StringTime(String s) {","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tieutrongphuc"},"content":"        this.input \u003d s;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tieutrongphuc"},"content":"        this.dateTime \u003d parse(s);","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tieutrongphuc"},"content":"        if (this.dateTime \u003d\u003d null) {","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tieutrongphuc"},"content":"            this.dateTime \u003d parseDate(s);","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tieutrongphuc"},"content":"     * Attempts to parse the input string as a date-time using predefined patterns.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tieutrongphuc"},"content":"     * Tries each date-time format pattern until one succeeds or all fail.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tieutrongphuc"},"content":"     * @param input the string to parse as a date-time","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tieutrongphuc"},"content":"     * @return the parsed LocalDateTime object, or null if parsing fails","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tieutrongphuc"},"content":"    private LocalDateTime parse(String input) {","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tieutrongphuc"},"content":"        for (String pattern : DATE_TIME) {","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tieutrongphuc"},"content":"            try {","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tieutrongphuc"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tieutrongphuc"},"content":"                return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tieutrongphuc"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tieutrongphuc"},"content":"            }","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tieutrongphuc"},"content":"        return null;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tieutrongphuc"},"content":"     * Attempts to parse the input string as a date-only using predefined patterns.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tieutrongphuc"},"content":"     * Tries each date format pattern and converts successful parses to LocalDateTime","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tieutrongphuc"},"content":"     * at the start of the day (00:00).","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tieutrongphuc"},"content":"     * @param input the string to parse as a date","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tieutrongphuc"},"content":"     * @return the parsed LocalDateTime object at start of day, or null if parsing fails","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tieutrongphuc"},"content":"    private LocalDateTime parseDate(String input) {","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tieutrongphuc"},"content":"        for (String pattern : DATE_ONLY) {","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tieutrongphuc"},"content":"            try {","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tieutrongphuc"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tieutrongphuc"},"content":"                LocalDate date \u003d LocalDate.parse(input, formatter);","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tieutrongphuc"},"content":"                return date.atStartOfDay();","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tieutrongphuc"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tieutrongphuc"},"content":"            }","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tieutrongphuc"},"content":"        return null;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tieutrongphuc"},"content":"     * Checks the StringTime object is a string or can be parse as date/time","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tieutrongphuc"},"content":"     * @return true if the input remains as a string (parsing failed), false if successfully parsed","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tieutrongphuc"},"content":"    public boolean isString() {","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tieutrongphuc"},"content":"        return this.dateTime \u003d\u003d null;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tieutrongphuc"},"content":"     * Compares this StringTime with another StringTime chronologically.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tieutrongphuc"},"content":"     * @param other the other StringTime object to compare with","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tieutrongphuc"},"content":"     * @return a negative integer, zero, or positive integer as this StringTime is","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tieutrongphuc"},"content":"     *         before, equal to, or after the other StringTime","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tieutrongphuc"},"content":"    public int compareTo(StringTime other) {","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tieutrongphuc"},"content":"        return this.dateTime.compareTo(other.dateTime);","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tieutrongphuc"},"content":"     * Returns the original input string for saving purposes.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tieutrongphuc"},"content":"     * @return the original unparsed input string","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tieutrongphuc"},"content":"    public String toSave() {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tieutrongphuc"},"content":"        return input;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tieutrongphuc"},"content":"     * Returns a formatted string representation of this StringTime.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tieutrongphuc"},"content":"     * If successfully parsed, returns the date-time in \"dd MMM yyyy, HH:mm\" format.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tieutrongphuc"},"content":"     * If parsing failed, returns the original input string.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tieutrongphuc"},"content":"     * @return the formatted date-time string or original input if parsing failed","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tieutrongphuc"},"content":"    @Override","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tieutrongphuc"},"content":"    public String toString() {","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tieutrongphuc"},"content":"        if (this.dateTime !\u003d null) {","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tieutrongphuc"},"content":"            return dateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, HH:mm\"));","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tieutrongphuc"},"content":"        return input;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":132}},{"path":"src/main/java/July/error/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.error;","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"/**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":" * Exception thrown when a deadline task cannot be created due to invalid input format.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":" * This exception is used to indicate problems with deadline task creation,","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":" * such as invalid date formats, missing required components, or malformed input.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":" */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":"public class InvalidDeadlineException extends Exception {","lastModifiedDate":"2025-08-22T12:42:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":"     * Constructs an InvalidDeadlineException with the specified error message.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":"     * @param message the detail message explaining why the deadline is invalid","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"    public InvalidDeadlineException(String message) {","lastModifiedDate":"2025-08-22T12:42:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"        super(message);","lastModifiedDate":"2025-08-22T12:42:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-22T12:42:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-22T12:42:35","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":18}},{"path":"src/main/java/July/error/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.error;","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"/**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":" * Exception thrown when an event task cannot be created due to invalid input format.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":" * This exception is used to indicate problems with event task creation,","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":" * such as invalid date/time formats, missing required components, or malformed input.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":" */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":"public class InvalidEventException extends Exception {","lastModifiedDate":"2025-08-22T12:42:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":"     * Constructs an InvalidEventException with the specified error message.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":"     * @param message the detail message explaining why the event is invalid","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"    public InvalidEventException(String message) {","lastModifiedDate":"2025-08-22T12:42:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"        super(message);","lastModifiedDate":"2025-08-22T12:42:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-22T12:42:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-22T12:42:35","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":18}},{"path":"src/main/java/July/error/JulyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.error;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"/**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":" * Custom runtime exception for the July task management application.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":" * This exception is used throughout the application to handle various error","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":" * conditions such as invalid user input, command parsing errors, and task","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":" * operation failures that should be displayed to the user.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":" */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":"public class JulyException extends RuntimeException {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":"     * Constructs a JulyException with the specified error message.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":"     * @param message the detail message explaining the error condition","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"    public JulyException(String message) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"        super(message);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":19}},{"path":"src/main/java/July/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.tasks;","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"import July.datetime.StringTime;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":"import July.error.InvalidDeadlineException;","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":"/**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":" * Represents a task with a specific deadline date and time.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":" * This class extends Task to include deadline functionality, allowing tasks","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":" * to have a \"by\" date that indicates when the task should be completed.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":" */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":"    protected StringTime by;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"     * Constructs a Deadline task with the specified description and deadline.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"     * @param description the description of the deadline task","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":"     * @param by the deadline date/time as a string","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tieutrongphuc"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tieutrongphuc"},"content":"        super(description);","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tieutrongphuc"},"content":"        this.by \u003d new StringTime(by);","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tieutrongphuc"},"content":"     * Processes a deadline command argument to create a Deadline object.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tieutrongphuc"},"content":"     * Parses the input string to extract the task description and deadline,","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tieutrongphuc"},"content":"     * expecting the format \"description /by deadline\".","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tieutrongphuc"},"content":"     * @param argument the command argument containing description and deadline separated by \"/by\"","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tieutrongphuc"},"content":"     * @return a new Deadline object created from the parsed input","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tieutrongphuc"},"content":"     * @throws InvalidDeadlineException if the argument doesn\u0027t contain exactly one \"/by\" separator","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tieutrongphuc"},"content":"    public static Deadline process(String argument) throws InvalidDeadlineException {","lastModifiedDate":"2025-08-22T12:42:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tieutrongphuc"},"content":"        String[] tmp \u003d argument.split(\"/by\", 2);","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tieutrongphuc"},"content":"        if (tmp.length !\u003d 2) {","lastModifiedDate":"2025-08-22T12:42:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tieutrongphuc"},"content":"            throw new InvalidDeadlineException(\"You need to have ONE \u0027/by\u0027 in deadline command\");","lastModifiedDate":"2025-08-22T12:42:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-22T12:42:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tieutrongphuc"},"content":"        String description \u003d tmp[0].trim();","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tieutrongphuc"},"content":"        String by \u003d tmp[1].trim();","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tieutrongphuc"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tieutrongphuc"},"content":"     * Returns a string representation of this deadline task.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tieutrongphuc"},"content":"     * Includes the task type marker \"[D]\", the parent task information,","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tieutrongphuc"},"content":"     * and the deadline in parentheses.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tieutrongphuc"},"content":"     * @return a formatted string showing the deadline task details","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tieutrongphuc"},"content":"    @Override","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tieutrongphuc"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tieutrongphuc"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tieutrongphuc"},"content":"     * Returns the save format representation of this deadline task.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tieutrongphuc"},"content":"     * Creates a string suitable for file storage containing the task type,","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tieutrongphuc"},"content":"     * completion status, description, and deadline.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tieutrongphuc"},"content":"     * @return a formatted string for saving the deadline task to storage","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tieutrongphuc"},"content":"    public String toSave() {","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tieutrongphuc"},"content":"        return String.format(\"D %s %s /by %s\", super.isDone ? \"1\" : \"0\", super.description, this.by.toSave());","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tieutrongphuc"},"content":"     * Checks if this deadline task is relevant for the specified date.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tieutrongphuc"},"content":"     * Compares the deadline date with the given date to determine if the task","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tieutrongphuc"},"content":"     * should be included in date-specific queries.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tieutrongphuc"},"content":"     * @param o the StringTime object representing the date to check against","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tieutrongphuc"},"content":"     * @return true if the deadline is on or after the specified date and both dates are valid,","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tieutrongphuc"},"content":"     *         false if either date is invalid or the deadline is before the specified date","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tieutrongphuc"},"content":"    public boolean check(StringTime o) {","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tieutrongphuc"},"content":"        if (by.isString() || o.isString()) {","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tieutrongphuc"},"content":"            return false;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tieutrongphuc"},"content":"        return by.compareTo(o) \u003e\u003d 0 \u0026\u0026 !super.isDone;","lastModifiedDate":"2025-08-30T11:11:22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":84}},{"path":"src/main/java/July/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.tasks;","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"import July.datetime.StringTime;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":"import July.error.InvalidEventException;","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":"/**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":" * Represents a task with a specific time period defined by start and end times.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":" * This class extends Task to include event functionality, allowing tasks","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":" * to have both a \"from\" start time and a \"to\" end time.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":" */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":"    protected StringTime from, to;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"     * Constructs an Event task with the specified description, start time, and end time.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"     * @param description the description of the event task","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":"     * @param from the start date/time as a string","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tieutrongphuc"},"content":"     * @param to the end date/time as a string","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tieutrongphuc"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tieutrongphuc"},"content":"        super(description);","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tieutrongphuc"},"content":"        this.from \u003d new StringTime(from);","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tieutrongphuc"},"content":"        this.to \u003d new StringTime(to);","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tieutrongphuc"},"content":"     * Processes an event command argument to create an Event object.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tieutrongphuc"},"content":"     * Parses the input string to extract the task description, start time, and end time,","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tieutrongphuc"},"content":"     * expecting the format \"description /from startTime /to endTime\".","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tieutrongphuc"},"content":"     * @param argument the command argument containing description and time details separated by \"/from\" and \"/to\"","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tieutrongphuc"},"content":"     * @return a new Event object created from the parsed input","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tieutrongphuc"},"content":"     * @throws InvalidEventException if the argument doesn\u0027t contain exactly one \"/from\" and one \"/to\" separator","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tieutrongphuc"},"content":"    public static Event process(String argument) throws InvalidEventException {","lastModifiedDate":"2025-08-22T12:42:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tieutrongphuc"},"content":"        String[] tmp \u003d argument.split(\"/to\", 2);","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tieutrongphuc"},"content":"        String to \u003d tmp[1].trim();","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tieutrongphuc"},"content":"        String[] tmp1 \u003d tmp[0].trim().split(\"/from\", 2);","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tieutrongphuc"},"content":"        if (tmp.length !\u003d 2 || tmp1.length !\u003d 2) {","lastModifiedDate":"2025-08-22T12:42:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tieutrongphuc"},"content":"            throw new InvalidEventException(\"You need ONE \u0027/from\u0027 and ONE \u0027/to\u0027 for the event command\");","lastModifiedDate":"2025-08-22T12:42:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-22T12:42:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tieutrongphuc"},"content":"        String from \u003d tmp1[1].trim();","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tieutrongphuc"},"content":"        String description \u003d tmp1[0].trim();","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tieutrongphuc"},"content":"        return new Event(description, from, to);","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tieutrongphuc"},"content":"     * Returns a string representation of this event task.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tieutrongphuc"},"content":"     * Includes the task type marker \"[E]\", the parent task information,","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tieutrongphuc"},"content":"     * and the time period in parentheses.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tieutrongphuc"},"content":"     * @return a formatted string showing the event task details with time period","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tieutrongphuc"},"content":"    @Override","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tieutrongphuc"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tieutrongphuc"},"content":"        return \"[E]\" + super.toString() + \" (From: \" + from + \" to: \" + to +\")\";","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tieutrongphuc"},"content":"     * Returns the save format representation of this event task.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tieutrongphuc"},"content":"     * Creates a string suitable for file storage containing the task type,","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tieutrongphuc"},"content":"     * completion status, description, start time, and end time.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tieutrongphuc"},"content":"     * @return a formatted string for saving the event task to storage","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tieutrongphuc"},"content":"    public String toSave() {","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tieutrongphuc"},"content":"        return String.format(\"E %s %s /from %s /to %s\", super.isDone ? \"1\" : \"0\", super.description,","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tieutrongphuc"},"content":"                this.from.toSave(), this.to.toSave());","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tieutrongphuc"},"content":"     * Checks if this event task is relevant for the specified date.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tieutrongphuc"},"content":"     * Determines if the given date falls within the event\u0027s time period","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tieutrongphuc"},"content":"     * by checking if it\u0027s after the start time and before the end time.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tieutrongphuc"},"content":"     * @param o the StringTime object representing the date to check against","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tieutrongphuc"},"content":"     * @return true if the specified date falls within the event\u0027s time period and all dates are valid,","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tieutrongphuc"},"content":"     *         false if any date is invalid or the specified date is outside the event period","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tieutrongphuc"},"content":"    public boolean check(StringTime o) {","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tieutrongphuc"},"content":"        if (from.isString() || to.isString() || o.isString()) {","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tieutrongphuc"},"content":"            return false;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tieutrongphuc"},"content":"        }","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tieutrongphuc"},"content":"        return from.compareTo(o) \u003c 0 \u0026\u0026 to.compareTo(o) \u003e 0 \u0026\u0026 !super.isDone;","lastModifiedDate":"2025-08-30T11:11:22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-22T11:36:22","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":88}},{"path":"src/main/java/July/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.tasks;","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"import July.datetime.StringTime;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":"/**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":" * Abstract base class representing a generic task in the July task management system.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":" * This class provides common functionality for all task types including description,","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":" * completion status, and basic display formatting.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":" */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":"public class Task {","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":"    protected String description;","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"     * Constructs a Task with the specified description.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"     * The task is initially set as not done.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"     * @param description the description text for this task","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tieutrongphuc"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tieutrongphuc"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tieutrongphuc"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tieutrongphuc"},"content":"     * Gets the status icon representing the completion state of this task.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tieutrongphuc"},"content":"     * @return \"X\" if the task is done, \" \" (space) if not done","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tieutrongphuc"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tieutrongphuc"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tieutrongphuc"},"content":"     * Returns a string representation of this task.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tieutrongphuc"},"content":"     * Shows the completion status icon in brackets followed by the task description.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tieutrongphuc"},"content":"     * @return a formatted string displaying the task status and description","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tieutrongphuc"},"content":"    @Override","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tieutrongphuc"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tieutrongphuc"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tieutrongphuc"},"content":"     * Sets the completion status of this task.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tieutrongphuc"},"content":"     * @param done true to mark the task as done, false to mark as not done","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tieutrongphuc"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tieutrongphuc"},"content":"        isDone \u003d done;","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tieutrongphuc"},"content":"     * Returns the save format representation of this task.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tieutrongphuc"},"content":"     * This base implementation returns an empty string and should be","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tieutrongphuc"},"content":"     * overridden by subclasses to provide appropriate save formats.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tieutrongphuc"},"content":"     * @return an empty string (to be overridden by subclasses)","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tieutrongphuc"},"content":"    public String toSave() {","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tieutrongphuc"},"content":"        return \"\";","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tieutrongphuc"},"content":"     * Checks if this task is relevant for the specified date.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tieutrongphuc"},"content":"     * This base implementation returns false and should be overridden","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tieutrongphuc"},"content":"     * by subclasses to provide appropriate date-checking logic.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tieutrongphuc"},"content":"     * @param o the StringTime object representing the date to check against","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tieutrongphuc"},"content":"     * @return false (to be overridden by subclasses with specific logic)","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tieutrongphuc"},"content":"    public boolean check(StringTime o) {","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tieutrongphuc"},"content":"        return false;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tieutrongphuc"},"content":"    public boolean checkDescription(String s) {","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tieutrongphuc"},"content":"        return description.contains(s);","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-30T12:29:50","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-22T10:03:47","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":80}},{"path":"src/main/java/July/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.tasks;","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"import July.datetime.StringTime;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":"/**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":" * Represents a basic todo task without any specific deadline or time constraints.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":" */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":"     * Constructs a Todo task with the specified description.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":"     * @param description the description of the todo task","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"        super(description);","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tieutrongphuc"},"content":"     * Returns a string representation of this todo task.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tieutrongphuc"},"content":"     * Includes the task type marker \"[T]\" followed by the parent task information.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tieutrongphuc"},"content":"     * @return a formatted string showing the todo task details","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tieutrongphuc"},"content":"    @Override","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tieutrongphuc"},"content":"    public String toString() {","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tieutrongphuc"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tieutrongphuc"},"content":"     * Returns the save format representation of this todo task.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tieutrongphuc"},"content":"     * Creates a string suitable for file storage containing the task type,","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tieutrongphuc"},"content":"     * completion status, and description.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tieutrongphuc"},"content":"     * @return a formatted string for saving the todo task to storage","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tieutrongphuc"},"content":"    public String toSave() {","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tieutrongphuc"},"content":"        return String.format(\"T %s %s\", super.isDone ? \"1\" : \"0\", super.description);","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tieutrongphuc"},"content":"     * Checks if this todo task should be included in date-specific queries.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tieutrongphuc"},"content":"     * @param o the StringTime object representing the date to check against (not used for todos)","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tieutrongphuc"},"content":"     * @return true if the todo task is not done, false if it\u0027s already completed","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tieutrongphuc"},"content":"    public boolean check(StringTime o) {","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tieutrongphuc"},"content":"        return !super.isDone;","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T14:26:36","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-29T11:53:40","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":50}},{"path":"src/main/java/July/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.ui;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":"/**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":" * Handles user interface interactions for the July task management application.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":" * This class manages user input/output operations including reading user commands.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":" */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":"public class Ui {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":"     * Constructs a Ui object and initializes the scanner for reading user input.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"    public Ui() {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tieutrongphuc"},"content":"     * Reads a line of input from the user.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tieutrongphuc"},"content":"     * @return the complete line entered by the user as a string","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tieutrongphuc"},"content":"    public String read() {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tieutrongphuc"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tieutrongphuc"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tieutrongphuc"},"content":"     *","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tieutrongphuc"},"content":"     * @param message the error message to display","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tieutrongphuc"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tieutrongphuc"},"content":"        System.out.println(message);","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tieutrongphuc"},"content":"     * Displays the greeting message when the application starts.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tieutrongphuc"},"content":"    public void greet() {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tieutrongphuc"},"content":"        System.out.println(\"Hello I\u0027m July, your helpful assistant\");","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tieutrongphuc"},"content":"     * Displays the farewell message when the user exits the application.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tieutrongphuc"},"content":"    public  void bye() {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tieutrongphuc"},"content":"        System.out.println(\"Good bye, I\u0027m always here for you.\");","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tieutrongphuc"},"content":"    /**","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tieutrongphuc"},"content":"     * Displays an apology message for unrecognized user input.","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tieutrongphuc"},"content":"     */","lastModifiedDate":"2025-08-30T11:06:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tieutrongphuc"},"content":"    public void sorry() {","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tieutrongphuc"},"content":"        System.out.println(\"Sorry I don\u0027t quite understand you :(\");","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-29T16:03:45","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":57}},{"path":"src/test/java/July/datetime/TestStringTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.datetime;","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":"class StringTimeTest {","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":"    @Test","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":"    void testValidDateTime_ddMMyyyyHHmm() {","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":"        StringTime st \u003d new StringTime(\"05/07/2025 18:30\");","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":"        assertFalse(st.isString());","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":"        assertEquals(\"05 Jul 2025, 18:30\", st.toString());","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":"        assertEquals(\"05/07/2025 18:30\", st.toSave());","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"    @Test","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"    void testValidDateTime_isString() {","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":"        StringTime st \u003d new StringTime(\"2025-07-05 07:15\");","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tieutrongphuc"},"content":"        assertFalse(st.isString());","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tieutrongphuc"},"content":"        assertEquals(\"05 Jul 2025, 07:15\", st.toString());","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tieutrongphuc"},"content":"    @Test","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tieutrongphuc"},"content":"    void testValidDate_slashFormat() {","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tieutrongphuc"},"content":"        StringTime st \u003d new StringTime(\"5/7/2025\"); // should become 00:00","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tieutrongphuc"},"content":"        assertFalse(st.isString());","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tieutrongphuc"},"content":"        assertEquals(\"05 Jul 2025, 00:00\", st.toString());","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tieutrongphuc"},"content":"    @Test","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tieutrongphuc"},"content":"    void testValidDate_dashFormat() {","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tieutrongphuc"},"content":"        StringTime st \u003d new StringTime(\"05-07-2025\");","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tieutrongphuc"},"content":"        assertFalse(st.isString());","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tieutrongphuc"},"content":"        assertEquals(\"05 Jul 2025, 00:00\", st.toString());","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tieutrongphuc"},"content":"    @Test","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tieutrongphuc"},"content":"    void testInvalidString() {","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tieutrongphuc"},"content":"        StringTime st \u003d new StringTime(\"tomorrow evening\");","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tieutrongphuc"},"content":"        assertTrue(st.isString());","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tieutrongphuc"},"content":"        assertEquals(\"tomorrow evening\", st.toString());","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tieutrongphuc"},"content":"        assertEquals(\"tomorrow evening\", st.toSave());","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tieutrongphuc"},"content":"    @Test","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tieutrongphuc"},"content":"    void testCompareTo_LessOrMore() {","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tieutrongphuc"},"content":"        StringTime earlier \u003d new StringTime(\"05/07/2025 01:00\");","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tieutrongphuc"},"content":"        StringTime later   \u003d new StringTime(\"05/07/2025 10:00\");","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tieutrongphuc"},"content":"        assertTrue(earlier.compareTo(later) \u003c 0);","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tieutrongphuc"},"content":"        assertTrue(later.compareTo(earlier) \u003e 0);","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tieutrongphuc"},"content":"    @Test","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tieutrongphuc"},"content":"    void testCompareTo_Equal() {","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tieutrongphuc"},"content":"        StringTime t1 \u003d new StringTime(\"05/07/2025 05:00\");","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tieutrongphuc"},"content":"        StringTime t2 \u003d new StringTime(\"05/07/2025 05:00\");","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tieutrongphuc"},"content":"        assertEquals(0, t1.compareTo(t2));","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":62}},{"path":"src/test/java/July/tasks/TestDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"package July.tasks;","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"import July.datetime.StringTime;","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":"import July.error.InvalidDeadlineException;","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tieutrongphuc"},"content":"class DeadlineTest {","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tieutrongphuc"},"content":"    @Test","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tieutrongphuc"},"content":"    void testConstructorAndToString() {","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tieutrongphuc"},"content":"        Deadline d \u003d new Deadline(\"submit report\", \"01/09/2025 18:00\");","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tieutrongphuc"},"content":"        assertEquals(\"[D][ ] submit report (by: 01 Sep 2025, 18:00)\", d.toString());","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tieutrongphuc"},"content":"    @Test","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"    void testProcessValid() throws InvalidDeadlineException {","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tieutrongphuc"},"content":"        Deadline d \u003d Deadline.process(\"finish homework /by 02/09/2025 12:00\");","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tieutrongphuc"},"content":"        assertEquals(\"[D][ ] finish homework (by: 02 Sep 2025, 12:00)\", d.toString());","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tieutrongphuc"},"content":"    @Test","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tieutrongphuc"},"content":"    void testProcessInvalid() {","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tieutrongphuc"},"content":"        assertThrows(InvalidDeadlineException.class, () -\u003e {","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tieutrongphuc"},"content":"            Deadline.process(\"finish homework no delimiter\");","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tieutrongphuc"},"content":"        });","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tieutrongphuc"},"content":"    @Test","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tieutrongphuc"},"content":"    void testToSave() {","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tieutrongphuc"},"content":"        Deadline d \u003d new Deadline(\"read book\", \"03/09/2025 09:00\");","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tieutrongphuc"},"content":"        String expected \u003d \"D 0 read book /by 03/09/2025 09:00\";","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tieutrongphuc"},"content":"        assertEquals(expected, d.toSave());","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tieutrongphuc"},"content":"    @Test","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tieutrongphuc"},"content":"    void testCheck1() {","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tieutrongphuc"},"content":"        Deadline d \u003d new Deadline(\"exam\", \"05/09/2025 18:00\");","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tieutrongphuc"},"content":"        StringTime timeEarlier \u003d new StringTime(\"05/09/2025 17:00\");","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tieutrongphuc"},"content":"        StringTime timeSame \u003d new StringTime(\"05/09/2025 18:00\");","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tieutrongphuc"},"content":"        assertTrue(d.check(timeEarlier));","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tieutrongphuc"},"content":"        assertTrue(d.check(timeSame));","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tieutrongphuc"},"content":"    @Test","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tieutrongphuc"},"content":"    void testCheck2() {","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tieutrongphuc"},"content":"        Deadline d \u003d new Deadline(\"exam\", \"05/09/2025 12:00\");","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tieutrongphuc"},"content":"        StringTime timeLater \u003d new StringTime(\"05/09/2025 18:00\");","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tieutrongphuc"},"content":"        assertFalse(d.check(timeLater));","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tieutrongphuc"},"content":"    @Test","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tieutrongphuc"},"content":"    void testCheck3() {","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tieutrongphuc"},"content":"        Deadline d \u003d new Deadline(\"exam\", \"sometime soon\"); // invalid date","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tieutrongphuc"},"content":"        StringTime time \u003d new StringTime(\"05/09/2025 18:00\");","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tieutrongphuc"},"content":"","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tieutrongphuc"},"content":"        assertFalse(d.check(time));","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tieutrongphuc"},"content":"    }","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tieutrongphuc"},"content":"}","lastModifiedDate":"2025-08-30T09:41:44","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":62}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tieutrongphuc"},"content":"todo buy milk","lastModifiedDate":"2025-08-22T11:50:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tieutrongphuc"},"content":"deadline return book /by July 5th","lastModifiedDate":"2025-08-22T11:50:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tieutrongphuc"},"content":"event cs2100 class /from 3pm /to 5pm","lastModifiedDate":"2025-08-22T11:50:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tieutrongphuc"},"content":"mark 1","lastModifiedDate":"2025-08-22T11:50:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tieutrongphuc"},"content":"mark 2","lastModifiedDate":"2025-08-22T11:50:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tieutrongphuc"},"content":"mark 3","lastModifiedDate":"2025-08-22T11:50:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tieutrongphuc"},"content":"unmark 1","lastModifiedDate":"2025-08-22T11:50:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tieutrongphuc"},"content":"bye","lastModifiedDate":"2025-08-22T11:50:33","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tieutrongphuc"},"content":"java -classpath ..\\bin July \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-22T11:50:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"tieutrongphuc":1,"-":20}}]
