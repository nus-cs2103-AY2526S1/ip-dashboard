[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-05T02:21:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"checkstyle {","lastModifiedDate":"2025-09-05T02:21:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-09-05T02:21:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-09-05T02:21:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:21:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"btjm123"},"content":"    mainClass.set(\"benn.Launcher\")","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"btjm123"},"content":"    archiveBaseName \u003d \"benn\"","lastModifiedDate":"2025-08-24T06:47:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"btjm123"},"content":"    archiveFileName \u003d \u0027benn.jar\u0027","lastModifiedDate":"2025-08-25T01:28:59","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"btjm123":23,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"# Benn User Guide","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"Benn is a chatbot built with Java designed to help you to manage your tasks","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"## Features","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"- List all the tasks","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"- Add a task to the list","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"- Mark \u0026 unmark a task","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"- Persist tasks to file on disk","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"- Restore tasks from a file on disk","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"- Delete a task by index","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"- Search for a task using a keyword","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":"## Other stuff to know","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":"- The first word of the input is the command","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"- Available commands","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"    - todo","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"    - deadline","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"    - event","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"    - find","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"    - list","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"    - delete","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"    - mark","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"    - unmark","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"    - help","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"- Benn was built with Java 17","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"## Usage","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"1. Clone the repository","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"git clone https://github.com/btjm123/ip.git","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"2. Build Benn","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"```","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"./gradlew shadowJar","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"btjm123"},"content":"```","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"btjm123"},"content":"3. Run Benn","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"btjm123"},"content":"```","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"btjm123"},"content":"java -jar ./build/libs/benn.jar","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"btjm123"},"content":"```","lastModifiedDate":"2025-09-20T21:45:42","isFullCredit":false}],"authorContributionMap":{"btjm123":40,"-":7}},{"path":"src/main/java/benn/Benn.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"import benn.commands.Command;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"import benn.commands.InitializationCommand;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"import benn.exceptions.BennException;","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"import benn.parser.Parser;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"import benn.tasks.TaskManager;","lastModifiedDate":"2025-08-24T06:37:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":" * Represents a benn.","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":"public class Benn {","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":"    private boolean shouldExit;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"     * Initializes the logic unit behind benn.","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"    public Benn() {","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"        try {","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"            this.taskManager \u003d new TaskManager();","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"        } catch (BennException | IOException exception) {","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"            System.out.println(exception.getMessage());","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"            this.taskManager \u003d null;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"     * Returns the response after executing the command","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"     * associated with the user input.","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"     * @param input User input","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"     * @return Response from execution of the command","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"        String response \u003d command.execute(taskManager);","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"        this.shouldExit \u003d command.shouldExit();","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"btjm123"},"content":"        return response;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"btjm123"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"btjm123"},"content":"        return shouldExit;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"btjm123"},"content":"     * Returns the message for when benn welcomes the user.","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"btjm123"},"content":"     * @return Welcome message in String.","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"btjm123"},"content":"    public String getWelcome() {","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"btjm123"},"content":"        Command command \u003d new InitializationCommand(\"\");","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"btjm123"},"content":"        return command.execute(taskManager);","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false}],"authorContributionMap":{"btjm123":56}},{"path":"src/main/java/benn/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn;","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":" * The main entry point to the application.","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"public class Launcher {","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"     * Entry point main method to the application.","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":"     * @param args Any user arguments passed in","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false}],"authorContributionMap":{"btjm123":18}},{"path":"src/main/java/benn/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn;","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"import benn.ui.MainWindow;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":" * A GUI for Benn using FXML.","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"    private final Benn benn \u003d new Benn();","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"    @Override","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"        try {","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().attachBenn(benn);","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"            stage.show();","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false}],"authorContributionMap":{"btjm123":33}},{"path":"src/main/java/benn/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.commands;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import benn.tasks.TaskManager;","lastModifiedDate":"2025-08-24T06:37:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"import benn.exceptions.BennException;","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"import benn.messages.MessageManager;","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"import benn.patterns.InputPattern;","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"import benn.tasks.Deadline;","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":" * Represents a command that adds a {@link benn.tasks.Deadline} task","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":" * to the {@link benn.tasks.TaskManager}.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eThis command is created when the user input matches the","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":" * {@link benn.patterns.InputPattern#ADD_DEADLINE} regex. It parses","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":" * the task description and due date/time from the input, creates","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":" * a new Deadline task, stores it in the TaskManager, and returns","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":" * a formatted confirmation message.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"     * Constructs a new {@code AddDeadlineCommand} with the raw user input.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"     * @param input the raw user input string that triggered this command","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"    public AddDeadlineCommand(String input) {","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"        this.shouldExit \u003d false;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"     * Executes the command by parsing the description and date/time due","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"     * from the user input, creating a new {@link benn.tasks.Deadline} task,","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"     * adding it to the given {@link benn.tasks.TaskManager}, and returning","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"     * a formatted message for the user.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"     * \u003cp\u003eIf parsing fails or the task cannot be added, an error message","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"btjm123"},"content":"     * is returned instead.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"btjm123"},"content":"     * @param taskManager the {@link benn.tasks.TaskManager} managing the current list of tasks","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"btjm123"},"content":"     * @return a user-facing message indicating success or error","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"btjm123"},"content":"    @Override","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"btjm123"},"content":"    public String execute(TaskManager taskManager) {","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"btjm123"},"content":"        Matcher matcher \u003d InputPattern.ADD_DEADLINE.matcher(input);","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"btjm123"},"content":"        try {","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"btjm123"},"content":"            if (matcher.find()) {","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"btjm123"},"content":"                String description \u003d matcher.group(\"description\");","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"btjm123"},"content":"                String dateTimeDue \u003d matcher.group(\"dateTimeDue\");","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"btjm123"},"content":"                Deadline deadline \u003d taskManager.addDeadline(description, dateTimeDue);","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"btjm123"},"content":"                return MessageManager.retrieveTaskMessageFrom(deadline, taskManager);","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"btjm123"},"content":"            } else {","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"btjm123"},"content":"                throw new BennException(\"Parsing error occurred\");","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"btjm123"},"content":"            }","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"btjm123"},"content":"        } catch (BennException | IOException exception) {","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"btjm123"},"content":"            return MessageManager.retrieveErrorMessageFrom(exception);","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false}],"authorContributionMap":{"btjm123":63}},{"path":"src/main/java/benn/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.commands;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import benn.tasks.TaskManager;","lastModifiedDate":"2025-08-24T06:37:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"import benn.exceptions.BennException;","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"import benn.messages.MessageManager;","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"import benn.patterns.InputPattern;","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"import benn.tasks.Event;","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":" * Represents a command that adds an {@link benn.tasks.Event} task","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":" * to the {@link benn.tasks.TaskManager}.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eThis command is created when the user input matches the","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":" * {@link benn.patterns.InputPattern#ADD_EVENT} regex. It parses","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":" * the task description, start date/time, and end date/time from","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":" * the input, creates a new Event task, stores it in the TaskManager,","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":" * and returns a formatted confirmation message.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"     * Constructs a new {@code AddEventCommand} with the raw user input.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"     * @param input the raw user input string that triggered this command","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"    public AddEventCommand(String input) {","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"        this.shouldExit \u003d false;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"     * Executes the command by parsing the description, start date/time,","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"     * and end date/time from the user input, creating a new","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"     * {@link benn.tasks.Event} task, adding it to the given","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"     * {@link benn.tasks.TaskManager}, and returning a formatted","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"     * message for the user.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"btjm123"},"content":"     * \u003cp\u003eIf parsing fails or the task cannot be added, an error message","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"btjm123"},"content":"     * is returned instead.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"btjm123"},"content":"     * @param taskManager the {@link benn.tasks.TaskManager} managing the current list of tasks","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"btjm123"},"content":"     * @return a user-facing message indicating success or error","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"btjm123"},"content":"    @Override","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"btjm123"},"content":"    public String execute(TaskManager taskManager) {","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"btjm123"},"content":"        Matcher matcher \u003d InputPattern.ADD_EVENT.matcher(input);","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"btjm123"},"content":"        try {","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"btjm123"},"content":"            if (matcher.find()) {","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"btjm123"},"content":"                String description \u003d matcher.group(\"description\");","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"btjm123"},"content":"                String startDateTime \u003d matcher.group(\"startDateTime\");","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"btjm123"},"content":"                String endDateTime \u003d matcher.group(\"endDateTime\");","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"btjm123"},"content":"                Event event \u003d taskManager.addEvent(description, startDateTime, endDateTime);","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"btjm123"},"content":"                return MessageManager.retrieveTaskMessageFrom(event, taskManager);","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"btjm123"},"content":"            } else {","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"btjm123"},"content":"                throw new BennException(\"Parsing error occurred\");","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"btjm123"},"content":"            }","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"btjm123"},"content":"        } catch (BennException | IOException exception) {","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"btjm123"},"content":"            return MessageManager.retrieveErrorMessageFrom(exception);","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false}],"authorContributionMap":{"btjm123":64}},{"path":"src/main/java/benn/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.commands;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import benn.tasks.TaskManager;","lastModifiedDate":"2025-08-24T06:37:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"import benn.exceptions.BennException;","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"import benn.messages.MessageManager;","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"import benn.patterns.InputPattern;","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"import benn.tasks.Todo;","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":" * Represents a command that adds a {@link benn.tasks.Todo} task","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":" * to the {@link benn.tasks.TaskManager}.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eThis command is created when the user input matches the","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":" * {@link benn.patterns.InputPattern#ADD_TODO} regex. It parses","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":" * the task description from the input, creates a new Todo task,","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":" * stores it in the TaskManager, and returns a formatted confirmation","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":" * message.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"     * Constructs a new {@code AddTodoCommand} with the raw user input.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"     * @param input the raw user input string that triggered this command","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"    public AddTodoCommand(String input) {","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"        this.shouldExit \u003d false;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"     * Executes the command by parsing the description from the user input,","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"     * creating a new {@link benn.tasks.Todo} task, adding it to the given","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"     * {@link benn.tasks.TaskManager}, and returning a formatted message","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"     * for the user.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"     * \u003cp\u003eIf parsing fails or the task cannot be added, an error message","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"btjm123"},"content":"     * is returned instead.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"btjm123"},"content":"     * @param taskManager the {@link benn.tasks.TaskManager} managing the current list of tasks","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"btjm123"},"content":"     * @return a user-facing message indicating success or error","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"btjm123"},"content":"    @Override","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"btjm123"},"content":"    public String execute(TaskManager taskManager) {","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"btjm123"},"content":"        Matcher matcher \u003d InputPattern.ADD_TODO.matcher(input);","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"btjm123"},"content":"        try {","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"btjm123"},"content":"            if (matcher.find()) {","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"btjm123"},"content":"                String description \u003d matcher.group(\"description\");","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"btjm123"},"content":"                Todo todo \u003d taskManager.addTodo(description);","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"btjm123"},"content":"                return MessageManager.retrieveTaskMessageFrom(todo, taskManager);","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"btjm123"},"content":"            } else {","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"btjm123"},"content":"                throw new BennException(\"Parsing error occurred\");","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"btjm123"},"content":"            }","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"btjm123"},"content":"        } catch (BennException | IOException exception) {","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"btjm123"},"content":"            return MessageManager.retrieveErrorMessageFrom(exception);","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false}],"authorContributionMap":{"btjm123":61}},{"path":"src/main/java/benn/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.commands;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import benn.tasks.TaskManager;","lastModifiedDate":"2025-08-24T06:37:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":" * Represents an abstract command in Benn the Chatbot.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eAll concrete command classes (e.g., {@code AddTodoCommand},","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":" * {@code AddDeadlineCommand}, {@code ListCommand}, etc.)","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":" * should extend this class and implement the {@link #execute(TaskManager)}","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":" * method to define their behavior.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eEach command stores the raw user input that triggered it","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":" * and a flag indicating whether the chatbot should exit after","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":" * the command is executed.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"public abstract class Command {","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"    protected boolean shouldExit;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"    protected String input;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"     * Executes the logic of the command.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"     * @param taskManager the {@link TaskManager} that manages the list of tasks","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"     * @return a user-facing string message produced by the command","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"    public abstract String execute(TaskManager taskManager);","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"     * Returns whether this command signals the chatbot to exit.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"     * @return {@code true} if the chatbot should exit, {@code false} otherwise","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"        return shouldExit;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false}],"authorContributionMap":{"btjm123":37}},{"path":"src/main/java/benn/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.commands;","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import benn.tasks.TaskManager;","lastModifiedDate":"2025-08-24T06:37:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"import benn.exceptions.BennException;","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"import benn.messages.MessageManager;","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"import benn.patterns.InputPattern;","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"import benn.tasks.Task;","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":" * Represents a command that deletes a {@link benn.tasks.Task} from the","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":" * {@link benn.tasks.TaskManager}.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eThis command is created when the user input matches the","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":" * {@link benn.patterns.InputPattern#DELETE_TASK} regex. It parses the","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":" * index of the task to be deleted, removes the corresponding task from","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":" * the TaskManager, and returns a formatted confirmation message.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"     * Constructs a new {@code DeleteCommand} with the raw user input.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"     * @param input the raw user input string that triggered this command","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"        this.shouldExit \u003d false;","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"     * Executes the command by parsing the index of the task to delete,","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"     * removing that {@link benn.tasks.Task} from the given","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"     * {@link benn.tasks.TaskManager}, and returning a confirmation message.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"     * \u003cp\u003eIf parsing fails, the index is invalid, or the task cannot be","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"     * removed, an error message is returned instead.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"btjm123"},"content":"     * @param taskManager the {@link benn.tasks.TaskManager} managing the current list of tasks","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"btjm123"},"content":"     * @return a user-facing message indicating success or error","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"btjm123"},"content":"    @Override","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"btjm123"},"content":"    public String execute(TaskManager taskManager) {","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"btjm123"},"content":"        Matcher matcher \u003d InputPattern.DELETE_TASK.matcher(input);","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"btjm123"},"content":"        try {","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"btjm123"},"content":"            if (matcher.find()) {","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"btjm123"},"content":"                int index \u003d Integer.parseInt(matcher.group(\"index\"));","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"btjm123"},"content":"                Task task \u003d taskManager.deleteTaskAt(index);","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"btjm123"},"content":"                return MessageManager.retrieveDeletedTaskMessageFrom(task, taskManager);","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"btjm123"},"content":"            } else {","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"btjm123"},"content":"                throw new BennException(\"Parsing error occurred\");","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"btjm123"},"content":"            }","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"btjm123"},"content":"        } catch (NumberFormatException | BennException | IOException exception){","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"btjm123"},"content":"            return MessageManager.retrieveErrorMessageFrom(exception);","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false}],"authorContributionMap":{"btjm123":59}},{"path":"src/main/java/benn/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.commands;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import benn.tasks.TaskManager;","lastModifiedDate":"2025-08-24T06:37:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"import benn.messages.MessageManager;","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":" * Represents a command that terminates Benn the Chatbot.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eThis command is created when the user input matches the","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":" * {@code bye} keyword. When executed, it signals the chatbot to exit","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":" * by setting the {@code shouldExit} flag to {@code true} and returns","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":" * a farewell message.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"     * Constructs a new {@code ExitCommand} with the raw user input.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"     * @param input the raw user input string that triggered this command","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"    public ExitCommand(String input) {","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"        this.shouldExit \u003d true;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"     * Executes the exit command, returning a farewell message","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"     * to the user.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"     * @param taskManager the {@link TaskManager}, unused in this command","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"     * @return a farewell message string","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"    @Override","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"    public String execute(TaskManager taskManager) {","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"        return MessageManager.retrieveByeMessage();","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false}],"authorContributionMap":{"btjm123":37}},{"path":"src/main/java/benn/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.commands;","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import benn.exceptions.BennException;","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"import benn.messages.MessageManager;","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"import benn.patterns.InputPattern;","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"import benn.tasks.Task;","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"import benn.tasks.TaskManager;","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"import java.util.List;","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":" * Represents a command that searches for tasks containing a given keyword","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":" * in their description.","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eThis command is created when the user input matches the","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":" * {@link benn.patterns.InputPattern#FIND_ALL_TASKS_CONTAINING_KEYWORD}","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":" * regex. It extracts the keyword, searches all tasks in the","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":" * {@link benn.tasks.TaskManager}, and returns a formatted message","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":" * with the matching results.\u003c/p\u003e","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"     * Constructs a new {@code FindCommand} with the raw user input.","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"     * @param input the raw user input string that triggered this command","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"        this.shouldExit \u003d false;","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"     * Executes the find command by extracting the keyword from user input,","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"     * retrieving all {@link benn.tasks.Task} instances whose descriptions","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"     * contain that keyword, and returning a formatted message of the results.","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"     * \u003cp\u003eIf parsing fails or an error occurs during execution,","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"     * an error message is returned instead.\u003c/p\u003e","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"btjm123"},"content":"     * @param taskManager the {@link TaskManager} managing the current list of tasks","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"btjm123"},"content":"     * @return a formatted message containing all matching tasks, or an error message","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"btjm123"},"content":"    @Override","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"btjm123"},"content":"    public String execute(TaskManager taskManager) {","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"btjm123"},"content":"        Matcher matcher \u003d InputPattern.FIND_ALL_TASKS_CONTAINING_KEYWORD.matcher(input);","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"btjm123"},"content":"        try {","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"btjm123"},"content":"            if (matcher.find()) {","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"btjm123"},"content":"                String keyword \u003d matcher.group(\"keyword\");","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"btjm123"},"content":"                List\u003cTask\u003e tasks \u003d taskManager.findAllTasksContaining(keyword);","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"btjm123"},"content":"                return MessageManager.retrieveFindMessageFrom(tasks);","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"btjm123"},"content":"            } else {","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"btjm123"},"content":"                throw new BennException(\"Parsing error occurred\");","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"btjm123"},"content":"            }","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"btjm123"},"content":"        } catch (NumberFormatException | BennException exception){","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"btjm123"},"content":"            return MessageManager.retrieveErrorMessageFrom(exception);","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false}],"authorContributionMap":{"btjm123":60}},{"path":"src/main/java/benn/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.commands;","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import benn.tasks.TaskManager;","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"import benn.messages.MessageManager;","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":" * Displays a help/usage message to the user.","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eThis command does not modify the {@link benn.tasks.TaskManager}","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":" * and does not exit the app.\u003c/p\u003e","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":"     * Constructs a new {@code HelpCommand} with the raw user input.","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"     * @param input the raw user input string","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"    public HelpCommand(String input) {","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"        this.shouldExit \u003d false;","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"     * Executes the help command by returning a standardized help message.","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"     * @param taskManager the {@link TaskManager}, unused here","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"     * @return a help/usage message for the user","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"    @Override","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"    public String execute(TaskManager taskManager) {","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"        return MessageManager.retrieveHelpMessage();","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false}],"authorContributionMap":{"btjm123":34}},{"path":"src/main/java/benn/commands/InitializationCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.commands;","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import benn.messages.MessageManager;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"import benn.tasks.TaskManager;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"public class InitializationCommand extends Command {","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"     * Initializes a command that lists all tasks.","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"     * @param input User input.","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"    public InitializationCommand(String input) {","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":"        this.shouldExit \u003d false;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"     * Execution instructions for the command.","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"     * Welcomes the user and shows all current tasks and returns the message for Duke to show.","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"     * @param taskManager TaskManager.","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"     * @return String response of command.","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"    @Override","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"    public String execute(TaskManager taskManager) {","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"        return String.format(\"%s\", MessageManager.retrieveIntroductionMessage());","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false}],"authorContributionMap":{"btjm123":28}},{"path":"src/main/java/benn/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.commands;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import benn.tasks.TaskManager;","lastModifiedDate":"2025-08-24T06:37:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"import benn.messages.MessageManager;","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":" * Represents a command that is created when the user input","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":" * does not match any known or valid command pattern.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eThis command does not alter the state of the","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":" * {@link benn.tasks.TaskManager} and does not cause the chatbot","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":" * to exit. When executed, it simply returns an error message","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":" * indicating that the command was invalid.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"     * Constructs a new {@code InvalidCommand} with the raw user input.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"     * @param input the raw user input string that could not be parsed","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"     *              into a valid command","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"    public InvalidCommand(String input) {","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"        this.shouldExit \u003d false;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"     * Executes the invalid command by returning a standardized","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"     * invalid-command error message to the user.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"     * @param taskManager the {@link TaskManager}, unused in this command","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"     * @return an error message indicating the command was invalid","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"    @Override","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"    public String execute(TaskManager taskManager) {","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"        return MessageManager.retrieveInvalidCommandMessage();","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false}],"authorContributionMap":{"btjm123":39}},{"path":"src/main/java/benn/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.commands;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import benn.tasks.TaskManager;","lastModifiedDate":"2025-08-24T06:37:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"import benn.messages.MessageManager;","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":" * Represents a command that lists all tasks currently stored","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":" * in the {@link benn.tasks.TaskManager}.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eThis command is created when the user input matches the","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":" * {@code list} keyword. When executed, it retrieves the current","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":" * tasks from the TaskManager and formats them into a user-facing","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":" * message. This command does not modify the task list and does","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":" * not signal the chatbot to exit.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"     * Constructs a new {@code ListCommand} with the raw user input.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"     * @param input the raw user input string that triggered this command","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"    public ListCommand(String input) {","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"        this.shouldExit \u003d false;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"     * Executes the list command by retrieving all tasks from","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"     * the {@link benn.tasks.TaskManager} and formatting them","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"     * into a user-facing message.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"     * @param taskManager the {@link TaskManager} containing the tasks","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"     * @return a formatted string containing the list of tasks","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"    @Override","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"    public String execute(TaskManager taskManager) {","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"        return MessageManager.retrieveListMessageFrom(taskManager);","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false}],"authorContributionMap":{"btjm123":40}},{"path":"src/main/java/benn/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.commands;","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import benn.tasks.TaskManager;","lastModifiedDate":"2025-08-24T06:37:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"import benn.exceptions.BennException;","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"import benn.messages.MessageManager;","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"import benn.patterns.InputPattern;","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"import benn.tasks.Task;","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":" * Represents a command that marks a {@link benn.tasks.Task} as completed","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":" * in the {@link benn.tasks.TaskManager}.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eThis command is created when the user input matches the","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":" * {@link benn.patterns.InputPattern#MARK_TASK} regex. It parses the index","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":" * of the task to be marked, updates the task’s status to done, and","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":" * returns a formatted confirmation message.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"     * Constructs a new {@code MarkCommand} with the raw user input.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"     * @param input the raw user input string that triggered this command","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"        this.shouldExit \u003d false;","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"     * Executes the mark command by parsing the index of the task to mark,","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"     * updating the {@link benn.tasks.Task} in the {@link benn.tasks.TaskManager}","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"     * to a done state, and returning a confirmation message.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"     * \u003cp\u003eIf parsing fails, the index is invalid, or the update fails,","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"     * an error message is returned instead.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"btjm123"},"content":"     * @param taskManager the {@link TaskManager} managing the current list of tasks","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"btjm123"},"content":"     * @return a user-facing message indicating success or error","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"btjm123"},"content":"    @Override","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"btjm123"},"content":"    public String execute(TaskManager taskManager) {","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"btjm123"},"content":"        Matcher matcher \u003d InputPattern.MARK_TASK.matcher(input);","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"btjm123"},"content":"        try {","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"btjm123"},"content":"            if (matcher.find()) {","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"btjm123"},"content":"                int index \u003d Integer.parseInt(matcher.group(\"index\"));","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"btjm123"},"content":"                Task task \u003d taskManager.markAsDone(index);","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"btjm123"},"content":"                return MessageManager.retrieveMarkTaskAsDoneMessageFrom(task);","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"btjm123"},"content":"            } else {","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"btjm123"},"content":"                throw new BennException(\"Parsing error occurred\");","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"btjm123"},"content":"            }","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"btjm123"},"content":"        } catch (NumberFormatException | BennException | IOException exception){","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"btjm123"},"content":"            return MessageManager.retrieveErrorMessageFrom(exception);","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false}],"authorContributionMap":{"btjm123":59}},{"path":"src/main/java/benn/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.commands;","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import benn.tasks.TaskManager;","lastModifiedDate":"2025-08-24T06:37:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"import benn.exceptions.BennException;","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"import benn.messages.MessageManager;","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"import benn.patterns.InputPattern;","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"import benn.tasks.Task;","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":" * Represents a command that marks a {@link benn.tasks.Task} as not completed","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":" * in the {@link benn.tasks.TaskManager}.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eThis command is created when the user input matches the","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":" * {@link benn.patterns.InputPattern#UNMARK_TASK} regex. It parses the index","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":" * of the task to be unmarked, updates the task’s status to not done, and","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":" * returns a formatted confirmation message.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"public class UnmarkCommand extends Command{","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"     * Constructs a new {@code UnmarkCommand} with the raw user input.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"     * @param input the raw user input string that triggered this command","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"        this.shouldExit \u003d false;","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"     * Executes the unmark command by parsing the index of the task to unmark,","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"     * updating the {@link benn.tasks.Task} in the {@link benn.tasks.TaskManager}","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"     * to a not-done state, and returning a confirmation message.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"     * \u003cp\u003eIf parsing fails, the index is invalid, or the update fails,","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"     * an error message is returned instead.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"btjm123"},"content":"     * @param taskManager the {@link TaskManager} managing the current list of tasks","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"btjm123"},"content":"     * @return a user-facing message indicating success or error","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"btjm123"},"content":"    @Override","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"btjm123"},"content":"    public String execute(TaskManager taskManager) {","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"btjm123"},"content":"        Matcher matcher \u003d InputPattern.UNMARK_TASK.matcher(input);","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"btjm123"},"content":"        try {","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"btjm123"},"content":"            if (matcher.find()) {","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"btjm123"},"content":"                int index \u003d Integer.parseInt(matcher.group(\"index\"));","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"btjm123"},"content":"                Task task \u003d taskManager.unmarkAsDone(index);","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"btjm123"},"content":"                return MessageManager.retrieveUnmarkTaskAsDoneMessageFrom(task);","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"btjm123"},"content":"            } else {","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"btjm123"},"content":"                throw new BennException(\"Parsing error occurred\");","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"btjm123"},"content":"            }","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"btjm123"},"content":"        } catch (NumberFormatException | BennException | IOException exception){","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"btjm123"},"content":"            return MessageManager.retrieveErrorMessageFrom(exception);","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false}],"authorContributionMap":{"btjm123":59}},{"path":"src/main/java/benn/exceptions/BennException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.exceptions;","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":" * Represents a custom checked exception used in Benn the Chatbot.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eThis exception is thrown when an error specific to the chatbot occurs,","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":" * such as invalid user input, parsing errors, or issues while modifying tasks.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":" * It extends {@link Exception} so that it must be explicitly handled or declared.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"public class BennException extends Exception {","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":"     * Constructs a new {@code BennException} with the specified detail message.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":"     * @param message the detail message describing the cause of the exception","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"    public BennException(String message) {","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"        super(message);","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"     * Returns the detail message string of this exception, with additional","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"     * context indicating that the error was raised in Benn the Chatbot.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"     * @return the formatted detail message string","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"    @Override","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"    public String getMessage() {","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"        return String.format(\"%s Error raised with Benn the Chatbot; please try again!\", super.getMessage());","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false}],"authorContributionMap":{"btjm123":31}},{"path":"src/main/java/benn/messages/MessageManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.messages;","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import benn.tasks.TaskManager;","lastModifiedDate":"2025-08-24T06:37:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"import benn.tasks.Task;","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"import java.util.List;","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":" * Utility class that manages all user-facing messages in Benn the Chatbot.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eThis class provides static helper methods to construct consistent,","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":" * formatted strings for various chatbot interactions, such as greeting","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":" * the user, listing tasks, confirming task modifications, and reporting","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":" * errors. By centralizing message formatting here, the rest of the","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":" * application can focus on logic while ensuring a uniform user interface.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"public class MessageManager {","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"     * Returns the introduction message, including the ASCII logo","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"     * and a greeting to the user.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"     * @return the chatbot\u0027s introduction message","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"    public static String retrieveIntroductionMessage() {","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"        String logo \u003d","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"                \" ____                      _  _  _\\n\" +","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"                        \"| __ )  ___ _ __  _ __   _| || || |\\n\" +","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"                        \"|  _ \\\\ / _ \\\\ \u0027_ \\\\| \u0027_ \\\\ / _` || || |\\n\" +","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"                        \"| |_) |  __/ | | | | | | (_| || || |\\n\" +","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"                        \"|____/ \\\\___|_| |_|_| |_|\\\\__,_||_||_|\\n\";","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"        return logo","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"                + \"____________________________________________________________\\n\"","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"                + \"Hello! I\u0027m BENN\\n\"","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"                + \"____________________________________________________________\";","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"btjm123"},"content":"     * Returns a confirmation message after adding a new task.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"btjm123"},"content":"     * @param task the task that was added","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"btjm123"},"content":"     * @param taskManager the task manager holding the updated list","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"btjm123"},"content":"     * @return a formatted string confirming the addition","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"btjm123"},"content":"    public static String retrieveTaskMessageFrom(Task task, TaskManager taskManager) {","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"btjm123"},"content":"        return \"____________________________________________________________\\n\"","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"btjm123"},"content":"                + \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"btjm123"},"content":"                + \"   \" + task + \"\\n\"","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"btjm123"},"content":"                + \"Now you have \" + taskManager.size() + \" tasks in the list.\\n\"","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"btjm123"},"content":"                + \"____________________________________________________________\";","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"btjm123"},"content":"     * Returns the message that lists all tasks currently managed","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"btjm123"},"content":"     * by the {@link TaskManager}.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"btjm123"},"content":"     * @param taskManager the task manager containing the tasks","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"btjm123"},"content":"     * @return a formatted string containing the task list","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"btjm123"},"content":"    public static String retrieveListMessageFrom(TaskManager taskManager) {","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"btjm123"},"content":"        return \"____________________________________________________________\\n\"","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"btjm123"},"content":"                + taskManager","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"btjm123"},"content":"                + \"____________________________________________________________\";","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"btjm123"},"content":"     * Returns the farewell message displayed when the chatbot exits.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"btjm123"},"content":"     * @return the exit message","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"btjm123"},"content":"    public static String retrieveByeMessage() {","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"btjm123"},"content":"        return \"____________________________________________________________\\n\"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"btjm123"},"content":"                + \"bye, hope to see you soon!\\n\"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"btjm123"},"content":"                + \"____________________________________________________________\";","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"btjm123"},"content":"     * Returns the message displayed when the user enters an","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"btjm123"},"content":"     * invalid command.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"btjm123"},"content":"     * @return the invalid command error message","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"btjm123"},"content":"    public static String retrieveInvalidCommandMessage() {","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"btjm123"},"content":"        return \"____________________________________________________________\\n\"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"btjm123"},"content":"                + \"invalid command, please try again!\\n\"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"btjm123"},"content":"                + \"____________________________________________________________\";","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"btjm123"},"content":"     * Returns a confirmation message after marking a task as done.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"btjm123"},"content":"     * @param task the task that was marked as done","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"btjm123"},"content":"     * @return a formatted string confirming the operation","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"btjm123"},"content":"    public static String retrieveMarkTaskAsDoneMessageFrom(Task task) {","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"btjm123"},"content":"        return \"____________________________________________________________\\n\"","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"btjm123"},"content":"                + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"btjm123"},"content":"                + task + \"\\n\"","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"btjm123"},"content":"                + \"____________________________________________________________\";","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"btjm123"},"content":"     * Returns a confirmation message after unmarking a task as done.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"btjm123"},"content":"     * @param task the task that was unmarked","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"btjm123"},"content":"     * @return a formatted string confirming the operation","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"btjm123"},"content":"    public static String retrieveUnmarkTaskAsDoneMessageFrom(Task task) {","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"btjm123"},"content":"        return \"____________________________________________________________\\n\"","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"btjm123"},"content":"                + \"Nice! I\u0027ve unmarked this task as done:\\n\"","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"btjm123"},"content":"                + task + \"\\n\"","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"btjm123"},"content":"                + \"____________________________________________________________\";","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"btjm123"},"content":"     * Returns a confirmation message after deleting a task.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"btjm123"},"content":"     * @param task the task that was deleted","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"btjm123"},"content":"     * @param taskManager the task manager holding the updated list","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"btjm123"},"content":"     * @return a formatted string confirming the deletion","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"btjm123"},"content":"    public static String retrieveDeletedTaskMessageFrom(Task task, TaskManager taskManager) {","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"btjm123"},"content":"        return \"____________________________________________________________\\n\"","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"btjm123"},"content":"                + \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"btjm123"},"content":"                + task + \"\\n\"","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"btjm123"},"content":"                + \"Now you have \" + taskManager.size() + \" tasks in the list.\\n\"","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"btjm123"},"content":"                + \"____________________________________________________________\";","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"btjm123"},"content":"     * Returns a formatted message displaying all tasks that match a search keyword.","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"btjm123"},"content":"     * \u003cp\u003eIf the provided list of tasks is empty, a placeholder message indicating","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"btjm123"},"content":"     * no matches is included. Otherwise, each task is displayed with its","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"btjm123"},"content":"     * 1-based index and formatted string representation.\u003c/p\u003e","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"btjm123"},"content":"     * \u003cp\u003eThe message is enclosed within divider lines for consistency with","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"btjm123"},"content":"     * other chatbot outputs.\u003c/p\u003e","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"btjm123"},"content":"     * @param matches the list of tasks whose descriptions matched the keyword","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"btjm123"},"content":"     * @return a formatted string containing the search results or a no-matches notice","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"btjm123"},"content":"    public static String retrieveFindMessageFrom(List\u003cTask\u003e matches) {","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"btjm123"},"content":"        String result \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"btjm123"},"content":"        result +\u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"btjm123"},"content":"        if (matches.isEmpty()) {","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"btjm123"},"content":"            result +\u003d \"(no matching tasks)\\n\";","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"btjm123"},"content":"        } else {","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"btjm123"},"content":"            for (int i \u003d 0; i \u003c matches.size(); i++) {","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"btjm123"},"content":"                result +\u003d (i + 1) + \".\" + matches.get(i) + \"\\n\";","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"btjm123"},"content":"            }","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"btjm123"},"content":"        result +\u003d \"____________________________________________________________\";","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"btjm123"},"content":"        return result;","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"btjm123"},"content":"     * Returns a message that displays an error reported","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"btjm123"},"content":"     * by an {@link Exception}.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"btjm123"},"content":"     * @param exception the exception that caused the error","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"btjm123"},"content":"     * @return a formatted error message string","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"btjm123"},"content":"    public static String retrieveErrorMessageFrom(Exception exception) {","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"btjm123"},"content":"        return \"____________________________________________________________\\n\"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"btjm123"},"content":"                + exception.getMessage() + \"\\n\"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"btjm123"},"content":"                + \"____________________________________________________________\";","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"btjm123"},"content":"     * Returns a message that displays usage help for the user.","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"btjm123"},"content":"     * @return a formatted help message string","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"btjm123"},"content":"    public static String retrieveHelpMessage() {","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"btjm123"},"content":"        return \"____________________________________________________________\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"btjm123"},"content":"                + \"Here are the available commands:\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"btjm123"},"content":"                + \"\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"btjm123"},"content":"                + \"  list\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"btjm123"},"content":"                + \"      Show all tasks in the list.\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"btjm123"},"content":"                + \"\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"btjm123"},"content":"                + \"  todo DESCRIPTION\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"btjm123"},"content":"                + \"      Add a todo task.\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"btjm123"},"content":"                + \"\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"btjm123"},"content":"                + \"  deadline DESCRIPTION /by DD/MM/YYYY HH:MM\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"btjm123"},"content":"                + \"      Add a deadline task.\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"btjm123"},"content":"                + \"      Example: deadline submit report /by 25/12/2025 23:59\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"btjm123"},"content":"                + \"\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"btjm123"},"content":"                + \"  event DESCRIPTION /from DD/MM/YYYY HH:MM /to DD/MM/YYYY HH:MM\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"btjm123"},"content":"                + \"      Add an event task.\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"btjm123"},"content":"                + \"      Example: event project meeting /from 20/09/2025 14:00 /to 20/09/2025 16:00\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"btjm123"},"content":"                + \"\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"btjm123"},"content":"                + \"  mark INDEX\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"btjm123"},"content":"                + \"      Mark the task at INDEX (1-indexed) as done.\\n\"","lastModifiedDate":"2025-09-20T21:37:30","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"btjm123"},"content":"                + \"\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"btjm123"},"content":"                + \"  unmark INDEX\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"btjm123"},"content":"                + \"      Mark the task at INDEX (1-indexed) as not done.\\n\"","lastModifiedDate":"2025-09-20T21:37:30","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"btjm123"},"content":"                + \"\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"btjm123"},"content":"                + \"  delete INDEX\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"btjm123"},"content":"                + \"      Delete the task at INDEX (1-indexed).\\n\"","lastModifiedDate":"2025-09-20T21:37:30","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"btjm123"},"content":"                + \"\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"btjm123"},"content":"                + \"  find KEYWORD\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"btjm123"},"content":"                + \"      Find all tasks containing KEYWORD.\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"btjm123"},"content":"                + \"\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"btjm123"},"content":"                + \"  bye\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"btjm123"},"content":"                + \"      Exit the program.\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"btjm123"},"content":"                + \"\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"btjm123"},"content":"                + \"  help\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"btjm123"},"content":"                + \"      Show this help message.\\n\"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"btjm123"},"content":"                + \"____________________________________________________________\";","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false}],"authorContributionMap":{"btjm123":220}},{"path":"src/main/java/benn/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.parser;","lastModifiedDate":"2025-08-24T06:37:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import benn.commands.*;","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"import benn.patterns.InputPattern;","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":" * Parses raw user input strings and converts them into executable {@link benn.commands.Command} objects.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eThe {@code Parser} class is responsible for matching user input against","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":" * predefined command patterns (defined in {@link benn.patterns.InputPattern}) and","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":" * creating the corresponding command object. If the input does not match any","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":" * known command, an {@link benn.commands.InvalidCommand} is returned instead.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":"public class Parser {","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"     * Parses the given raw input string and returns a corresponding {@link benn.commands.Command}.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"     * \u003cp\u003eThis method checks the input against various regex patterns in","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"     * {@link benn.patterns.InputPattern}, in the following order:\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"     *     \u003cli\u003e{@code todo} → {@link benn.commands.AddTodoCommand}\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"     *     \u003cli\u003e{@code deadline} → {@link benn.commands.AddDeadlineCommand}\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"     *     \u003cli\u003e{@code event} → {@link benn.commands.AddEventCommand}\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"     *     \u003cli\u003e{@code list} → {@link benn.commands.ListCommand}\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"     *     \u003cli\u003e{@code mark} → {@link benn.commands.MarkCommand}\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"     *     \u003cli\u003e{@code unmark} → {@link benn.commands.UnmarkCommand}\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"     *     \u003cli\u003e{@code delete} → {@link benn.commands.DeleteCommand}\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"     *     \u003cli\u003e{@code bye} → {@link benn.commands.ExitCommand}\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"     * \u003cp\u003eIf none of the patterns match, an {@link benn.commands.InvalidCommand} is returned.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"     * @param input the raw user input string to be parsed","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"     * @return a {@link benn.commands.Command} object corresponding to the input","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"        if (InputPattern.ADD_TODO.matcher(input).matches()) {","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"            return new AddTodoCommand(input);","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"        } else if (InputPattern.ADD_DEADLINE.matcher(input).matches()) {","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"btjm123"},"content":"            return new AddDeadlineCommand(input);","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"btjm123"},"content":"        } else if (InputPattern.ADD_EVENT.matcher(input).matches()) {","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"btjm123"},"content":"            return new AddEventCommand(input);","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"btjm123"},"content":"        } else if (InputPattern.LIST.matcher(input).matches()) {","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"btjm123"},"content":"            return new ListCommand(input);","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"btjm123"},"content":"        } else if (InputPattern.MARK_TASK.matcher(input).matches()) {","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"btjm123"},"content":"            return new MarkCommand(input);","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"btjm123"},"content":"        } else if (InputPattern.UNMARK_TASK.matcher(input).matches()) {","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"btjm123"},"content":"            return new UnmarkCommand(input);","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"btjm123"},"content":"        } else if (InputPattern.DELETE_TASK.matcher(input).matches()) {","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"btjm123"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"btjm123"},"content":"        } else if (InputPattern.FIND_ALL_TASKS_CONTAINING_KEYWORD.matcher(input).matches()) {","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"btjm123"},"content":"            return new FindCommand(input);","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"btjm123"},"content":"        } else if (InputPattern.HELP.matcher(input).matches()) {","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"btjm123"},"content":"            return new HelpCommand(input);","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"btjm123"},"content":"        } else if (InputPattern.BYE.matcher(input).matches()) {","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"btjm123"},"content":"            return new ExitCommand(input);","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"btjm123"},"content":"        } else {","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"btjm123"},"content":"            return new InvalidCommand(input);","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false}],"authorContributionMap":{"btjm123":63}},{"path":"src/main/java/benn/patterns/InputPattern.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.patterns;","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":" * Defines the regular expression patterns used to parse user commands","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":" * in Benn the Chatbot.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eEach {@code Pattern} corresponds to a specific command keyword,","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":" * and is used by the {@link benn.parser.Parser} to recognize valid input","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":" * and extract relevant arguments such as task descriptions, indices,","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":" * and date/time values.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eThe supported commands are:\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":" *   \u003cli\u003e\u003cb\u003elist\u003c/b\u003e — {@link #LIST}\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":" *   \u003cli\u003e\u003cb\u003etodo\u003c/b\u003e — {@link #ADD_TODO}\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":" *   \u003cli\u003e\u003cb\u003edeadline\u003c/b\u003e — {@link #ADD_DEADLINE}\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":" *   \u003cli\u003e\u003cb\u003eevent\u003c/b\u003e — {@link #ADD_EVENT}\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":" *   \u003cli\u003e\u003cb\u003emark\u003c/b\u003e — {@link #MARK_TASK}\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":" *   \u003cli\u003e\u003cb\u003eunmark\u003c/b\u003e — {@link #UNMARK_TASK}\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":" *   \u003cli\u003e\u003cb\u003edelete\u003c/b\u003e — {@link #DELETE_TASK}\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":" *   \u003cli\u003e\u003cb\u003ebye\u003c/b\u003e — {@link #BYE}\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eDate and time values are validated against strict formats:","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":" *   \u003cli\u003eDate: {@code dd/MM/yyyy}\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":" *   \u003cli\u003eTime: {@code HH:mm} (24-hour)\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":" *   \u003cli\u003eDatetime: {@code dd/MM/yyyy HH:mm}\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":" * For example: {@code 12/12/2069 14:50}\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"public final class InputPattern {","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"    private static final String DATE \u003d \"(?:0[1-9]|[12][0-9]|3[01])/(?:0[1-9]|1[0-2])/\\\\d{4}\";","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"    private static final String TIME \u003d \"(?:[01]\\\\d|2[0-3]):[0-5]\\\\d\";","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"    private static final String DATETIME \u003d DATE + \"\\\\s+\" + TIME;","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"    public static final Pattern LIST \u003d Pattern.compile(\"(?i)^\\\\s*list\\\\s*$\");","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"    public static final Pattern ADD_TODO \u003d Pattern.compile(\"(?i)^\\\\s*todo\\\\s+(?\u003cdescription\u003e.+)\\\\s*$\");","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"btjm123"},"content":"    public static final Pattern ADD_DEADLINE \u003d Pattern.compile(\"(?i)^\\\\s*deadline\\\\s+(?\u003cdescription\u003e.+?)\\\\s*/by\\\\s+(?\u003cdateTimeDue\u003e\" + DATETIME + \")\\\\s*$\");","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"btjm123"},"content":"    public static final Pattern ADD_EVENT \u003d Pattern.compile(\"(?i)^\\\\s*event\\\\s+(?\u003cdescription\u003e.+?)\\\\s*/from\\\\s+(?\u003cstartDateTime\u003e\" + DATETIME + \")\\\\s*/to\\\\s+(?\u003cendDateTime\u003e\" + DATETIME + \")\\\\s*$\");","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"btjm123"},"content":"    public static final Pattern MARK_TASK \u003d Pattern.compile(\"(?i)^\\\\s*mark\\\\s+(?\u003cindex\u003e\\\\d+)\\\\s*$\");","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"btjm123"},"content":"    public static final Pattern UNMARK_TASK \u003d Pattern.compile(\"(?i)^\\\\s*unmark\\\\s+(?\u003cindex\u003e\\\\d+)\\\\s*$\");","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"btjm123"},"content":"    public static final Pattern DELETE_TASK \u003d Pattern.compile(\"(?i)^\\\\s*delete\\\\s+(?\u003cindex\u003e\\\\d+)\\\\s*$\");","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"btjm123"},"content":"    public static final Pattern FIND_ALL_TASKS_CONTAINING_KEYWORD \u003d Pattern.compile(\"(?i)^\\\\s*find\\\\s+(?\u003ckeyword\u003e(?!\\\\s*$).+)\\\\s*$\");","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"btjm123"},"content":"    public static final Pattern HELP \u003d Pattern.compile(\"^help$\");","lastModifiedDate":"2025-09-12T10:09:27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"btjm123"},"content":"    public static final Pattern BYE \u003d Pattern.compile(\"(?i)^\\\\s*bye\\\\s*$\");","lastModifiedDate":"2025-08-21T09:43:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false}],"authorContributionMap":{"btjm123":51}},{"path":"src/main/java/benn/patterns/TaskStoragePattern.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.patterns;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":" * Defines the regular expression patterns used to parse tasks","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":" * that have been saved to and loaded from persistent storage.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eEach {@code Pattern} corresponds to a specific task type","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":" * (Todo, Deadline, or Event). These patterns are used by the","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":" * storage layer to deserialize lines in the save file back into","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":" * {@link benn.tasks.Task} objects.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eThe expected storage formats are pipe-delimited:\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":" *   \u003cli\u003e\u003cb\u003eTodo\u003c/b\u003e: {@code T | \u003cdone\u003e | \u003cdescription\u003e}\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":" *   \u003cli\u003e\u003cb\u003eDeadline\u003c/b\u003e: {@code D | \u003cdone\u003e | \u003cdescription\u003e | \u003cby\u003e}\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":" *   \u003cli\u003e\u003cb\u003eEvent\u003c/b\u003e: {@code E | \u003cdone\u003e | \u003cdescription\u003e | \u003cfrom\u003e | \u003cto\u003e}\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eWhere:\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":" *   \u003cli\u003e{@code \u003cdone\u003e} is {@code 1} if the task is marked as completed, {@code 0} otherwise\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":" *   \u003cli\u003e{@code \u003cdescription\u003e} is the task description\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":" *   \u003cli\u003e{@code \u003cby\u003e} is the due date/time for a deadline task (in storage format, typically {@code dd/MM/yyyyTHH:mm})\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":" *   \u003cli\u003e{@code \u003cfrom\u003e} and {@code \u003cto\u003e} are the start and end date/times for an event task\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"public final class TaskStoragePattern {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"    public static final Pattern TODO \u003d Pattern.compile(\"^\\\\s*T\\\\s*\\\\|\\\\s*(?\u003cdone\u003e[01])\\\\s*\\\\|\\\\s*(?\u003cdescription\u003e[^|]+)\\\\s*$\");","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"    public static final Pattern DEADLINE \u003d Pattern.compile(\"^\\\\s*D\\\\s*\\\\|\\\\s*(?\u003cdone\u003e[01])\\\\s*\\\\|\\\\s*(?\u003cdescription\u003e[^|]+)\\\\s*\\\\|\\\\s*(?\u003cby\u003e[^|]+)\\\\s*$\");","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"    public static final Pattern EVENT \u003d Pattern.compile(\"^\\\\s*E\\\\s*\\\\|\\\\s*(?\u003cdone\u003e[01])\\\\s*\\\\|\\\\s*(?\u003cdescription\u003e[^|]+)\\\\s*\\\\|\\\\s*(?\u003cfrom\u003e[^|]+)\\\\s*\\\\|\\\\s*(?\u003cto\u003e[^|]+)\\\\s*$\");","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false}],"authorContributionMap":{"btjm123":34}},{"path":"src/main/java/benn/storage/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.storage;","lastModifiedDate":"2025-08-24T06:37:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import benn.exceptions.BennException;","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"import benn.patterns.TaskStoragePattern;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"import benn.tasks.Deadline;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"import benn.tasks.Event;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"import benn.tasks.Task;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"import benn.tasks.Todo;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-12T09:30:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"import java.io.File;","lastModifiedDate":"2025-09-12T09:30:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-09-12T09:30:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2025-09-12T09:30:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":"import java.util.List;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":" * Handles the persistent storage of tasks in Benn the Chatbot.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eThe {@code TaskStorage} class is responsible for loading tasks","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":" * from a save file at startup, writing tasks to disk whenever the","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":" * task list changes, and providing helper methods to add, remove,","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":" * or retrieve tasks. The storage format is line-based, with each","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":" * line describing a single task in a pipe-delimited form defined","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":" * by {@link benn.patterns.TaskStoragePattern}.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eThe save file is stored at {@code ./temporary_datastore/tasks.txt}.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":" * If the file or its parent directory does not exist, they will be","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":" * created automatically. If the path points to a directory instead of","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":" * a file, a {@link benn.exceptions.BennException} is thrown.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"public class TaskStorage {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"    private static final String TASK_STORAGE_PATH \u003d \"./temporary_datastore/tasks.txt\";","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"btjm123"},"content":"    private TaskStorage(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"btjm123"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"btjm123"},"content":"     * Initializes the storage system. Loads tasks if the save file already","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"btjm123"},"content":"     * exists, or creates a new save file otherwise.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"btjm123"},"content":"     * @return a {@code TaskStorage} object representing the loaded or new state","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"btjm123"},"content":"     * @throws IOException if the file cannot be created or accessed","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"btjm123"},"content":"     * @throws BennException if the path is invalid (e.g. a directory instead of a file)","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"btjm123"},"content":"    public static TaskStorage start() throws IOException, BennException {","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"btjm123"},"content":"        File taskStorage \u003d new File(TASK_STORAGE_PATH);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"btjm123"},"content":"        if (taskStorage.isDirectory()) {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"btjm123"},"content":"            throw new BennException(\"Directory detected, can\u0027t create task storage file!\");","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"btjm123"},"content":"        } else if (taskStorage.exists() \u0026\u0026 taskStorage.isFile()) {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"btjm123"},"content":"            return TaskStorage.loadFromExisting(taskStorage);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"btjm123"},"content":"        } else {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"btjm123"},"content":"            return TaskStorage.createNew(taskStorage);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"btjm123"},"content":"     * Adds a task to the in-memory list and persists the updated list to disk.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"btjm123"},"content":"     * @param task the task to add","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"btjm123"},"content":"     * @throws IOException if writing to the save file fails","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"btjm123"},"content":"    public void add(Task task) throws IOException {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"btjm123"},"content":"        this.tasks.add(task);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"btjm123"},"content":"        this.flush();","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"btjm123"},"content":"     * Retrieves the task at the specified index in the in-memory list.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"btjm123"},"content":"     * @param index the index of the task (0-based)","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"btjm123"},"content":"     * @return the task at the specified index","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"btjm123"},"content":"    public Task getTaskLocatedAt(int index) {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"btjm123"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c this.tasks.size()","lastModifiedDate":"2025-09-12T09:45:24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"btjm123"},"content":"                : \"TaskStorage.getTaskLocatedAt: index out of bounds\";","lastModifiedDate":"2025-09-12T09:45:24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"btjm123"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"btjm123"},"content":"     * Removes the task at the specified index, persists the updated list","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"btjm123"},"content":"     * to disk, and returns the removed task.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"btjm123"},"content":"     * @param index the index of the task (0-based)","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"btjm123"},"content":"     * @return the removed task","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"btjm123"},"content":"     * @throws IOException if writing to the save file fails","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"btjm123"},"content":"    public Task removeTaskLocatedAt(int index) throws IOException {","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"btjm123"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c this.tasks.size()","lastModifiedDate":"2025-09-12T09:45:24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"btjm123"},"content":"                : \"TaskStorage.removeTaskLocatedAt: index out of bounds\";","lastModifiedDate":"2025-09-12T09:45:24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"btjm123"},"content":"        Task task \u003d this.tasks.remove(index);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"btjm123"},"content":"        this.flush();","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"btjm123"},"content":"        return task;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"btjm123"},"content":"     * Finds all tasks whose descriptions contain the given keyword.","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"btjm123"},"content":"     * \u003cp\u003eThe search is case-sensitive and will return tasks in the order","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"btjm123"},"content":"     * they are currently stored. If no tasks match, an empty list is returned.\u003c/p\u003e","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"btjm123"},"content":"     * @param keyword the keyword to search for in task descriptions","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"btjm123"},"content":"     * @return a list of {@link benn.tasks.Task} objects whose descriptions","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"btjm123"},"content":"     *         contain the keyword; the list may be empty if no matches are found","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"btjm123"},"content":"    public List\u003cTask\u003e findAllTasksContaining(String keyword) {","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"btjm123"},"content":"        assert keyword !\u003d null : \"TaskStorage.findAllTasksContaining: keyword must not be null\";","lastModifiedDate":"2025-09-12T09:45:24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"btjm123"},"content":"        return this.tasks.stream()","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"btjm123"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"btjm123"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"btjm123"},"content":"     * Returns the number of tasks currently stored in memory.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"btjm123"},"content":"     * @return the number of tasks","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"btjm123"},"content":"    public int getTaskCount() {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"btjm123"},"content":"        return this.tasks.size();","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"btjm123"},"content":"     * Creates a new storage file at the specified location,","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"btjm123"},"content":"     * along with any required parent directories.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"btjm123"},"content":"     * @param file the file to create","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"btjm123"},"content":"     * @return a {@code TaskStorage} initialized with an empty task list","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"btjm123"},"content":"     * @throws IOException if the file cannot be created","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"btjm123"},"content":"    private static TaskStorage createNew(File file) throws IOException {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"btjm123"},"content":"        File parent \u003d file.getParentFile();","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"btjm123"},"content":"        parent.mkdirs();","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"btjm123"},"content":"        file.createNewFile();","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"btjm123"},"content":"        return new TaskStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"btjm123"},"content":"     * Loads tasks from an existing storage file by parsing each line.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"btjm123"},"content":"     * @param file the file to load tasks from","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"btjm123"},"content":"     * @return a {@code TaskStorage} initialized with the loaded tasks","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"btjm123"},"content":"     * @throws IOException if the file cannot be read","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"btjm123"},"content":"     * @throws BennException if a line in the file cannot be parsed","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"btjm123"},"content":"    private static TaskStorage loadFromExisting(File file) throws IOException, BennException {","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"btjm123"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"btjm123"},"content":"        try (FileInputStream fis \u003d new FileInputStream(file);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"btjm123"},"content":"             Scanner scanner \u003d new Scanner(fis, java.nio.charset.StandardCharsets.UTF_8)) {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"btjm123"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"btjm123"},"content":"                String line \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"btjm123"},"content":"                Task task \u003d parseLine(line);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"btjm123"},"content":"                taskList.add(task);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"btjm123"},"content":"            }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"btjm123"},"content":"        return new TaskStorage(taskList);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"btjm123"},"content":"     * Writes all tasks from memory to the storage file,","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"btjm123"},"content":"     * overwriting the previous contents.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"btjm123"},"content":"     * @throws IOException if writing to the save file fails","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"btjm123"},"content":"    public void flush() throws IOException {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"btjm123"},"content":"        List\u003cString\u003e lines \u003d this.tasks.stream()","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"btjm123"},"content":"                .map(Task::toStorageFormat)","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"btjm123"},"content":"                .toList();","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"btjm123"},"content":"        try (FileWriter writer \u003d new FileWriter(TASK_STORAGE_PATH, false)) {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"btjm123"},"content":"            for (String line : lines) {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"btjm123"},"content":"                writer.write(line);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"btjm123"},"content":"                writer.write(System.lineSeparator());","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"btjm123"},"content":"            }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"btjm123"},"content":"     * Parses a line of text into a {@link benn.tasks.Task} object,","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"btjm123"},"content":"     * based on {@link benn.patterns.TaskStoragePattern}.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"btjm123"},"content":"     * @param line the line of text representing a stored task","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"btjm123"},"content":"     * @return the parsed {@code Task}","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"btjm123"},"content":"     * @throws BennException if the line does not match any known task format","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"btjm123"},"content":"    private static Task parseLine(String line) throws BennException {","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"btjm123"},"content":"        Matcher matcher;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"btjm123"},"content":"        if ((matcher \u003d doesPatternMatch(TaskStoragePattern.TODO, line)) !\u003d null) {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"btjm123"},"content":"            String description \u003d matcher.group(\"description\");","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"btjm123"},"content":"            String done \u003d matcher.group(\"done\");","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"btjm123"},"content":"            boolean isDone \u003d \"1\".equals(done);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"btjm123"},"content":"            return new Todo(description, isDone);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"btjm123"},"content":"        if ((matcher \u003d doesPatternMatch(TaskStoragePattern.DEADLINE, line)) !\u003d null) {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"btjm123"},"content":"            String description \u003d matcher.group(\"description\");","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"btjm123"},"content":"            String by \u003d matcher.group(\"by\").replace(\u0027T\u0027, \u0027 \u0027);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"btjm123"},"content":"            String done \u003d matcher.group(\"done\");","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"btjm123"},"content":"            boolean isDone \u003d \"1\".equals(done);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"btjm123"},"content":"            return new Deadline(description, by, isDone);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"btjm123"},"content":"        if ((matcher \u003d doesPatternMatch(TaskStoragePattern.EVENT, line)) !\u003d null) {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"btjm123"},"content":"            String description \u003d matcher.group(\"description\");","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"btjm123"},"content":"            String from \u003d matcher.group(\"from\").replace(\u0027T\u0027, \u0027 \u0027);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"btjm123"},"content":"            String to \u003d matcher.group(\"to\").replace(\u0027T\u0027, \u0027 \u0027);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"btjm123"},"content":"            String done \u003d matcher.group(\"done\");","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"btjm123"},"content":"            boolean isDone \u003d \"1\".equals(done);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"btjm123"},"content":"            return new Event(description, from, to, isDone);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"btjm123"},"content":"        throw new BennException(\"Unknown task format: \" + line);","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"btjm123"},"content":"     * Attempts to match the given line against a regex pattern.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"btjm123"},"content":"     * @param p the pattern to test","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"btjm123"},"content":"     * @param line the line of text to match","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"btjm123"},"content":"     * @return the matcher if a match is found, or {@code null} otherwise","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"btjm123"},"content":"    private static Matcher doesPatternMatch(Pattern p, String line) {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"btjm123"},"content":"        Matcher m \u003d p.matcher(line);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"btjm123"},"content":"        return m.find() ? m : null;","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false}],"authorContributionMap":{"btjm123":232}},{"path":"src/main/java/benn/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.tasks;","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import benn.exceptions.BennException;","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":" * Represents a task with a deadline in Benn the Chatbot.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eA {@code Deadline} has a description, a due date/time, and","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":" * a completion status. The due date/time is stored internally as","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":" * a {@link LocalDateTime} and must be provided in the format","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":" * {@code dd/MM/yyyy HH:mm}. For example: {@code 12/12/2069 14:50}.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eWhen serialized to storage, the deadline uses the format","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":" * {@code dd/MM/yyyy\u0027T\u0027HH:mm} to ensure unambiguous parsing.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\u0027T\u0027HH:mm\");","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"    private final LocalDateTime datetimeDue;","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"     * Constructs a new {@code Deadline} task with the specified description,","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"     * due date/time, and completion status.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"     * @param datetimeDue the due date/time string in {@code dd/MM/yyyy HH:mm} format","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"     * @param isDone whether the task is marked as completed","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"     * @throws BennException if the {@code datetimeDue} string is invalid or not in the expected format","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"    public Deadline(String description, String datetimeDue, boolean isDone) throws BennException {","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"        super(description);","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"        try {","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"            System.out.println(\"in deadline ctor\" + datetimeDue);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"            this.datetimeDue \u003d parseDateTime(datetimeDue);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"            throw new BennException(\"Invalid date received!\");","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"btjm123"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"btjm123"},"content":"     * Parses the given date/time string into a {@link LocalDateTime}.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"btjm123"},"content":"     * \u003cp\u003eThe string must be in the format {@code dd/MM/yyyy HH:mm}, i.e.,","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"btjm123"},"content":"     * two parts separated by whitespace: a date and a time.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"btjm123"},"content":"     * @param datetimeDue the date/time string to parse","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"btjm123"},"content":"     * @return the parsed {@link LocalDateTime}","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"btjm123"},"content":"     * @throws BennException if the input is null, malformed, or not exactly two parts","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"btjm123"},"content":"    private static LocalDateTime parseDateTime(String datetimeDue) throws BennException {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"btjm123"},"content":"        String[] parts \u003d datetimeDue \u003d\u003d null ? null : datetimeDue.trim().split(\"\\\\s+\");","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"btjm123"},"content":"        if (parts \u003d\u003d null || parts.length !\u003d 2) {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"btjm123"},"content":"            throw new BennException(\"Datetime must have exactly [date, time].\");","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"btjm123"},"content":"        String dateTimeString \u003d parts[0] + \"T\" + parts[1];","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"btjm123"},"content":"        return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"btjm123"},"content":"     * Returns a string representation of this deadline task, suitable for display to the user.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"btjm123"},"content":"     * @return a formatted string of the form {@code [D][ ] description (by: yyyy-MM-ddTHH:mm)}","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"btjm123"},"content":"    @Override","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"btjm123"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"btjm123"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.datetimeDue.format(formatter));","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"btjm123"},"content":"     * Returns the storage representation of this deadline task, suitable for writing to disk.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"btjm123"},"content":"     * @return a pipe-delimited string in the format:","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"btjm123"},"content":"     *         {@code D | \u003cdone\u003e | \u003cdescription\u003e | \u003cby\u003e}","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"btjm123"},"content":"    @Override","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"btjm123"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"btjm123"},"content":"        return String.format(\"D | %d | %s | %s\", this.getIsDone() ? 1 : 0, this.getDescription(), this.datetimeDue.format(formatter));","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false}],"authorContributionMap":{"btjm123":83}},{"path":"src/main/java/benn/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.tasks;","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import benn.exceptions.BennException;","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":" * Represents a task with a start and end time in Benn the Chatbot.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eAn {@code Event} has a description, a start date/time, an end date/time,","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":" * and a completion status. Both start and end are stored internally as","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":" * {@link LocalDateTime} objects and must be provided in the format","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":" * {@code dd/MM/yyyy HH:mm}. For example: {@code 12/08/2002 12:23}.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eWhen serialized to storage, the event uses the format","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":" * {@code dd/MM/yyyy\u0027T\u0027HH:mm} to ensure unambiguous parsing.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"public class Event extends Task{","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\u0027T\u0027HH:mm\");","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"    private final LocalDateTime startDateTime;","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"    private final LocalDateTime endDateTime;","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"     * Constructs a new {@code Event} task with the specified description,","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"     * start date/time, end date/time, and completion status.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"     * @param description the description of the event","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"     * @param startDateTimeString the start date/time string in {@code dd/MM/yyyy HH:mm} format","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"     * @param endDateTimeString the end date/time string in {@code dd/MM/yyyy HH:mm} format","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"     * @param isDone whether the task is marked as completed","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"     * @throws BennException if either date/time string is invalid or not in the expected format","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"    public Event(String description, String startDateTimeString, String endDateTimeString, boolean isDone) throws BennException {","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"        super(description);","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"        try {","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"            this.startDateTime \u003d parseDateTime(startDateTimeString.split(\" \"));","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"            this.endDateTime \u003d parseDateTime(endDateTimeString.split(\" \"));","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"btjm123"},"content":"            throw new BennException(\"Invalid date received!\");","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"btjm123"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"btjm123"},"content":"     * Parses the given date/time string parts into a {@link LocalDateTime}.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"btjm123"},"content":"     * \u003cp\u003eThe array must contain exactly two parts: a date and a time.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"btjm123"},"content":"     * For example: {@code [\"12/08/2002\", \"12:23\"]}.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"btjm123"},"content":"     * @param datetimeParts an array containing [date, time]","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"btjm123"},"content":"     * @return the parsed {@link LocalDateTime}","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"btjm123"},"content":"     * @throws BennException if the array is null or does not contain exactly two parts","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"btjm123"},"content":"    private static LocalDateTime parseDateTime(String[] datetimeParts) throws BennException {","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"btjm123"},"content":"        if (datetimeParts \u003d\u003d null || datetimeParts.length !\u003d 2) {","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"btjm123"},"content":"            throw new BennException(\"Datetime must have exactly [date, time].\");","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"btjm123"},"content":"        String dateTimeString \u003d datetimeParts[0] + \"T\" + datetimeParts[1];","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"btjm123"},"content":"        return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"btjm123"},"content":"     * Returns a string representation of this event task, suitable for display to the user.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"btjm123"},"content":"     * @return a formatted string of the form {@code [E][ ] description (from: start to: end)}","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"btjm123"},"content":"    @Override","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"btjm123"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"btjm123"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.startDateTime.format(formatter), this.endDateTime.format(formatter));","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"btjm123"},"content":"     * Returns the storage representation of this event task, suitable for writing to disk.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"btjm123"},"content":"     * @return a pipe-delimited string in the format:","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"btjm123"},"content":"     *         {@code E | \u003cdone\u003e | \u003cdescription\u003e | \u003cfrom\u003e | \u003cto\u003e}","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"btjm123"},"content":"    @Override","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"btjm123"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"btjm123"},"content":"        return String.format(\"E | %d | %s | %s | %s\", this.getIsDone() ? 1 : 0, this.getDescription(), this.startDateTime.format(formatter), this.endDateTime.format(formatter));","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false}],"authorContributionMap":{"btjm123":85}},{"path":"src/main/java/benn/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.tasks;","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":" * Represents an abstract task in Benn the Chatbot.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eA {@code Task} has a textual description and a completion status","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":" * (done or not done). Concrete subclasses such as {@link Todo},","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":" * {@link Deadline}, and {@link Event} extend this class to provide","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":" * additional fields and behaviors specific to each task type.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"public abstract class Task {","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"    private final String description;","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":"     * Constructs a new {@code Task} with the given description.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"     * Tasks are initially not marked as done.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"     * @param description the textual description of the task","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"     * Marks this task as done.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"     * Marks this task as not done.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"     * Returns the description of this task.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"btjm123"},"content":"     * @return the task description","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"btjm123"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"btjm123"},"content":"        return this.description;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"btjm123"},"content":"     * Returns whether this task is marked as done.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"btjm123"},"content":"     * @return {@code true} if the task is done, {@code false} otherwise","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"btjm123"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"btjm123"},"content":"        return this.isDone;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"btjm123"},"content":"     * Returns a storage-ready representation of this task.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"btjm123"},"content":"     * \u003cp\u003eThe format is defined by the concrete subclass","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"btjm123"},"content":"     * (e.g., {@link Todo}, {@link Deadline}, {@link Event}).\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"btjm123"},"content":"     * @return a string suitable for saving to the task storage file","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"btjm123"},"content":"    public abstract String toStorageFormat();","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"btjm123"},"content":"     * Returns a string representation of this task, suitable for display to the user.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"btjm123"},"content":"     * \u003cp\u003eIncludes a checkbox indicator for completion status:","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"btjm123"},"content":"     * {@code [X]} if done, {@code [ ]} if not done, followed by the description.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"btjm123"},"content":"     * @return a formatted string representing this task","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"btjm123"},"content":"    @Override","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"btjm123"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"btjm123"},"content":"        if (isDone) {","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"btjm123"},"content":"            return String.format(\"[X] %s\", this.description);","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"btjm123"},"content":"        } else {","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"btjm123"},"content":"            return String.format(\"[ ] %s\", this.description);","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false}],"authorContributionMap":{"btjm123":84}},{"path":"src/main/java/benn/tasks/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.tasks;","lastModifiedDate":"2025-08-24T06:37:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import benn.exceptions.BennException;","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"import benn.storage.TaskStorage;","lastModifiedDate":"2025-08-24T06:36:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"import java.util.List;","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":" * Manages the user\u0027s tasks in Benn the Chatbot.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eThe {@code TaskManager} serves as a high-level interface between","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":" * chatbot commands and the underlying {@link benn.storage.TaskStorage}.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":" * It provides methods to add, mark, unmark, delete, and list tasks,","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":" * ensuring that all changes are persisted to disk.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"public class TaskManager {","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"    private final TaskStorage taskStorage;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"     * Constructs a new {@code TaskManager} and initializes the storage system.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"     * @throws IOException if the storage file cannot be created or accessed","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"     * @throws BennException if the storage file path is invalid","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"    public TaskManager() throws IOException, BennException {","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"        this.taskStorage \u003d TaskStorage.start();","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"     * Adds a new {@link Todo} task with the given description.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"     * @param description the description of the todo task","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"     * @return the newly created {@code Todo}","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"     * @throws IOException if writing to storage fails","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"    public Todo addTodo(String description) throws IOException {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"        Todo todo \u003d new Todo(description, false);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"        this.taskStorage.add(todo);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"        return todo;","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"btjm123"},"content":"     * Adds a new {@link Deadline} task with the given description and due date/time.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"btjm123"},"content":"     * @param description the description of the deadline","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"btjm123"},"content":"     * @param datetimeDue the due date/time string in {@code dd/MM/yyyy HH:mm} format","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"btjm123"},"content":"     * @return the newly created {@code Deadline}","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"btjm123"},"content":"     * @throws IOException if writing to storage fails","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"btjm123"},"content":"     * @throws BennException if the date/time string is invalid","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"btjm123"},"content":"    public Deadline addDeadline(String description, String datetimeDue) throws IOException, BennException {","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"btjm123"},"content":"        Deadline deadline \u003d new Deadline(description, datetimeDue, false);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"btjm123"},"content":"        this.taskStorage.add(deadline);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"btjm123"},"content":"        return deadline;","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"btjm123"},"content":"     * Adds a new {@link Event} task with the given description, start date/time, and end date/time.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"btjm123"},"content":"     * @param description the description of the event","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"btjm123"},"content":"     * @param startDateTime the start date/time string in {@code dd/MM/yyyy HH:mm} format","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"btjm123"},"content":"     * @param endDateTime the end date/time string in {@code dd/MM/yyyy HH:mm} format","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"btjm123"},"content":"     * @return the newly created {@code Event}","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"btjm123"},"content":"     * @throws IOException if writing to storage fails","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"btjm123"},"content":"     * @throws BennException if either date/time string is invalid","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"btjm123"},"content":"    public Event addEvent(String description, String startDateTime, String endDateTime) throws IOException, BennException {","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"btjm123"},"content":"        Event event \u003d new Event(description, startDateTime, endDateTime, false);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"btjm123"},"content":"        this.taskStorage.add(event);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"btjm123"},"content":"        return event;","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"btjm123"},"content":"     * Returns the total number of tasks currently stored.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"btjm123"},"content":"     * @return the number of tasks","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"btjm123"},"content":"    public int size() {","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"btjm123"},"content":"        return this.taskStorage.getTaskCount();","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"btjm123"},"content":"     * Marks the specified task as done.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"btjm123"},"content":"     * @param taskNumber the 1-based index of the task","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"btjm123"},"content":"     * @return the updated task","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"btjm123"},"content":"     * @throws BennException if the index is invalid","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"btjm123"},"content":"     * @throws IOException if persisting the change fails","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"btjm123"},"content":"    public Task markAsDone(int taskNumber) throws BennException, IOException {","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"btjm123"},"content":"        int index \u003d this.retrieveIndexFrom(taskNumber);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"btjm123"},"content":"        Task task \u003d this.taskStorage.getTaskLocatedAt(index);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"btjm123"},"content":"        task.markAsDone();","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"btjm123"},"content":"        this.taskStorage.flush();","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"btjm123"},"content":"        return task;","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"btjm123"},"content":"     * Marks the specified task as not done.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"btjm123"},"content":"     * @param taskNumber the 1-based index of the task","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"btjm123"},"content":"     * @return the updated task","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"btjm123"},"content":"     * @throws BennException if the index is invalid","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"btjm123"},"content":"     * @throws IOException if persisting the change fails","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"btjm123"},"content":"    public Task unmarkAsDone(int taskNumber) throws BennException, IOException {","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"btjm123"},"content":"        int index \u003d this.retrieveIndexFrom(taskNumber);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"btjm123"},"content":"        Task task \u003d this.taskStorage.getTaskLocatedAt(index);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"btjm123"},"content":"        task.unmarkAsDone();","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"btjm123"},"content":"        this.taskStorage.flush();","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"btjm123"},"content":"        return task;","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T15:58:45","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"btjm123"},"content":"     * Deletes the specified task from the task list.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"btjm123"},"content":"     * @param taskNumber the 1-based index of the task","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"btjm123"},"content":"     * @return the deleted task","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"btjm123"},"content":"     * @throws IOException if writing to storage fails","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"btjm123"},"content":"     * @throws BennException if the index is invalid","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"btjm123"},"content":"    public Task deleteTaskAt(int taskNumber) throws IOException, BennException {","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"btjm123"},"content":"        int index \u003d retrieveIndexFrom(taskNumber);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"btjm123"},"content":"        return this.taskStorage.removeTaskLocatedAt(index);","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-21T09:55:13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"btjm123"},"content":"     * Finds all tasks whose descriptions contain the given keyword","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"btjm123"},"content":"     * (case-insensitive).","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"btjm123"},"content":"     * \u003cp\u003eThis method delegates the search to the underlying","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"btjm123"},"content":"     * {@link benn.storage.TaskStorage}, returning all matching tasks","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"btjm123"},"content":"     * in the order they appear in storage.\u003c/p\u003e","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"btjm123"},"content":"     * @param keyword the keyword to search for within task descriptions","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"btjm123"},"content":"     * @return a list of {@link benn.tasks.Task} objects whose descriptions","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"btjm123"},"content":"     *         contain the keyword; the list may be empty if no matches are found","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"btjm123"},"content":"    public List\u003cTask\u003e findAllTasksContaining(String keyword) {","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"btjm123"},"content":"        return this.taskStorage.findAllTasksContaining(keyword);","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"btjm123"},"content":"     * Returns a string representation of the current task list.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"btjm123"},"content":"     * \u003cp\u003eIf there are no tasks, a placeholder message is returned.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"btjm123"},"content":"     * Otherwise, each task is listed with its 1-based index and formatted","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"btjm123"},"content":"     * string representation.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"btjm123"},"content":"     * @return the formatted task list as a string","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"btjm123"},"content":"    @Override","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"btjm123"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"btjm123"},"content":"        int taskCount \u003d this.taskStorage.getTaskCount();","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"btjm123"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"btjm123"},"content":"            return \"     (no tasks yet)\\n\";","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"btjm123"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"btjm123"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"btjm123"},"content":"            Task task \u003d this.taskStorage.getTaskLocatedAt(i);","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"btjm123"},"content":"            sb.append(\"     \")","lastModifiedDate":"2025-09-12T09:54:23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"btjm123"},"content":"                    .append(i + 1)","lastModifiedDate":"2025-09-12T09:54:23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"btjm123"},"content":"                    .append(\". \")","lastModifiedDate":"2025-09-12T09:54:23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"btjm123"},"content":"                    .append(task)","lastModifiedDate":"2025-09-12T09:54:23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"btjm123"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2025-09-12T09:54:23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"btjm123"},"content":"        return sb.toString();","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"btjm123"},"content":"     * Validates and converts a user-facing task number into a 0-based index.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"btjm123"},"content":"     * @param taskNumber the 1-based task number","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"btjm123"},"content":"     * @return the corresponding 0-based index","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"btjm123"},"content":"     * @throws BennException if the task number is less than 1 or greater than the task count","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"btjm123"},"content":"    private int retrieveIndexFrom(int taskNumber) throws BennException {","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"btjm123"},"content":"        int taskCount \u003d this.taskStorage.getTaskCount();","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"btjm123"},"content":"        if (taskNumber \u003c 1) {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"btjm123"},"content":"            throw new BennException(\"Invalid index; index must be \u003e\u003d 1\");","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"btjm123"},"content":"        } else if (taskNumber \u003e taskCount) {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"btjm123"},"content":"            throw new BennException(\"Invalid index; index must be \u003c\u003d \" + taskCount);","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"btjm123"},"content":"        return taskNumber - 1;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-20T18:54:42","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-20T15:37:59","isFullCredit":false}],"authorContributionMap":{"btjm123":187}},{"path":"src/main/java/benn/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.tasks;","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":" * Represents a simple to-do task in Benn the Chatbot.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eA {@code Todo} has only a description and a completion status.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":" * It does not have any associated date or time information.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"   /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"    * Constructs a new {@code Todo} with the specified description","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":"    * and completion status.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":"    *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":"    * @param description the description of the task","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":"    * @param isDone whether the task is marked as completed","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"    */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"   public Todo(String description, boolean isDone) {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"      super(description);","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"      this.isDone \u003d isDone;","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"   }","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"   /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"    * Returns a string representation of this to-do task, suitable for","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"    * display to the user.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"    *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"    * @return a formatted string of the form {@code [T][ ] description}","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"    *         or {@code [T][X] description} depending on completion status","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"    */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"   @Override","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"   public String toString() {","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"      return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"   }","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"   /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"    * Returns the storage representation of this to-do task, suitable for","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"    * writing to disk.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"    *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"    * @return a pipe-delimited string in the format:","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"    *         {@code T | \u003cdone\u003e | \u003cdescription\u003e}","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"btjm123"},"content":"    */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"btjm123"},"content":"   @Override","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"btjm123"},"content":"   public String toStorageFormat() {","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"btjm123"},"content":"      return String.format(\"T | %d | %s\", this.getIsDone() ? 1 : 0, this.getDescription());","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"btjm123"},"content":"   }","lastModifiedDate":"2025-08-24T05:23:40","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-20T18:09:30","isFullCredit":false}],"authorContributionMap":{"btjm123":46}},{"path":"src/main/java/benn/ui/ChatBubble.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.ui;","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":" * Custom control for showing a chat bubble with text and an avatar.","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"public class ChatBubble extends HBox {","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"    @FXML","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"    private Label messageLabel;","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"    @FXML","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"    private ImageView avatarView;","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"     * Private constructor that loads FXML and initializes the bubble.","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"     * @param text the message to show","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"     * @param icon the avatar image","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"    private ChatBubble(String text, Image icon) {","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"        try {","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"            FXMLLoader loader \u003d new FXMLLoader(ChatBubble.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"            loader.setController(this);","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"            loader.setRoot(this);","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"            loader.load();","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"            ex.printStackTrace();","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"btjm123"},"content":"        messageLabel.setText(text);","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"btjm123"},"content":"        avatarView.setImage(icon);","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"btjm123"},"content":"        // make avatar circular","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"btjm123"},"content":"        Circle mask \u003d new Circle(20, 20, 20);","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"btjm123"},"content":"        avatarView.setClip(mask);","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"btjm123"},"content":"     * Rearranges the layout so that the avatar is on the left and the text is on the right.","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"btjm123"},"content":"    private void invert() {","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"btjm123"},"content":"        ObservableList\u003cNode\u003e children \u003d FXCollections.observableArrayList(getChildren());","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"btjm123"},"content":"        Collections.reverse(children);","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"btjm123"},"content":"        getChildren().setAll(children);","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"btjm123"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"btjm123"},"content":"     * Creates a bubble representing the user’s input.","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"btjm123"},"content":"     * @param text content of the message","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"btjm123"},"content":"     * @param icon user avatar image","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"btjm123"},"content":"     * @return a ChatBubble for the user","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"btjm123"},"content":"    public static ChatBubble getUserDialog(String text, Image icon) {","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"btjm123"},"content":"        return new ChatBubble(text, icon);","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"btjm123"},"content":"     * Creates a bubble representing the bot’s reply.","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"btjm123"},"content":"     * @param text content of the reply","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"btjm123"},"content":"     * @param icon bot avatar image","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"btjm123"},"content":"     * @return a ChatBubble for the bot","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"btjm123"},"content":"    public static ChatBubble getDukeDialog(String text, Image icon) {","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"btjm123"},"content":"        ChatBubble bubble \u003d new ChatBubble(text, icon);","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"btjm123"},"content":"        bubble.invert();","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"btjm123"},"content":"        return bubble;","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false}],"authorContributionMap":{"btjm123":84}},{"path":"src/main/java/benn/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.ui;","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import benn.Benn;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"import benn.ui.ChatBubble;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":" * Controller for the main chat window.","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":" * Manages layout and interaction logic between user and Benn.","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"    @FXML","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"    private ScrollPane chatScrollPane;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"    @FXML","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"    private VBox dialogParentContainer;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"    @FXML","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"    private TextField inputField;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"    @FXML","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"    private Benn benn;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/XinYang.png\"));","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Benn.png\"));","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"    @FXML","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"        chatScrollPane.vvalueProperty().bind(dialogParentContainer.heightProperty());","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"    public void attachBenn(Benn b) {","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"        benn \u003d b;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"btjm123"},"content":"     * Handles sending user input, displaying both sides of the conversation,","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"btjm123"},"content":"     * and clearing the input box afterwards.","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"btjm123"},"content":"    @FXML","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"btjm123"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"btjm123"},"content":"        String input \u003d inputField.getText();","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"btjm123"},"content":"        String response \u003d benn.getResponse(input);","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"btjm123"},"content":"        if (response.isEmpty()) {","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"btjm123"},"content":"            Platform.exit();","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"btjm123"},"content":"        dialogParentContainer.getChildren().addAll(","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"btjm123"},"content":"                ChatBubble.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"btjm123"},"content":"                ChatBubble.getDukeDialog(response, dukeImage)","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"btjm123"},"content":"        );","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"btjm123"},"content":"        inputField.clear();","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false}],"authorContributionMap":{"btjm123":60}},{"path":"src/main/java/benn/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.ui;","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import benn.parser.Parser;","lastModifiedDate":"2025-08-24T06:37:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"import benn.tasks.TaskManager;","lastModifiedDate":"2025-08-24T06:37:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"import benn.commands.Command;","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"import benn.exceptions.BennException;","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"import benn.messages.MessageManager;","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"import java.io.Closeable;","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":"/**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":" * Handles all user interactions for Benn the Chatbot.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eThe {@code Ui} class is responsible for displaying messages","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":" * to the user, reading input from the console, and running the","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":" * main event loop of the chatbot. It delegates command parsing","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":" * to the {@link benn.parser.Parser} and execution to individual","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":" * {@link benn.commands.Command} objects.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":" *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":" * \u003cp\u003eThis class also implements {@link java.io.Closeable} to ensure","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":" * the underlying {@link java.util.Scanner} resource is properly closed.\u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":" */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"public class Ui implements Closeable {","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"     * Constructs a new {@code Ui} with a {@link Scanner} bound to standard input.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"    public Ui() {","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"     * Displays the chatbot introduction message, including the ASCII logo and greeting.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"    private void showIntro() {","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"        System.out.println(MessageManager.retrieveIntroductionMessage());","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"btjm123"},"content":"     * Reads a line of input from the user, trimming leading/trailing whitespace.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"btjm123"},"content":"     * @return the trimmed input string, or {@code null} if no more input is available","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"btjm123"},"content":"    private String readLine() {","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"btjm123"},"content":"        return scanner.hasNextLine() ? scanner.nextLine().trim() : null;","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"btjm123"},"content":"     * Runs the main chatbot loop.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"btjm123"},"content":"     * \u003cp\u003eThis method:","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"btjm123"},"content":"     * \u003col\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"btjm123"},"content":"     *   \u003cli\u003eDisplays the introduction message\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"btjm123"},"content":"     *   \u003cli\u003eContinuously reads user input until exit\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"btjm123"},"content":"     *   \u003cli\u003eParses the input into a {@link benn.commands.Command}\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"btjm123"},"content":"     *   \u003cli\u003eExecutes the command against the provided {@link benn.tasks.TaskManager}\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"btjm123"},"content":"     *   \u003cli\u003ePrints the output of the command\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"btjm123"},"content":"     *   \u003cli\u003eTerminates when the command signals exit\u003c/li\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"btjm123"},"content":"     * \u003c/ol\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"btjm123"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"btjm123"},"content":"     *","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"btjm123"},"content":"     * @param taskManager the {@link TaskManager} managing the list of tasks","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"btjm123"},"content":"     * @throws BennException if a parsing or execution error occurs","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"btjm123"},"content":"     * @throws IOException if a storage operation fails","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"btjm123"},"content":"    public void run(TaskManager taskManager) throws BennException, IOException {","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"btjm123"},"content":"        showIntro();","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"btjm123"},"content":"        boolean shouldExit \u003d false;","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"btjm123"},"content":"        while (!shouldExit) {","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"btjm123"},"content":"            String input \u003d readLine();","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"btjm123"},"content":"            if (input \u003d\u003d null) break;","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"btjm123"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"btjm123"},"content":"            String output \u003d command.execute(taskManager);","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"btjm123"},"content":"            System.out.println(output);","lastModifiedDate":"2025-08-25T15:45:52","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"btjm123"},"content":"            shouldExit \u003d command.shouldExit();","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"btjm123"},"content":"    /**","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"btjm123"},"content":"     * Closes the underlying {@link Scanner} resource.","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"btjm123"},"content":"     */","lastModifiedDate":"2025-08-25T15:35:49","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"btjm123"},"content":"    @Override","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"btjm123"},"content":"    public void close() {","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"btjm123"},"content":"        scanner.close();","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-24T06:28:33","isFullCredit":false}],"authorContributionMap":{"btjm123":91}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"\u003cfx:root type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"         xmlns\u003d\"http://javafx.com/javafx/20.0.1\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"         alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":"         style\u003d\"-fx-spacing: 10;\"\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":"        \u003cLabel fx:id\u003d\"messageLabel\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"               wrapText\u003d\"true\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"               minHeight\u003d\"-Infinity\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"               HBox.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"               style\u003d\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"                   -fx-background-color: #2a2a2a;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"                   -fx-background-radius: 14;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"                   -fx-text-fill: #f0f0f0;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"                   -fx-font-size: 13px;\"\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"                \u003cInsets top\u003d\"8.0\" right\u003d\"14.0\" bottom\u003d\"8.0\" left\u003d\"14.0\" /\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"        \u003cImageView fx:id\u003d\"avatarView\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"                   fitWidth\u003d\"40.0\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"                   pickOnBounds\u003d\"true\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"                   preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"        \u003cInsets top\u003d\"10.0\" right\u003d\"8.0\" bottom\u003d\"10.0\" left\u003d\"8.0\" /\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false}],"authorContributionMap":{"btjm123":37}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"            maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"388.0\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":"            style\u003d\"-fx-background-color: #1b1b1b;\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":"            xmlns\u003d\"http://javafx.com/javafx/20.0.1\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"            fx:controller\u003d\"benn.ui.MainWindow\"\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"        \u003cScrollPane fx:id\u003d\"chatScrollPane\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"                    fitToHeight\u003d\"true\" fitToWidth\u003d\"true\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"                    hbarPolicy\u003d\"NEVER\" vvalue\u003d\"1.0\" hvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"                    maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"                    prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"                    style\u003d\"-fx-background-color: transparent; -fx-background: transparent;\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"                    AnchorPane.topAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"                    AnchorPane.rightAnchor\u003d\"-0.0\" AnchorPane.bottomAnchor\u003d\"40.0\"\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"                \u003cVBox fx:id\u003d\"dialogParentContainer\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"                      maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"                      prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"                      spacing\u003d\"8.0\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"                      style\u003d\"-fx-background-color: #1b1b1b; -fx-padding: 12;\" /\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"        \u003cHBox maxHeight\u003d\"40.0\" minHeight\u003d\"40.0\" prefHeight\u003d\"40.0\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"              spacing\u003d\"10.0\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"              style\u003d\"-fx-background-color: #232323; -fx-padding: 4 8 4 8; -fx-border-color: #2b2b2b; -fx-border-width: 1 0 0 0;\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"              AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"btjm123"},"content":"                \u003cTextField fx:id\u003d\"inputField\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"btjm123"},"content":"                           maxWidth\u003d\"1.7976931348623157E308\" minWidth\u003d\"150.0\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"btjm123"},"content":"                           prefHeight\u003d\"40.0\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"btjm123"},"content":"                           promptText\u003d\"Type a message…\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"btjm123"},"content":"                           onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"btjm123"},"content":"                           HBox.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"btjm123"},"content":"                           style\u003d\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"btjm123"},"content":"                               -fx-background-color: #2a2a2a;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"btjm123"},"content":"                               -fx-background-insets: 0;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"btjm123"},"content":"                               -fx-background-radius: 10;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"btjm123"},"content":"                               -fx-text-fill: #eaeaea;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"btjm123"},"content":"                               -fx-prompt-text-fill: #8a8a8a;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"btjm123"},"content":"                               -fx-padding: 8 12 8 12;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"btjm123"},"content":"                               -fx-font-size: 12.5px;\" /\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"btjm123"},"content":"                \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"btjm123"},"content":"                        alignment\u003d\"CENTER\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"btjm123"},"content":"                        minWidth\u003d\"60.0\" prefWidth\u003d\"76.0\" prefHeight\u003d\"40.0\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"btjm123"},"content":"                        mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"btjm123"},"content":"                        onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"btjm123"},"content":"                        text\u003d\"Send\" textFill\u003d\"#ffffff\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"btjm123"},"content":"                        style\u003d\"","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"btjm123"},"content":"                            -fx-background-color: #2e7d32;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"btjm123"},"content":"                            -fx-background-radius: 10;","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"btjm123"},"content":"                            -fx-font-weight: bold;\" /\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"btjm123"},"content":"            \u003c/children\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"btjm123"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"btjm123"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-05T02:11:29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"btjm123"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-05T02:11:06","isFullCredit":false}],"authorContributionMap":{"btjm123":68}},{"path":"src/test/java/benn/BennTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn;","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"public class BennTest {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false}],"authorContributionMap":{"btjm123":5}},{"path":"src/test/java/benn/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.parser;","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import benn.commands.*;","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"class ParserTest {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"    private static void assertType(Command c, Class\u003c?\u003e clazz) {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"        assertNotNull(c, \"Parser returned null\");","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"        assertTrue(clazz.isInstance(c),","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":"                \"Expected \" + clazz.getSimpleName() + \" but got \" + c.getClass().getSimpleName());","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"    void parse_blank_returnsNull() {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"        String[] blanks \u003d {\"\", \"   \", \"\\n  \\n\"};","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"        for (String in : blanks) {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"            Command c \u003d Parser.parse(in);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"            assertType(c, InvalidCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"        }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"    void parse_bye_success() {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"bye\"), ExitCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"  BYE  \"), ExitCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"    void parse_list_success() {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"list\"), ListCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"  LIST  \"), ListCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"    void parse_list_withArgs_invalid() {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"list 3\"), InvalidCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"btjm123"},"content":"    void parse_todo_success() {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"todo read book\"), AddTodoCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"btjm123"},"content":"    void parse_todo_missingDesc_invalid() {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"todo \"), InvalidCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"btjm123"},"content":"    void parse_deadline_validDatetime_success() {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"deadline project /by 12/12/2069 14:50\"), AddDeadlineCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"btjm123"},"content":"    void parse_deadline_missingBy_invalid() {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"deadline project\"), InvalidCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"btjm123"},"content":"    void parse_deadline_wrongFormat_invalid() {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"deadline project /by 12-12-2069 2pm\"), InvalidCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"btjm123"},"content":"    void deadline_accepts_midnight_and_lastMinute() {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"deadline x /by 01/01/2025 00:00\"), AddDeadlineCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"deadline y /by 31/12/2025 23:59\"), AddDeadlineCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"btjm123"},"content":"    void deadline_accepts_weird_spacing() {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"  deadline   task   /by   09/07/2025   08:05   \"), AddDeadlineCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"\\tdeadline\\tfoo\\t/by\\t02/02/2025\\t09:09\"), AddDeadlineCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"btjm123"},"content":"    void deadline_rejects_outOfRange_time() {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"deadline bad /by 01/01/2025 24:00\"), InvalidCommand.class); // hour 24 invalid","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"deadline bad /by 01/01/2025 23:60\"), InvalidCommand.class); // minute 60 invalid","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"deadline bad /by 01/01/2025 7:05\"),  InvalidCommand.class); // missing leading 0 hour","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"deadline bad /by 01/01/2025 07:5\"),  InvalidCommand.class); // missing leading 0 minute","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"btjm123"},"content":"    void deadline_rejects_wrong_separators_and_order() {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"deadline bad /by 2025/01/01 07:05\"), InvalidCommand.class); // yyyy/dd/MM not allowed","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"deadline bad /by 01-01-2025 07:05\"), InvalidCommand.class); // \u0027-\u0027 separators","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"deadline bad /by 1/01/2025 07:05\"),   InvalidCommand.class); // no leading zero in day","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"deadline bad /by 01/1/2025 07:05\"),   InvalidCommand.class); // no leading zero in month","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"deadline bad /by 01/01/25 07:05\"),    InvalidCommand.class); // year not 4 digits","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"btjm123"},"content":"    void keywords_are_caseInsensitive_dates_are_not() {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"DeAdLiNe thing /By 09/09/2025 09:09\"), AddDeadlineCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"deadline thing /by 09/09/2025 9:09\"), InvalidCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"btjm123"},"content":"    void deadline_accepts_trailing_leading_spaces_around_date() {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"deadline task /by   07/07/2025   07:07  \"), AddDeadlineCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"btjm123"},"content":"    void parse_event_valid_success() {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"btjm123"},"content":"                \"event meeting /from 12/08/2002 19:23 /to 12/08/2002 12:50\"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"btjm123"},"content":"        ), AddEventCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"btjm123"},"content":"    void parse_event_missingParts_invalid() {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"event meeting\"), InvalidCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"event meeting /from 12/08/2002 12:23\"), InvalidCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"event meeting /to 12/08/2002 12:50\"), InvalidCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"btjm123"},"content":"    void event_accepts_valid_range_and_spacing() {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"event meet /from 01/03/2025 09:00 /to 01/03/2025 10:00\"), AddEventCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"  event  foo  /from  05/05/2025 05:05   /to   05/05/2025 06:06  \"), AddEventCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"btjm123"},"content":"    void event_rejects_when_from_or_to_malformed() {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"event bad /from 1/03/2025 09:00 /to 01/03/2025 10:00\"), InvalidCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"event bad /from 01/03/2025 09:00 /to 1/03/2025 10:00\"), InvalidCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"event bad /from 01/03/2025 25:00 /to 01/03/2025 10:00\"), InvalidCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"btjm123"},"content":"    void parse_mark_unmark_delete_valid_success() {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"mark 1\"), MarkCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"unmark 2\"), UnmarkCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"delete 3\"), DeleteCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"btjm123"},"content":"    void parse_mark_unmark_delete_invalid() {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"mark\"), InvalidCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"unmark two\"), InvalidCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"delete 3.14\"), InvalidCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"btjm123"},"content":"    void parse_find_valid_success() {","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"find book\"), FindCommand.class);","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"  FIND   Book  \"), FindCommand.class);","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"find read book\"), FindCommand.class);","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"find 2025-08\"), FindCommand.class);","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"btjm123"},"content":"    void parse_find_missing_keyword_invalid() {","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"find\"), InvalidCommand.class);","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"find    \"), InvalidCommand.class);","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"  find\\t\"), InvalidCommand.class);","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T16:12:15","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"btjm123"},"content":"    void parse_unknown_invalid() {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"btjm123"},"content":"        assertType(Parser.parse(\"abracadabra\"), InvalidCommand.class);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false}],"authorContributionMap":{"btjm123":168}},{"path":"src/test/java/benn/storage/TaskStorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"package benn.storage;","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"import benn.tasks.Deadline;","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"import benn.tasks.Event;","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"import benn.tasks.Todo;","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"import org.junit.jupiter.api.*;","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"import java.nio.file.*;","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":"class TaskStorageTest {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":"    private static final Path FILE \u003d Paths.get(\"temporary_datastore\", \"tasks.txt\");","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"    void cleanBefore() throws Exception {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"        if (Files.exists(FILE)) Files.delete(FILE);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"        if (Files.exists(FILE.getParent())) Files.delete(FILE.getParent());","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"    @AfterEach","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"    void cleanAfter() throws Exception {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"        if (Files.exists(FILE)) Files.delete(FILE);","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"        if (Files.exists(FILE.getParent())) Files.delete(FILE.getParent());","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"    @Test","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"    void start_and_roundtrip_fixedPath() throws Exception {","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"        TaskStorage storage \u003d TaskStorage.start();","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"        storage.add(new Todo(\"read book\", true));","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"        storage.add(new Deadline(\"return book\", \"12/12/2069 14:50\", false));","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"        storage.add(new Event(\"meeting\", \"12/08/2002 12:23\", \"12/08/2002 12:50\", false));","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"btjm123"},"content":"        TaskStorage reopened \u003d TaskStorage.start();","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"btjm123"},"content":"        assertEquals(3, reopened.getTaskCount());","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"btjm123"},"content":"        assertEquals(\"read book\", reopened.getTaskLocatedAt(0).getDescription());","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"btjm123"},"content":"    }","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"btjm123"},"content":"}","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false}],"authorContributionMap":{"btjm123":40}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"btjm123"},"content":"list","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"btjm123"},"content":"delete 9000","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"btjm123"},"content":"list","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"btjm123"},"content":"mark 435","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"btjm123"},"content":"unmark 15","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"btjm123"},"content":"unmark -1","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"btjm123"},"content":"todo hi","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"btjm123"},"content":"todo","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"btjm123"},"content":"deadline apply internship","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"btjm123"},"content":"deadline project anton /by 31/12/2002 19:43","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"btjm123"},"content":"list","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"btjm123"},"content":"event project meeting /from Tues /to 5am","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"btjm123"},"content":"event project meeting /from 11/02/2022 /to 21/11/2125","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"btjm123"},"content":"event project meeting /from 11/02/2022 18:00 /to 21/11/212 22:00","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":"event project meetup /from 21/08/2012 18:00 /to 31/12/2033 22:00","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":"list","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"delete","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"delete 4","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"list","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"mark 5","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"btjm123"},"content":"list","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"mark 1","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"btjm123"},"content":"list","lastModifiedDate":"2025-08-22T14:24:17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"btjm123"},"content":"mark 2","lastModifiedDate":"2025-08-22T14:24:17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"btjm123"},"content":"list","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"btjm123"},"content":"unmark 2","lastModifiedDate":"2025-08-22T14:24:17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"btjm123"},"content":"list","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"btjm123"},"content":"delete 5","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"delete 2","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"btjm123"},"content":"list","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"btjm123"},"content":"delete 3","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"btjm123"},"content":"list","lastModifiedDate":"2025-08-24T06:13:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"btjm123"},"content":"list","lastModifiedDate":"2025-08-24T06:16:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"btjm123"},"content":"bye","lastModifiedDate":"2025-08-22T14:24:17","isFullCredit":false}],"authorContributionMap":{"btjm123":34}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"java -classpath ..\\bin benn.Benn \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-20T14:58:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"btjm123":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"btjm123"},"content":"# delete the temporary_datastore directory if it exists","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"btjm123"},"content":"if [ -d \"./temporary_datastore\" ]","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"btjm123"},"content":"then","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"btjm123"},"content":"    rm -rf ./temporary_datastore","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"btjm123"},"content":"fi","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"btjm123"},"content":"","lastModifiedDate":"2025-08-25T01:19:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"btjm123"},"content":"if ! javac -Xlint:none -d ../bin $(find ../src/main/java -name \"*.java\");","lastModifiedDate":"2025-08-22T14:24:17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"btjm123"},"content":"java -classpath ../bin benn.Benn \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-22T14:24:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"btjm123":8,"-":36}}]
