{"authorDailyContributionsMap":{"aliensarefake":[{"date":"2025-08-20T00:00:00","commitResults":[{"hash":"3048db6381bfd1492901b0b808178b899d5ba578","isMergeCommit":false,"messageTitle":"Level-0: Add greeting and exit functionality","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":6}}},{"hash":"936abc637e70a387ce56d413cb35f303c74170d1","isMergeCommit":false,"messageTitle":"Level-1: Add echo functionality","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":4}}},{"hash":"0ec0c7af0c560df7a9bd6b5ac2561617ba3d6ca6","isMergeCommit":false,"messageTitle":"Level-2: Add support for adding and listing tasks","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":3}}},{"hash":"23f389858ce7d8ba39c6c2621119ab0273e4db1b","isMergeCommit":false,"messageTitle":"Level-3: Add mark as done functionality","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":3}}},{"hash":"888fc13649b0ef6370cc58967d1127f36f4f24a7","isMergeCommit":false,"messageTitle":"Level-4: Add ToDo, Event, and Deadline task types","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":73,"deletions":0}}},{"hash":"5a80dd9f131de28a3864afc6a960478563cceef3","isMergeCommit":false,"messageTitle":"A-TextUiTesting: Add automated text UI testing","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":0}}},{"hash":"3b7dd371a9115c0f766cf2c1c4e4bf59223a88a1","isMergeCommit":false,"messageTitle":"Level-5: Add error handling","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":78,"deletions":30}}},{"hash":"776e6e35db37869447b03ed272abe6df6b519bad","isMergeCommit":false,"messageTitle":"Level-6: Add delete functionality","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":0}}},{"hash":"64f06f1d4c8ffcdfa67e166da70374a07e823fc8","isMergeCommit":false,"messageTitle":"A-Enums: Add enums for TaskType and Command","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":0}}},{"hash":"4c60834dbdbd464b3bf7ae56d1771cc90ce3ea3c","isMergeCommit":false,"messageTitle":"make test more comprehensive","messageBody":"","tags":["list","all"],"fileTypesAndContributionMap":{"txt":{"insertions":11,"deletions":0},"sh":{"insertions":0,"deletions":0}}}]},{"date":"2025-08-22T00:00:00","commitResults":[{"hash":"784ba74648bf2c9f2a17a53ac53a7236af158296","isMergeCommit":false,"messageTitle":"rename yay","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":22}}}]},{"date":"2025-08-23T00:00:00","commitResults":[{"hash":"129a9e1cd38807013235e3256fdc9c9f9ed74234","isMergeCommit":false,"messageTitle":"Level-7: Add save and load functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":91,"deletions":1}}},{"hash":"ba534d4ae66b20484373232d5fa3a3e4a5514cda","isMergeCommit":true,"messageTitle":"Merge branch-Level-7","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"f7fbf3e568ef5da9a37178b5974db51e217c7e27","isMergeCommit":false,"messageTitle":"Level-8: Add date and time parsing with LocalDate and LocalDateTime","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":2}}},{"hash":"adf752d417edb24734346519f1eac377b4bd682f","isMergeCommit":true,"messageTitle":"Merge branch-Level-8","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"9c6e57b6cfed60cd25be40e0193a45cf825b1213","isMergeCommit":false,"messageTitle":"A-MoreOOP: Extract classes for better OOP design","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":440,"deletions":22}}},{"hash":"79ed9527c83f93587373ec22a43e5d19d7709281","isMergeCommit":false,"messageTitle":"A-Packages: Organize classes into packages","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":96,"deletions":252}}},{"hash":"43ba52a17ff0d0864f3983a9b50d3e3da88297a4","isMergeCommit":true,"messageTitle":"Merge remote-tracking branch \u0027origin/add-gradle-support\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"5adfd733c925f2619e3e39efd7e64e0034719870","isMergeCommit":false,"messageTitle":"A-Gradle: Add Gradle support for building and running","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"e5bf76b9379c0389ee79478fc5601e245c927108","isMergeCommit":false,"messageTitle":"A-JUnit: Add JUnit tests for TaskList and Parser","messageBody":"","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":155,"deletions":0}}},{"hash":"f92b1e0d09e83bbf8c75bb50783aa3aa0f1dc815","isMergeCommit":false,"messageTitle":"A-JavaDoc: Add JavaDoc comments to classes and methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":126,"deletions":0}}},{"hash":"4425416c284254f67f8b9dd7cf384c24ceccaebd","isMergeCommit":false,"messageTitle":"A-CodingStandard: Fix file endings and formatting","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":18}}},{"hash":"f59be4bb09fbdbf14e317fbc79aa95ffa6b26058","isMergeCommit":false,"messageTitle":"Level-9: Enhance find command output","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"89cb30c8af325c84f03fb8d16aa2f3b40b49efc2","isMergeCommit":true,"messageTitle":"Merge branch-A-JavaDoc","messageBody":"","tags":["A-JavaDoc","A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"1e9339699e57593cc15092ed1912c250d9334c6a","isMergeCommit":true,"messageTitle":"Merge branch-A-CodingStandard","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"c9e443815c6d861abb5eba8188ab60df0b9c74d9","isMergeCommit":true,"messageTitle":"Merge branch-Level-9","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{}}]},{"date":"2025-08-25T00:00:00","commitResults":[{"hash":"3a30a0b0101b3531d782c2f8d229c2d0c107ed6b","isMergeCommit":false,"messageTitle":"Rename Duke to TaskBot","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2},"java":{"insertions":76,"deletions":76},"sh":{"insertions":2,"deletions":2}}},{"hash":"ac9bb94fd2963626fb85e5c17a077e611eadfe1e","isMergeCommit":false,"messageTitle":"Improve date time parsing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":8}}},{"hash":"ea0c0a38b2ec33a173dfb5aa4b34517969a01a8a","isMergeCommit":false,"messageTitle":"Add javadoc comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":104,"deletions":0}}}]},{"date":"2025-08-30T00:00:00","commitResults":[{"hash":"44ed49fb17ba74502d75f5d009881eb2dc45cfc4","isMergeCommit":false,"messageTitle":"Add CheckStyle configuration and fix style violations","messageBody":"- Add checkstyle.xml configuration file\n- Update build.gradle to include CheckStyle plugin\n- Fix import statements (remove wildcard imports)\n- Add private visibility modifiers and getter methods\n- Fix magic numbers with named constants\n- Make Parser a final utility class with private constructor\n","fileTypesAndContributionMap":{"gradle":{"insertions":6,"deletions":0},"java":{"insertions":57,"deletions":21}}},{"hash":"c015f2dcdd978cac7678ea9912dc096852b8dd92","isMergeCommit":false,"messageTitle":"Add JavaFX GUI for TaskBot","messageBody":"- Add JavaFX plugin and dependencies to build.gradle\n- Create Launcher class as entry point for JavaFX\n- Create Main class to initialize JavaFX application\n- Add MainWindow controller for main UI interaction\n- Add DialogBox component for chat messages\n- Create FXML layouts for MainWindow and DialogBox\n- Add placeholder images for User and TaskBot avatars\n- Modify TaskBot to provide getResponse method for GUI\n- Add executeAndGetResponse method to all Command classes\n- GUI provides chat-like interface for task management\n","fileTypesAndContributionMap":{"gradle":{"insertions":6,"deletions":0},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":260,"deletions":0}}},{"hash":"3af93079c634ff92abb02bc16c592e908e03c119","isMergeCommit":false,"messageTitle":"Add varargs support to improve code flexibility","messageBody":"- Add printLines method in Ui class using varargs to print multiple lines\n- Add printFormattedMessage method in Ui using varargs for formatted output\n- Refactor existing Ui methods to use the new varargs printLines method\n- Add addAll method in TaskList using varargs to add multiple tasks at once\n- Demonstrate Java varargs feature for variable-length argument lists\n","fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":14}}},{"hash":"ef409ee439d6c8aff1fe50f292ef00f373399c2a","isMergeCommit":false,"messageTitle":"Update gradle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}}]},{"date":"2025-09-06T00:00:00","commitResults":[{"hash":"f54da627ee28e51ab26093bff99c6e86d7840190","isMergeCommit":true,"messageTitle":"Merge branch-A-CheckStyle","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{}},{"hash":"ae6914147f3fa4d9821b69cf216d549ba5830367","isMergeCommit":true,"messageTitle":"Merge branch-A-Varargs","messageBody":"","tags":["A-Varargs"],"fileTypesAndContributionMap":{}},{"hash":"5a6677b55ca46112ad71b5ea3542459d8e69b387","isMergeCommit":true,"messageTitle":"Merge branch-Level-10","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-10T00:00:00","commitResults":[{"hash":"6e357b629878de784e74074815ff4344ce757344","isMergeCommit":false,"messageTitle":"Add assertions to critical code paths","messageBody":"This commit introduces defensive programming practices by adding\nassertions at critical points in the codebase to validate important\nassumptions and invariants. These assertions help catch programming\nerrors early during development and improve code reliability.\n\nThe assertions validate:\n- Non-null parameters in methods that cannot handle null values\n- Valid index ranges before array/list operations\n- Non-empty strings for required text parameters\n- Positive task numbers for user-facing operations\n- Valid data format when parsing stored tasks\n\nKey changes:\n- TaskList: Added null checks for tasks and bounds checking for indices\n- Storage: Validated file paths and task data integrity\n- Parser: Ensured command strings are valid before processing\n- DeleteCommand: Added parameter validation for defensive programming\n\nThese assertions will be compiled out in production builds when\nrunning with -ea flag disabled, ensuring no performance impact\nin release versions while providing valuable debugging support\nduring development.\n","tags":["A-FullCommitMessage","A-Assertions"],"fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":0}}},{"hash":"1a7ac9b5e725a04e135c4ebd31c0925bcef9b29b","isMergeCommit":false,"messageTitle":"Refactor code to improve quality and maintainability","messageBody":"This commit addresses several code quality issues identified during\na comprehensive code review. The refactoring focuses on reducing\ncode duplication, improving readability, and following best practices\nfor clean code.\n\nKey improvements:\n\nParser class:\n- Extracted duplicate code into helper methods (parseTaskNumber,\n  validateDescription, parseDeadlineCommand, parseEventCommand)\n- Defined constants for error messages to avoid magic strings\n- Reduced cyclomatic complexity of parse method by decomposing it\n- Improved method cohesion and single responsibility principle\n\nStorage class:\n- Introduced constants for file format markers and delimiters\n- Extracted task creation logic into createTaskFromParts method\n- Created formatTaskForStorage method to centralize formatting logic\n- Made filePath field final for immutability\n- Used StringBuilder for efficient string concatenation\n\nCommand classes:\n- Added validateTaskNumber method in base Command class\n- Eliminated duplicate validation code across MarkCommand,\n  UnmarkCommand, and DeleteCommand\n- Made taskNum fields final for immutability\n- Leveraged inheritance to reduce code duplication\n\nThese changes improve:\n- Code maintainability by reducing duplication\n- Readability through better method and constant naming\n- Testability by creating smaller, focused methods\n- Adherence to SOLID principles, particularly SRP and DRY\n\nNo functional changes were made; all existing behavior is preserved.\n","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":149,"deletions":110}}},{"hash":"a6ea9bcde5c72be595d507f8249c0f6be7faaae3","isMergeCommit":false,"messageTitle":"Adopt Java Streams API for functional programming","messageBody":"This commit modernizes the codebase by replacing traditional iterative\nconstructs with Java Streams API, embracing functional programming\nparadigms for cleaner and more expressive code.\n\nThe refactoring leverages the Streams API to:\n- Transform imperative loops into declarative operations\n- Improve code readability through method chaining\n- Utilize functional interfaces for concise expressions\n- Enable potential performance optimizations through parallelization\n\nSpecific changes:\n\nTaskList class:\n- Refactored addAll() to use Arrays.stream().forEach()\n- Converted find() method to use stream().filter().collect()\n- Pre-computed lowercase keyword for efficiency\n\nFindCommand class:\n- Replaced for loops with IntStream.range() for indexing\n- Used mapToObj() and Collectors.joining() for string building\n- Made keyword field final for immutability\n\nListCommand class:\n- Adopted IntStream for generating numbered task lists\n- Replaced StringBuilder with stream-based string concatenation\n\nUi class:\n- Converted printLines() to use Arrays.stream().forEach()\n- Refactored printFormattedMessage() with Arrays.stream() slice\n- Updated showTaskList() to use IntStream for enumeration\n\nBenefits of this approach:\n- More declarative code that expresses \"what\" rather than \"how\"\n- Reduced risk of off-by-one errors in loops\n- Better composability for future enhancements\n- Consistent functional style across the codebase\n\nThe functional approach aligns with modern Java best practices and\nprepares the codebase for potential future enhancements such as\nparallel processing of large task lists.\n","tags":["A-Streams"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":33}}},{"hash":"c9f060217845a15cd9d3dc83bce804be8d6afaa5","isMergeCommit":true,"messageTitle":"Merge pull request #1 from aliensarefake/branch-A-Assertions","messageBody":"Add assertions for defensive programming","fileTypesAndContributionMap":{}},{"hash":"80cff2f328e9476edbaa09e9bde62b717342653d","isMergeCommit":true,"messageTitle":"Merge master into branch-A-CodeQuality","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"8e907f30c7ffe1786b89c70d4c8891faf4112cba","isMergeCommit":true,"messageTitle":"Merge pull request #2 from aliensarefake/branch-A-CodeQuality","messageBody":"Refactor code to improve quality and maintainability","fileTypesAndContributionMap":{}},{"hash":"f97737be549f7d69b49b949bfd4f332e6365ed36","isMergeCommit":true,"messageTitle":"Merge master into branch-A-Streams","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"19a2410b1f37c10e9bb92e57f0f483efd79d1e8c","isMergeCommit":true,"messageTitle":"Merge pull request #3 from aliensarefake/branch-A-Streams","messageBody":"Adopt Java Streams API for functional programming","tags":["A-AiAssisted"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-13T00:00:00","commitResults":[{"hash":"1d94f9f016bfd0b17a4902e50e4d32e0c361848a","isMergeCommit":false,"messageTitle":"Add C-Sort extension for sorting tasks","messageBody":"- Implement SortCommand to sort tasks by description, status, type, or date\n- Add parsing for sort command with flexible criteria options\n- Support sorting todos, deadlines, and events with appropriate ordering\n- Default to alphabetical sorting by description when no criteria specified\n","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"java":{"insertions":153,"deletions":0}}}]},{"date":"2025-09-17T00:00:00","commitResults":[{"hash":"71c102eb96e8c1ed60d2d483ca66f49ffc94c87e","isMergeCommit":false,"messageTitle":"Enhance GUI with improved UX design","messageBody":"- Implement asymmetric conversation display with distinct styling\n- Add error highlighting with red background for invalid commands\n- Optimize spacing and reduce profile picture sizes for better space utilization\n- Enable window resizing with proper anchor constraints (min 400x350)\n- Apply circular clipping to profile pictures with drop shadows\n- Improve visual hierarchy with rounded message bubbles and modern color scheme\n- Add comprehensive GUI tests to verify functionality\n","tags":["A-BetterGui"],"fileTypesAndContributionMap":{"fxml":{"insertions":8,"deletions":8},"java":{"insertions":140,"deletions":10}}},{"hash":"d465e4a7075bfb03a6434f324323bab514ff21bf","isMergeCommit":false,"messageTitle":"Add robust error handling and improve code quality","messageBody":"Error Handling Improvements:\n- Enhanced file handling to create missing directories automatically\n- Added graceful recovery from corrupted data files\n- Implemented command typo suggestions for common mistakes\n- Better error messages with helpful hints for users\n\nCode Quality Enhancements:\n- Fixed all critical checkstyle violations\n- Removed magic numbers with named constants\n- Improved code formatting and line lengths\n- Added proper constructor for utility classes\n- Made classes final where inheritance not needed\n\nDocumentation:\n- Added ATTRIBUTIONS.md for code attribution\n- Credited JavaFX patterns and CS2103T materials\n\nAll 21 tests passing, build successful\n","fileTypesAndContributionMap":{"java":{"insertions":83,"deletions":20},"md":{"insertions":21,"deletions":0}}},{"hash":"adce04ce21e61ed1208e987042ff0d47f5775985","isMergeCommit":false,"messageTitle":"Add comprehensive User Guide and product screenshot","messageBody":"Documentation:\n- Added Ui.png screenshot showing full TaskBot GUI window\n- Created detailed User Guide with all features documented\n- Included command examples and expected outputs\n- Added FAQ section for common questions\n- Configured Jekyll theme for GitHub Pages\n\nFeatures Documented:\n- Todo, Deadline, and Event task creation\n- Task management (list, mark, unmark, delete)\n- Find functionality for searching tasks\n- Smart error handling and command suggestions\n- Visual design elements and color coding\n\nThe User Guide follows CS2103T benchmarks with clear formatting,\ncommand summaries, and user-friendly explanations.\n","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"md":{"insertions":218,"deletions":14}}},{"hash":"7457ea2ab58d234ee48bfe1d1fdbc1284ce214c8","isMergeCommit":true,"messageTitle":"Merge remote-tracking branch \u0027origin/branch-A-BetterGui\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"0f82a241b08209e2e316ecf982372cf9d973574c","isMergeCommit":true,"messageTitle":"Merge remote-tracking branch \u0027origin/C-Sort-extension\u0027","messageBody":"# Conflicts:\n#\tsrc/main/java/taskbot/Parser.java\n","fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"aliensarefake":{"java":1819,"md":239,"fxml":35,"sh":2,"bat":0,"gradle":14,"txt":20}},"authorContributionVariance":{"aliensarefake":52861.23},"authorDisplayNameMap":{"aliensarefake":"CS2103T-W09-3 GUO ..O YU"}}
