[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aaroncjgoh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-08-29T14:48:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aaroncjgoh"},"content":"    testImplementation \u0027org.mockito:mockito-core:5.6.0\u0027","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aaroncjgoh"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aaroncjgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aaroncjgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aaroncjgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aaroncjgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aaroncjgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aaroncjgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aaroncjgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aaroncjgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aaroncjgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aaroncjgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aaroncjgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aaroncjgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"aaroncjgoh"},"content":"   mainClass.set(\"Launcher\")","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"aaroncjgoh"},"content":"    archiveBaseName \u003d \"joe\"","lastModifiedDate":"2025-08-29T14:48:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"-":39,"aaroncjgoh":19}},{"path":"data/joe.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aaroncjgoh"},"content":"[D][1] Finish Homework (by: Aug 28 2025)","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aaroncjgoh"},"content":"[E][1] Play Basketball (from: Aug 29 2025 to: Aug 29 2025)","lastModifiedDate":"2025-08-29T14:48:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aaroncjgoh"},"content":"[T][0] CS2100 notes","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false}],"authorContributionMap":{"aaroncjgoh":3}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaroncjgoh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aaroncjgoh"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aaroncjgoh"},"content":"/**","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aaroncjgoh"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aaroncjgoh"},"content":" * face and a label containing text from the speaker.","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aaroncjgoh"},"content":" */","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aaroncjgoh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aaroncjgoh"},"content":"    @FXML","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aaroncjgoh"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aaroncjgoh"},"content":"    @FXML","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aaroncjgoh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aaroncjgoh"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aaroncjgoh"},"content":"        try {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aaroncjgoh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aaroncjgoh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aaroncjgoh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aaroncjgoh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aaroncjgoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aaroncjgoh"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aaroncjgoh"},"content":"        }","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aaroncjgoh"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aaroncjgoh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"aaroncjgoh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"aaroncjgoh"},"content":"     * right.","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"aaroncjgoh"},"content":"    private void flip() {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"aaroncjgoh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"aaroncjgoh"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"aaroncjgoh"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"aaroncjgoh"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"aaroncjgoh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"aaroncjgoh"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"aaroncjgoh"},"content":"    public static DialogBox getJoeDialog(String text, Image img) {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"aaroncjgoh"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"aaroncjgoh"},"content":"        db.flip();","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"aaroncjgoh"},"content":"        return db;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"aaroncjgoh"},"content":"}","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false}],"authorContributionMap":{"aaroncjgoh":59}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aaroncjgoh"},"content":"/**","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aaroncjgoh"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aaroncjgoh"},"content":" */","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aaroncjgoh"},"content":"public class Launcher {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aaroncjgoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aaroncjgoh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aaroncjgoh"},"content":"}","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false}],"authorContributionMap":{"aaroncjgoh":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaroncjgoh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.scene.control.Dialog;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aaroncjgoh"},"content":"import joe.Joe;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aaroncjgoh"},"content":"import joe.ui.Ui;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aaroncjgoh"},"content":"/**","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aaroncjgoh"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aaroncjgoh"},"content":" */","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aaroncjgoh"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aaroncjgoh"},"content":"    private Image joeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/joe.png\"));","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aaroncjgoh"},"content":"    private Joe joe \u003d new Joe();","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aaroncjgoh"},"content":"    @Override","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aaroncjgoh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aaroncjgoh"},"content":"        try {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aaroncjgoh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aaroncjgoh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aaroncjgoh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aaroncjgoh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aaroncjgoh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJoe(joe); // inject the Duke instance","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aaroncjgoh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().getDialogContainer().getChildren()","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aaroncjgoh"},"content":"                    .add(DialogBox.getJoeDialog(Ui.welcomeText(), joeImage));","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aaroncjgoh"},"content":"            stage.show();","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aaroncjgoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aaroncjgoh"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aaroncjgoh"},"content":"        }","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aaroncjgoh"},"content":"}","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false}],"authorContributionMap":{"aaroncjgoh":37}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aaroncjgoh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aaroncjgoh"},"content":"import joe.Joe;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aaroncjgoh"},"content":"/**","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aaroncjgoh"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aaroncjgoh"},"content":" */","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aaroncjgoh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aaroncjgoh"},"content":"    @FXML","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aaroncjgoh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aaroncjgoh"},"content":"    @FXML","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aaroncjgoh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aaroncjgoh"},"content":"    @FXML","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aaroncjgoh"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aaroncjgoh"},"content":"    @FXML","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aaroncjgoh"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aaroncjgoh"},"content":"    private Joe joe;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aaroncjgoh"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpeg\"));","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aaroncjgoh"},"content":"    private Image joeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/joe.png\"));","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aaroncjgoh"},"content":"    @FXML","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aaroncjgoh"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aaroncjgoh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aaroncjgoh"},"content":"    /** Injects the Joe instance */","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aaroncjgoh"},"content":"    public void setJoe(Joe j) {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aaroncjgoh"},"content":"        joe \u003d j;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"aaroncjgoh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"aaroncjgoh"},"content":"     * Duke\u0027s reply and then appends them to the dialog container. Clears the user","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"aaroncjgoh"},"content":"     * input after processing.","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"aaroncjgoh"},"content":"    @FXML","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"aaroncjgoh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"aaroncjgoh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"aaroncjgoh"},"content":"        String response \u003d joe.getResponse(input);","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"aaroncjgoh"},"content":"        if (response.isEmpty()) {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"aaroncjgoh"},"content":"            javafx.application.Platform.exit();","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"aaroncjgoh"},"content":"        }","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"aaroncjgoh"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"aaroncjgoh"},"content":"                DialogBox.getJoeDialog(response, joeImage));","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"aaroncjgoh"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"aaroncjgoh"},"content":"    public VBox getDialogContainer() {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"aaroncjgoh"},"content":"        return dialogContainer;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"aaroncjgoh"},"content":"}","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false}],"authorContributionMap":{"aaroncjgoh":58}},{"path":"src/main/java/joe/Joe.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaroncjgoh"},"content":"package joe;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aaroncjgoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-21T14:41:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aaroncjgoh"},"content":"import joe.exception.InvalidJoeInputException;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aaroncjgoh"},"content":"import joe.parser.Parser;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aaroncjgoh"},"content":"import joe.storage.Storage;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aaroncjgoh"},"content":"import joe.task.TaskList;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aaroncjgoh"},"content":"import joe.ui.Ui;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aaroncjgoh"},"content":"public class Joe {","lastModifiedDate":"2025-08-21T14:22:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aaroncjgoh"},"content":"    private Ui ui;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aaroncjgoh"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aaroncjgoh"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aaroncjgoh"},"content":"    private Parser parser;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-28T21:51:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aaroncjgoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-21T14:22:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aaroncjgoh"},"content":"        Joe joe \u003d new Joe();","lastModifiedDate":"2025-08-21T14:22:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aaroncjgoh"},"content":"        boolean isOn \u003d true;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aaroncjgoh"},"content":"        try {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aaroncjgoh"},"content":"            joe.ui.welcomeText();","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aaroncjgoh"},"content":"            while (isOn) {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aaroncjgoh"},"content":"                String input \u003d joe.ui.takeInput();","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aaroncjgoh"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aaroncjgoh"},"content":"                    isOn \u003d false;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aaroncjgoh"},"content":"                }","lastModifiedDate":"2025-08-21T14:22:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aaroncjgoh"},"content":"                joe.parser.executeCommand(input);","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aaroncjgoh"},"content":"            }","lastModifiedDate":"2025-08-21T14:41:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aaroncjgoh"},"content":"            joe.ui.byeText();","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-21T14:41:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aaroncjgoh"},"content":"        } catch (InvalidJoeInputException e) {","lastModifiedDate":"2025-08-22T00:20:50","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aaroncjgoh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-08-22T00:20:50","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aaroncjgoh"},"content":"            joe.ui.line();","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aaroncjgoh"},"content":"            joe.ui.takeInput();","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aaroncjgoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aaroncjgoh"},"content":"            System.out.println(\"Date should be in YYYY-MM-DD format\");","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aaroncjgoh"},"content":"            joe.ui.line();","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"aaroncjgoh"},"content":"            joe.ui.takeInput();","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"aaroncjgoh"},"content":"        }","lastModifiedDate":"2025-08-28T21:51:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-28T21:51:21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-28T21:51:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-28T21:51:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"aaroncjgoh"},"content":"    public Joe() {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"aaroncjgoh"},"content":"        // Constructor can be used for initialization if needed","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"aaroncjgoh"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"aaroncjgoh"},"content":"        this.storage \u003d new Storage(\"data/joe.txt\");","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"aaroncjgoh"},"content":"        this.taskList \u003d new TaskList(this.storage.loadTodoList());","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"aaroncjgoh"},"content":"        this.parser \u003d new Parser(this.taskList, this.storage, this.ui);","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-22T00:20:50","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-22T00:20:50","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"aaroncjgoh"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"aaroncjgoh"},"content":"        try {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"aaroncjgoh"},"content":"            String output \u003d parser.executeCommand(input);","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"aaroncjgoh"},"content":"            return output;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"aaroncjgoh"},"content":"        } catch (InvalidJoeInputException e) {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"aaroncjgoh"},"content":"            return e.getMessage();","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"aaroncjgoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"aaroncjgoh"},"content":"            return \"Date should be in YYYY-MM-DD format\";","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"aaroncjgoh"},"content":"        }","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"aaroncjgoh"},"content":"}","lastModifiedDate":"2025-08-22T00:20:50","isFullCredit":false}],"authorContributionMap":{"aaroncjgoh":62}},{"path":"src/main/java/joe/exception/InvalidJoeInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaroncjgoh"},"content":"package joe.exception;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aaroncjgoh"},"content":"public class InvalidJoeInputException extends RuntimeException {","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aaroncjgoh"},"content":"    public InvalidJoeInputException() {","lastModifiedDate":"2025-08-22T00:20:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aaroncjgoh"},"content":"        super(\"I don\u0027t recognise that command!\");","lastModifiedDate":"2025-08-22T00:20:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-22T00:20:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aaroncjgoh"},"content":"    public InvalidJoeInputException(String command) {","lastModifiedDate":"2025-08-22T00:20:50","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aaroncjgoh"},"content":"        super(\"You need to provide me a description when using the \" + command + \" command!\");","lastModifiedDate":"2025-08-22T00:20:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-22T00:20:50","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-22T00:20:50","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aaroncjgoh"},"content":"    public InvalidJoeInputException(String command, String reason) {","lastModifiedDate":"2025-08-22T00:20:50","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aaroncjgoh"},"content":"        super(reason + \" when using the \" + command + \" command!\");","lastModifiedDate":"2025-08-22T00:20:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-22T00:20:50","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aaroncjgoh"},"content":"}","lastModifiedDate":"2025-08-22T00:20:50","isFullCredit":false}],"authorContributionMap":{"aaroncjgoh":15}},{"path":"src/main/java/joe/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaroncjgoh"},"content":"package joe.parser;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aaroncjgoh"},"content":"import joe.exception.InvalidJoeInputException;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aaroncjgoh"},"content":"import joe.storage.Storage;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aaroncjgoh"},"content":"import joe.task.Deadline;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aaroncjgoh"},"content":"import joe.task.Event;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aaroncjgoh"},"content":"import joe.task.TaskList;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aaroncjgoh"},"content":"import joe.task.ToDo;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aaroncjgoh"},"content":"import joe.task.Task;","lastModifiedDate":"2025-08-29T22:41:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aaroncjgoh"},"content":"import joe.ui.Ui;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aaroncjgoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T22:41:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aaroncjgoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-08-29T22:41:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aaroncjgoh"},"content":"import java.util.List;","lastModifiedDate":"2025-08-29T22:41:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aaroncjgoh"},"content":"/**","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aaroncjgoh"},"content":" * The Parser class is responsible for interpreting and executing user commands.","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aaroncjgoh"},"content":" * It connects user input with actions on the TaskList, handles storage","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aaroncjgoh"},"content":" * persistence, and formats output through the Ui.","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aaroncjgoh"},"content":" */","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aaroncjgoh"},"content":"public class Parser {","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aaroncjgoh"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aaroncjgoh"},"content":"    private final Storage storage;","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aaroncjgoh"},"content":"    private final Ui ui;","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aaroncjgoh"},"content":"     * Constructs a {@code Parser} object that deals with inputs given by the user.","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aaroncjgoh"},"content":"     *","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aaroncjgoh"},"content":"     * @param tasks the {@link TaskList} object of tasks","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aaroncjgoh"},"content":"     * @param storage the {@link Storage} object handling file persistence","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aaroncjgoh"},"content":"     * @param ui the {@link Ui} object for displaying messages to the user","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aaroncjgoh"},"content":"    public Parser(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aaroncjgoh"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aaroncjgoh"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aaroncjgoh"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"aaroncjgoh"},"content":"     * Takes in the command input by the user and performs the respective actions.","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"aaroncjgoh"},"content":"     *","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"aaroncjgoh"},"content":"     * @param input the input command given by the user","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"aaroncjgoh"},"content":"     * @return the response message to be displayed to the user","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"aaroncjgoh"},"content":"     * @throws InvalidJoeInputException if the command is invalid or malformed","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"aaroncjgoh"},"content":"    public String executeCommand(String input) throws InvalidJoeInputException {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"aaroncjgoh"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"aaroncjgoh"},"content":"        String command \u003d parts[0];","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"aaroncjgoh"},"content":"        switch (command) {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"aaroncjgoh"},"content":"        case \"bye\":","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"aaroncjgoh"},"content":"            return handleBye();","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"aaroncjgoh"},"content":"        case \"list\":","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"aaroncjgoh"},"content":"            return handleList();","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"aaroncjgoh"},"content":"        case \"mark\":","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"aaroncjgoh"},"content":"            return handleMark(parts);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"aaroncjgoh"},"content":"        case \"unmark\":","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"aaroncjgoh"},"content":"            return handleUnmark(parts);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"aaroncjgoh"},"content":"        case \"todo\":","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"aaroncjgoh"},"content":"            return handleTodo(input, parts);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"aaroncjgoh"},"content":"        case \"deadline\":","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"aaroncjgoh"},"content":"            return handleDeadline(input, parts);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"aaroncjgoh"},"content":"        case \"event\":","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"aaroncjgoh"},"content":"            return handleEvent(input, parts);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"aaroncjgoh"},"content":"        case \"delete\":","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"aaroncjgoh"},"content":"            return handleDelete(parts);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"aaroncjgoh"},"content":"        case \"find\":","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"aaroncjgoh"},"content":"            return handleFind(input, parts);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"aaroncjgoh"},"content":"        default:","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"aaroncjgoh"},"content":"            throw new InvalidJoeInputException();","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"aaroncjgoh"},"content":"        }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"aaroncjgoh"},"content":"    // ---------------- Command Handlers ---------------- //","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"aaroncjgoh"},"content":"     * Handles the {@code bye} command.","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"aaroncjgoh"},"content":"     *","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"aaroncjgoh"},"content":"     * @return an empty string to indicate termination","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"aaroncjgoh"},"content":"    private String handleBye() {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"aaroncjgoh"},"content":"        return \"\";","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"aaroncjgoh"},"content":"     * Handles the {@code list} command.","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"aaroncjgoh"},"content":"     *","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"aaroncjgoh"},"content":"     * @return a string representation of the current to-do list","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"aaroncjgoh"},"content":"    private String handleList() {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"aaroncjgoh"},"content":"        return ui.printTodoList(taskList);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"aaroncjgoh"},"content":"     * Handles the {@code mark} command.","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"aaroncjgoh"},"content":"     *","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"aaroncjgoh"},"content":"     * @param parts the split command input","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"aaroncjgoh"},"content":"     * @return the result of marking the task as done","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"aaroncjgoh"},"content":"     * @throws InvalidJoeInputException if the input is invalid","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"aaroncjgoh"},"content":"    private String handleMark(String[] parts) throws InvalidJoeInputException {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"aaroncjgoh"},"content":"        int index \u003d parseIndex(parts, \"mark\");","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"aaroncjgoh"},"content":"        String output \u003d taskList.markTaskAsDone(index);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"aaroncjgoh"},"content":"        storage.logTodoList(taskList);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"aaroncjgoh"},"content":"        return output;","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"aaroncjgoh"},"content":"     * Handles the {@code unmark} command.","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"aaroncjgoh"},"content":"     *","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"aaroncjgoh"},"content":"     * @param parts the split command input","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"aaroncjgoh"},"content":"     * @return the result of marking the task as not done","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"aaroncjgoh"},"content":"     * @throws InvalidJoeInputException if the input is invalid","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"aaroncjgoh"},"content":"    private String handleUnmark(String[] parts) throws InvalidJoeInputException {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"aaroncjgoh"},"content":"        int index \u003d parseIndex(parts, \"unmark\");","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"aaroncjgoh"},"content":"        String output \u003d taskList.markTaskAsNotDone(index);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"aaroncjgoh"},"content":"        storage.logTodoList(taskList);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"aaroncjgoh"},"content":"        return output;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"aaroncjgoh"},"content":"     * Handles the {@code todo} command.","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"aaroncjgoh"},"content":"     *","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"aaroncjgoh"},"content":"     * @param input the full user input","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"aaroncjgoh"},"content":"     * @param parts the split command input","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"aaroncjgoh"},"content":"     * @return the result of adding a new to-do task","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"aaroncjgoh"},"content":"     * @throws InvalidJoeInputException if the input is invalid","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"aaroncjgoh"},"content":"    private String handleTodo(String input, String[] parts) throws InvalidJoeInputException {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"aaroncjgoh"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"aaroncjgoh"},"content":"            throw new InvalidJoeInputException(\"todo\");","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"aaroncjgoh"},"content":"        }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"aaroncjgoh"},"content":"        String description \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"aaroncjgoh"},"content":"        String output \u003d taskList.addToList(new ToDo(description));","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"aaroncjgoh"},"content":"        storage.logTodoList(taskList);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"aaroncjgoh"},"content":"        return output;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"aaroncjgoh"},"content":"     * Handles the {@code deadline} command.","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"aaroncjgoh"},"content":"     *","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"aaroncjgoh"},"content":"     * @param input the full user input","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"aaroncjgoh"},"content":"     * @param parts the split command input","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"aaroncjgoh"},"content":"     * @return the result of adding a new deadline task","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"aaroncjgoh"},"content":"     * @throws InvalidJoeInputException if the input is invalid","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"aaroncjgoh"},"content":"    private String handleDeadline(String input, String[] parts) throws InvalidJoeInputException {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"aaroncjgoh"},"content":"        if (parts.length \u003c 2 || !input.contains(\" /by \")) {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"aaroncjgoh"},"content":"            throw new InvalidJoeInputException(\"deadline\");","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"aaroncjgoh"},"content":"        }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"aaroncjgoh"},"content":"        String description \u003d input.split(\" \", 2)[1].split(\" /by \")[0].trim();","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"aaroncjgoh"},"content":"        String by \u003d input.split(\" /by \")[1].trim();","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"aaroncjgoh"},"content":"        String output \u003d taskList.addToList(new Deadline(description, by));","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"aaroncjgoh"},"content":"        storage.logTodoList(taskList);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"aaroncjgoh"},"content":"        return output;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"aaroncjgoh"},"content":"     * Handles the {@code event} command.","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"aaroncjgoh"},"content":"     *","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"aaroncjgoh"},"content":"     * @param input the full user input","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"aaroncjgoh"},"content":"     * @param parts the split command input","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"aaroncjgoh"},"content":"     * @return the result of adding a new event task","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"aaroncjgoh"},"content":"     * @throws InvalidJoeInputException if the input is invalid","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"aaroncjgoh"},"content":"    private String handleEvent(String input, String[] parts) throws InvalidJoeInputException {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"aaroncjgoh"},"content":"        if (parts.length \u003c 2 || !input.contains(\" /from \") || !input.contains(\" /to \")) {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"aaroncjgoh"},"content":"            throw new InvalidJoeInputException(\"event\");","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"aaroncjgoh"},"content":"        }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"aaroncjgoh"},"content":"        String description \u003d input.split(\" /from \")[0].split(\" \", 2)[1].trim();","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"aaroncjgoh"},"content":"        String from \u003d input.split(\" /from \")[1].split(\" /to \")[0].trim();","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"aaroncjgoh"},"content":"        String to \u003d input.split(\" /to \")[1].trim();","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"aaroncjgoh"},"content":"        String output \u003d taskList.addToList(new Event(description, from, to));","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"aaroncjgoh"},"content":"        storage.logTodoList(taskList);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"aaroncjgoh"},"content":"        return output;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"aaroncjgoh"},"content":"     * Handles the {@code delete} command.","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"aaroncjgoh"},"content":"     *","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"aaroncjgoh"},"content":"     * @param parts the split command input","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"aaroncjgoh"},"content":"     * @return the result of deleting the specified task","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"aaroncjgoh"},"content":"     * @throws InvalidJoeInputException if the input is invalid","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"aaroncjgoh"},"content":"    private String handleDelete(String[] parts) throws InvalidJoeInputException {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"aaroncjgoh"},"content":"        int index \u003d parseIndex(parts, \"delete\") - 1;","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"aaroncjgoh"},"content":"        String output \u003d taskList.deleteFromList(index);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"aaroncjgoh"},"content":"        storage.logTodoList(taskList);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"aaroncjgoh"},"content":"        return output;","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"aaroncjgoh"},"content":"     * Handles the {@code find} command.","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"aaroncjgoh"},"content":"     *","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"aaroncjgoh"},"content":"     * @param input the full user input","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"aaroncjgoh"},"content":"     * @param parts the split command input","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"aaroncjgoh"},"content":"     * @return a list of matching tasks","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"aaroncjgoh"},"content":"     * @throws InvalidJoeInputException if the input is invalid","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"aaroncjgoh"},"content":"    private String handleFind(String input, String[] parts) throws InvalidJoeInputException {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"aaroncjgoh"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"aaroncjgoh"},"content":"            throw new InvalidJoeInputException(\"find\", \"Provide exactly one keyword\");","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"aaroncjgoh"},"content":"        }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"aaroncjgoh"},"content":"        String keyword \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"aaroncjgoh"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(taskList.getTodoList());","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"aaroncjgoh"},"content":"        List\u003cTask\u003e matches \u003d tasks.stream().filter(task -\u003e Arrays.asList(task.toString().split(\" \")).contains(keyword))","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"aaroncjgoh"},"content":"                .toList();","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"aaroncjgoh"},"content":"        return ui.printMatches(matches);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"aaroncjgoh"},"content":"     * Parses the index from a user command and validates it against the task list.","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"aaroncjgoh"},"content":"     *","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"aaroncjgoh"},"content":"     * @param parts the split command input","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"aaroncjgoh"},"content":"     * @param command the command name for error reporting","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"aaroncjgoh"},"content":"     * @return the validated task index","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"aaroncjgoh"},"content":"     * @throws InvalidJoeInputException if the index is missing, not a number, or","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"aaroncjgoh"},"content":"     * out of bounds","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"aaroncjgoh"},"content":"    private int parseIndex(String[] parts, String command) throws InvalidJoeInputException {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"aaroncjgoh"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-29T22:41:35","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"aaroncjgoh"},"content":"            throw new InvalidJoeInputException(command);","lastModifiedDate":"2025-08-29T22:41:35","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"aaroncjgoh"},"content":"        }","lastModifiedDate":"2025-08-29T22:41:35","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"aaroncjgoh"},"content":"        int index;","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"aaroncjgoh"},"content":"        try {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"aaroncjgoh"},"content":"            index \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"aaroncjgoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"aaroncjgoh"},"content":"            throw new InvalidJoeInputException(command, \"Index must be a number\");","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"aaroncjgoh"},"content":"        }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"aaroncjgoh"},"content":"        if (index \u003c 1 || index \u003e taskList.getLength()) {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"aaroncjgoh"},"content":"            throw new InvalidJoeInputException(command, \"Invalid index\");","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"aaroncjgoh"},"content":"        }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"aaroncjgoh"},"content":"        return index;","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"aaroncjgoh"},"content":"}","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false}],"authorContributionMap":{"aaroncjgoh":235}},{"path":"src/main/java/joe/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaroncjgoh"},"content":"package joe.storage;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aaroncjgoh"},"content":"import java.io.File;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aaroncjgoh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aaroncjgoh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aaroncjgoh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aaroncjgoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aaroncjgoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aaroncjgoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aaroncjgoh"},"content":"import joe.task.Deadline;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aaroncjgoh"},"content":"import joe.task.Event;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aaroncjgoh"},"content":"import joe.task.Task;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aaroncjgoh"},"content":"import joe.task.TaskList;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aaroncjgoh"},"content":"import joe.task.ToDo;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aaroncjgoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aaroncjgoh"},"content":"/**","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aaroncjgoh"},"content":" * The {@code Storage} class handles reading and writing of tasks from and to","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aaroncjgoh"},"content":" * persistent storage.","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aaroncjgoh"},"content":" */","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aaroncjgoh"},"content":"public class Storage {","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aaroncjgoh"},"content":"    private final ArrayList\u003cTask\u003e todoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aaroncjgoh"},"content":"    private final String filepath;","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aaroncjgoh"},"content":"     * Creates a storage object that stores and loads history of tasks.","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aaroncjgoh"},"content":"     *","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aaroncjgoh"},"content":"     * @param filepath Filepath to the txt file storing the history.","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aaroncjgoh"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aaroncjgoh"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aaroncjgoh"},"content":"     * Stores the current tasks in the TaskList into a txt file.","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"aaroncjgoh"},"content":"     *","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"aaroncjgoh"},"content":"     * @param todoList TaskList of tasks.","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"aaroncjgoh"},"content":"    public void logTodoList(TaskList todoList) {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"aaroncjgoh"},"content":"        try {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"aaroncjgoh"},"content":"            File dir \u003d new File(\"data\");","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"aaroncjgoh"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"aaroncjgoh"},"content":"                dir.mkdirs();","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"aaroncjgoh"},"content":"            }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"aaroncjgoh"},"content":"            try (FileWriter fw \u003d new FileWriter(\"data/joe.txt\", false)) {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"aaroncjgoh"},"content":"                for (Task task : todoList.getTodoList()) {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"aaroncjgoh"},"content":"                    fw.write(task.toString() + System.lineSeparator());","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"aaroncjgoh"},"content":"                }","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"aaroncjgoh"},"content":"            }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"aaroncjgoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"aaroncjgoh"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"aaroncjgoh"},"content":"        }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"aaroncjgoh"},"content":"     * Converts the tasks in the memory txt file into an ArrayList.","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"aaroncjgoh"},"content":"     *","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"aaroncjgoh"},"content":"     * @return ArrayList of tasks in the memory txt file.","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"aaroncjgoh"},"content":"    public ArrayList\u003cTask\u003e loadTodoList() {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"aaroncjgoh"},"content":"        File file \u003d new File(filepath);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"aaroncjgoh"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"aaroncjgoh"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"aaroncjgoh"},"content":"                String taskLine \u003d scanner.nextLine();","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"aaroncjgoh"},"content":"                if (taskLine.isEmpty()) {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"aaroncjgoh"},"content":"                    continue;","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"aaroncjgoh"},"content":"                }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"aaroncjgoh"},"content":"                parseTaskLine(taskLine);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"aaroncjgoh"},"content":"            }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"aaroncjgoh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"aaroncjgoh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"aaroncjgoh"},"content":"        }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"aaroncjgoh"},"content":"        return this.todoList;","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"aaroncjgoh"},"content":"    // ---------------- Parsing Helpers ---------------- //","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"aaroncjgoh"},"content":"     * Parses a single line from the saved task file and adds the corresponding Task","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"aaroncjgoh"},"content":"     * (ToDo, Deadline, or Event) to the todoList.","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"aaroncjgoh"},"content":"     *","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"aaroncjgoh"},"content":"     * @param taskLine the raw line representing a saved task","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"aaroncjgoh"},"content":"    private void parseTaskLine(String taskLine) {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"aaroncjgoh"},"content":"        char taskType \u003d taskLine.charAt(1);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"aaroncjgoh"},"content":"        boolean isDone \u003d taskLine.charAt(4) \u003d\u003d \u00271\u0027;","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"aaroncjgoh"},"content":"        switch (taskType) {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"aaroncjgoh"},"content":"        case \u0027T\u0027 -\u003e todoList.add(parseToDo(taskLine, isDone));","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"aaroncjgoh"},"content":"        case \u0027D\u0027 -\u003e todoList.add(parseDeadline(taskLine, isDone));","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"aaroncjgoh"},"content":"        case \u0027E\u0027 -\u003e todoList.add(parseEvent(taskLine, isDone));","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"aaroncjgoh"},"content":"        default -\u003e {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"aaroncjgoh"},"content":"        }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"aaroncjgoh"},"content":"        }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"aaroncjgoh"},"content":"     * Parses a saved ToDo task from its string representation.","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"aaroncjgoh"},"content":"     *","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"aaroncjgoh"},"content":"     * @param taskLine the raw line representing the ToDo","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"aaroncjgoh"},"content":"     * @param isDone whether the task is marked as completed","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"aaroncjgoh"},"content":"     * @return a ToDo object reconstructed from the line","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"aaroncjgoh"},"content":"    private ToDo parseToDo(String taskLine, boolean isDone) {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"aaroncjgoh"},"content":"        String description \u003d taskLine.split(\" \", 2)[1];","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"aaroncjgoh"},"content":"        return new ToDo(description, isDone);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"aaroncjgoh"},"content":"     * Parses a saved Deadline task from its string representation.","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"aaroncjgoh"},"content":"     *","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"aaroncjgoh"},"content":"     * @param taskLine the raw line representing the Deadline","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"aaroncjgoh"},"content":"     * @param isDone whether the task is marked as completed","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"aaroncjgoh"},"content":"     * @return a Deadline object reconstructed from the line","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"aaroncjgoh"},"content":"    private Deadline parseDeadline(String taskLine, boolean isDone) {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"aaroncjgoh"},"content":"        String descriptionPart \u003d taskLine.split(\" \", 2)[1];","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"aaroncjgoh"},"content":"        String description \u003d descriptionPart.split(\"\\\\(\")[0].strip();","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"aaroncjgoh"},"content":"        String deadlineRaw \u003d taskLine.split(\"by:\")[1].strip();","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"aaroncjgoh"},"content":"        String deadline \u003d deadlineRaw.substring(0, deadlineRaw.length() - 1);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"aaroncjgoh"},"content":"        return new Deadline(description, formatDatesFromMemory(deadline), isDone);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"aaroncjgoh"},"content":"     * Parses a saved Event task from its string representation.","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"aaroncjgoh"},"content":"     *","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"aaroncjgoh"},"content":"     * @param taskLine the raw line representing the Event","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"aaroncjgoh"},"content":"     * @param isDone whether the task is marked as completed","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"aaroncjgoh"},"content":"     * @return an Event object reconstructed from the line","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"aaroncjgoh"},"content":"    private Event parseEvent(String taskLine, boolean isDone) {","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"aaroncjgoh"},"content":"        String descriptionPart \u003d taskLine.split(\" \", 2)[1];","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"aaroncjgoh"},"content":"        String description \u003d descriptionPart.split(\"\\\\(\")[0].strip();","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"aaroncjgoh"},"content":"        String fromRaw \u003d taskLine.split(\"from:\")[1].split(\"to:\")[0].strip();","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"aaroncjgoh"},"content":"        String toRaw \u003d taskLine.split(\"to: \")[1];","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"aaroncjgoh"},"content":"        String to \u003d toRaw.substring(0, toRaw.length() - 1);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"aaroncjgoh"},"content":"        return new Event(description, formatDatesFromMemory(fromRaw), formatDatesFromMemory(to), isDone);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"aaroncjgoh"},"content":"     * Formats a date string read from storage into the yyyy-MM-dd format.","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"aaroncjgoh"},"content":"     *","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"aaroncjgoh"},"content":"     * @param date date string in MMM dd yyyy format (e.g., \"Jan 02 2025\")","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"aaroncjgoh"},"content":"     * @return date string in yyyy-MM-dd format (e.g., \"2025-01-02\")","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T21:43:10","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"aaroncjgoh"},"content":"    public String formatDatesFromMemory(String date) {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"aaroncjgoh"},"content":"        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"aaroncjgoh"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"aaroncjgoh"},"content":"        return LocalDate.parse(date, inputFormat).format(outputFormat);","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"aaroncjgoh"},"content":"}","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false}],"authorContributionMap":{"aaroncjgoh":158}},{"path":"src/main/java/joe/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaroncjgoh"},"content":"package joe.task;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aaroncjgoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aaroncjgoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aaroncjgoh"},"content":"/**","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aaroncjgoh"},"content":" * Type of task that contains a description and due date","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aaroncjgoh"},"content":" */","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aaroncjgoh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aaroncjgoh"},"content":"    private static String formatDates(String by) {","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aaroncjgoh"},"content":"        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aaroncjgoh"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aaroncjgoh"},"content":"        String formattedFrom \u003d LocalDate.parse(by, inputFormat).format(outputFormat);","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aaroncjgoh"},"content":"        return \" (by: \" + formattedFrom + \")\";","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aaroncjgoh"},"content":"     * Creates a Deadline task that has not been completed.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aaroncjgoh"},"content":"     * ","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aaroncjgoh"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aaroncjgoh"},"content":"     * @param by Due date of the task.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aaroncjgoh"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aaroncjgoh"},"content":"        super(description + formatDates(by));","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aaroncjgoh"},"content":"     * Creates a Deadline task whose completion status can be specified.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aaroncjgoh"},"content":"     * ","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aaroncjgoh"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aaroncjgoh"},"content":"     * @param by Due date of the task.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aaroncjgoh"},"content":"     * @param isDone Completion status of the task.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aaroncjgoh"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2025-08-28T21:51:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aaroncjgoh"},"content":"        super(description + formatDates(by), isDone);","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-28T21:51:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-28T21:51:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"aaroncjgoh"},"content":"    @Override","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"aaroncjgoh"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"aaroncjgoh"},"content":"        return \"[D]\" + super.toString();","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"aaroncjgoh"},"content":"}","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false}],"authorContributionMap":{"aaroncjgoh":44}},{"path":"src/main/java/joe/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaroncjgoh"},"content":"package joe.task;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aaroncjgoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aaroncjgoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aaroncjgoh"},"content":"/**","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aaroncjgoh"},"content":" * Type of task that just contains a description, start date and end date","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aaroncjgoh"},"content":" */","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aaroncjgoh"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aaroncjgoh"},"content":"    private static String formatDates(String from, String to) {","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aaroncjgoh"},"content":"        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aaroncjgoh"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aaroncjgoh"},"content":"        String formattedFrom \u003d LocalDate.parse(from, inputFormat).format(outputFormat);","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aaroncjgoh"},"content":"        String formattedTo \u003d LocalDate.parse(to, inputFormat).format(outputFormat);","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aaroncjgoh"},"content":"        return \" (from: \" + formattedFrom + \" to: \" + formattedTo + \")\";","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aaroncjgoh"},"content":"     * Creates an Event task that has not been completed.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aaroncjgoh"},"content":"     * ","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aaroncjgoh"},"content":"     * @param description Description of event.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aaroncjgoh"},"content":"     * @param from Start date of the event.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aaroncjgoh"},"content":"     * @param to End date of the event.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aaroncjgoh"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aaroncjgoh"},"content":"        super(description + formatDates(from, to));","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aaroncjgoh"},"content":"     * Creates an Event task whose completion status can be specified.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aaroncjgoh"},"content":"     * ","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aaroncjgoh"},"content":"     * @param description Description of event.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aaroncjgoh"},"content":"     * @param from Start date of the event.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aaroncjgoh"},"content":"     * @param to End date of the event.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aaroncjgoh"},"content":"     * @param isDone Completion status of the event.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"aaroncjgoh"},"content":"    public Event(String description, String from, String to, boolean isDone) {","lastModifiedDate":"2025-08-28T21:51:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"aaroncjgoh"},"content":"        super(description + formatDates(from, to), isDone);","lastModifiedDate":"2025-08-28T22:45:34","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-28T21:51:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-28T21:51:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"aaroncjgoh"},"content":"    @Override","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"aaroncjgoh"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"aaroncjgoh"},"content":"        return \"[E]\" + super.toString();","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"aaroncjgoh"},"content":"}","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false}],"authorContributionMap":{"aaroncjgoh":47}},{"path":"src/main/java/joe/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaroncjgoh"},"content":"package joe.task;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aaroncjgoh"},"content":"/**","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aaroncjgoh"},"content":" * Parent class of all tasks, defines main attributes each task must have","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aaroncjgoh"},"content":" */","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aaroncjgoh"},"content":"public class Task {","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aaroncjgoh"},"content":"    private String description;","lastModifiedDate":"2025-08-21T15:55:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aaroncjgoh"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2025-08-21T15:55:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-21T15:55:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aaroncjgoh"},"content":"     * Creates a task object that has not been completed.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aaroncjgoh"},"content":"     * ","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aaroncjgoh"},"content":"     * @param description Description of task.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aaroncjgoh"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-21T15:55:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aaroncjgoh"},"content":"        assert !description.isEmpty() : \"Description of a task cannot be empty\";","lastModifiedDate":"2025-09-16T12:29:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aaroncjgoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-21T15:55:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-21T15:55:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-21T15:55:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aaroncjgoh"},"content":"     * Creates a task object whose completion status can be specified.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aaroncjgoh"},"content":"     * ","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aaroncjgoh"},"content":"     * @param description Description of task.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aaroncjgoh"},"content":"     * @param isDone Completion status.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aaroncjgoh"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-08-28T21:51:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aaroncjgoh"},"content":"        assert !description.isEmpty() : \"Description of a task cannot be empty\";","lastModifiedDate":"2025-09-16T12:29:36","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aaroncjgoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-28T21:51:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aaroncjgoh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-08-28T21:51:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-28T21:51:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-28T21:51:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aaroncjgoh"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aaroncjgoh"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-21T15:55:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aaroncjgoh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-21T15:55:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-21T15:55:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-21T15:55:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"aaroncjgoh"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"aaroncjgoh"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-08-21T15:55:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"aaroncjgoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-21T15:55:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-21T15:55:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-21T15:55:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"aaroncjgoh"},"content":"    @Override","lastModifiedDate":"2025-08-21T15:55:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"aaroncjgoh"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T15:55:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"aaroncjgoh"},"content":"        if (isDone) {","lastModifiedDate":"2025-08-21T15:55:22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"aaroncjgoh"},"content":"            return \"[1] \" + description;","lastModifiedDate":"2025-08-28T21:51:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"aaroncjgoh"},"content":"        } else {","lastModifiedDate":"2025-08-21T15:55:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"aaroncjgoh"},"content":"            return \"[0] \" + description;","lastModifiedDate":"2025-08-28T21:51:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"aaroncjgoh"},"content":"        }","lastModifiedDate":"2025-08-21T15:55:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-21T15:55:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"aaroncjgoh"},"content":"}","lastModifiedDate":"2025-08-21T15:55:22","isFullCredit":false}],"authorContributionMap":{"aaroncjgoh":54}},{"path":"src/main/java/joe/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaroncjgoh"},"content":"package joe.task;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aaroncjgoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aaroncjgoh"},"content":"/**","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aaroncjgoh"},"content":" * List specifically for handling Task objects","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aaroncjgoh"},"content":" */","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aaroncjgoh"},"content":"public class TaskList {","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aaroncjgoh"},"content":"    private ArrayList\u003cTask\u003e todoList;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aaroncjgoh"},"content":"     * Creates a list of tasks. Allows for direct manipulation of the tasks in the","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aaroncjgoh"},"content":"     * list.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aaroncjgoh"},"content":"     * ","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aaroncjgoh"},"content":"     * @param todoList ArrayList of tasks.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aaroncjgoh"},"content":"    public TaskList(ArrayList\u003cTask\u003e todoList) {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aaroncjgoh"},"content":"        if (todoList \u003d\u003d null) {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aaroncjgoh"},"content":"            this.todoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aaroncjgoh"},"content":"        } else {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aaroncjgoh"},"content":"            this.todoList \u003d todoList;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aaroncjgoh"},"content":"        }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aaroncjgoh"},"content":"     * Adds a task to the TaskList object.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aaroncjgoh"},"content":"     * ","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aaroncjgoh"},"content":"     * @param task Task object.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aaroncjgoh"},"content":"    public String addToList(Task task) {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aaroncjgoh"},"content":"        this.todoList.add(task);","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aaroncjgoh"},"content":"        return \"Got it. I\u0027ve added this task: \\n\" + task.toString() + \"\\nNow you have \" + this.todoList.size()","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aaroncjgoh"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aaroncjgoh"},"content":"     * Deletes a task from the TaskList object.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"aaroncjgoh"},"content":"     * ","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"aaroncjgoh"},"content":"     * @param index Index of the task to be deleted from the TaskList.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"aaroncjgoh"},"content":"    public String deleteFromList(int index) {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"aaroncjgoh"},"content":"        Task task \u003d this.todoList.get(index);","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"aaroncjgoh"},"content":"        this.todoList.remove(index);","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"aaroncjgoh"},"content":"        return \"Got it. I\u0027v removed this task from your list: \\n\" + task.toString() + \"\\nNow you have \"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"aaroncjgoh"},"content":"                + this.todoList.size() + \" tasks in the list.\";","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"aaroncjgoh"},"content":"     * Marks a task as done in the TaskList.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"aaroncjgoh"},"content":"     * ","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"aaroncjgoh"},"content":"     * @param index Index of the task to be marked as done.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"aaroncjgoh"},"content":"    public String markTaskAsDone(int index) {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"aaroncjgoh"},"content":"        assert index \u003e\u003d 0 : \"Index of task cannot be negative\";","lastModifiedDate":"2025-09-16T12:29:36","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"aaroncjgoh"},"content":"        String output \u003d \"\";","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"aaroncjgoh"},"content":"        if (index \u003e this.todoList.size()) {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"aaroncjgoh"},"content":"            return \"Invalid task number. Please try again.\";","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"aaroncjgoh"},"content":"        } else {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"aaroncjgoh"},"content":"            output +\u003d \"Ok, I\u0027ve marked the task as done: \\n\";","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"aaroncjgoh"},"content":"            Task task \u003d todoList.get(index - 1);","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"aaroncjgoh"},"content":"            task.markAsDone();","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"aaroncjgoh"},"content":"            output +\u003d task.toString();","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"aaroncjgoh"},"content":"            return output;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"aaroncjgoh"},"content":"        }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"aaroncjgoh"},"content":"     * Marks a task as not done in the TaskList.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"aaroncjgoh"},"content":"     * ","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"aaroncjgoh"},"content":"     * @param index Index of the task to be marked as not done.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"aaroncjgoh"},"content":"    public String markTaskAsNotDone(int index) {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"aaroncjgoh"},"content":"        assert index \u003e\u003d 0 : \"Index of task cannot be negative\";","lastModifiedDate":"2025-09-16T12:29:36","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"aaroncjgoh"},"content":"        String output \u003d \"\";","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"aaroncjgoh"},"content":"        if (index \u003e this.todoList.size()) {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"aaroncjgoh"},"content":"            return \"Invalid task number. Please try again.\";","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"aaroncjgoh"},"content":"        } else {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"aaroncjgoh"},"content":"            output +\u003d \"Ok, I\u0027ve marked the task as not done: \\n\";","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"aaroncjgoh"},"content":"            Task task \u003d todoList.get(index - 1);","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"aaroncjgoh"},"content":"            task.markAsNotDone();","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"aaroncjgoh"},"content":"            output +\u003d task.toString();","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"aaroncjgoh"},"content":"            return output;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"aaroncjgoh"},"content":"        }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"aaroncjgoh"},"content":"    public ArrayList\u003cTask\u003e getTodoList() {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"aaroncjgoh"},"content":"        return this.todoList;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"aaroncjgoh"},"content":"    public int getLength() {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"aaroncjgoh"},"content":"        return this.todoList.size();","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"aaroncjgoh"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"aaroncjgoh"},"content":"        return this.todoList.get(index);","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"aaroncjgoh"},"content":"}","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false}],"authorContributionMap":{"aaroncjgoh":97}},{"path":"src/main/java/joe/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaroncjgoh"},"content":"package joe.task;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aaroncjgoh"},"content":"/**","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aaroncjgoh"},"content":" * Type of task that just contains a description","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aaroncjgoh"},"content":" */","lastModifiedDate":"2025-09-16T12:57:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aaroncjgoh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aaroncjgoh"},"content":"     * Creates a ToDo task that has not been completed.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aaroncjgoh"},"content":"     * ","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aaroncjgoh"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aaroncjgoh"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aaroncjgoh"},"content":"        super(description);","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aaroncjgoh"},"content":"     * Creates a ToDo task whose completion status can be specified.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aaroncjgoh"},"content":"     * ","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aaroncjgoh"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aaroncjgoh"},"content":"     * @param isDone Completion status.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aaroncjgoh"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2025-08-28T21:51:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aaroncjgoh"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-28T21:51:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-28T21:51:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-28T21:51:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aaroncjgoh"},"content":"    @Override","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aaroncjgoh"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aaroncjgoh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aaroncjgoh"},"content":"}","lastModifiedDate":"2025-08-21T16:49:00","isFullCredit":false}],"authorContributionMap":{"aaroncjgoh":30}},{"path":"src/main/java/joe/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaroncjgoh"},"content":"package joe.ui;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aaroncjgoh"},"content":"import java.util.List;","lastModifiedDate":"2025-08-29T22:41:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aaroncjgoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aaroncjgoh"},"content":"import joe.task.Task;","lastModifiedDate":"2025-08-29T22:41:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aaroncjgoh"},"content":"import joe.task.TaskList;","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aaroncjgoh"},"content":"public class Ui {","lastModifiedDate":"2025-08-29T12:55:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aaroncjgoh"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aaroncjgoh"},"content":"    public Ui() {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aaroncjgoh"},"content":"     * Prints the welcome message onto the terminal.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aaroncjgoh"},"content":"    public static String welcomeText() {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aaroncjgoh"},"content":"        return \"Hello I\u0027m Joe\\n\" + \"What can I do for you?\";","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aaroncjgoh"},"content":"     * Prints a line that acts as a divider between input of user and output of joe.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aaroncjgoh"},"content":"    public void line() {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aaroncjgoh"},"content":"        System.out.println(\"--------------------------------\");","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aaroncjgoh"},"content":"     * Prints the exit message onto the terminal.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aaroncjgoh"},"content":"    public void byeText() {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aaroncjgoh"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aaroncjgoh"},"content":"        line();","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"aaroncjgoh"},"content":"     * Allows the user to input a string via the terminal. Returns the input as a","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"aaroncjgoh"},"content":"     * string.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"aaroncjgoh"},"content":"     * ","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"aaroncjgoh"},"content":"     * @return Input as a string.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"aaroncjgoh"},"content":"    public String takeInput() {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"aaroncjgoh"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"aaroncjgoh"},"content":"        return input;","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"aaroncjgoh"},"content":"    /**","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"aaroncjgoh"},"content":"     * Prints all the tasks in the todo list onto the terminal one after another.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"aaroncjgoh"},"content":"     * ","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"aaroncjgoh"},"content":"     * @param todoList Current list of tasks.","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"aaroncjgoh"},"content":"     */","lastModifiedDate":"2025-08-29T17:15:53","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"aaroncjgoh"},"content":"    public String printTodoList(TaskList todoList) {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"aaroncjgoh"},"content":"        String output \u003d \"Your To-Do List: \\n\";","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"aaroncjgoh"},"content":"        for (int i \u003d 0; i \u003c todoList.getTodoList().size(); i++) {","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"aaroncjgoh"},"content":"            output +\u003d (i + 1) + \". \" + todoList.getTodoList().get(i) + \"\\n\";","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"aaroncjgoh"},"content":"        }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"aaroncjgoh"},"content":"        return output;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T22:41:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"aaroncjgoh"},"content":"    public String printMatches(List\u003cTask\u003e matches) {","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"aaroncjgoh"},"content":"        String output \u003d \"Here are the matching tasks in your list: \\n\";","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"aaroncjgoh"},"content":"        if (matches.size() \u003d\u003d 0) {","lastModifiedDate":"2025-08-29T22:41:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"aaroncjgoh"},"content":"            output +\u003d \"No matches!\";","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"aaroncjgoh"},"content":"        } else {","lastModifiedDate":"2025-08-29T22:41:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"aaroncjgoh"},"content":"            for (int i \u003d 0; i \u003c matches.size(); i++) {","lastModifiedDate":"2025-08-29T22:41:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"aaroncjgoh"},"content":"                output +\u003d (i + 1) + \". \" + matches.get(i) + \"\\n\";","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"aaroncjgoh"},"content":"            }","lastModifiedDate":"2025-08-29T22:41:35","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"aaroncjgoh"},"content":"        }","lastModifiedDate":"2025-08-29T22:41:35","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T22:41:35","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"aaroncjgoh"},"content":"        return output;","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T22:41:35","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"aaroncjgoh"},"content":"}","lastModifiedDate":"2025-08-29T12:32:00","isFullCredit":false}],"authorContributionMap":{"aaroncjgoh":74}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"aaroncjgoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aaroncjgoh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aaroncjgoh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aaroncjgoh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aaroncjgoh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aaroncjgoh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aaroncjgoh"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aaroncjgoh"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aaroncjgoh"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aaroncjgoh"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aaroncjgoh"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aaroncjgoh"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aaroncjgoh"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aaroncjgoh"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aaroncjgoh"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aaroncjgoh"},"content":"  \u003c/children\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aaroncjgoh"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aaroncjgoh"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aaroncjgoh"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aaroncjgoh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false}],"authorContributionMap":{"aaroncjgoh":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"aaroncjgoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aaroncjgoh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aaroncjgoh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aaroncjgoh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aaroncjgoh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aaroncjgoh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aaroncjgoh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aaroncjgoh"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aaroncjgoh"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aaroncjgoh"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aaroncjgoh"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aaroncjgoh"},"content":"            fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aaroncjgoh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aaroncjgoh"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aaroncjgoh"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aaroncjgoh"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aaroncjgoh"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aaroncjgoh"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aaroncjgoh"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aaroncjgoh"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aaroncjgoh"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aaroncjgoh"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aaroncjgoh"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aaroncjgoh"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aaroncjgoh"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aaroncjgoh"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aaroncjgoh"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aaroncjgoh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aaroncjgoh"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aaroncjgoh"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aaroncjgoh"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aaroncjgoh"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aaroncjgoh"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aaroncjgoh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aaroncjgoh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"aaroncjgoh"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"aaroncjgoh"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"aaroncjgoh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"aaroncjgoh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"aaroncjgoh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"aaroncjgoh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-10T00:54:16","isFullCredit":false}],"authorContributionMap":{"aaroncjgoh":43}},{"path":"src/test/java/joe/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaroncjgoh"},"content":"package joe.parser;","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aaroncjgoh"},"content":"import joe.exception.InvalidJoeInputException;","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aaroncjgoh"},"content":"import joe.storage.Storage;","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aaroncjgoh"},"content":"import joe.task.TaskList;","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aaroncjgoh"},"content":"import joe.task.ToDo;","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aaroncjgoh"},"content":"import joe.ui.Ui;","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aaroncjgoh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aaroncjgoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aaroncjgoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aaroncjgoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aaroncjgoh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aaroncjgoh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aaroncjgoh"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aaroncjgoh"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aaroncjgoh"},"content":"import static org.mockito.Mockito.times;","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aaroncjgoh"},"content":"class ParserTest {","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aaroncjgoh"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aaroncjgoh"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aaroncjgoh"},"content":"    private Ui ui;","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aaroncjgoh"},"content":"    private Parser parser;","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aaroncjgoh"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aaroncjgoh"},"content":"    void setUp() {","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aaroncjgoh"},"content":"        taskList \u003d new TaskList(null);","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aaroncjgoh"},"content":"        storage \u003d mock(Storage.class); // mock storage so we don\u0027t write to file","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aaroncjgoh"},"content":"        ui \u003d mock(Ui.class); // mock UI","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aaroncjgoh"},"content":"        parser \u003d new Parser(taskList, storage, ui);","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aaroncjgoh"},"content":"    @Test","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aaroncjgoh"},"content":"    void testTodoCommandAddsTask() throws InvalidJoeInputException {","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aaroncjgoh"},"content":"        parser.executeCommand(\"todo Buy milk\");","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"aaroncjgoh"},"content":"        // Check task list has one task","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"aaroncjgoh"},"content":"        assertEquals(1, taskList.getLength());","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"aaroncjgoh"},"content":"        assertTrue(taskList.getTask(0) instanceof ToDo);","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"aaroncjgoh"},"content":"        assertEquals(\"[T][0] Buy milk\", taskList.getTask(0).toString());","lastModifiedDate":"2025-08-29T16:28:13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"aaroncjgoh"},"content":"        // Verify UI and storage were called","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"aaroncjgoh"},"content":"        verify(storage).logTodoList(taskList);","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"aaroncjgoh"},"content":"        verify(ui).line();","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"aaroncjgoh"},"content":"    @Test","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"aaroncjgoh"},"content":"    void testMarkCommandMarksTaskAsDone() throws InvalidJoeInputException {","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"aaroncjgoh"},"content":"        // Add a task first","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"aaroncjgoh"},"content":"        parser.executeCommand(\"todo Read book\");","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"aaroncjgoh"},"content":"        // Mark the first task","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"aaroncjgoh"},"content":"        parser.executeCommand(\"mark 1\");","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"aaroncjgoh"},"content":"        assertEquals(\"[T][1] Read book\", taskList.getTask(0).toString());","lastModifiedDate":"2025-08-29T16:28:13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"aaroncjgoh"},"content":"        // Verify UI and storage were called","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"aaroncjgoh"},"content":"        verify(storage, times(2)).logTodoList(taskList); // once for todo, once for mark","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"aaroncjgoh"},"content":"        verify(ui, times(2)).line();","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"aaroncjgoh"},"content":"    @Test","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"aaroncjgoh"},"content":"    void testInvalidCommandThrowsException() {","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"aaroncjgoh"},"content":"        Exception exception \u003d assertThrows(InvalidJoeInputException.class, () -\u003e {","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"aaroncjgoh"},"content":"            parser.executeCommand(\"foobar\");","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"aaroncjgoh"},"content":"        });","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"aaroncjgoh"},"content":"        assertNotNull(exception.getMessage());","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"aaroncjgoh"},"content":"}","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false}],"authorContributionMap":{"aaroncjgoh":72}},{"path":"src/test/java/joe/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaroncjgoh"},"content":"package joe.task;","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aaroncjgoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aaroncjgoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aaroncjgoh"},"content":"class TaskTest {","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aaroncjgoh"},"content":"    @Test","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aaroncjgoh"},"content":"    void testMarkAsDoneAndMarkAsNotDone() {","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aaroncjgoh"},"content":"        // Create a task initially not done","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aaroncjgoh"},"content":"        Task task \u003d new Task(\"Read book\");","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aaroncjgoh"},"content":"        assertEquals(\"[0] Read book\", task.toString(), \"Task should start as not done\");","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aaroncjgoh"},"content":"        // Mark as done","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aaroncjgoh"},"content":"        task.markAsDone();","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aaroncjgoh"},"content":"        assertEquals(\"[1] Read book\", task.toString(), \"Task should be marked as done\");","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aaroncjgoh"},"content":"        // Mark as not done again","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aaroncjgoh"},"content":"        task.markAsNotDone();","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aaroncjgoh"},"content":"        assertEquals(\"[0] Read book\", task.toString(), \"Task should be marked as not done again\");","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aaroncjgoh"},"content":"    @Test","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aaroncjgoh"},"content":"    void testToStringReflectsIsDoneCorrectly() {","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aaroncjgoh"},"content":"        // Task created as done","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aaroncjgoh"},"content":"        Task doneTask \u003d new Task(\"Write report\", true);","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aaroncjgoh"},"content":"        assertEquals(\"[1] Write report\", doneTask.toString(), \"toString should reflect done status\");","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aaroncjgoh"},"content":"","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aaroncjgoh"},"content":"        // Task created as not done","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aaroncjgoh"},"content":"        Task notDoneTask \u003d new Task(\"Go jogging\", false);","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aaroncjgoh"},"content":"        assertEquals(\"[0] Go jogging\", notDoneTask.toString(), \"toString should reflect not done status\");","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aaroncjgoh"},"content":"    }","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aaroncjgoh"},"content":"}","lastModifiedDate":"2025-08-29T15:22:53","isFullCredit":false}],"authorContributionMap":{"aaroncjgoh":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aaroncjgoh"},"content":"todo Cook Breakfast","lastModifiedDate":"2025-08-22T08:52:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aaroncjgoh"},"content":"deadline Finish Homework /by 7pm","lastModifiedDate":"2025-08-22T08:52:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aaroncjgoh"},"content":"event Play football /from 5pm /to 9pm","lastModifiedDate":"2025-08-22T08:52:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aaroncjgoh"},"content":"mark 4","lastModifiedDate":"2025-08-22T08:52:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aaroncjgoh"},"content":"mark 2","lastModifiedDate":"2025-08-22T08:52:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aaroncjgoh"},"content":"delete 2","lastModifiedDate":"2025-08-22T08:52:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aaroncjgoh"},"content":"list","lastModifiedDate":"2025-08-22T00:20:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aaroncjgoh"},"content":"bye","lastModifiedDate":"2025-08-22T00:20:50","isFullCredit":false}],"authorContributionMap":{"aaroncjgoh":8}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aaroncjgoh"},"content":"java -classpath ../bin Joe \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-22T00:20:50","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"-":36,"aaroncjgoh":1}}]
