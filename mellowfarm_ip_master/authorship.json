[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"# A-AiAssisted Increment","lastModifiedDate":"2025-09-18T19:28:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T19:28:17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"## Tools Used","lastModifiedDate":"2025-09-18T19:28:17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"- **Claude (Sonnet 4)** – Assisted in creating the project README/User Guide, refining JavaDocs, and improving overall clarity.","lastModifiedDate":"2025-09-18T19:28:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T19:28:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"## How AI Helped","lastModifiedDate":"2025-09-18T19:28:17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"- Made existing **JavaDocs** more descriptive and consistent across all classes.","lastModifiedDate":"2025-09-18T19:28:17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"- Suggested package organisation for the ip.","lastModifiedDate":"2025-09-18T19:28:17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"- Suggested better inline comments for methods for all classes.","lastModifiedDate":"2025-09-18T19:28:17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"- Helped ensure that code quality is reasonable, with reasonable use of SLAP.","lastModifiedDate":"2025-09-18T19:28:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T19:28:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"## Summary","lastModifiedDate":"2025-09-18T19:28:17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"This increment focuses on improving code maintainability and documentation clarity using AI tools. ","lastModifiedDate":"2025-09-18T19:28:17","isFullCredit":false}],"authorContributionMap":{"mellowfarm":13}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"# Bug User Guide","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"Bug is a friendly task management chatbot that helps you keep track of your todo items, deadlines, and events through a simple conversational interface! :)","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"## Quick Start","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"1. Download the latest bug.jar file from the releases","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"2. Double-click the jar file to launch Bug","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"3. Type commands in the text box and press Enter or click \"Send\"","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"4. Bug will respond and help you manage your tasks!","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"## Features","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"### Adding Tasks","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"#### Add a Todo Task","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"Add a simple task without a specific date.","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"Format: todo \u003cdescription\u003e","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"Example:","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"* todo buy groceries","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"* todo do laundry","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"#### Add a Deadline Task","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"Add a task with a due date.","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"Format: deadline \u003cdescription\u003e /by \u003cdate\u003e","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"* Date format: yyyy-MM-dd","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"Example:","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"* deadline submit assignment /by 2025-10-15","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"* deadline pay bills /by 2025-12-01","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"#### Add an Event Task","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"Add a task with start and end times.","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"Format: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"* DateTime format: yyyy-MM-dd HHmm","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"Example:","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"* event project meeting /from 2024-10-15 1400 /to 2024-10-15 1600","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"* event birthday party /from 2024-12-25 1800 /to 2024-12-25 2200","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"### Managing Tasks","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"#### List All Tasks","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"View all your current tasks.","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"Format: list","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"#### Mark Task as Done","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"Mark a completed task.","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"Format: mark \u003ctask number\u003e","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"Example: mark 1","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"#### Unmark Task","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"Mark a task as not done.","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"Format: unmark \u003ctask number\u003e","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"Example: unmark 2","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"#### Delete Task","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"Remove a task from your list.","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"Format: delete \u003ctask number\u003e","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"Example: delete 3","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"### Finding Tasks","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"#### Search Tasks","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"Find tasks containing specific keywords.","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"Format: find \u003ckeyword\u003e","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"Example:","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"* find book - finds tasks containing \"book\"","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"* find meeting - finds tasks containing \"meeting\"","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"### Advanced Features ","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"#### Snooze Tasks","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"Postpone deadline or event tasks by a specified duration.","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"Format: snooze \u003ctask number\u003e \u003cduration\u003e","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"* Duration format: \u003cnumber\u003e\u003cunit\u003e where unit is d (days), h (hours), or m (minutes)","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"Example:","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"* snooze 1 3d - postpone task 1 by 3 days","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"* snooze 2 2h - postpone task 2 by 2 hours","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"*Note: Todo tasks cannot be snoozed as they don\u0027t have dates.*","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"### Other Commands","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"#### Exit","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"Close Bug.","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"Format: bye","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"### Tips","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"* Task numbers start from 1 and are shown when you use the list command","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"* Bug automatically saves your tasks, so you won\u0027t lose them when you close the application","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"* If you make a mistake in a command, Bug will show you a helpful error message","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"* Commands are case-insensitive, so LIST, list, and List all work the same way","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"### Command Summary","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"| Action | Format | Example |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"| ------ | ------ | ------- |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"| Add Todo | `todo \u003cdescription\u003e` | `todo buy milk` |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"| Add Deadline | `deadline \u003cdescription\u003e /by \u003cdate\u003e` | `deadline essay /by 2024-12-01` |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"| Add Event | `event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e` | `event meeting /from 2024-12-01 1000 /to 2024-12-01 1200` |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"| List | `list` | `list` |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"| Mark Done | `mark \u003cnumber\u003e` | `mark 1` |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"| Unmark | `unmark \u003cnumber\u003e` | `unmark 1` |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"| Delete | `delete \u003cnumber\u003e` | `delete 1` |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"| Find | `find \u003ckeyword\u003e` | `find homework` |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mellowfarm"},"content":"| Snooze | `snooze \u003cnumber\u003e \u003cduration\u003e` | `snooze 1 2d` |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"| Exit | `bye` | `bye` |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"### Troubleshooting","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"#### Bug won\u0027t start?","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mellowfarm"},"content":"* Make sure you have Java 11 or later installed","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mellowfarm"},"content":"* Try running from command line: java -jar bug.jar","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mellowfarm"},"content":"#### Tasks not saving?","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mellowfarm"},"content":"* Check that Bug has permission to create files in the folder where you\u0027re running it","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mellowfarm"},"content":"* Bug saves tasks to a data folder in the same location as the jar file","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mellowfarm"},"content":"#### Getting error messages?","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mellowfarm"},"content":"* Check the command format matches the examples above","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mellowfarm"},"content":"* Make sure dates are in the correct format (yyyy-MM-dd)","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mellowfarm"},"content":"* Task numbers should be positive integers","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mellowfarm"},"content":"___","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mellowfarm"},"content":"Happy task managing with Bug! 🐛","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false}],"authorContributionMap":{"mellowfarm":96,"-":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-18T16:31:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"wrapper {","lastModifiedDate":"2025-09-18T00:11:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"    gradleVersion \u003d \u00277.6.2\u0027","lastModifiedDate":"2025-09-18T00:11:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"    distributionType \u003d Wrapper.DistributionType.ALL","lastModifiedDate":"2025-09-18T00:11:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-18T00:11:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T00:11:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"    mainClass.set(\"bug.Launcher\")","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"    archiveBaseName \u003d \"bug\"","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"    enableAssertions \u003d false","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"-":39,"mellowfarm":23}},{"path":"data/bug.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"T | 1 | buy groceries","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"D | 0 | book flight tickets | 2025-10-15","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"E | 0 | birthday party | 2025-12-25T18:00 | 2025-12-25T22:00","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"T | 1 | buy brandy","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false}],"authorContributionMap":{"mellowfarm":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"# Bug User Guide","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"Bug is a friendly task management chatbot that helps you keep track of your todo items, deadlines, and events through a simple conversational interface! :)","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"![Screenshot of Bug UI](Ui.png)","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"---","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"## Quick Start","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"1. Ensure you have **Java 17** or above installed on your computer.","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"2. Download the latest `bug.jar` file from the [releases page](https://github.com/yourusername/bug/releases).","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"3. Copy the file to the folder you want to use as the home folder for Bug.","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"4. Open a command terminal, navigate to the folder containing the jar file, and run:","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"```bash","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"   java -jar bug.jar","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"```","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"5. A GUI similar to the one shown above should appear in a few seconds.","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"6. Type commands in the command box and press Enter to execute them. For example:","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"    - type `list` to view all your tasks","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"    - type `todo buy milk` to add a simple task","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"7. Refer to the \u003cu\u003eFeatures\u003c/u\u003e section below for details of each command.","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"---","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"## Features","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"\u003e💡 **Notes about command format:**","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"\u003e- Words in `\u003c\u003e` are parameters to be supplied by you","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"\u003e- Parameters must be provided in the specified order","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"---","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"### Adding a todo task:`todo`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"Adds a simple task without any date or time.","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003e**Format:**`todo \u003cdescription\u003e`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003e**Examples:**","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"- `todo buy groceries`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"- `todo buy brandy yay!`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"- `todo do laundry`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"---","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"### Adding a deadline task:`deadline`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"Adds a task with a specific due date.","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003e**Format:**`deadline \u003cdescription\u003e /by \u003cdate\u003e`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"- `\u003cdate\u003e`must be in`YYYY-MM-DD`format","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003e**Examples:**","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"- `deadline submit assignment /by 2025-12-31`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"- `deadline pay bills /by 2025-11-15`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"---","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"### Adding an event task:`event`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"Adds a task with a specific start and end time.","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003e**Format:**`event \u003cdescription\u003e /from \u003cstart_datetime\u003e /to \u003cend_datetime\u003e`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"- `\u003cstart_datetime\u003e`and`\u003cend_datetime\u003e`must be in`YYYY-MM-DD HHMM`format","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003e**Examples:**","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"- `event team meeting /from 2025-10-20 1400 /to 2025-10-20 1600`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"- `event birthday party /from 2025-12-25 1800 /to 2025-12-25 2200`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"---","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"### Listing all tasks:`list`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"Shows a list of all tasks in your task list.","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003e**Format:**`list`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003e**Sample output:**","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"```text","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"your tasks are here:","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"1.[T][ ] buy groceries","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"2.[D][ ] submit assignment (by: 31 Dec 2025)","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"3.[E][ ] team meeting (from: 20 Oct 2025 14:00 to: 20 Oct 2025 16:00)","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"### Task Type Indicators:","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"- `[T]`\u003d Todo task","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"- `[D]`\u003d Deadline task","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"- `[E]`\u003d Event task","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"### Status Indicators:","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"- `[ ]`\u003d Not completed","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"- `[X]`\u003d Completed","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"---","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"### Marking a task as not done:`unmark`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"Marks the specified task as not completed.","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003e**Format:**`unmark \u003cindex\u003e`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003e**Examples:**","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"- `unmark 1`marks the 1st task as not completed","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"---","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"### Deleting a task:`delete`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"Permanently removes the specified task from your task list.","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003e**Format:**`delete \u003cindex\u003e`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003e**Examples:**","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"- `delete 3`deletes the 3rd task","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"- `list`followed by `delete 1`deletes the 1st task shown","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mellowfarm"},"content":"---","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mellowfarm"},"content":"### Finding tasks:`find`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mellowfarm"},"content":"Finds tasks whose descriptions contain the given keyword.","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003e**Format:**`find \u003ckeyword\u003e`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mellowfarm"},"content":"- The search is **case-sensitive**","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003e**Examples:**","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mellowfarm"},"content":"- `find book`returns tasks containing \"book\" in their description","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mellowfarm"},"content":"- `find meeting`returns all tasks with \"meeting\" in the description","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003e**Sample output:**","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mellowfarm"},"content":"```text","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mellowfarm"},"content":"your matching tasks are here:","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mellowfarm"},"content":"1.[E][ ] team meeting (from: 20 Oct 2025 14:00 to: 20 Oct 2025 16:00)","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mellowfarm"},"content":"2.[D][ ] prepare meeting agenda (by: 19 Oct 2025)","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mellowfarm"},"content":"```","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mellowfarm"},"content":"---","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mellowfarm"},"content":"### Snoozing a task:`snooze`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mellowfarm"},"content":"Postpones a deadline or event task by the specified duration.","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mellowfarm"},"content":"**Format:**`snooze \u003cindex duration\u003e`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mellowfarm"},"content":"**Duration formats:**","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mellowfarm"},"content":"- `Xd`for X days (eg `3d`\u003d 3 days)","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mellowfarm"},"content":"- `Xh`for X hours (eg `5h`\u003d 5 hours)","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mellowfarm"},"content":"- `Xm` for X minutes (eg `30m`\u003d 30 minutes)","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mellowfarm"},"content":"**Examples:**","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mellowfarm"},"content":"- `snooze 1 2d`postpones the 1st task by 2 days","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mellowfarm"},"content":"- `snooze 3 5h`postpones the 3rd task by 5 hours","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mellowfarm"},"content":"**Note:**","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mellowfarm"},"content":"- Cannot snooze completed tasks","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mellowfarm"},"content":"- Cannot snooze todo tasks (they have no dates)","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mellowfarm"},"content":"---","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mellowfarm"},"content":"### Exiting the program:`bye`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mellowfarm"},"content":"Exits the Bug application.","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mellowfarm"},"content":"**Format:**`bye`","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mellowfarm"},"content":"---","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mellowfarm"},"content":"# Command Summary","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mellowfarm"},"content":"| Action | Format | Example |","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mellowfarm"},"content":"|--------|--------|---------|","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mellowfarm"},"content":"| Help | `help` | `help` |","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mellowfarm"},"content":"| Add Todo | `todo DESCRIPTION` | `todo buy milk` |","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mellowfarm"},"content":"| Add Deadline | `deadline DESCRIPTION /by DATE` | `deadline submit report /by 2025-12-31` |","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mellowfarm"},"content":"| Add Event | `event DESCRIPTION /from START /to END` | `event meeting /from 2025-12-25 1400 /to 2025-12-25 1600` |","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mellowfarm"},"content":"| List Tasks | `list` | `list` |","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mellowfarm"},"content":"| Mark Done | `mark INDEX` | `mark 1` |","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mellowfarm"},"content":"| Mark Undone | `unmark INDEX` | `unmark 2` |","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mellowfarm"},"content":"| Delete Task | `delete INDEX` | `delete 3` |","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mellowfarm"},"content":"| Find Tasks | `find KEYWORD` | `find meeting` |","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mellowfarm"},"content":"| Snooze Task | `snooze INDEX DURATION` | `snooze 1 2d` |","lastModifiedDate":"2025-09-18T21:22:32","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mellowfarm"},"content":"| Exit | `bye` | `bye` |","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false}],"authorContributionMap":{"mellowfarm":126,"-":14}},{"path":"src/main/java/bug/Bug.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import command.Command;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import exception.BugException;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"import storage.Storage;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"import task.TaskList;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"import ui.Parser;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"import ui.Ui;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":" * Main application class for the Bug task management system.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":" * Handles user interaction, command processing, and application lifecycle.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":" * Serves as the entry point and coordinator between UI, storage, and task management components.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"public class Bug {","lastModifiedDate":"2025-08-20T17:53:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T23:22:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"    private final Storage storage;","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    private final Ui ui;","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T23:22:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"     * Initializes the Bug application with UI, storage, and task list components.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"     * Loads existing tasks from storage or starts with an empty list if loading fails.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"    public Bug() {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"        TaskList loadedTasks;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"            loadedTasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"            ui.showError(\"Failed to load tasks!\");","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"            loadedTasks \u003d new TaskList();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"        tasks \u003d loadedTasks;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T18:15:03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"     * Runs the application in console mode with continuous user input processing.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"    public void run() {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"        System.out.println(ui.showGreeting());","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"        while (true) {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"            if (input \u003d\u003d null) {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"                break; // Exit the loop if input is null","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T18:15:03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"            try {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"                Command command \u003d Parser.parse(input); // Parse the user input into a command","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"                String response \u003d command.execute(tasks, ui, storage); // Execute the command","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"                System.out.println(response);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"                if (command.isExit()) break; // Exit if the command signals to quit","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"            } catch (BugException e) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"                System.out.println(ui.showError(e.getMessage())); // Show error message if command fails","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-08-21T10:14:45","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-08-21T10:14:45","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T18:26:57","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T18:15:03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"     * Processes a single user input and returns the response.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"     * Used for GUI mode and testing.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"     * @param input the user command to process","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"     * @return the response message","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"        if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"            return ui.showError(\"Please enter a command!\");","lastModifiedDate":"2025-09-18T16:31:46","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"            Command cmd \u003d Parser.parse(input); // Parse the input into a command","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mellowfarm"},"content":"            String response \u003d cmd.execute(tasks, ui, storage); // Execute the command","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"            if (cmd.isExit()) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"                Platform.exit(); // Exit the JavaFX application if the exit command is issued","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-08-31T16:08:49","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mellowfarm"},"content":"            return response;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mellowfarm"},"content":"        } catch (BugException e) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mellowfarm"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mellowfarm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mellowfarm"},"content":"            return ui.showError(\"Something went wrong! Please try again.\");","lastModifiedDate":"2025-09-18T16:31:46","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-08-31T16:08:49","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T16:08:49","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T16:08:49","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mellowfarm"},"content":"     * Returns the application greeting message.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mellowfarm"},"content":"     * @return the greeting message","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mellowfarm"},"content":"    public String greeting() {","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mellowfarm"},"content":"        return ui.showGreeting();","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mellowfarm"},"content":"     * Main entry point for console application.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mellowfarm"},"content":"     * @param args command-line arguments (not used)","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mellowfarm"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mellowfarm"},"content":"        Bug bug \u003d new Bug(); // Create an instance of the Bug class","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mellowfarm"},"content":"        bug.run(); // Start the application","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T17:53:30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-20T17:53:30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false}],"authorContributionMap":{"mellowfarm":117}},{"path":"src/main/java/bug/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.text.TextFlow;","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":" * Custom JavaFX component representing a dialog box in the chat interface.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":" * Displays messages with accompanying display pictures for user and bot conversations.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":" * Supports flipping layout to differentiate between user and bot messages.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    private TextFlow dialog; // The label that holds the text of the message","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"    private ImageView displayPicture; // The image view for the display picture","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"     * Creates a dialog box with the specified text and image.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"     * @param text the message text to display","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"     * @param img the display picture to show alongside the message","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"            // Load the FXML layout for the dialog box","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"            fxmlLoader.setController(this); // Set this class as the controller for the FXML","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"            fxmlLoader.setRoot(this); // Set the root element of the FXML to this instance","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"            fxmlLoader.load(); // Load the FXML layout","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"            e.printStackTrace(); // Print the stack trace if loading fails","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"        Text textNode \u003d new Text(text);","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"        textNode.getStyleClass().add(\"dialog-text\");","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"        dialog.getChildren().add(textNode);","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"        setFillHeight(false);","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"        displayPicture.setImage(img); // Set the display picture image","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"     * Flips the dialog box layout to show image on the left and text on the right.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"     * Used for bot messages to differentiate from user messages.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"    private void flip() {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"        Collections.reverse(tmp); // Reverse the order of the children nodes","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"        getChildren().setAll(tmp); // Update the children of this HBox with the reversed nodes","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"        setAlignment(Pos.TOP_LEFT); // Align the content to the top-left","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"        dialog.getStyleClass().add(\"reply-text-flow\"); // Add a style class for the reply","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"     * Creates a dialog box for user messages.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"     * @param text the user\u0027s message text","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"     * @param img the user\u0027s display picture","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"     * @return a new dialog box formatted for user messages","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"        return new DialogBox(text, img); // Return a new dialog box for the user","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"     * Creates a dialog box for bot messages.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"     * @param text the bot\u0027s response text","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"     * @param img the bot\u0027s display picture","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"     * @return a new flipped dialog box formatted for bot messages","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"    public static DialogBox getBugDialog(String text, Image img) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"        var db \u003d new DialogBox(text, img); // Create a new dialog box for the bug","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mellowfarm"},"content":"        db.flip(); // Flip the dialog box to position the image and text correctly","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"        return db;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":87}},{"path":"src/main/java/bug/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":" * Application launcher to workaround classpath issues with JavaFX.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":" * Provides a clean entry point for the JavaFX application when using build tools.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"public class Launcher {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"     * Main entry point for launching the JavaFX Bug application.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"     * @param args command-line arguments passed to the application","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"        // Launch the main JavaFX application","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":19}},{"path":"src/main/java/bug/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":" * JavaFX application entry point for the Bug task management system.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":" * Initializes and displays the main application window with proper sizing and styling.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"    private Bug bug \u003d new Bug(); // The core logic of the task management app","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"     * Starts the JavaFX application by loading the main window and setting up the scene.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"     * @param stage the primary stage for the application window","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"            // Load the FXML file for the main window","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"            // Create a scene with the loaded layout and set it on the stage","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"            stage.setTitle(\"Bug\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"            // Set the minimum size for the window","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"            // Set the controller for the main window and pass the Bug instance to it","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBug(bug);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"            // Show the stage (the application window)","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"            stage.show();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"            e.printStackTrace(); // Print the stack trace if loading the FXML fails","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":50}},{"path":"src/main/java/bug/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":" * Controller for the main JavaFX window of the Bug application.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":" * Handles user input, displays chat dialogs, and manages the GUI interaction flow.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":" * Coordinates between user interface elements and the Bug application logic.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"    private ScrollPane scrollPane; // The scrollable container for the dialog box","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    private VBox dialogContainer; // The container holding the dialog boxes","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    private TextField userInput; // Text field for the user\u0027s input","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"    private Button sendButton; // Button for sending user input","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"    private Bug bug; // The core application logic","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"    // Default images for user and bug","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/sonny1.png\"));","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"    private Image bugImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/sonny2.png\"));","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"     * Initializes the main window by setting up scroll behavior.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"    public void initialise() {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"     * Sets the Bug application instance and displays the initial greeting.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"     * @param b the Bug application instance to connect with","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"    public void setBug(Bug b) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"        bug \u003d b;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"        String greeting \u003d bug.greeting();","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"        dialogContainer.getChildren().add(DialogBox.getBugDialog(greeting, bugImage));","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"     * Handles user input when the send button is pressed or enter key is hit.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"     * Processes the command through Bug and displays both user input and bot response.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"        String response \u003d bug.getResponse(input);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"        // Add the user dialog and bug response to the dialog container","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"                DialogBox.getBugDialog(response, bugImage)","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"        );","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"        Platform.runLater(() -\u003e {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"            scrollPane.setVvalue(1.0);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"        });","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":73}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package command;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import storage.Storage;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import task.TaskList;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import ui.Ui;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":" * Command to exit the Bug application.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":" * Displays a farewell message and signals application termination.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"     * Executes the bye command by showing a farewell message.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the task list (unused)","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface for displaying the farewell message","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage system (unused)","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"     * @return the farewell message","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"        return ui.showBye(); // Display the farewell message using the UI","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"     * Indicates that this command terminates the application.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"     * @return true to signal application exit","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"        return true; // The \u0027Bye\u0027 command triggers the exit process","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":35}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package command;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import exception.BugException;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import storage.Storage;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import task.TaskList;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"import ui.Ui;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":" * Abstract base class for all commands in the Bug application.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":" * Defines the contract for command execution and exit behavior.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":" * Implements the Command pattern for handling user actions.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"public abstract class Command {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"     * Executes the command with the given application components.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the task list to operate on","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface for displaying messages","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage system for persisting changes","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     * @return the response message to display to the user","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if the command execution fails","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws BugException;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"     * Indicates whether this command should terminate the application.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"     * @return true if the application should exit after this command","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"        return false; // Default behavior is that the command doesn\u0027t exit the application","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":34}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package command;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import exception.BugException;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import storage.Storage;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import task.Deadlines;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"import task.TaskList;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"import ui.Ui;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":" * Command to create a deadline task with a specific due date.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":" * Parses task description and due date, then adds the task to the list.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"    private final String description;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"    private final String dueDate;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"    private static final DateTimeFormatter INPUT_DT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"     * Creates a new deadline command.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"     * @param description the task description","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"     * @param dueDate the due date in yyyy-MM-dd format","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"    public DeadlineCommand(String description, String dueDate) {","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"     * Executes the deadline command by creating and storing a new deadline task.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the task list to add the deadline to","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface for displaying confirmation","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage system for persisting the task","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"     * @return confirmation message showing the created deadline","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if the description is empty, date is missing, date format is invalid, or storage fails","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BugException {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"        validateInputs();","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"            LocalDate by2 \u003d LocalDate.parse(dueDate, INPUT_DT);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"            Deadlines deadline \u003d new Deadlines(description, by2);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"            tasks.add(deadline);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"            storage.update(tasks);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"            return ui.showDeadline(deadline, tasks);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\"Invalid date format. Use yyyy-MM-dd (e.g., 2005-11-27)\");","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"     * Validates the input parameters for the deadline command.","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if validation fails","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"    private void validateInputs() throws BugException {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\"A deadline task cannot have an empty description!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"        if (dueDate.isEmpty()) {","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\"A deadline task must have a due date!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":72}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package command;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import exception.BugException;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import storage.Storage;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import task.Task;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"import task.TaskList;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"import ui.Ui;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":" * Command to remove a task from the task list.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":" * Validates the task index and removes the specified task.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"    private final int index;","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"     * Creates a new delete command for the specified task index.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"     * @param index the zero-based index of the task to delete","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"     * Executes the delete command by removing the task at the specified index.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the task list to remove the task from","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface for displaying confirmation","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage system for persisting changes","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"     * @return confirmation message showing the deleted task","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if no tasks exist, index is out of bounds, or storage fails","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BugException {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"        validateTaskExists(tasks);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"        validateIndex(tasks);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"        Task task \u003d tasks.delete(index);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"        storage.update(tasks);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"        return ui.showDeleted(task, tasks);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"     * Validates that tasks exist in the list.","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the task list to validate","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if no tasks exist","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"    private void validateTaskExists(TaskList tasks) throws BugException {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\"No tasks available to delete!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"     * Validates that the index is within bounds.","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the task list to check bounds against","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if index is out of bounds","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"    private void validateIndex(TaskList tasks) throws BugException {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\"Task index \" + (index + 1) + \" is out of range! You have \" + tasks.size() + \" tasks.\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":68}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package command;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import exception.BugException;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import storage.Storage;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import task.Events;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"import task.TaskList;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"import ui.Ui;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":" * Command to create an event task with start and end times.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":" * Parses task description and time range, then adds the event to the list.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"    private final String description;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"    private final String startTime;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"    private final String endTime;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    private static final DateTimeFormatter INPUT_DT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"     * Creates a new event command.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"     * @param description the event description","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"     * @param startTime the start time in yyyy-MM-dd HHmm format","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"     * @param endTime the end time in yyyy-MM-dd HHmm format","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"    public EventCommand(String description, String startTime, String endTime) {","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"     * Executes the event command by creating and storing a new event task.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the task list to add the event to","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface for displaying confirmation","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage system for persisting the task","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"     * @return confirmation message showing the created event","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if any field is empty or datetime format is invalid","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BugException {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"        // Validate the inputs","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\"An event task cannot have an empty description!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"        if (startTime.isEmpty()) {","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\"An event task must have a start date!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"        if (endTime.isEmpty()) {","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\"An event task must have an end date!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"        // Parse the start and end times","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"            LocalDateTime start2 \u003d LocalDateTime.parse(startTime, INPUT_DT);","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"            LocalDateTime end2 \u003d LocalDateTime.parse(endTime, INPUT_DT);","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"            Events event \u003d new Events(description, start2, end2);","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"            tasks.add(event); // Add the event to the task list","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"            storage.update(tasks); // Update storage with the new task list","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"            return ui.showEvent(event, tasks); // Show the event in the UI","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\"Invalid datetime. use yyyy-MM-dd HHmm (eg 2005-11-27 1800)!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":73}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package command;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import exception.BugException;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import storage.Storage;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import task.Task;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"import task.TaskList;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"import ui.Ui;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":" * Command to search for tasks containing a specific keyword.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":" * Searches task descriptions and returns matching tasks.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"    private final String keyword;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"     * Creates a new find command with the specified search keyword.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"     * @param keyword the text to search for in task descriptions","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"     * Executes the find command by searching for tasks containing the keyword.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the task list to search through","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface for displaying search results","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage system (unused)","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"     * @return message showing all matching tasks","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if the keyword is empty","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BugException {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"        // Check if the keyword is empty and throw an exception if it is","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\"What are you searching for?\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"        // Search for tasks that contain the keyword in their description","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"        ArrayList\u003cTask\u003e matches \u003d tasks.findTasks(keyword);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"        // Return the result to the user","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"        return ui.showFoundTasks(matches);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":50}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package command;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import exception.BugException;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import storage.Storage;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import task.TaskList;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"import ui.Ui;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":" * Command to display all tasks in the current task list.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":" * Shows all tasks with their indices and completion status.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"     * Executes the list command by displaying all tasks.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the task list to display","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface for showing the task list","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage system (unused)","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"     * @return formatted list of all tasks","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if the task list is empty","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BugException {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\"List is empty!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"        return ui.showList(tasks);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":30}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package command;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import exception.BugException;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import storage.Storage;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import task.Task;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"import task.TaskList;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"import ui.Ui;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":" * Command to mark a task as completed.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":" * Updates the task\u0027s completion status and saves changes to storage.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"    private final int index;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"     * Creates a new mark command for the specified task index.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"     * @param index the zero-based index of the task to mark as done","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"     * Executes the mark command by setting the task as completed.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the task list containing the task to mark","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface for displaying confirmation","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage system for persisting changes","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"     * @return confirmation message showing the completed task","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if no tasks exist, index is out of bounds, or storage fails","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BugException {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"        validateTaskExists(tasks);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"        validateIndex(tasks);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"        task.markAsDone();","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"        storage.update(tasks);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"        return ui.showDone(task);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"     * Validates that tasks exist in the list.","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the task list to validate","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if no tasks exist","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"    private void validateTaskExists(TaskList tasks) throws BugException {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\"No tasks available to mark!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"     * Validates that the index is within bounds.","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the task list to check bounds against","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if index is out of bounds","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"    private void validateIndex(TaskList tasks) throws BugException {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\"Task index \" + (index + 1) + \" is out of range! You have \" + tasks.size() + \" tasks.\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":69}},{"path":"src/main/java/command/SnoozeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package command;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import exception.BugException;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import storage.Storage;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import task.Task;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"import task.TaskList;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"import ui.Ui;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"import java.time.Duration;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":" * Command to postpone a task\u0027s deadline or event times by a specified duration.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":" * Supports flexible duration formats like \"3d\", \"5h\", \"30m\" for days, hours, and minutes.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":" * Cannot be applied to completed tasks or todo tasks without dates.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"public class SnoozeCommand extends Command {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"    private final int index;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"    private final String durationString;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"     * Creates a new snooze command.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"     * @param index the zero-based index of the task to snooze","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"     * @param durationString the duration in format \"3d\", \"5h\", or \"30m\"","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"    public SnoozeCommand(int index, String durationString) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"        this.durationString \u003d durationString;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"     * Executes the snooze command by postponing the task\u0027s dates.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the task list containing the task to snooze","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface for displaying confirmation or errors","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage system for persisting changes","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"     * @return confirmation message showing the snoozed task with updated dates","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if task is completed, index is invalid, or duration format is wrong","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BugException{","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"            if (task.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"                throw new BugException(\"Cannot snooze a completed task! unmark it first if needed!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"            Duration duration \u003d parseDuration(durationString);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"            if (duration \u003d\u003d null) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"                throw new BugException(\"Duration cannot be empty!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"            task.snooze(duration);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"            storage.update(tasks);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"            return ui.showSnooze(task);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"        } catch (BugException e) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\"No tasks at this index!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"     * Parses duration strings into Duration objects.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"     * Supports \"3d\" (days), \"5h\" (hours), \"30m\" (minutes) formats.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"     * @param durationString the duration string to parse","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"     * @return Duration object or null if format is invalid","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"    private static Duration parseDuration(String durationString) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"        Pattern pattern \u003d Pattern.compile(\"(\\\\d+)([dhm])\"); // match number + unit (d for days, h for hours, m for minutes)","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"        Matcher matcher \u003d pattern.matcher(durationString);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"            int amount \u003d Integer.parseInt(matcher.group(1));","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"            String unit \u003d matcher.group(2);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"            switch (unit) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"                case \"d\":","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"                    return Duration.ofDays(amount);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"                case \"h\":","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mellowfarm"},"content":"                    return Duration.ofHours(amount);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"                case \"m\":","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"                    return Duration.ofMinutes(amount);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"                default:","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mellowfarm"},"content":"                    return null;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mellowfarm"},"content":"        return null;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false}],"authorContributionMap":{"mellowfarm":94}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package command;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import exception.BugException;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import storage.Storage;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import task.Task;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"import task.TaskList;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"import task.ToDos;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"import ui.Ui;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":" * Command to create a simple todo task without any dates.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":" * Validates the task description and adds the todo to the task list.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"    private final String description;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"     * Creates a new todo command with the specified description.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     * @param description the todo task description","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"     * Executes the todo command by creating and storing a new todo task.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the task list to add the todo to","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface for displaying confirmation","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage system for persisting the task","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"     * @return confirmation message showing the created todo","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if the description is empty","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BugException {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\"A todo task cannot have an empty description!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"        Task todo \u003d new ToDos(description);","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"        storage.update(tasks);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"        return ui.showToDo(todo, tasks);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":46}},{"path":"src/main/java/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package command;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import storage.Storage;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import task.TaskList;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import ui.Ui;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":" * Command representing unrecognized or invalid user input.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":" * Returns appropriate error messages for various types of input failures.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"    private final String errorMessage;","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"     * Creates an unknown command with a default error message.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"    public UnknownCommand() {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"        this.errorMessage \u003d \"I don\u0027t know what you mean! Please re-enter your task :)!\";","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"     * Creates an unknown command with a specific error message.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"     * @param errorMessage the custom error message to display","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"    public UnknownCommand(String errorMessage) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"     * Executes the unknown command by displaying the error message.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the task list (unused)","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface for displaying the error","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage system (unused)","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"     * @return the error message explaining why the command failed","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"        return ui.showError(errorMessage);","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":43}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package command;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import exception.BugException;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import storage.Storage;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import task.Task;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"import task.TaskList;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"import ui.Ui;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":" * Command to mark a task as not completed.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":" * Updates the task\u0027s completion status and saves changes to storage.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"    private final int index;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"     * Creates a new unmark command for the specified task index.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"     * @param index the zero-based index of the task to mark as not done","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"     * Executes the unmark command by setting the task as not completed.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the task list containing the task to unmark","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface for displaying confirmation","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage system for persisting changes","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"     * @return confirmation message showing the uncompleted task","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if no tasks exist, index is out of bounds, or storage fails","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BugException {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"        validateTaskExists(tasks);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"        validateIndex(tasks);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"        task.markAsUndone();","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"        storage.update(tasks);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"        return ui.showUndone(task);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"     * Validates that tasks exist in the list.","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the task list to validate","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if no tasks exist","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"    private void validateTaskExists(TaskList tasks) throws BugException {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\"No tasks available to unmark!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"     * Validates that the index is within bounds.","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the task list to check bounds against","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if index is out of bounds","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"    private void validateIndex(TaskList tasks) throws BugException {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\"Task index \" + (index + 1) + \" is out of range! You have \" + tasks.size() + \" tasks.\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":69}},{"path":"src/main/java/exception/BugException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package exception;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":" * Custom exception for Bug application-specific errors.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":" * Provides meaningful error messages for various failure scenarios.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"public class BugException extends Exception {","lastModifiedDate":"2025-08-21T10:14:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"     * Creates a new BugException with the specified error message.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"     * @param message the error message describing what went wrong","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"    public BugException(String message) {","lastModifiedDate":"2025-08-21T10:14:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"        super(message);","lastModifiedDate":"2025-08-21T10:14:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"    } // Pass the message to the parent Exception class","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-21T10:14:45","isFullCredit":false}],"authorContributionMap":{"mellowfarm":17}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package storage;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import exception.BugException;","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import task.*;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-31T15:54:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-31T15:54:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-31T15:54:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T23:22:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T23:22:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"import java.util.List;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":" * Handles persistent storage of tasks to and from files.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":" * Manages file I/O operations, task serialization, and data directory creation.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":" * Uses pipe-separated format: T|status|description, D|status|description|date, E|status|description|start|end","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"public class Storage {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    private static final String FILE_NAME \u003d \"bug.txt\";","lastModifiedDate":"2025-08-31T15:54:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"    private final Path path \u003d Paths.get(\"data\", FILE_NAME);","lastModifiedDate":"2025-08-31T15:54:30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"     * Loads all tasks from the storage file.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"     * Creates data directory if it doesn\u0027t exist, handles missing or corrupted files gracefully.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"     * @return list of loaded tasks, or empty list if file doesn\u0027t exist","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if critical storage errors occur that prevent loading","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"    public List\u003cTask\u003e load() throws BugException {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"            ensureDataDirectoryExists();","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"            if (Files.notExists(path) || Files.size(path) \u003d\u003d 0) {","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"                return tasks;","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path, StandardCharsets.UTF_8);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"            for (int lineNumber \u003d 0; lineNumber \u003c lines.size(); lineNumber++) {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"                String line \u003d lines.get(lineNumber).trim();","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"                if (line.isEmpty()) {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"                    continue;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"                }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"                try {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"                    Task task \u003d parseTaskFromLine(line);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"                        tasks.add(task);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"                    }","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"                    // Log warning but continue processing other lines","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"                    System.err.println(\"Warning: Skipping corrupted line \" + (lineNumber + 1) + \": \" + line);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"                }","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\"Failed to read tasks from storage file: \" + e.getMessage());","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"        return tasks;","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"     * Parses a single line from the storage file into a Task object.","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"     * @param line the line to parse","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"     * @return the parsed Task, or null if parsing fails","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if the line format is invalid","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"    private Task parseTaskFromLine(String line) throws BugException {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"        String[] parts \u003d line.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\"Invalid task format: insufficient data\");","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mellowfarm"},"content":"        boolean isDone \u003d \"1\".equals(parts[1]);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"        Task task;","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mellowfarm"},"content":"            switch (type) {","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mellowfarm"},"content":"                case \"T\":","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mellowfarm"},"content":"                    if (parts.length !\u003d 3) {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mellowfarm"},"content":"                        throw new BugException(\"Invalid Todo format: expected 3 parts\");","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mellowfarm"},"content":"                    }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mellowfarm"},"content":"                    task \u003d new ToDos(description);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mellowfarm"},"content":"                    break;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mellowfarm"},"content":"                case \"D\":","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mellowfarm"},"content":"                    if (parts.length !\u003d 4) {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mellowfarm"},"content":"                        throw new BugException(\"Invalid Deadline format: expected 4 parts\");","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mellowfarm"},"content":"                    }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mellowfarm"},"content":"                    LocalDate dueDate \u003d LocalDate.parse(parts[3]);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mellowfarm"},"content":"                    task \u003d new Deadlines(description, dueDate);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mellowfarm"},"content":"                    break;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mellowfarm"},"content":"                case \"E\":","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mellowfarm"},"content":"                    if (parts.length !\u003d 5) {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mellowfarm"},"content":"                        throw new BugException(\"Invalid Event format: expected 5 parts\");","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mellowfarm"},"content":"                    }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mellowfarm"},"content":"                    LocalDateTime start \u003d LocalDateTime.parse(parts[3]);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mellowfarm"},"content":"                    LocalDateTime end \u003d LocalDateTime.parse(parts[4]);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mellowfarm"},"content":"                    task \u003d new Events(description, start, end);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mellowfarm"},"content":"                    break;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mellowfarm"},"content":"                default:","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mellowfarm"},"content":"                    throw new BugException(\"Unknown task type: \" + type);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mellowfarm"},"content":"            if (isDone) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mellowfarm"},"content":"                task.markAsDone();","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mellowfarm"},"content":"            return task;","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mellowfarm"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\"Invalid date format in task: \" + e.getMessage());","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mellowfarm"},"content":"     * Ensures the data directory exists, creating it if necessary.","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if directory creation fails","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mellowfarm"},"content":"    private void ensureDataDirectoryExists() throws BugException {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mellowfarm"},"content":"            if (path.getParent() !\u003d null) {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mellowfarm"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mellowfarm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\"Failed to create data directory: \" + e.getMessage());","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mellowfarm"},"content":"     * Saves all tasks to the storage file.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mellowfarm"},"content":"     * Overwrites existing file content with current task list in pipe-separated format.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the task list to save to file","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if saving fails","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mellowfarm"},"content":"    public void update(TaskList tasks) throws BugException {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mellowfarm"},"content":"            ensureDataDirectoryExists();","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mellowfarm"},"content":"            try (FileWriter writer \u003d new FileWriter(path.toFile())) {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mellowfarm"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mellowfarm"},"content":"                    writer.write(tasks.get(i).toFileString());","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mellowfarm"},"content":"                    writer.write(System.lineSeparator());","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"mellowfarm"},"content":"                }","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"mellowfarm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\"Failed to save tasks to storage: \" + e.getMessage());","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false}],"authorContributionMap":{"mellowfarm":160}},{"path":"src/main/java/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package task;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T23:22:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T22:35:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import java.time.Duration;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T22:35:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":" * Extends the base Task class with due date functionality and snooze capability.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"    protected LocalDate dueDate;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"    private static final DateTimeFormatter PRETTY \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2025-08-28T22:35:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"     * Creates a new deadline task.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"     * @param description the task description","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"     * @param dueDate the due date for the task","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    public Deadlines(String description, LocalDate dueDate) {","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"        super(description); // Initialize the description in the parent Task class","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"        this.dueDate \u003d dueDate; // Set the due date for the deadline task","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"     * Returns a formatted string representation of the deadline task.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"     * @return string showing task status, description, and formatted due date","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dueDate.format(PRETTY) + \")\";","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"     * Returns the file storage format for this deadline task.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"     * @return pipe-separated string for file storage","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"        int status \u003d isDone ? 1 : 0;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"        return String.format(\"D | %d | %s | %s\", status, description, dueDate);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"     * Snoozes the deadline by the specified duration.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"     * Converts duration to days and adds to the due date.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"     * @param duration the time to postpone the deadline","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"    public void snooze(Duration duration) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"        long totalHours \u003d duration.toHours();","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"        long daysToAdd \u003d totalHours / 24;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"        // if there are remaining hours, add one more day to be safe","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"        if (totalHours % 24 \u003e 0) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"            daysToAdd++;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"        this.dueDate \u003d this.dueDate.plusDays(daysToAdd);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false}],"authorContributionMap":{"mellowfarm":66}},{"path":"src/main/java/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package task;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T22:35:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T22:35:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import java.time.Duration;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T22:35:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":" * Represents a task with specific start and end times.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":" * Extends the base Task class with event scheduling and snooze functionality.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"public class Events extends Task {","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"    protected LocalDateTime start; // The start time of the event","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"    protected LocalDateTime end; // The end time of the event","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"    private static final DateTimeFormatter PRETTY \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2025-08-28T23:22:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"     * Creates a new event task.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"     * @param description the event description","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"     * @param start the start time of the event","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     * @param end the end time of the event","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"    public Events(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2025-08-28T23:22:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"        super(description);","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"     * Returns a formatted string representation of the event task.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"     * @return string showing task status, description, and formatted time range","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start.format(PRETTY) + \" to: \" + end.format(PRETTY) + \")\";","lastModifiedDate":"2025-08-28T23:22:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"     * Returns the file storage format for this event task.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"     * @return pipe-separated string for file storage","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"        int status \u003d isDone ? 1 : 0;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"        return String.format(\"E | %d | %s | %s | %s\", status, description, start, end);","lastModifiedDate":"2025-08-28T23:22:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"     * Snoozes the event by the specified duration.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"     * Moves both start and end times by the same duration to preserve event length.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"     * @param duration the time to postpone the event","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"    public void snooze(Duration duration) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"        this.start \u003d this.start.plus(duration);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"        this.end \u003d this.end.plus(duration);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false}],"authorContributionMap":{"mellowfarm":61}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package task;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import exception.BugException;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import java.time.Duration;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":" * Abstract base class representing a task in the Bug application.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":" * Provides common functionality for task description, completion status, and basic operations.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":" * Subclasses implement specific task types with additional features like dates and snoozing.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"public abstract class Task {","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"    protected String description;","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"     * Creates a new task with the specified description.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"     * Task is initially marked as not completed.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"     * @param description the task description text","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"     * Returns the visual status indicator for the task.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"     * @return \"X\" if completed, \" \" if not completed","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"     * Returns the task description.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"     * @return the task\u0027s description text","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"    public String getDescription(){","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"        return this.description;","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"     * Returns a formatted string representation of the task.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"     * @return string showing completion status and description","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"     * Returns the file storage representation of the task.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"     * Must be implemented by subclasses to define their storage format.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"     * @return pipe-separated string for file storage","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"    public abstract String toFileString();","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"     * Snoozes the task by the specified duration.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"     * Default implementation throws exception for tasks without dates (like todos).","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"     * @param duration the time period to postpone the task","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if the task type doesn\u0027t support snoozing","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mellowfarm"},"content":"    public void snooze(Duration duration) throws BugException {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"        throw new BugException(\"Cannot snooze todos, they have no dates!\");","lastModifiedDate":"2025-09-18T16:31:46","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false}],"authorContributionMap":{"mellowfarm":87}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package task;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import java.util.List;","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":" * Manages a collection of tasks with operations for adding, removing, and searching.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":" * Provides a wrapper around ArrayList with additional task-specific functionality.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"public class TaskList {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-31T15:54:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"     * Creates a new empty task list.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"        assert tasks !\u003d null : \"task list should never be null after initialisation!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"     * Creates a new task list initialized with the provided tasks.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"     * @param init the initial list of tasks to copy","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"    public TaskList(List\u003cTask\u003e init) {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"        assert init !\u003d null : \"initial task list cannot be null!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(init);","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"        assert tasks !\u003d null : \"task list should never be null after initialisation!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"     * @return the current size of the task list","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"    public int size() {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"        assert tasks !\u003d null : \"task list should never be null!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"        return tasks.size();","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"     * Adds a new task to the end of the list.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"     * @param task the task to add","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"    public void add(Task task) {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"        assert task !\u003d null : \"cannot add null task to tak list!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"        assert tasks !\u003d null : \"task list should never be null!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"        tasks.add(task);","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"     * Removes and returns the task at the specified index.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"     * @param index the zero-based index of the task to remove","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"     * @return the removed task","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"    public Task delete(int index) {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"        assert tasks !\u003d null : \"task list should never be null!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"        assert index \u003e\u003d 0 : \"index cannot be negative!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"        assert index \u003c tasks.size() : \"index must be within task lost bounds!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"     * Returns the task at the specified index without removing it.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"     * @param index the zero-based index of the task to retrieve","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"     * @return the task at the specified index","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"        assert tasks !\u003d null : \"task list should never be null!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"        assert index \u003e\u003d 0 : \"index cannot be negative!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"        assert index \u003c tasks.size() : \"index must be within task list bounds!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"     * Finds all tasks whose descriptions contain the specified keyword.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"     * Performs case-sensitive substring matching.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mellowfarm"},"content":"     * @param keyword the text to search for in task descriptions","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"     * @return list of tasks containing the keyword (may be empty)","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mellowfarm"},"content":"        assert keyword !\u003d null : \"search keyword cannot be null!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mellowfarm"},"content":"        assert tasks !\u003d null : \"task list should never be null!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mellowfarm"},"content":"        ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mellowfarm"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mellowfarm"},"content":"            assert t !\u003d null : \"task in list should never be null!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mellowfarm"},"content":"            if (t.getDescription().contains(keyword)) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mellowfarm"},"content":"                matches.add(t);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mellowfarm"},"content":"        return matches;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false}],"authorContributionMap":{"mellowfarm":99}},{"path":"src/main/java/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package task;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":" * Represents a simple todo task without any associated dates.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":" * Extends the base Task class with todo-specific display formatting.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":" * Cannot be snoozed since it has no deadline or schedule.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"public class ToDos extends Task {","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"     * Creates a new todo task.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"     * @param description the todo task description","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"    public ToDos(String description) {","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"        super(description);","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"     * Returns a formatted string representation of the todo task.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"     * @return string showing \"[T]\" prefix with task status and description","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"     * Returns the file storage format for this todo task.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"     * @return pipe-separated string: \"T | status | description\"","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"        int status \u003d isDone ? 1 : 0;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"        return \"T | \" + status + \" | \" + getDescription();","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false}],"authorContributionMap":{"mellowfarm":39}},{"path":"src/main/java/ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package ui;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import command.*;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":" * Parses user input strings and converts them into executable Command objects.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":" * Handles input validation, normalization, and command type determination.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":" * Implements robust parsing with comprehensive error handling and validation.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"public class Parser {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"     * Parses user input and returns the appropriate command object.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"     * @param input the raw user input string to parse","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"     * @return the corresponding Command object, or UnknownCommand if parsing fails","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"        if (input \u003d\u003d null || input.isBlank()) {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\"Input cannot be empty!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"        // Normalize multiple spaces to single spaces","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"        String normalizedInput \u003d input.trim().replaceAll(\"\\\\s+\", \" \");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"        String[] split \u003d normalizedInput.split(\" \", 2);","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"        assert split.length \u003e\u003d 1 : \"split should always have at least one element!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"        String instruction \u003d split[0].toLowerCase();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"        assert instruction !\u003d null : \"instruction should not be null!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"        String contents \u003d ((split.length \u003e 1) ? split[1] : \"\").trim();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"        assert contents !\u003d null : \"contents should not be null (can be empty)\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"        // Handle special characters in instruction","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"        if (!instruction.matches(\"[a-zA-Z]+\")) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\"Commands can only contain letters!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"        switch (instruction) {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"            case \"find\": {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"                return parseFind(contents);","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-08-31T16:08:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"            case \"bye\": {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"                return parseBye(contents);","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"            case \"list\": {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"                return parseList(contents);","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"            case \"snooze\": {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"                return parseSnoozeCommand(contents);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"            case \"todo\": {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"                return parseTodo(contents);","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"            case \"deadline\": {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"                return parseDeadlineCommand(contents);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"            case \"event\": {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"                return parseEventCommand(contents);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"            case \"mark\":","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"            case \"unmark\":","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"            case \"delete\": {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"                return parseIndexCommand(instruction, contents);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"            default:","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"                return new UnknownCommand(\"Unknown command \u0027\" + instruction + \"\u0027!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"     * Parses the find command with keyword validation.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"     * @param contents the search keyword","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"     * @return FindCommand or UnknownCommand if invalid","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"    private static Command parseFind(String contents) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"        if (contents.isEmpty()) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\"Find command requires a search keyword!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"        return new FindCommand(contents);","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"     * Parses the bye command (should have no parameters).","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mellowfarm"},"content":"     * @param contents should be empty for valid bye command","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mellowfarm"},"content":"     * @return ByeCommand or UnknownCommand if parameters provided","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mellowfarm"},"content":"    private static Command parseBye(String contents) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mellowfarm"},"content":"        if (!contents.isEmpty()) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\"Bye command should not have any parameters!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mellowfarm"},"content":"        return new ByeCommand();","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mellowfarm"},"content":"     * Parses the list command (should have no parameters).","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mellowfarm"},"content":"     * @param contents should be empty for valid list command","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mellowfarm"},"content":"     * @return ListCommand or UnknownCommand if parameters provided","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mellowfarm"},"content":"    private static Command parseList(String contents) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mellowfarm"},"content":"        if (!contents.isEmpty()) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\"List command should not have any parameters!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mellowfarm"},"content":"        return new ListCommand();","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mellowfarm"},"content":"     * Parses the snooze command with index and duration validation.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mellowfarm"},"content":"     * @param contents should contain index and duration (e.g., \"1 3d\")","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mellowfarm"},"content":"     * @return SnoozeCommand or UnknownCommand if format is invalid","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mellowfarm"},"content":"    private static Command parseSnoozeCommand(String contents) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mellowfarm"},"content":"        if (contents.isEmpty()) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\"Snooze command requires index and duration!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mellowfarm"},"content":"        String[] parts \u003d contents.split(\"\\\\s+\", 2);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mellowfarm"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\"Snooze format: snooze \u003cindex\u003e \u003cduration\u003e\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mellowfarm"},"content":"            int index \u003d Integer.parseInt(parts[0]) - 1;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mellowfarm"},"content":"            assert index \u003e\u003d -1 : \"parsed index should be valid (note: -1 will be caught by commands)\";","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mellowfarm"},"content":"            if (index \u003c\u003d -1) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mellowfarm"},"content":"                return new UnknownCommand(\"Task index must be positive!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mellowfarm"},"content":"            String duration \u003d parts[1];","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mellowfarm"},"content":"            return new SnoozeCommand(index, duration);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mellowfarm"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\"Task index must be a number!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mellowfarm"},"content":"     * Parses the todo command with description validation.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mellowfarm"},"content":"     * @param contents the task description","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mellowfarm"},"content":"     * @return TodoCommand or UnknownCommand if description is empty","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mellowfarm"},"content":"    private static Command parseTodo(String contents) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mellowfarm"},"content":"        if (contents.isEmpty()) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\"Todo command should be in the format: todo \u003cdescription\u003e!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"mellowfarm"},"content":"        return new TodoCommand(contents);","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"mellowfarm"},"content":"     * Parses the deadline command with description and date validation.","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"mellowfarm"},"content":"     * @param contents should contain description and date separated by /by","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"mellowfarm"},"content":"     * @return DeadlineCommand or UnknownCommand if format is invalid","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"mellowfarm"},"content":"     * Parses the deadline command with description and date validation.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"mellowfarm"},"content":"     * @param contents should contain description and date separated by /by","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"mellowfarm"},"content":"     * @return DeadlineCommand or UnknownCommand if format is invalid","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"mellowfarm"},"content":"    private static Command parseDeadlineCommand(String contents) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"mellowfarm"},"content":"        if (contents.isEmpty()) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\"Deadline command should be in the format: deadline \u003cdescription\u003e /by \u003cdate\u003e!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"mellowfarm"},"content":"        if (!contents.contains(\"/by\")) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\"Deadline command missing \u0027/by\u0027! Format: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"mellowfarm"},"content":"        return createDeadlineFromParts(contents);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"mellowfarm"},"content":"     * Creates a DeadlineCommand from parsed command parts.","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"mellowfarm"},"content":"     * @param contents the command contents containing description and date","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"mellowfarm"},"content":"     * @return DeadlineCommand or UnknownCommand if validation fails","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"mellowfarm"},"content":"    private static Command createDeadlineFromParts(String contents) {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"mellowfarm"},"content":"        String[] parts \u003d contents.split(\"/\", 2);","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"mellowfarm"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"mellowfarm"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\"Deadline description cannot be empty!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"mellowfarm"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\"Deadline command missing date after \u0027/by\u0027!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"mellowfarm"},"content":"        String dateStr \u003d parts[1].trim().split(\"\\\\s+\", 2)[1];","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"mellowfarm"},"content":"        return new DeadlineCommand(description, dateStr);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"mellowfarm"},"content":"     * Parses the event command with comprehensive validation.","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"mellowfarm"},"content":"     * @param contents should contain description, start time, and end time","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"mellowfarm"},"content":"     * @return EventCommand or UnknownCommand if format is invalid","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"mellowfarm"},"content":"    private static Command parseEventCommand(String contents) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"mellowfarm"},"content":"        if (contents.isEmpty()) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\"Event command should be in the format: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"mellowfarm"},"content":"        if (!hasRequiredEventSeparators(contents)) {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"mellowfarm"},"content":"            return getEventSeparatorError(contents);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"mellowfarm"},"content":"        return createEventFromParts(contents);","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"mellowfarm"},"content":"     * Checks if the event command has required /from and /to separators.","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"mellowfarm"},"content":"     * @param contents the command contents to check","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"mellowfarm"},"content":"     * @return true if both separators are present","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"mellowfarm"},"content":"    private static boolean hasRequiredEventSeparators(String contents) {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"mellowfarm"},"content":"        return contents.contains(\"/from\") \u0026\u0026 contents.contains(\"/to\");","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"mellowfarm"},"content":"     * Returns appropriate error for missing event separators.","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"mellowfarm"},"content":"     * @param contents the command contents to check","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"mellowfarm"},"content":"     * @return UnknownCommand with specific error message","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"mellowfarm"},"content":"    private static Command getEventSeparatorError(String contents) {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"mellowfarm"},"content":"        if (!contents.contains(\"/from\")) {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\"Event command missing \u0027/from\u0027!\");","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"mellowfarm"},"content":"        } else {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\"Event command missing \u0027/to\u0027!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"mellowfarm"},"content":"     * Creates an EventCommand from parsed command parts.","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"mellowfarm"},"content":"     * @param contents the command contents to parse","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"mellowfarm"},"content":"     * @return EventCommand or UnknownCommand if validation fails","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"mellowfarm"},"content":"    private static Command createEventFromParts(String contents) {","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"mellowfarm"},"content":"        String[] fromParts \u003d contents.split(\"/from\", 2);","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"mellowfarm"},"content":"        String description \u003d fromParts[0].trim();","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"mellowfarm"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\"Event description cannot be empty!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"mellowfarm"},"content":"        String[] toParts \u003d fromParts[1].split(\"/to\", 2);","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"mellowfarm"},"content":"        if (toParts.length \u003c 2) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\"Event command missing \u0027/to\u0027!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"mellowfarm"},"content":"        String startStr \u003d toParts[0].trim();","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"mellowfarm"},"content":"        String endStr \u003d toParts[1].trim();","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"mellowfarm"},"content":"        if (startStr.isEmpty() || endStr.isEmpty()) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\"Event times cannot be empty!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"mellowfarm"},"content":"        return new EventCommand(description, startStr, endStr);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T19:22:58","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"mellowfarm"},"content":"     * Parses index-based commands (mark, unmark, delete) with index validation.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"mellowfarm"},"content":"     * @param instruction the command type (mark, unmark, or delete)","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"mellowfarm"},"content":"     * @param contents should contain a single positive integer","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"mellowfarm"},"content":"     * @return appropriate Command or UnknownCommand if index is invalid","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"mellowfarm"},"content":"    private static Command parseIndexCommand(String instruction, String contents) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"mellowfarm"},"content":"        if (contents.isEmpty()) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(instruction + \" command requires a task index!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"mellowfarm"},"content":"        if (contents.contains(\" \")) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(instruction + \" command should only have one parameter (task index)!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"mellowfarm"},"content":"            int index \u003d Integer.parseInt(contents) - 1;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"mellowfarm"},"content":"            assert index \u003e\u003d -1 : \"parsed index should be valid\";","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"mellowfarm"},"content":"            if (index \u003c\u003d -1) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"mellowfarm"},"content":"                return new UnknownCommand(\"Task index must be a positive number!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"mellowfarm"},"content":"            switch (instruction) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"mellowfarm"},"content":"                case \"mark\":","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"mellowfarm"},"content":"                    return new MarkCommand(index);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"mellowfarm"},"content":"                case \"unmark\":","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"mellowfarm"},"content":"                    return new UnmarkCommand(index);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"mellowfarm"},"content":"                case \"delete\":","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"mellowfarm"},"content":"                    return new DeleteCommand(index);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"mellowfarm"},"content":"                default:","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"mellowfarm"},"content":"                    return new UnknownCommand();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"mellowfarm"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\"Task index must be a valid number, not \u0027\" + contents + \"\u0027!\");","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false}],"authorContributionMap":{"mellowfarm":315}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package ui;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import task.TaskList;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import task.Task;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":" * Handles all user interface interactions for the Bug application.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":" * Provides methods for displaying messages, reading input, and formatting output.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":" * Centralizes all user-facing text and formatting for consistency.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"public class Ui {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"    private final String name;","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"     * Creates a new user interface with the default application name.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"    public Ui() {","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"        name \u003d \"Bug\";","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"     * Returns the application greeting message.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"     * @return welcome message introducing the application","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"    public String showGreeting() {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"        return \"Hello :)! I\u0027m \" + name + \"\\nWhat can I do for you?\";","lastModifiedDate":"2025-09-17T21:28:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"     * Returns the farewell message for application exit.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"     * @return goodbye message","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"    public String showBye() {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"     * Reads a line of input from the user console.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"     * @return the user\u0027s input line, or null if no input available","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"    public String readLine() {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"        return sc.hasNextLine() ? sc.nextLine() : null;","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"     * Formats and returns a numbered list of all tasks.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the task list to display","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"     * @return formatted string showing all tasks with indices","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"    public String showList(TaskList tasks) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"        list.append(\"your tasks are here:\");","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"            list.append(\"\\n\").append(i).append(\".\").append(tasks.get(i - 1).toString());","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"        return list.toString();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"     * Returns confirmation message for marking a task as completed.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"     * @param task the task that was marked as done","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"     * @return confirmation message showing the completed task","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"    public String showDone(Task task) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n[\" + task.getStatusIcon() + \"] \" +","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"                task.getDescription();","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"     * Returns confirmation message for marking a task as not completed.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"     * @param task the task that was marked as undone","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"     * @return confirmation message showing the uncompleted task","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mellowfarm"},"content":"    public String showUndone(Task task) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n[\" + task.getStatusIcon() + \"] \" +","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"                task.getDescription();","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mellowfarm"},"content":"     * Returns confirmation message for task deletion.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mellowfarm"},"content":"     * @param task the task that was deleted","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the updated task list for showing new count","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mellowfarm"},"content":"     * @return confirmation message showing deleted task and remaining count","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mellowfarm"},"content":"    public String showDeleted(Task task, TaskList tasks) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mellowfarm"},"content":"        return \"Ok! I\u0027ve removed this task:\\n\" + task.toString() + \"\\nNow you have \" + tasks.size() +","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mellowfarm"},"content":"                \" tasks in the list.\";","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mellowfarm"},"content":"     * Returns confirmation message for todo task creation.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mellowfarm"},"content":"     * @param todo the todo task that was created","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the updated task list for showing new count","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mellowfarm"},"content":"     * @return confirmation message showing created todo and task count","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mellowfarm"},"content":"    public String showToDo(Task todo, TaskList tasks) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mellowfarm"},"content":"        return \"Ok! I\u0027ve added this task:\\n\" + todo.toString() + \"\\nNow you have \" +","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mellowfarm"},"content":"                tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mellowfarm"},"content":"     * Returns confirmation message for deadline task creation.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mellowfarm"},"content":"     * @param deadline the deadline task that was created","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the updated task list for showing new count","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mellowfarm"},"content":"     * @return confirmation message showing created deadline and task count","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mellowfarm"},"content":"    public String showDeadline(Task deadline, TaskList tasks) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mellowfarm"},"content":"        return \"Ok! I\u0027ve added this task:\\n\" + deadline.toString() +","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mellowfarm"},"content":"                \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mellowfarm"},"content":"     * Returns confirmation message for event task creation.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mellowfarm"},"content":"     * @param event the event task that was created","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the updated task list for showing new count","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mellowfarm"},"content":"     * @return confirmation message showing created event and task count","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mellowfarm"},"content":"    public String showEvent(Task event, TaskList tasks) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mellowfarm"},"content":"        return \"Ok! I\u0027ve added this task:\\n\" + event.toString() +","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mellowfarm"},"content":"                \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mellowfarm"},"content":"     * Returns the provided error message without additional formatting.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mellowfarm"},"content":"     * @param error the error message to display","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mellowfarm"},"content":"     * @return the error message as provided","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mellowfarm"},"content":"    public String showError(String error) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mellowfarm"},"content":"        return error;","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mellowfarm"},"content":"     * Formats and returns a numbered list of tasks matching a search.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mellowfarm"},"content":"     * @param matches the list of tasks that matched the search criteria","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mellowfarm"},"content":"     * @return formatted string showing matching tasks with indices","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mellowfarm"},"content":"    public String showFoundTasks(ArrayList\u003cTask\u003e matches) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"mellowfarm"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"mellowfarm"},"content":"        list.append(\"your matching tasks are here:\");","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"mellowfarm"},"content":"        for (int i \u003d 1; i \u003c\u003d matches.size(); i++) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"mellowfarm"},"content":"            list.append(\"\\n\").append(i).append(\".\").append(matches.get(i - 1).toString());","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"mellowfarm"},"content":"        return list.toString();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T16:08:49","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T16:08:49","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"mellowfarm"},"content":"     * Returns confirmation message for task snoozing.","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"mellowfarm"},"content":"     * @param task the task that was snoozed with updated dates","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"mellowfarm"},"content":"     * @return confirmation message showing the snoozed task","lastModifiedDate":"2025-09-18T17:30:22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"mellowfarm"},"content":"    public String showSnooze(Task task) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"mellowfarm"},"content":"        return \"OK, I\u0027ve snoozed this task:\\n\" + task.toString();","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false}],"authorContributionMap":{"mellowfarm":172}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-17T22:02:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2025-09-18T00:11:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-18T19:55:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"        \u003cTextFlow fx:id\u003d\"dialog\" styleClass\u003d\"text-flow\"\u003e","lastModifiedDate":"2025-09-18T00:11:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"                \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"                \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"        \u003c/TextFlow\u003e","lastModifiedDate":"2025-09-18T00:11:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-17T22:02:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bug.MainWindow\"\u003e","lastModifiedDate":"2025-09-18T19:55:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":19}},{"path":"src/test/java/bug/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import command.*;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import ui.Parser;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"public class ParserTest {","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"    // Test 1: test parsing todo","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"    public void testParseTodo() {","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d \"todo test task\";","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(command instanceof TodoCommand);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"        // TodoCommand doesn\u0027t expose description, but we can test execution","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    // Test 2: test parsing deadline","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    public void testParseDeadline() {","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d \"deadline test deadline /by 2025-09-01\";","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(command instanceof DeadlineCommand);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"    // Test 3: test parsing event","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"    public void testParseEvent() {","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d \"event test event /from 2025-09-01 0800 /to 2025-09-01 1200\";","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(command instanceof EventCommand);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"    // Test 4: test unknown command","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"    public void testUnknownCommand() {","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d \"unknown command\";","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(command instanceof UnknownCommand);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"    // Test 5: test parsing mark command","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"    public void testParseMark() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d \"mark 1\";","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(command instanceof MarkCommand);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"    // Test 6: test parsing unmark command","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"    public void testParseUnmark() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d \"unmark 2\";","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(command instanceof UnmarkCommand);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"    // Test 7: test parsing delete command","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"    public void testParseDelete() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d \"delete 3\";","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(command instanceof DeleteCommand);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"    // Test 8: test parsing snooze command","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mellowfarm"},"content":"    public void testParseSnooze() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d \"snooze 1 3d\";","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(command instanceof SnoozeCommand);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mellowfarm"},"content":"    // Test 9: test parsing find command","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mellowfarm"},"content":"    public void testParseFind() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d \"find book\";","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mellowfarm"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(command instanceof FindCommand);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mellowfarm"},"content":"    // Test 10: test parsing bye command","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mellowfarm"},"content":"    public void testParseBye() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d \"bye\";","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mellowfarm"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(command instanceof ByeCommand);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mellowfarm"},"content":"    // Test 11: test parsing list command","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mellowfarm"},"content":"    public void testParseList() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d \"list\";","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mellowfarm"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(command instanceof ListCommand);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mellowfarm"},"content":"    // Test 12: test case insensitive parsing","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mellowfarm"},"content":"    public void testCaseInsensitive() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mellowfarm"},"content":"        String[] inputs \u003d {\"TODO test\", \"List\", \"BYE\", \"MARK 1\"};","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mellowfarm"},"content":"        for (String input : inputs) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mellowfarm"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mellowfarm"},"content":"            assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mellowfarm"},"content":"            assertFalse(command instanceof UnknownCommand,","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mellowfarm"},"content":"                    \"Should parse case-insensitive: \" + input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mellowfarm"},"content":"    // Test 13: test invalid inputs return UnknownCommand","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mellowfarm"},"content":"    public void testInvalidInputs() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mellowfarm"},"content":"        String[] invalidInputs \u003d {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mellowfarm"},"content":"                \"\",                    // Empty string","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mellowfarm"},"content":"                \"   \",                 // Just spaces","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mellowfarm"},"content":"                null,                  // Null input","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mellowfarm"},"content":"                \"mark\",                // Missing index","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mellowfarm"},"content":"                \"deadline\",            // Missing description and date","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mellowfarm"},"content":"                \"snooze 1\",           // Missing duration","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mellowfarm"},"content":"                \"randomcommand\"        // Unknown command","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mellowfarm"},"content":"        };","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mellowfarm"},"content":"        for (String input : invalidInputs) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mellowfarm"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mellowfarm"},"content":"            assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mellowfarm"},"content":"            assertTrue(command instanceof UnknownCommand,","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mellowfarm"},"content":"                    \"Should be UnknownCommand for: \" + input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false}],"authorContributionMap":{"mellowfarm":155}},{"path":"src/test/java/bug/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"import storage.Storage;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"import task.*;","lastModifiedDate":"2025-09-18T16:46:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"import java.util.List;","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"public class StorageTest {","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"    private TestStorage storage;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    private Path testDataDir;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"    private Path testFile;","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"    public void setUp() throws IOException {","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"        // Create temporary directory for testing","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"        testDataDir \u003d Files.createTempDirectory(\"bug-test-data\");","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"        testFile \u003d testDataDir.resolve(\"test-bug.txt\");","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"        // Create custom storage that uses our test file","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"        storage \u003d new TestStorage(testFile);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"    @AfterEach","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"    public void tearDown() throws IOException {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"        // Clean up test files","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"        if (Files.exists(testFile)) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"            Files.delete(testFile);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"        if (Files.exists(testDataDir)) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"            Files.delete(testDataDir);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"    // Test 1: Load from empty/non-existent file","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"    public void testLoadEmptyFile() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"        List\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(tasks);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"    // Test 2: Save and load single todo task","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"    public void testSaveAndLoadTodo() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"        ToDos todo \u003d new ToDos(\"buy groceries\");","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"        // Save tasks","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"        storage.update(tasks);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"        // Load tasks back","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(1, loadedTasks.size());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"        Task loadedTask \u003d loadedTasks.get(0);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(loadedTask instanceof ToDos);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\"buy groceries\", loadedTask.getDescription());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\" \", loadedTask.getStatusIcon()); // Not done","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"    // Test 3: Save and load completed todo task","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"    public void testSaveAndLoadCompletedTodo() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"        ToDos todo \u003d new ToDos(\"completed task\");","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"        storage.update(tasks);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mellowfarm"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(1, loadedTasks.size());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"        Task loadedTask \u003d loadedTasks.get(0);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\"X\", loadedTask.getStatusIcon()); // Should be marked as done","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mellowfarm"},"content":"    // Test 4: Save and load deadline task","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mellowfarm"},"content":"    public void testSaveAndLoadDeadline() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mellowfarm"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mellowfarm"},"content":"        LocalDate dueDate \u003d LocalDate.of(2025, 12, 31);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mellowfarm"},"content":"        Deadlines deadline \u003d new Deadlines(\"submit report\", dueDate);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mellowfarm"},"content":"        tasks.add(deadline);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mellowfarm"},"content":"        storage.update(tasks);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mellowfarm"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(1, loadedTasks.size());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mellowfarm"},"content":"        Task loadedTask \u003d loadedTasks.get(0);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(loadedTask instanceof Deadlines);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\"submit report\", loadedTask.getDescription());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(loadedTask.toString().contains(\"31 Dec 2025\"));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mellowfarm"},"content":"    // Test 5: Save and load event task","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mellowfarm"},"content":"    public void testSaveAndLoadEvent() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mellowfarm"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mellowfarm"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 12, 25, 14, 0);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mellowfarm"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2025, 12, 25, 16, 0);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mellowfarm"},"content":"        Events event \u003d new Events(\"team meeting\", start, end);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mellowfarm"},"content":"        tasks.add(event);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mellowfarm"},"content":"        storage.update(tasks);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mellowfarm"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(1, loadedTasks.size());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mellowfarm"},"content":"        Task loadedTask \u003d loadedTasks.get(0);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(loadedTask instanceof Events);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\"team meeting\", loadedTask.getDescription());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(loadedTask.toString().contains(\"25 Dec 2025\"));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(loadedTask.toString().contains(\"14:00\"));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(loadedTask.toString().contains(\"16:00\"));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mellowfarm"},"content":"    // Test 6: Save and load multiple mixed task types","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mellowfarm"},"content":"    public void testSaveAndLoadMultipleTasks() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mellowfarm"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mellowfarm"},"content":"        // Add different task types","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mellowfarm"},"content":"        ToDos todo \u003d new ToDos(\"buy milk\");","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mellowfarm"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mellowfarm"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mellowfarm"},"content":"        Deadlines deadline \u003d new Deadlines(\"assignment\", LocalDate.of(2025, 6, 15));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mellowfarm"},"content":"        tasks.add(deadline);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mellowfarm"},"content":"        Events event \u003d new Events(\"party\",","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mellowfarm"},"content":"                LocalDateTime.of(2025, 7, 4, 19, 0),","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mellowfarm"},"content":"                LocalDateTime.of(2025, 7, 4, 23, 0));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mellowfarm"},"content":"        event.markAsDone();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mellowfarm"},"content":"        tasks.add(event);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mellowfarm"},"content":"        storage.update(tasks);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mellowfarm"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(3, loadedTasks.size());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"mellowfarm"},"content":"        // Check todo","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"mellowfarm"},"content":"        Task task1 \u003d loadedTasks.get(0);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(task1 instanceof ToDos);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\"X\", task1.getStatusIcon());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"mellowfarm"},"content":"        // Check deadline","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"mellowfarm"},"content":"        Task task2 \u003d loadedTasks.get(1);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(task2 instanceof Deadlines);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\" \", task2.getStatusIcon());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"mellowfarm"},"content":"        // Check event","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"mellowfarm"},"content":"        Task task3 \u003d loadedTasks.get(2);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(task3 instanceof Events);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\"X\", task3.getStatusIcon());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"mellowfarm"},"content":"    // Test 7: Test file format correctness","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"mellowfarm"},"content":"    public void testFileFormatCorrectness() throws IOException {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"mellowfarm"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"mellowfarm"},"content":"        tasks.add(new ToDos(\"test todo\"));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"mellowfarm"},"content":"        tasks.add(new Deadlines(\"test deadline\", LocalDate.of(2025, 1, 1)));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"mellowfarm"},"content":"        storage.update(tasks);","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"mellowfarm"},"content":"        // Read the actual file content","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"mellowfarm"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(testFile);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(2, lines.size());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\"T | 0 | test todo\", lines.get(0));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\"D | 0 | test deadline | 2025-01-01\", lines.get(1));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"mellowfarm"},"content":"    // Test 8: Test overwriting existing file","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"mellowfarm"},"content":"    public void testOverwriteExistingFile() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"mellowfarm"},"content":"        // Save first set of tasks","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"mellowfarm"},"content":"        TaskList tasks1 \u003d new TaskList();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"mellowfarm"},"content":"        tasks1.add(new ToDos(\"first task\"));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"mellowfarm"},"content":"        storage.update(tasks1);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"mellowfarm"},"content":"        // Save different set of tasks (should overwrite)","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"mellowfarm"},"content":"        TaskList tasks2 \u003d new TaskList();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"mellowfarm"},"content":"        tasks2.add(new ToDos(\"second task\"));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"mellowfarm"},"content":"        tasks2.add(new ToDos(\"third task\"));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"mellowfarm"},"content":"        storage.update(tasks2);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"mellowfarm"},"content":"        // Load and verify only second set exists","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"mellowfarm"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(2, loadedTasks.size());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\"second task\", loadedTasks.get(0).getDescription());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\"third task\", loadedTasks.get(1).getDescription());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"mellowfarm"},"content":"    // Test 10: Test empty task list save","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"mellowfarm"},"content":"    public void testSaveEmptyTaskList() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"mellowfarm"},"content":"        TaskList emptyTasks \u003d new TaskList();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"mellowfarm"},"content":"        storage.update(emptyTasks);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"mellowfarm"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(0, loadedTasks.size());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"mellowfarm"},"content":"    // Custom Storage class that actually overrides the file path","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"mellowfarm"},"content":"    private static class TestStorage extends Storage {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"mellowfarm"},"content":"        private final Path testFilePath;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"mellowfarm"},"content":"        public TestStorage(Path testFilePath) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"mellowfarm"},"content":"            this.testFilePath \u003d testFilePath;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"mellowfarm"},"content":"        @Override","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"mellowfarm"},"content":"        public List\u003cTask\u003e load() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"mellowfarm"},"content":"            // Copy the logic from Storage.load() but use our test file","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"mellowfarm"},"content":"            List\u003cTask\u003e out \u003d new java.util.ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"mellowfarm"},"content":"            try {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"mellowfarm"},"content":"                // Ensure the parent directory exists","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"mellowfarm"},"content":"                if (testFilePath.getParent() !\u003d null) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"mellowfarm"},"content":"                    Files.createDirectories(testFilePath.getParent());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"mellowfarm"},"content":"                }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"mellowfarm"},"content":"                // If the file doesn\u0027t exist or is empty, return empty list","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"mellowfarm"},"content":"                if (Files.notExists(testFilePath) || Files.size(testFilePath) \u003d\u003d 0) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"mellowfarm"},"content":"                    return out;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"mellowfarm"},"content":"                }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"mellowfarm"},"content":"                // Read all lines from the test file","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"mellowfarm"},"content":"                for (String line : Files.readAllLines(testFilePath)) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"mellowfarm"},"content":"                    String s \u003d line.trim();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"mellowfarm"},"content":"                    if (s.isEmpty()) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"mellowfarm"},"content":"                        continue;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"mellowfarm"},"content":"                    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"mellowfarm"},"content":"                    try {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"mellowfarm"},"content":"                        String[] p \u003d s.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"mellowfarm"},"content":"                        // Skip lines that don\u0027t have enough parts","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"mellowfarm"},"content":"                        if (p.length \u003c 3) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"mellowfarm"},"content":"                            continue; // Skip invalid lines","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"mellowfarm"},"content":"                        }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"mellowfarm"},"content":"                        String type \u003d p[0];","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"mellowfarm"},"content":"                        boolean isDone \u003d \"1\".equals(p[1]);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"mellowfarm"},"content":"                        switch (type) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"mellowfarm"},"content":"                            case \"T\":","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"mellowfarm"},"content":"                                if (p.length \u003e\u003d 3) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"mellowfarm"},"content":"                                    Task todo \u003d new ToDos(p[2]);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"mellowfarm"},"content":"                                    if (isDone) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"mellowfarm"},"content":"                                        todo.markAsDone();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"mellowfarm"},"content":"                                    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"mellowfarm"},"content":"                                    out.add(todo);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"mellowfarm"},"content":"                                }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"mellowfarm"},"content":"                                break;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"mellowfarm"},"content":"                            case \"D\":","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"mellowfarm"},"content":"                                if (p.length \u003e\u003d 4) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"mellowfarm"},"content":"                                    LocalDate by \u003d LocalDate.parse(p[3]);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"mellowfarm"},"content":"                                    Task deadline \u003d new Deadlines(p[2], by);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"mellowfarm"},"content":"                                    if (isDone) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"mellowfarm"},"content":"                                        deadline.markAsDone();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"mellowfarm"},"content":"                                    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"mellowfarm"},"content":"                                    out.add(deadline);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"mellowfarm"},"content":"                                }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"mellowfarm"},"content":"                                break;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"mellowfarm"},"content":"                            case \"E\":","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"mellowfarm"},"content":"                                if (p.length \u003e\u003d 5) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"mellowfarm"},"content":"                                    LocalDateTime start \u003d LocalDateTime.parse(p[3]);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"mellowfarm"},"content":"                                    LocalDateTime end \u003d LocalDateTime.parse(p[4]);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"mellowfarm"},"content":"                                    Task event \u003d new Events(p[2], start, end);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"mellowfarm"},"content":"                                    if (isDone) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"mellowfarm"},"content":"                                        event.markAsDone();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"mellowfarm"},"content":"                                    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"mellowfarm"},"content":"                                    out.add(event);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"mellowfarm"},"content":"                                }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"mellowfarm"},"content":"                                break;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"mellowfarm"},"content":"                            default:","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"mellowfarm"},"content":"                                // Unknown task type, skip this line","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"mellowfarm"},"content":"                                break;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"mellowfarm"},"content":"                        }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"mellowfarm"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"mellowfarm"},"content":"                        // Skip any line that causes parsing errors","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"mellowfarm"},"content":"                        System.err.println(\"Skipping invalid line: \" + s);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"mellowfarm"},"content":"                        continue;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"mellowfarm"},"content":"                    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"mellowfarm"},"content":"                }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"mellowfarm"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"mellowfarm"},"content":"                System.err.println(\"Warning: failed to load test tasks: \" + e.getMessage());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"mellowfarm"},"content":"            return out;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"mellowfarm"},"content":"        @Override","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"mellowfarm"},"content":"        public void update(TaskList tasks) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"mellowfarm"},"content":"            // Copy the logic from Storage.update() but use our test file","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"mellowfarm"},"content":"            try {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"mellowfarm"},"content":"                // Ensure the parent directory exists","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"mellowfarm"},"content":"                if (testFilePath.getParent() !\u003d null) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"mellowfarm"},"content":"                    Files.createDirectories(testFilePath.getParent());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"mellowfarm"},"content":"                }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"mellowfarm"},"content":"                // Write each task to the test file","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"mellowfarm"},"content":"                FileWriter fw \u003d new FileWriter(testFilePath.toFile());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"mellowfarm"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"mellowfarm"},"content":"                    fw.write(tasks.get(i).toFileString());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"mellowfarm"},"content":"                    fw.write(System.lineSeparator());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"mellowfarm"},"content":"                }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"mellowfarm"},"content":"                fw.close();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"mellowfarm"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"mellowfarm"},"content":"                System.err.println(\"Failed to save test file: \" + e.getMessage());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false}],"authorContributionMap":{"mellowfarm":329}},{"path":"src/test/java/bug/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import task.*;","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"import java.util.List;","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":" * Comprehensive unit tests for the TaskList class.","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":" * Tests all TaskList operations including construction, adding, deleting, retrieving, and searching tasks.","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":" * Covers edge cases, boundary conditions, and various task types.","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"public class TaskListTest {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"    private Task todo1;","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    private Task todo2;","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"    private Task deadline1;","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"    private Task deadline2;","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"    private Task event1;","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"    public void setUp() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"        // Create test tasks","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"        todo1 \u003d new ToDos(\"Buy groceries\");","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"        todo2 \u003d new ToDos(\"Walk the dog\");","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"        deadline1 \u003d new Deadlines(\"Submit assignment\", LocalDate.of(2025, 12, 31));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"        deadline2 \u003d new Deadlines(\"Pay bills\", LocalDate.of(2025, 11, 15));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"        event1 \u003d new Events(\"Team meeting\",","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"                LocalDateTime.of(2025, 10, 20, 14, 0),","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"                LocalDateTime.of(2025, 10, 20, 16, 0));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"    // Test 1: Constructor tests","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"    public void testEmptyTaskListConstructor() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(taskList);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"    public void testConstructorWithInitialTasks() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"        List\u003cTask\u003e initialTasks \u003d Arrays.asList(todo1, deadline1, event1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"        TaskList newTaskList \u003d new TaskList(initialTasks);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(3, newTaskList.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(todo1, newTaskList.get(0));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(deadline1, newTaskList.get(1));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(event1, newTaskList.get(2));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"    public void testConstructorWithEmptyList() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"        TaskList newTaskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(0, newTaskList.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"    // Test 2: Add task tests","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"    public void testAddSingleTask() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(todo1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(todo1, taskList.get(0));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"    public void testAddMultipleTasks() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(todo1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(deadline1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(event1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(3, taskList.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(todo1, taskList.get(0));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(deadline1, taskList.get(1));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(event1, taskList.get(2));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mellowfarm"},"content":"    public void testAddDifferentTaskTypes() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(todo1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(deadline1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(event1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(taskList.get(0) instanceof ToDos);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(taskList.get(1) instanceof Deadlines);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(taskList.get(2) instanceof Events);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mellowfarm"},"content":"    // Test 3: Delete task tests","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mellowfarm"},"content":"    public void testDeleteSingleTask() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(todo1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mellowfarm"},"content":"        Task deleted \u003d taskList.delete(0);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(todo1, deleted);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mellowfarm"},"content":"    public void testDeleteFromMiddle() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(todo1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(deadline1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(event1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mellowfarm"},"content":"        Task deleted \u003d taskList.delete(1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(deadline1, deleted);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(todo1, taskList.get(0));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(event1, taskList.get(1));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mellowfarm"},"content":"    public void testDeleteFirstTask() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(todo1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(deadline1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(event1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mellowfarm"},"content":"        Task deleted \u003d taskList.delete(0);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(todo1, deleted);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(deadline1, taskList.get(0));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(event1, taskList.get(1));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mellowfarm"},"content":"    public void testDeleteLastTask() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(todo1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(deadline1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(event1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mellowfarm"},"content":"        Task deleted \u003d taskList.delete(2);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(event1, deleted);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(todo1, taskList.get(0));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(deadline1, taskList.get(1));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mellowfarm"},"content":"    // Test 4: Get task tests","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"mellowfarm"},"content":"    public void testGetTask() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(todo1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(deadline1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(todo1, taskList.get(0));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(deadline1, taskList.get(1));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"mellowfarm"},"content":"    public void testGetAfterDeletion() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(todo1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(deadline1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(event1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"mellowfarm"},"content":"        taskList.delete(1); // Delete deadline1","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(todo1, taskList.get(0));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(event1, taskList.get(1));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"mellowfarm"},"content":"    // Test 5: Find tasks tests","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"mellowfarm"},"content":"    public void testFindTasksWithMatches() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"mellowfarm"},"content":"        Task grocery1 \u003d new ToDos(\"Buy groceries\");","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"mellowfarm"},"content":"        Task grocery2 \u003d new ToDos(\"Get fresh groceries from store\");","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"mellowfarm"},"content":"        Task homework \u003d new ToDos(\"Do homework\");","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(grocery1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(grocery2);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(homework);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"mellowfarm"},"content":"        ArrayList\u003cTask\u003e matches \u003d taskList.findTasks(\"groceries\");","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(2, matches.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(matches.contains(grocery1));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(matches.contains(grocery2));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"mellowfarm"},"content":"        assertFalse(matches.contains(homework));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"mellowfarm"},"content":"    public void testFindTasksNoMatches() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(todo1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(deadline1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"mellowfarm"},"content":"        ArrayList\u003cTask\u003e matches \u003d taskList.findTasks(\"nonexistent\");","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(0, matches.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"mellowfarm"},"content":"    public void testFindTasksCaseSensitive() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"mellowfarm"},"content":"        Task upperCase \u003d new ToDos(\"Buy GROCERIES\");","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"mellowfarm"},"content":"        Task lowerCase \u003d new ToDos(\"buy groceries\");","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(upperCase);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(lowerCase);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"mellowfarm"},"content":"        ArrayList\u003cTask\u003e upperMatches \u003d taskList.findTasks(\"GROCERIES\");","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"mellowfarm"},"content":"        ArrayList\u003cTask\u003e lowerMatches \u003d taskList.findTasks(\"groceries\");","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(1, upperMatches.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(1, lowerMatches.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(upperMatches.contains(upperCase));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(lowerMatches.contains(lowerCase));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"mellowfarm"},"content":"    public void testFindTasksWithDifferentTaskTypes() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"mellowfarm"},"content":"        Task todo \u003d new ToDos(\"meeting preparation\");","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"mellowfarm"},"content":"        Task deadline \u003d new Deadlines(\"meeting deadline\", LocalDate.of(2025, 12, 31));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"mellowfarm"},"content":"        Task event \u003d new Events(\"team meeting\",","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"mellowfarm"},"content":"                LocalDateTime.of(2025, 10, 20, 14, 0),","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"mellowfarm"},"content":"                LocalDateTime.of(2025, 10, 20, 16, 0));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(todo);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(deadline);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(event);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"mellowfarm"},"content":"        ArrayList\u003cTask\u003e matches \u003d taskList.findTasks(\"meeting\");","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(3, matches.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(matches.contains(todo));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(matches.contains(deadline));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(matches.contains(event));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"mellowfarm"},"content":"    // Test 6: Size tests","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"mellowfarm"},"content":"    public void testSizeEmptyList() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"mellowfarm"},"content":"    public void testSizeAfterAdding() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(todo1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(deadline1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(event1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(3, taskList.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"mellowfarm"},"content":"    public void testSizeAfterDeleting() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(todo1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(deadline1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(event1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(3, taskList.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"mellowfarm"},"content":"        taskList.delete(0);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"mellowfarm"},"content":"        taskList.delete(0);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"mellowfarm"},"content":"        taskList.delete(0);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"mellowfarm"},"content":"    // Test 7: Edge cases and integration tests","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"mellowfarm"},"content":"    public void testAddAndDeleteSameTask() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(todo1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"mellowfarm"},"content":"        Task deleted \u003d taskList.delete(0);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(todo1, deleted);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"mellowfarm"},"content":"    public void testMultipleOperationsSequence() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"mellowfarm"},"content":"        // Add tasks","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(todo1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(deadline1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(event1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(3, taskList.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"mellowfarm"},"content":"        // Delete middle task","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"mellowfarm"},"content":"        taskList.delete(1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(todo1, taskList.get(0));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(event1, taskList.get(1));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"mellowfarm"},"content":"        // Add another task","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(todo2);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(3, taskList.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(todo2, taskList.get(2));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"mellowfarm"},"content":"        // Find tasks","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"mellowfarm"},"content":"        ArrayList\u003cTask\u003e matches \u003d taskList.findTasks(\"dog\");","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(1, matches.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(matches.contains(todo2));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"mellowfarm"},"content":"    public void testTaskStatePreservation() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"mellowfarm"},"content":"        // Mark todo1 as done before adding","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"mellowfarm"},"content":"        todo1.markAsDone();","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(todo1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"mellowfarm"},"content":"        Task retrieved \u003d taskList.get(0);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\"X\", retrieved.getStatusIcon());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\"Buy groceries\", retrieved.getDescription());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"mellowfarm"},"content":"    public void testFindWithSpecialCharacters() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"mellowfarm"},"content":"        Task specialTask \u003d new ToDos(\"Buy @#$%^\u0026*() special items\");","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(specialTask);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"mellowfarm"},"content":"        ArrayList\u003cTask\u003e matches \u003d taskList.findTasks(\"@#$%^\u0026*()\");","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(1, matches.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(matches.contains(specialTask));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"mellowfarm"},"content":"    public void testFindWithNumbers() {","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"mellowfarm"},"content":"        Task task1 \u003d new ToDos(\"Complete task 123\");","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"mellowfarm"},"content":"        Task task2 \u003d new ToDos(\"Review version 123 of document\");","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"mellowfarm"},"content":"        Task task3 \u003d new ToDos(\"Simple task\");","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(task2);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"mellowfarm"},"content":"        taskList.add(task3);","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"mellowfarm"},"content":"        ArrayList\u003cTask\u003e matches \u003d taskList.findTasks(\"123\");","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(2, matches.size());","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(matches.contains(task1));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(matches.contains(task2));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"mellowfarm"},"content":"        assertFalse(matches.contains(task3));","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-18T20:04:00","isFullCredit":false}],"authorContributionMap":{"mellowfarm":347}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"todo read book","lastModifiedDate":"2025-08-21T09:51:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-21T09:51:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-21T09:51:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"list","lastModifiedDate":"2025-08-21T09:51:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"mark 2","lastModifiedDate":"2025-08-21T09:51:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"mark 1","lastModifiedDate":"2025-08-21T09:51:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"unmark 1","lastModifiedDate":"2025-08-21T09:51:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"list","lastModifiedDate":"2025-08-21T09:51:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"bye","lastModifiedDate":"2025-08-21T09:51:52","isFullCredit":false}],"authorContributionMap":{"mellowfarm":9}}]
