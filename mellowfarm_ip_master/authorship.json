[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"# Bug User Guide","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"Bug is a friendly task management chatbot that helps you keep track of your todo items, deadlines, and events through a simple conversational interface! :)","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"## Quick Start","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"1. Download the latest bug.jar file from the releases","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"2. Double-click the jar file to launch Bug","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"3. Type commands in the text box and press Enter or click \"Send\"","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"4. Bug will respond and help you manage your tasks!","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"## Features","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"### Adding Tasks","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"#### Add a Todo Task","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"Add a simple task without a specific date.","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"Format: todo \u003cdescription\u003e","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"Example:","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"* todo buy groceries","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"* todo do laundry","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"#### Add a Deadline Task","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"Add a task with a due date.","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"Format: deadline \u003cdescription\u003e /by \u003cdate\u003e","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"* Date format: yyyy-MM-dd","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"Example:","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"* deadline submit assignment /by 2025-10-15","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"* deadline pay bills /by 2025-12-01","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"#### Add an Event Task","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"Add a task with start and end times.","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"Format: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"* DateTime format: yyyy-MM-dd HHmm","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"Example:","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"* event project meeting /from 2024-10-15 1400 /to 2024-10-15 1600","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"* event birthday party /from 2024-12-25 1800 /to 2024-12-25 2200","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"### Managing Tasks","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"#### List All Tasks","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"View all your current tasks.","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"Format: list","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"#### Mark Task as Done","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"Mark a completed task.","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"Format: mark \u003ctask number\u003e","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"Example: mark 1","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"#### Unmark Task","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"Mark a task as not done.","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"Format: unmark \u003ctask number\u003e","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"Example: unmark 2","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"#### Delete Task","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"Remove a task from your list.","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"Format: delete \u003ctask number\u003e","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"Example: delete 3","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"### Finding Tasks","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"#### Search Tasks","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"Find tasks containing specific keywords.","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"Format: find \u003ckeyword\u003e","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"Example:","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"* find book - finds tasks containing \"book\"","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"* find meeting - finds tasks containing \"meeting\"","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"### Advanced Features ","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"#### Snooze Tasks","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"Postpone deadline or event tasks by a specified duration.","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"Format: snooze \u003ctask number\u003e \u003cduration\u003e","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"* Duration format: \u003cnumber\u003e\u003cunit\u003e where unit is d (days), h (hours), or m (minutes)","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"Example:","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"* snooze 1 3d - postpone task 1 by 3 days","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"* snooze 2 2h - postpone task 2 by 2 hours","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"*Note: Todo tasks cannot be snoozed as they don\u0027t have dates.*","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"### Other Commands","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"#### Exit","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"Close Bug.","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"Format: bye","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"### Tips","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"* Task numbers start from 1 and are shown when you use the list command","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"* Bug automatically saves your tasks, so you won\u0027t lose them when you close the application","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"* If you make a mistake in a command, Bug will show you a helpful error message","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"* Commands are case-insensitive, so LIST, list, and List all work the same way","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"### Command Summary","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"| Action | Format | Example |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"| ------ | ------ | ------- |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"| Add Todo | `todo \u003cdescription\u003e` | `todo buy milk` |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"| Add Deadline | `deadline \u003cdescription\u003e /by \u003cdate\u003e` | `deadline essay /by 2024-12-01` |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"| Add Event | `event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e` | `event meeting /from 2024-12-01 1000 /to 2024-12-01 1200` |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"| List | `list` | `list` |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"| Mark Done | `mark \u003cnumber\u003e` | `mark 1` |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"| Unmark | `unmark \u003cnumber\u003e` | `unmark 1` |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"| Delete | `delete \u003cnumber\u003e` | `delete 1` |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"| Find | `find \u003ckeyword\u003e` | `find homework` |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mellowfarm"},"content":"| Snooze | `snooze \u003cnumber\u003e \u003cduration\u003e` | `snooze 1 2d` |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"| Exit | `bye` | `bye` |","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"### Troubleshooting","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"#### Bug won\u0027t start?","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mellowfarm"},"content":"* Make sure you have Java 11 or later installed","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mellowfarm"},"content":"* Try running from command line: java -jar bug.jar","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mellowfarm"},"content":"#### Tasks not saving?","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mellowfarm"},"content":"* Check that Bug has permission to create files in the folder where you\u0027re running it","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mellowfarm"},"content":"* Bug saves tasks to a data folder in the same location as the jar file","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mellowfarm"},"content":"#### Getting error messages?","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mellowfarm"},"content":"* Check the command format matches the examples above","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mellowfarm"},"content":"* Make sure dates are in the correct format (yyyy-MM-dd)","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mellowfarm"},"content":"* Task numbers should be positive integers","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mellowfarm"},"content":"___","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mellowfarm"},"content":"Happy task managing with Bug! 🐛","lastModifiedDate":"2025-09-16T22:21:51","isFullCredit":false}],"authorContributionMap":{"mellowfarm":96,"-":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"    mainClass.set(\"bug.Launcher\")","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"jar {","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"    archiveBaseName \u003d \u0027bug\u0027","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"    manifest {","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"        attributes (","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"            \u0027Main-Class\u0027: \u0027bug.Bug\u0027","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"        )","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"    archiveBaseName \u003d \"bug\"","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"    enableAssertions \u003d false","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"-":39,"mellowfarm":27}},{"path":"data/bug.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"T | 0 | buy groceries","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"D | 1 | submit report | 2024-12-15","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"E | 0 | team meeting | 2024-12-01T14:00 | 2024-12-01T16:00","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"T | 1 | do laundry","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false}],"authorContributionMap":{"mellowfarm":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"# Bug User Guide","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"![Screenshot of Bug UI](Ui.png)","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"Bug is a friendly task management chatbot that helps you keep track of your todo items, deadlines, and events through a simple conversational interface! :)","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"## Quick Start","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"1. Download the latest bug.jar file from the releases","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"2. Double-click the jar file to launch Bug","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"3. Type commands in the text box and press Enter or click \"Send\"","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"4. Bug will respond and help you manage your tasks!","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"## Features","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"### Adding Tasks","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"#### Add a Todo Task","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"Add a simple task without a specific date.","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"\u003c/br\u003eFormat: todo \u003cdescription\u003e","lastModifiedDate":"2025-09-16T22:51:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"\u003c/br\u003eExample:","lastModifiedDate":"2025-09-16T22:50:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"* todo buy groceries","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"* todo do laundry","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"#### Add a Deadline Task","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"Add a task with a due date.","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"\u003c/br\u003eFormat: deadline \u003cdescription\u003e /by \u003cdate\u003e","lastModifiedDate":"2025-09-16T22:48:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"* Date format: yyyy-MM-dd","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-16T22:50:19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"Example:","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"* deadline submit assignment /by 2025-10-15","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"* deadline pay bills /by 2025-12-01","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"#### Add an Event Task","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"Add a task with start and end times.","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"\u003c/br\u003eFormat: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e","lastModifiedDate":"2025-09-16T22:48:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"* DateTime format: yyyy-MM-dd HHmm","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-16T22:50:19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"Example:","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"* event project meeting /from 2024-10-15 1400 /to 2024-10-15 1600","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"* event birthday party /from 2024-12-25 1800 /to 2024-12-25 2200","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"### Managing Tasks","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"#### List All Tasks","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"View all your current tasks.","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003eFormat: list","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"#### Mark Task as Done","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"Mark a completed task.","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003eFormat: mark \u003ctask number\u003e","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003eExample: mark 1","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"#### Unmark Task","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"Mark a task as not done.","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003eFormat: unmark \u003ctask number\u003e","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003eExample: unmark 2","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"#### Delete Task","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"Remove a task from your list.","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003eFormat: delete \u003ctask number\u003e","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003eExample: delete 3","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"### Finding Tasks","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"#### Search Tasks","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"Find tasks containing specific keywords.","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003eFormat: find \u003ckeyword\u003e","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003eExample:","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"* find book - finds tasks containing \"book\"","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"* find meeting - finds tasks containing \"meeting\"","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"### Advanced Features","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"#### Snooze Tasks","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"Postpone deadline or event tasks by a specified duration.","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003eFormat: snooze \u003ctask number\u003e \u003cduration\u003e","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"* Duration format: \u003cnumber\u003e\u003cunit\u003e where unit is d (days), h (hours), or m (minutes)","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"Example:","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"* snooze 1 3d - postpone task 1 by 3 days","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"* snooze 2 2h - postpone task 2 by 2 hours","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"  *Note: Todo tasks cannot be snoozed as they don\u0027t have dates.*","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"### Other Commands","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"#### Exit","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"Close Bug.","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"\u003cbr/\u003eFormat: bye","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"### Tips","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"* Task numbers start from 1 and are shown when you use the list command","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"* Bug automatically saves your tasks, so you won\u0027t lose them when you close the application","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"* If you make a mistake in a command, Bug will show you a helpful error message","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"* Commands are case-insensitive, so LIST, list, and List all work the same way","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"### Command Summary","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"| Action | Format | Example |","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"| ------ | ------ | ------- |","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"| Add Todo | `todo \u003cdescription\u003e` | `todo buy milk` |","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"| Add Deadline | `deadline \u003cdescription\u003e /by \u003cdate\u003e` | `deadline essay /by 2024-12-01` |","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"| Add Event | `event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e` | `event meeting /from 2024-12-01 1000 /to 2024-12-01 1200` |","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"| List | `list` | `list` |","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mellowfarm"},"content":"| Mark Done | `mark \u003cnumber\u003e` | `mark 1` |","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"| Unmark | `unmark \u003cnumber\u003e` | `unmark 1` |","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"| Delete | `delete \u003cnumber\u003e` | `delete 1` |","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"| Find | `find \u003ckeyword\u003e` | `find homework` |","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mellowfarm"},"content":"| Snooze | `snooze \u003cnumber\u003e \u003cduration\u003e` | `snooze 1 2d` |","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mellowfarm"},"content":"| Exit | `bye` | `bye` |","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mellowfarm"},"content":"### Troubleshooting","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mellowfarm"},"content":"#### Bug won\u0027t start?","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mellowfarm"},"content":"* Make sure you have Java 11 or later installed","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mellowfarm"},"content":"* Try running from command line: java -jar bug.jar","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mellowfarm"},"content":"#### Tasks not saving?","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mellowfarm"},"content":"* Check that Bug has permission to create files in the folder where you\u0027re running it","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mellowfarm"},"content":"* Bug saves tasks to a data folder in the same location as the jar file","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mellowfarm"},"content":"#### Getting error messages?","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mellowfarm"},"content":"* Check the command format matches the examples above","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mellowfarm"},"content":"* Make sure dates are in the correct format (yyyy-MM-dd)","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mellowfarm"},"content":"* Task numbers should be positive integers","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mellowfarm"},"content":"___","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mellowfarm"},"content":"Happy task managing with Bug!!!","lastModifiedDate":"2025-09-16T22:36:59","isFullCredit":false}],"authorContributionMap":{"mellowfarm":97,"-":5}},{"path":"src/main/java/bug/Bug.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":" * The Bug class is the entry point of the task management application.","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":" * It interacts with the user, manages tasks, and stores them in a file.","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"public class Bug {","lastModifiedDate":"2025-08-20T17:53:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T23:22:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"    private final Storage storage;","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"    private final Ui ui;","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T23:22:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"     * Constructor initializes the application by setting up the user interface (UI),","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"     * loading tasks from storage, and preparing the task list.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    public Bug() {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"        TaskList loadedTasks;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"            loadedTasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"            ui.showError(\":(! failed to load tasks!\");","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"            loadedTasks \u003d new TaskList();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"        tasks \u003d loadedTasks;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T18:15:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"     * Runs the application, accepting user input and executing commands in a loop.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"    public void run() {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"        System.out.println(ui.showGreeting());","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"        while (true) {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"            if (input \u003d\u003d null) {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"                break; // Exit the loop if input is null","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T18:15:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"            try {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"                Command command \u003d Parser.parse(input); // Parse the user input into a command","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"                String response \u003d command.execute(tasks, ui, storage); // Execute the command","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"                System.out.println(response);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"                if (command.isExit()) break; // Exit if the command signals to quit","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"            } catch (BugException e) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"                System.out.println(ui.showError(e.getMessage())); // Show error message if command fails","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-08-21T10:14:45","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-08-21T10:14:45","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T18:26:57","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T18:15:03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"     * Returns the response to a given user input.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"     * This is used for testing purposes or when the application needs to respond programmatically.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"     * @param input the user input to process","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"     * @return the response based on the input","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"        if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"            return ui.showError(\":(! please enter a command!\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"            Command cmd \u003d Parser.parse(input); // Parse the input into a command","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"            String response \u003d cmd.execute(tasks, ui, storage); // Execute the command","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"            if (cmd.isExit()) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"                Platform.exit(); // Exit the JavaFX application if the exit command is issued","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-08-31T16:08:49","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mellowfarm"},"content":"            return response;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"        } catch (BugException e) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mellowfarm"},"content":"            return ui.showError(\":(! something went wrong! Please try again.\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-08-31T16:08:49","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T16:08:49","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T16:08:49","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mellowfarm"},"content":"    public String greeting() {","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mellowfarm"},"content":"        return ui.showGreeting();","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mellowfarm"},"content":"     * The main method is the entry point for the application. It starts the task management system.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mellowfarm"},"content":"     * @param args the command-line arguments (not used)","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mellowfarm"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mellowfarm"},"content":"        Bug bug \u003d new Bug(); // Create an instance of the Bug class","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mellowfarm"},"content":"        bug.run(); // Start the application","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T17:53:30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-20T17:53:30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false}],"authorContributionMap":{"mellowfarm":106}},{"path":"src/main/java/bug/BugException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":" * Custom exception class to handle errors specific to the Bug application.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":" * This class extends the built-in Exception class to provide custom error messages.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"public class BugException extends Exception {","lastModifiedDate":"2025-08-21T10:14:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"     * Constructs a new BugException with the specified detail message.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"     * @param message the detail message to be passed to the exception","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"    public BugException(String message) {","lastModifiedDate":"2025-08-21T10:14:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"        super(message);","lastModifiedDate":"2025-08-21T10:14:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"    } // Pass the message to the parent Exception class","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-21T10:14:45","isFullCredit":false}],"authorContributionMap":{"mellowfarm":17}},{"path":"src/main/java/bug/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":" * Represents the \u0027Bye\u0027 command, which is used to exit the task management application.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":" * When executed, it displays a farewell message and indicates that the program should terminate.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"     * Executes the \u0027Bye\u0027 command by displaying a farewell message.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"     * This method is called when the user wants to exit the application.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the current list of tasks (not used in this command)","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface responsible for displaying messages to the user","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage system (not used in this command)","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"     * @return a farewell message to the user","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"        return ui.showBye(); // Display the farewell message using the UI","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"     * Returns true to indicate that this command causes the program to exit.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"     * This method is used to signal the end of the program\u0027s execution.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"     * @return true, indicating that the program should terminate","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"        return true; // The \u0027Bye\u0027 command triggers the exit process","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":33}},{"path":"src/main/java/bug/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":" * Abstract class representing a command in the task management application.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":" * All specific commands (e.g., Add, Bye, List) will extend this class and define","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":" * the logic for executing the command.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"public abstract class Command {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"     * Executes the command with the provided task list, user interface, and storage.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"     * Each subclass of Command will implement its own specific behavior for executing the command.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the current list of tasks that the command can operate on","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface used to display output to the user","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage system used to load or save tasks","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"     * @return a response string to be shown to the user after executing the command","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if an error occurs while executing the command","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws BugException;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"     * Determines if the command should cause the program to exit.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"     * The default implementation returns false, but subclasses (e.g., ByeCommand)","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"     * can override this method to indicate that the command leads to an exit.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"     * @return true if the command should cause the program to exit; false otherwise","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"        return false; // Default behavior is that the command doesn\u0027t exit the application","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":32}},{"path":"src/main/java/bug/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":" * Represents a command to create a deadline task.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":" * This command is responsible for parsing the deadline\u0027s description and due date,","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":" * creating the corresponding `Deadlines` object, and updating the task list and storage.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"public class DeadlineCommand extends Command{","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"    private final String description;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"    private final String dueDate;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"    private static final DateTimeFormatter INPUT_DT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"     * Constructor for the DeadlineCommand.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"     * Initializes the task description and due date.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"     * @param dueDate the due date of the task in \"yyyy-MM-dd\" format","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    public DeadlineCommand(String description, String dueDate) {","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"     * Executes the DeadlineCommand by validating the input, parsing the due date,","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"     * creating a new `Deadlines` task, and updating the task list and storage.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the current list of tasks","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface used to display the response","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage used to save the tasks","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"     * @return a response message showing the created deadline task","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if the input is invalid, such as an empty description or invalid date format","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BugException {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"        // Validate description","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\":(! a deadline task cannot have an empty description!\");","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"        // Validate due date","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"        if (dueDate.isEmpty()) {","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\":(! a deadline task must have a due date!\");","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"        // Parse the due date and create the task","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"            LocalDate by2 \u003d LocalDate.parse(dueDate, INPUT_DT);","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"            Deadlines deadline \u003d new Deadlines(description, by2);","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"            tasks.add(deadline); // Add the task to the list","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"            storage.update(tasks); // Update the storage with the new task list","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"            return ui.showDeadline(deadline, tasks); // Show the response in the UI","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\":(! invalid date. use yyyy-MM-dd (eg 2005-11-27)!\");","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":62}},{"path":"src/main/java/bug/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T23:22:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T22:35:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import java.time.Duration;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T22:35:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":" * Represents a deadline task in the task management application.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":" * This class extends the Task class and includes a description of the task","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":" * and its due date.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"    protected LocalDate dueDate;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"    private static final DateTimeFormatter PRETTY \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2025-08-28T22:35:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"     * Constructor for creating a new deadline task.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     * @param dueDate the due date of the task","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"    public Deadlines(String description, LocalDate dueDate) {","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"        super(description); // Initialize the description in the parent Task class","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"        this.dueDate \u003d dueDate; // Set the due date for the deadline task","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"     * Returns a string representation of the deadline task, including its description","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"     * and due date formatted in a user-friendly way.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"     * @return the string representation of the deadline task","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dueDate.format(PRETTY) + \")\";","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"     * Returns a string representation of the deadline task formatted for saving to a file.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"     * The format includes the task\u0027s status, description, and due date.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"     * @return the string representation of the deadline task for file storage","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"        int status \u003d isDone ? 1 : 0;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"        return String.format(\"D | %d | %s | %s\", status, description, dueDate);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"     * Snoozes the deadline task by adding the given duration to the due date.","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"     * @param duration the duration to snooze the task by","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"    public void snooze(Duration duration) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"        long totalHours \u003d duration.toHours();","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"        long daysToAdd \u003d totalHours / 24;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"        // if there are remaining hours, add one more day to be safe","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"        if (totalHours % 24 \u003e 0) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"            daysToAdd++;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"        this.dueDate \u003d this.dueDate.plusDays(daysToAdd);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false}],"authorContributionMap":{"mellowfarm":67}},{"path":"src/main/java/bug/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":" * Represents the command to delete a task from the task list.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":" * This command removes a task based on the provided index and updates the task list and storage.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"    private final int index;","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"     * Constructor for the DeleteCommand. Initializes the task index to delete.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"     * @param index the index of the task to delete","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     * Executes the DeleteCommand by removing the task at the given index,","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"     * updating the task list and storage, and displaying the result to the user.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the current list of tasks","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface used to display the response","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage used to save the tasks","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"     * @return a response message showing the deleted task and updated list","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if the index is invalid or there are no tasks at that index","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BugException {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\":(! no tasks available to delete!\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\":(! task index \" + (index + 1) + \" is out of range! You have \" + tasks.size() + \" tasks.\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"            Task task \u003d tasks.delete(index);","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"            storage.update(tasks);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"            return ui.showDeleted(task, tasks);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\":(! could not mark task at index \" + (index + 1) + \"!\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":48}},{"path":"src/main/java/bug/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.text.TextFlow;","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":" * A custom dialog box for displaying messages in the task management application.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":" * The dialog box includes a label for the message text and an image for the display picture.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    private TextFlow dialog; // The label that holds the text of the message","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"    private ImageView displayPicture; // The image view for the display picture","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"     * Constructor for creating a DialogBox with text and an image.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"     * @param text the message text to display","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"     * @param img the image to display in the dialog box","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"            // Load the FXML layout for the dialog box","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"            fxmlLoader.setController(this); // Set this class as the controller for the FXML","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"            fxmlLoader.setRoot(this); // Set the root element of the FXML to this instance","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"            fxmlLoader.load(); // Load the FXML layout","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"            e.printStackTrace(); // Print the stack trace if loading fails","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"        Text textNode \u003d new Text(text);","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"        textNode.getStyleClass().add(\"dialog-text\");","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"        dialog.getChildren().add(textNode);","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"        setFillHeight(false);","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"        displayPicture.setImage(img); // Set the display picture image","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"     * Flips the dialog box such that the ImageView is on the left and the text is on the right.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"     * This is used for the \"bug\" messages to show the text on the opposite side.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"    private void flip() {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"        Collections.reverse(tmp); // Reverse the order of the children nodes","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"        getChildren().setAll(tmp); // Update the children of this HBox with the reversed nodes","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"        setAlignment(Pos.TOP_LEFT); // Align the content to the top-left","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"        dialog.getStyleClass().add(\"reply-text-flow\"); // Add a style class for the reply","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"     * Creates a DialogBox for the user message, with text and a user image.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"     * @param text the user message text","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"     * @param img the user display picture","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"     * @return a DialogBox with the user message and image","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"        return new DialogBox(text, img); // Return a new dialog box for the user","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"     * Creates a DialogBox for the bug message, with text and a bug image, and flips it.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"     * @param text the bug message text","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"     * @param img the bug display picture","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"     * @return a flipped DialogBox for the bug message and image","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"    public static DialogBox getBugDialog(String text, Image img) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"        var db \u003d new DialogBox(text, img); // Create a new dialog box for the bug","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mellowfarm"},"content":"        db.flip(); // Flip the dialog box to position the image and text correctly","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"        return db;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":87}},{"path":"src/main/java/bug/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":" * Represents a command to create an event task.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":" * This command parses the event\u0027s description, start time, and end time,","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":" * creates the corresponding `Events` object, and updates the task list and storage.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"public class EventCommand extends Command{","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"    private final String description;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"    private final String startTime;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"    private final String endTime;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"    private static final DateTimeFormatter INPUT_DT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"     * Constructor for creating an EventCommand.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"     * @param description the description of the event","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"     * @param startTime the start time of the event in \"yyyy-MM-dd HHmm\" format","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"     * @param endTime the end time of the event in \"yyyy-MM-dd HHmm\" format","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"    public EventCommand(String description, String startTime, String endTime) {","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"     * Executes the EventCommand by validating the input, parsing the start and end times,","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"     * creating a new `Events` task, and updating the task list and storage.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the current list of tasks","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface used to display the response","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage used to save the tasks","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"     * @return a response message showing the created event task","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if any input is invalid (e.g., empty fields or invalid date format)","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BugException {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"        // Validate the inputs","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\":(! an event task cannot have an empty description!\");","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"        if (startTime.isEmpty()) {","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\":(! an event task must have a start date!\");","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"        if (endTime.isEmpty()) {","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\":(! an event task must have an end date!\");","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"        // Parse the start and end times","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"            LocalDateTime start2 \u003d LocalDateTime.parse(startTime, INPUT_DT);","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"            LocalDateTime end2 \u003d LocalDateTime.parse(endTime, INPUT_DT);","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"            Events event \u003d new Events(description, start2, end2);","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"            tasks.add(event); // Add the event to the task list","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"            storage.update(tasks); // Update storage with the new task list","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"            return ui.showEvent(event, tasks); // Show the event in the UI","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\":(! invalid datetime. use yyyy-MM-dd HHmm (eg 2005-11-27 1800)!\");","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":69}},{"path":"src/main/java/bug/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T22:35:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T22:35:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import java.time.Duration;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T22:35:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":" * Represents an event task in the task management application.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":" * This class extends the Task class and includes the description of the task,","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":" * as well as the start and end times of the event.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"public class Events extends Task {","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"    protected LocalDateTime start; // The start time of the event","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"    protected LocalDateTime end; // The end time of the event","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"    private static final DateTimeFormatter PRETTY \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2025-08-28T23:22:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"     * Constructor for creating an event task.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"     * @param description the description of the event","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     * @param start the start time of the event","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"     * @param end the end time of the event","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    public Events(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2025-08-28T23:22:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"        super(description);","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"     * Returns a string representation of the event task, including its description,","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"     * start time, and end time, formatted in a user-friendly way.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"     * @return the string representation of the event task","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start.format(PRETTY) + \" to: \" + end.format(PRETTY) + \")\";","lastModifiedDate":"2025-08-28T23:22:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"     * Returns a string representation of the event task formatted for saving to a file.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"     * The format includes the task\u0027s status, description, start time, and end time.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"     * @return the string representation of the event task for file storage","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"        int status \u003d isDone ? 1 : 0;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"        return String.format(\"E | %d | %s | %s | %s\", status, description, start, end);","lastModifiedDate":"2025-08-28T23:22:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"     * Snoozes the event task by adding the given duration to both start and end times.","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"     * This preserves the event duration while moving it to a later time.","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"     * @param duration the duration to snooze the task by","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"    public void snooze(Duration duration) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"        this.start \u003d this.start.plus(duration);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"        this.end \u003d this.end.plus(duration);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false}],"authorContributionMap":{"mellowfarm":63}},{"path":"src/main/java/bug/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":" * Represents the command to find tasks that match a given keyword.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":" * This command searches for tasks whose description contains the specified keyword.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"    private final String keyword;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"     * Constructor for creating a FindCommand.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"     * @param keyword the keyword to search for in the task descriptions","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"     * Executes the FindCommand by searching for tasks that match the provided keyword.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"     * If the keyword is empty, a BugException is thrown.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the current list of tasks","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface used to display the result","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage used to save the tasks (not used in this command)","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"     * @return a response message showing the tasks that match the keyword","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if the keyword is empty or if an error occurs while searching","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BugException {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"        // Check if the keyword is empty and throw an exception if it is","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\":(! what are you searching for?\");","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"        // Search for tasks that contain the keyword in their description","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"        ArrayList\u003cTask\u003e matches \u003d tasks.findTasks(keyword);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"        // Return the result to the user","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"        return ui.showFoundTasks(matches);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":45}},{"path":"src/main/java/bug/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":" * A launcher class to workaround classpath issues and launch the JavaFX application.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":" * This class is necessary for running the JavaFX application when using a build tool like Maven or Gradle,","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":" * as it provides a clean entry point for the application.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"public class Launcher {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"     * The main method serves as the entry point for launching the JavaFX application.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"     * @param args command-line arguments passed to the application (not used in this case)","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"        // Launch the main JavaFX application","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":20}},{"path":"src/main/java/bug/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":" * Represents the command to list all tasks in the task management application.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":" * This command displays the tasks from the current task list if there are any tasks.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":" * If the task list is empty, an exception is thrown.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"     * Executes the ListCommand by displaying all tasks in the task list.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"     * If the task list is empty, a BugException is thrown.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the current list of tasks","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface used to display the list","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage used to save the tasks (not used in this command)","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"     * @return a response message showing the list of tasks","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if the task list is empty","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BugException {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\":(! list is empty!\");","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"        return ui.showList(tasks);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":27}},{"path":"src/main/java/bug/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":" * The main entry point for the JavaFX application.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":" * This class initializes the application window and sets up the UI components.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"    private Bug bug \u003d new Bug(); // The core logic of the task management app","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"     * Starts the JavaFX application by loading the main window FXML and displaying it.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     * @param stage the primary stage for the application","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"            // Load the FXML file for the main window","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"            // Create a scene with the loaded layout and set it on the stage","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"            // Set the minimum size for the window","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"            // Set the controller for the main window and pass the Bug instance to it","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBug(bug);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"            // Show the stage (the application window)","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"            stage.show();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"            e.printStackTrace(); // Print the stack trace if loading the FXML fails","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":47}},{"path":"src/main/java/bug/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":" * Represents the main window of the task management application.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":" * This class handles user interaction, displaying dialogs, and managing the UI.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"    private ScrollPane scrollPane; // The scrollable container for the dialog box","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"    private VBox dialogContainer; // The container holding the dialog boxes","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    private TextField userInput; // Text field for the user\u0027s input","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    private Button sendButton; // Button for sending user input","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"    private Bug bug; // The core application logic","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"    // Default images for user and bug","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/sonny1.png\"));","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"    private Image bugImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/sonny2.png\"));","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"     * Initializes the MainWindow by binding the scroll position to the dialog container height.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"    public void initialise() {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"     * Sets the Bug instance, allowing interaction with the core application logic.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"     * @param b the Bug instance to be set","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"    public void setBug(Bug b) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"        bug \u003d b;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"        String greeting \u003d bug.greeting();","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"        dialogContainer.getChildren().add(DialogBox.getBugDialog(greeting, bugImage));","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"     * Handles the user input when the send button is pressed.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"     * It retrieves the input, gets a response from the Bug, and displays both in the dialog container.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"        String response \u003d bug.getResponse(input);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"        // Add the user dialog and bug response to the dialog container","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"                DialogBox.getBugDialog(response, bugImage)","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"        );","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"        Platform.runLater(() -\u003e {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"            scrollPane.setVvalue(1.0);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"        });","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":71}},{"path":"src/main/java/bug/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":" * Represents the command to mark a task as done.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":" * This command marks a specific task in the task list as done based on the given index.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"    private final int index;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"     * Constructor for creating a MarkCommand to mark a task as done at the specified index.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"     * @param index the index of the task to mark as done","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     * Executes the MarkCommand by marking the task at the specified index as done.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"     * If the task index is invalid (out of bounds), a BugException is thrown.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the current list of tasks","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface used to display the result","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage used to save the tasks","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"     * @return a response message showing the task that was marked as done","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if the task index is invalid or out of bounds","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BugException {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\":(! no tasks available to mark!\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\":(! task index \" + (index + 1) + \" is out of range! You have \" + tasks.size() + \" tasks.\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"            task.markAsDone();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"            storage.update(tasks);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"            return ui.showDone(task);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\":(! could not mark task at index \" + (index + 1) + \"!\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":49}},{"path":"src/main/java/bug/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":" * Parser class responsible for parsing user input and converting it into Command objects.","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":" * Handles validation and error cases gracefully by returning appropriate commands.","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"public class Parser {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"     * Parses user input string and returns the appropriate Command object.","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"     * @param input the user input string to parse","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"     * @return a Command object corresponding to the input, or UnknownCommand if invalid","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"        if (input \u003d\u003d null || input.isBlank()) {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\":(! input cannot be empty!\");","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"        // Normalize multiple spaces to single spaces","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"        String normalizedInput \u003d input.trim().replaceAll(\"\\\\s+\", \" \");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"        String[] split \u003d normalizedInput.split(\" \", 2);","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"        assert split.length \u003e\u003d 1 : \"split should always have at least one element!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"        String instruction \u003d split[0].toLowerCase();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"        assert instruction !\u003d null : \"instruction should not be null!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"        String contents \u003d ((split.length \u003e 1) ? split[1] : \"\").trim();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"        assert contents !\u003d null : \"contents should not be null (can be empty)\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"        // Handle special characters in instruction","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"        if (!instruction.matches(\"[a-zA-Z]+\")) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\":(! commands can only contain letters!\");","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"        switch (instruction) {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"            case \"find\": {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"                return parseFind(contents);","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-08-31T16:08:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"            case \"bye\": {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"                return parseBye(contents);","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"            case \"list\": {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"                return parseList(contents);","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"            case \"snooze\": {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"                return parseSnoozeCommand(contents);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"            case \"todo\": {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"                return parseTodo(contents);","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"            case \"deadline\": {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"                return parseDeadlineCommand(contents);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"            case \"event\": {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"                return parseEventCommand(contents);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"            case \"mark\":","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"            case \"unmark\":","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"            case \"delete\": {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"                return parseIndexCommand(instruction, contents);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"            default:","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"                return new UnknownCommand(\":(! unknown command \u0027\" + instruction + \"\u0027!\");","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"     * Parses find command.","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"    private static Command parseFind(String contents) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"        if (contents.isEmpty()) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\":(! find command requires a search keyword!\");","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"        return new FindCommand(contents);","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"     * Parses bye command, it should have no additional parameters.","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"    private static Command parseBye(String contents) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mellowfarm"},"content":"        if (!contents.isEmpty()) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\":(! bye command should not have any parameters!\");","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"        return new ByeCommand();","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mellowfarm"},"content":"     * Parses list command, it should have no additional parameters.","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mellowfarm"},"content":"    private static Command parseList(String contents) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mellowfarm"},"content":"        if (!contents.isEmpty()) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\":(! list command should not have any parameters!\");","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mellowfarm"},"content":"        return new ListCommand();","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mellowfarm"},"content":"     * Parses snooze command with format: \"snooze \u003cindex\u003e \u003cduration\u003e\"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mellowfarm"},"content":"     * Example: \"snooze 1 3d\"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mellowfarm"},"content":"    private static Command parseSnoozeCommand(String contents) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mellowfarm"},"content":"        if (contents.isEmpty()) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\":(! snooze command requires index and duration!\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mellowfarm"},"content":"        String[] parts \u003d contents.split(\"\\\\s+\", 2);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mellowfarm"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\":(! snooze format: snooze \u003cindex\u003e \u003cduration\u003e\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mellowfarm"},"content":"            int index \u003d Integer.parseInt(parts[0]) - 1;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mellowfarm"},"content":"            assert index \u003e\u003d -1 : \"parsed index should be valid (note: -1 will be caught by commands)\";","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mellowfarm"},"content":"            if (index \u003c\u003d -1) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mellowfarm"},"content":"                return new UnknownCommand(\":(! task index must be positive!\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mellowfarm"},"content":"            String duration \u003d parts[1];","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mellowfarm"},"content":"            return new SnoozeCommand(index, duration);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mellowfarm"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\":(! task index must be a number!\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mellowfarm"},"content":"     * Parses todo command.","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mellowfarm"},"content":"    private static Command parseTodo(String contents) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mellowfarm"},"content":"        if (contents.isEmpty()) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\":(! todo command requires a description!\");","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mellowfarm"},"content":"        return new TodoCommand(contents);","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mellowfarm"},"content":"     * Parses deadline command with format: \"deadline \u003cdescription\u003e /by \u003cdate\u003e\"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mellowfarm"},"content":"     * Example: \"deadline finish project /by 2025-12-31\"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mellowfarm"},"content":"    private static Command parseDeadlineCommand(String contents) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mellowfarm"},"content":"        if (contents.isEmpty()) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand();","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mellowfarm"},"content":"        if (!contents.contains(\"/by\")) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\":(! deadline command missing \u0027/by\u0027! Format: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mellowfarm"},"content":"        String[] parts \u003d contents.split(\"/\", 2);","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"mellowfarm"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"mellowfarm"},"content":"        assert description !\u003d null : \"deadline description should not be null!\";","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"mellowfarm"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\":(! deadline description cannot be empty!\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"mellowfarm"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\":(! deadline command missing date after \u0027/by\u0027!\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"mellowfarm"},"content":"        String dateStr \u003d parts[1].trim().split(\"\\\\s+\", 2)[1];","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"mellowfarm"},"content":"        assert dateStr !\u003d null : \"deadline due date string should not be null!\";","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"mellowfarm"},"content":"        return new DeadlineCommand(description, dateStr);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"mellowfarm"},"content":"     * Parses event command with format: \"event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"mellowfarm"},"content":"     * Example: \"event team meeting /from 2025-12-31 1400 /to 2025-12-31 1500\"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"mellowfarm"},"content":"    private static Command parseEventCommand(String contents) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"mellowfarm"},"content":"        if (contents.isEmpty()) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand();","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"mellowfarm"},"content":"        if (!contents.contains(\"/from\")) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\":(! event command missing \u0027/from\u0027!\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"mellowfarm"},"content":"        if (!contents.contains(\"/to\")) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\":(! event command missing \u0027/to\u0027!\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"mellowfarm"},"content":"        String[] fromParts \u003d contents.split(\"/from\", 2);","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"mellowfarm"},"content":"        String description \u003d fromParts[0].trim();","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"mellowfarm"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\":(! event description cannot be empty!\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"mellowfarm"},"content":"        String[] toParts \u003d fromParts[1].split(\"/to\", 2);","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"mellowfarm"},"content":"        if (toParts.length \u003c 2) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\":(! event command missing \u0027/to\u0027!\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"mellowfarm"},"content":"        String[] parts \u003d contents.split(\"/\", 3);","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"mellowfarm"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand();","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"mellowfarm"},"content":"        String startStr \u003d toParts[0].trim();","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"mellowfarm"},"content":"        String endStr \u003d toParts[1].trim();","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"mellowfarm"},"content":"        if (startStr.isEmpty() || endStr.isEmpty()) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\":(! event times cannot be empty!\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"mellowfarm"},"content":"        return new EventCommand(description, startStr, endStr);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"mellowfarm"},"content":"     * Parses index-based commands (mark, unmark, delete).","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"mellowfarm"},"content":"    private static Command parseIndexCommand(String instruction, String contents) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"mellowfarm"},"content":"        if (contents.isEmpty()) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\":(! \" + instruction + \" command requires a task index!\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"mellowfarm"},"content":"        if (contents.contains(\" \")) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\":(! \" + instruction + \" command should only have one parameter (task index)!\");","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"mellowfarm"},"content":"            int index \u003d Integer.parseInt(contents) - 1;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"mellowfarm"},"content":"            assert index \u003e\u003d -1 : \"parsed index should be valid\";","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"mellowfarm"},"content":"            if (index \u003c\u003d -1) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"mellowfarm"},"content":"                return new UnknownCommand(\":(! task index must be a positive number!\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"mellowfarm"},"content":"            switch (instruction) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"mellowfarm"},"content":"                case \"mark\":","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"mellowfarm"},"content":"                    return new MarkCommand(index);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"mellowfarm"},"content":"                case \"unmark\":","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"mellowfarm"},"content":"                    return new UnmarkCommand(index);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"mellowfarm"},"content":"                case \"delete\":","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"mellowfarm"},"content":"                    return new DeleteCommand(index);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"mellowfarm"},"content":"                default:","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"mellowfarm"},"content":"                    return new UnknownCommand();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"mellowfarm"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"mellowfarm"},"content":"            return new UnknownCommand(\":(! task index must be a valid number, not \u0027\" + contents + \"\u0027!\");","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false}],"authorContributionMap":{"mellowfarm":252}},{"path":"src/main/java/bug/SnoozeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import java.time.Duration;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":" * Represents a command to snooze a task by postponing its deadline or event times.","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":" * This command works with deadline and event tasks by adding a specified duration to their dates.","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":" * Todo tasks cannot be snoozed since they don\u0027t have associated dates.","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":" *","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":" * Supports flexible duration formats:","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":" * - Days: \"3d\" (snooze by 3 days)","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":" * - Hours: \"5h\" (snooze by 5 hours)","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":" * - Minutes: \"30m\" (snooze by 30 minutes)","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"public class SnoozeCommand extends Command {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"    private final int index;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"    private final String durationString;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"     * Constructor for creating a SnoozeCommand.","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"     * @param index the index of the task to snooze (0-based indexing)","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"     * @param durationString the duration string in format like \"3d\", \"5h\", or \"30m\"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"    public SnoozeCommand(int index, String durationString) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"        this.durationString \u003d durationString;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"     * Executes the SnoozeCommand by postponing the specified task\u0027s deadline or event times.","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"     * Validates the task index and duration format, then applies the snooze operation.","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"     * Updates the task list in storage and displays a confirmation message.","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the current list of tasks to operate on","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface used to display responses and error messages","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage system used to persist the updated task list","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"     * @return a response message showing the snoozed task with updated dates","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if the task index is invalid, duration format is incorrect,","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"     *                     or the task type doesn\u0027t support snoozing","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BugException{","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"            if (task.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"                throw new BugException(\":(! cannot snooze a completed task! unmark it first if needed!\");","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"            Duration duration \u003d parseDuration(durationString);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"            if (duration \u003d\u003d null) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"                throw new BugException(\":(! duration cannot be empty!\");","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"            task.snooze(duration);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"            storage.update(tasks);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"            return ui.showSnooze(task);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"        } catch (BugException e) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\":(! no tasks at this index!\");","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"     * Parses a duration string into a Duration object.","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"     * Supports three time units with specific format: number followed by unit letter.","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"     * Supported formats:","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"     * - \"3d\" for 3 days","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"     * - \"5h\" for 5 hours","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"     * - \"30m\" for 30 minutes","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"     * @param durationString the duration string to parse (e.g., \"3d\", \"5h\", \"30m\")","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"     * @return a Duration object representing the parsed time period, or null if the format is invalid","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"    private static Duration parseDuration(String durationString) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"        Pattern pattern \u003d Pattern.compile(\"(\\\\d+)([dhm])\"); // match number + unit (d for days, h for hours, m for minutes)","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"        Matcher matcher \u003d pattern.matcher(durationString);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mellowfarm"},"content":"            int amount \u003d Integer.parseInt(matcher.group(1));","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"            String unit \u003d matcher.group(2);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"            switch (unit) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mellowfarm"},"content":"                case \"d\":","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mellowfarm"},"content":"                    return Duration.ofDays(amount);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mellowfarm"},"content":"                case \"h\":","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mellowfarm"},"content":"                    return Duration.ofHours(amount);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mellowfarm"},"content":"                case \"m\":","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mellowfarm"},"content":"                    return Duration.ofMinutes(amount);","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mellowfarm"},"content":"                default:","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mellowfarm"},"content":"                    return null;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mellowfarm"},"content":"        return null;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false}],"authorContributionMap":{"mellowfarm":101}},{"path":"src/main/java/bug/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-31T15:54:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-31T15:54:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-31T15:54:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T23:22:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T23:22:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"import java.util.List;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":" * The Storage class handles loading and saving tasks to and from a file.","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":" * It provides methods to read tasks from a file, parse them into appropriate task objects,","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":" * and update the file with the current task list.","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":" *","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":" * Tasks are stored in a text file in the following format:","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":" *     \u003cli\u003eT | status | description\u003c/li\u003e","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":" *     \u003cli\u003eD | status | description | due date\u003c/li\u003e","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":" *     \u003cli\u003eE | status | description | start date | end date\u003c/li\u003e","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":" * This class also handles file creation if the file doesn\u0027t exist.","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"public class Storage {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"    private static final String FILE_NAME \u003d \"bug.txt\";","lastModifiedDate":"2025-08-31T15:54:30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"    private final Path path \u003d Paths.get(\"data\", FILE_NAME);","lastModifiedDate":"2025-08-31T15:54:30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"     * Loads tasks from the storage file and returns them as a list of Task objects.","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"     * If the file is empty or does not exist, an empty list is returned.","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"     * The method parses the task data and creates appropriate task objects (e.g. Todo, Deadline, Event).","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"     * @return a list of tasks loaded from the storage file, or an empty list if the file is empty or not found","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"        List\u003cTask\u003e out \u003d new ArrayList\u003c\u003e(); // Accumulate loaded tasks in the desired format","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"            // Ensure the parent directory exists, create it if necessary","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"            if (path.getParent() !\u003d null) {","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"                Files.createDirectories(path.getParent()); // gets the folder that should contain the data \u0026 create the folder","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"            // If the file doesn\u0027t exist or is empty, return an empty list","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"            if (Files.notExists(path) || Files.size(path) \u003d\u003d 0) {","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"                return out;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"            // Read all lines from the file","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"            for (String line : Files.readAllLines(path, StandardCharsets.UTF_8)) {","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"                String s \u003d line.trim();","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"                if (s.isEmpty()) { // Skip blank lines","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"                    continue;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"                }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"                try {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"                    // Split the line into its components","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"                    String[] p \u003d s.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"                    if (p.length \u003c 3) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"                        System.err.println(\"Warning: Skipping invalid line (not enough data): \" + s);","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"                        continue;","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"                    }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"                    String type \u003d p[0];","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"                    boolean isDone \u003d \"1\".equals(p[1]);","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"                    String description \u003d p[2];","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"                    // Create the appropriate task object based on the type","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"                    Task task \u003d null;","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"                    switch (type) {","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"                        case \"T\":","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"                            if (p.length \u003d\u003d 3) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"                                task \u003d new ToDos(description);","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"                            }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"                            break;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"                        case \"D\":","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"                            if (p.length \u003d\u003d 4) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"                                try {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"                                    LocalDate by \u003d LocalDate.parse(p[3]);","lastModifiedDate":"2025-08-28T23:22:25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mellowfarm"},"content":"                                    task \u003d new Deadlines(description, by);","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"                                } catch (Exception e) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"                                    System.err.println(\"Warning: Invalid date in line: \" + s);","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"                                }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mellowfarm"},"content":"                            }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mellowfarm"},"content":"                            break;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mellowfarm"},"content":"                        case \"E\":","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mellowfarm"},"content":"                            if (p.length \u003d\u003d 5) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mellowfarm"},"content":"                                try {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mellowfarm"},"content":"                                    LocalDateTime start \u003d LocalDateTime.parse(p[3]);","lastModifiedDate":"2025-08-28T23:22:25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mellowfarm"},"content":"                                    LocalDateTime end \u003d LocalDateTime.parse(p[4]);","lastModifiedDate":"2025-08-28T23:22:25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mellowfarm"},"content":"                                    task \u003d new Events(description, start, end);","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mellowfarm"},"content":"                                } catch (Exception e) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mellowfarm"},"content":"                                    System.err.println(\"Warning: Invalid datetime in line: \" + s);","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mellowfarm"},"content":"                                }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mellowfarm"},"content":"                            }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mellowfarm"},"content":"                            break;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mellowfarm"},"content":"                        default:","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mellowfarm"},"content":"                            System.err.println(\"Warning: Unknown task type in line: \" + s);","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mellowfarm"},"content":"                            break;","lastModifiedDate":"2025-08-31T15:54:30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mellowfarm"},"content":"                    }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mellowfarm"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mellowfarm"},"content":"                        if (isDone) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mellowfarm"},"content":"                            task.markAsDone();","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mellowfarm"},"content":"                        }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mellowfarm"},"content":"                        out.add(task);","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mellowfarm"},"content":"                    } else {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mellowfarm"},"content":"                        System.err.println(\"Warning: Could not parse line: \" + s);","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mellowfarm"},"content":"                    }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mellowfarm"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mellowfarm"},"content":"                    System.err.println(\"Warning: Skipping corrupted line: \" + s);","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mellowfarm"},"content":"                }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mellowfarm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mellowfarm"},"content":"            System.err.println(\"Warning: Could not load tasks from file: \" + e.getMessage());","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mellowfarm"},"content":"            System.err.println(\"Starting with empty task list.\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mellowfarm"},"content":"        return out;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mellowfarm"},"content":"     * Updates the task file with the current list of tasks.","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mellowfarm"},"content":"     * It writes each task in the list to the file in a specific format","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the list of tasks to be written to the file","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mellowfarm"},"content":"    public void update(TaskList tasks) {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mellowfarm"},"content":"            // Ensure the parent directory exists, create it if necessary","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mellowfarm"},"content":"            if (path.getParent() !\u003d null) {","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mellowfarm"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mellowfarm"},"content":"            // Write each task to the file","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mellowfarm"},"content":"            FileWriter fw \u003d new FileWriter(path.toFile());","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mellowfarm"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mellowfarm"},"content":"                fw.write(tasks.get(i).toFileString());","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mellowfarm"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mellowfarm"},"content":"            fw.close();","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mellowfarm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mellowfarm"},"content":"            System.err.println(\"Failed to save: \" + e.getMessage());","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false}],"authorContributionMap":{"mellowfarm":152}},{"path":"src/main/java/bug/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import java.time.Duration;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":" * Represents a task in the task management application.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":" * A task has a description and a status indicating whether it\u0027s completed or not.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"public abstract class Task {","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"    protected String description;","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"     * Constructor to initialize a task with a description.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"     * The task is initially set as not done.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"     * Returns the status icon representing the task\u0027s completion status.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"     * @return \"X\" if the task is done, \" \" (empty space) if it\u0027s not done","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"     * @return the task\u0027s description","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"    public String getDescription(){","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"        return this.description;","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"     * This updates the task\u0027s status to \"done\".","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"     * Marks the task as undone.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"     * This updates the task\u0027s status to \"not done\".","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"     * Returns a string representation of the task in the format \"[status] description\".","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"     * @return a string that includes the status and the description","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"     * Returns a string representation of the task formatted for saving to a file.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"     * Subclasses must implement this method to provide specific file string formats.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"     * @return a string that represents the task in a file-friendly format","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"    public abstract String toFileString();","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"    public void snooze(Duration duration) throws BugException {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"        throw new BugException(\":(! cannot snooze todos, they have no dates!\");","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-20T18:57:36","isFullCredit":false}],"authorContributionMap":{"mellowfarm":79}},{"path":"src/main/java/bug/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import java.util.List;","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":" * Represents a list of tasks in the task management application.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":" * This class provides methods for adding, removing, and finding tasks in the list.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"public class TaskList {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-31T15:54:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"     * Constructor to initialize an empty task list.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"        assert tasks !\u003d null : \"task list should never be null after initialisation!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"     * Constructor to initialize the task list with a given list of tasks.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"     * @param init the initial list of tasks","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"    public TaskList(List\u003cTask\u003e init) {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"        assert init !\u003d null : \"initial task list cannot be null!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(init);","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"        assert tasks !\u003d null : \"task list should never be null after initialisation!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"     * @return the size of the task list","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"    public int size() {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"        assert tasks !\u003d null : \"task list should never be null!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"        return tasks.size();","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"     * @param task the task to be added","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"    public void add(Task task) {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"        assert task !\u003d null : \"cannot add null task to tak list!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"        assert tasks !\u003d null : \"task list should never be null!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"        tasks.add(task);","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"     * Deletes a task at the specified index from the task list.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"     * @param index the index of the task to delete","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"     * @return the task that was removed","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"    public Task delete(int index) {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"        assert tasks !\u003d null : \"task list should never be null!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"        assert index \u003e\u003d 0 : \"index cannot be negative!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"        assert index \u003c tasks.size() : \"index must be within task lost bounds!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"     * Retrieves a task at the specified index.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"     * @param index the index of the task to retrieve","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"     * @return the task at the specified index","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"        assert tasks !\u003d null : \"task list should never be null!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"        assert index \u003e\u003d 0 : \"index cannot be negative!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"        assert index \u003c tasks.size() : \"index must be within task list bounds!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"     * Finds tasks whose description contains the specified keyword.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"     * @param keyword the keyword to search for in the task descriptions","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mellowfarm"},"content":"     * @return a list of tasks that contain the keyword in their description","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"        assert keyword !\u003d null : \"search keyword cannot be null!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mellowfarm"},"content":"        assert tasks !\u003d null : \"task list should never be null!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mellowfarm"},"content":"        ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mellowfarm"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mellowfarm"},"content":"            assert t !\u003d null : \"task in list should never be null!\";","lastModifiedDate":"2025-09-11T20:37:34","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mellowfarm"},"content":"            if (t.getDescription().contains(keyword)) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mellowfarm"},"content":"                matches.add(t);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mellowfarm"},"content":"        return matches;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false}],"authorContributionMap":{"mellowfarm":98}},{"path":"src/main/java/bug/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import java.time.Duration;","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":" * Represents a Todo task in the task management application.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":" * This class extends the Task class and includes the description of the task.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"public class ToDos extends Task {","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"     * Constructor for creating a new Todo task with a given description.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"     * @param description the description of the Todo task","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"    public ToDos(String description) {","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"        super(description);","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     * Returns a string representation of the Todo task, including its description and status.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"     * @return the string representation of the Todo task","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"     * Returns a string representation of the Todo task formatted for saving to a file.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"     * The format includes the task\u0027s status, description, and task type.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"     * @return the string representation of the Todo task for file storage","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"        int status \u003d isDone ? 1 : 0;","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"        return \"T | \" + status + \" | \" + getDescription();","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-28T21:10:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-20T23:44:39","isFullCredit":false}],"authorContributionMap":{"mellowfarm":41}},{"path":"src/main/java/bug/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":" * Represents the command to create a Todo task.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":" * This command parses the description for the Todo task, creates the task, and updates the task list and storage.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"    private final String description;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"     * Constructor for creating a TodoCommand with a description.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"     * @param description the description of the Todo task","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     * Executes the TodoCommand by creating a new Todo task and adding it to the task list.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"     * If the description is empty, a BugException is thrown.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the current list of tasks","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface used to display the result","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage used to save the tasks","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"     * @return a response message showing the created Todo task","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if the description is empty","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BugException {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\":(! a todo task cannot have an empty description!\");","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"        Task todo \u003d new ToDos(description);","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"        storage.update(tasks);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"        return ui.showToDo(todo, tasks);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":40}},{"path":"src/main/java/bug/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:26:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":" * The Ui class handles all user interface interactions.","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":" * It is responsible for displaying messages to the user, reading input and displaying task-related information","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":" * (e.g. task lists, errors, etc.).","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":" * The class provides methods for greeting the user, showing a list of tasks, marking tasks as done, and handling errors","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"public class Ui {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"    private final String name;","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"    public Ui() {","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"        name \u003d \"Bug\";","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"     * Prints a line of underscores for formatting.","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    public String showLine() {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"        return \"____________________________________________________________\";","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"     * Displays a greeting message to the user.","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"    public String showGreeting() {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"        return \"Hello! I\u0027m \" + name + \"\\nWhat can I do for you?\";","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"    public String showBye() {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"     * Reads a line of input from the user.","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"     * @return the input string from the user, or null if no input is available","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"    public String readLine() {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"        return sc.hasNextLine() ? sc.nextLine() : null;","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"     * Displays a list of tasks to the user.","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the TaskList containing all tasks to be displayed.","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"    public String showList(TaskList tasks) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"        list.append(\"your tasks are here:\");","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"            list.append(\"\\n\").append(i).append(\".\").append(tasks.get(i - 1).toString());","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"        return list.toString();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"     * Displays a message confirming that a task has been marked as done.","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"     * @param task the task that was marked as done","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"    public String showDone(Task task) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n[\" + task.getStatusIcon() + \"] \" +","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"                task.getDescription();","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"     * Displays a message confirming that a task has been marked as not done.","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"     * @param task the task that was marked as not done","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"    public String showUndone(Task task) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n[\" + task.getStatusIcon() + \"] \" +","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"                task.getDescription();","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"     * Displays a message confirming that a task has been deleted.","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mellowfarm"},"content":"     * @param task the task that was deleted","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the updated TaskList","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mellowfarm"},"content":"    public String showDeleted(Task task, TaskList tasks) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mellowfarm"},"content":"        return \"Ok! I\u0027ve removed this task:\\n\" + task.toString() + \"\\nNow you have \" + tasks.size() +","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mellowfarm"},"content":"                \" tasks in the list.\";","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mellowfarm"},"content":"     * Displays a message confirming that a new ToDo task has been added.","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mellowfarm"},"content":"     * @param todo the ToDo task that was added","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the updated TaskList","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mellowfarm"},"content":"    public String showToDo(Task todo, TaskList tasks) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mellowfarm"},"content":"        return \"Ok! I\u0027ve added this task:\\n\" + todo.toString() + \"\\nNow you have \" +","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mellowfarm"},"content":"                tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mellowfarm"},"content":"     * Displays a message confirming that a new Deadline task has been added.","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mellowfarm"},"content":"     * @param deadline the Deadline task that was added","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the updated TaskList","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mellowfarm"},"content":"    public String showDeadline(Task deadline, TaskList tasks) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mellowfarm"},"content":"        return \"Ok! I\u0027ve added this task:\\n\" + deadline.toString() +","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mellowfarm"},"content":"                \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mellowfarm"},"content":"     * Displays a message confirming that a new Event task has been added.","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mellowfarm"},"content":"     * @param event the Event task that was added","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the updated TaskList","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mellowfarm"},"content":"    public String showEvent(Task event, TaskList tasks) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mellowfarm"},"content":"        return \"Ok! I\u0027ve added this task:\\n\" + event.toString() +","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mellowfarm"},"content":"                \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mellowfarm"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mellowfarm"},"content":"     * @param error the error message to display","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mellowfarm"},"content":"    public String showError(String error) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mellowfarm"},"content":"        return error;","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mellowfarm"},"content":"     * Displays a list of tasks that match a search query.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mellowfarm"},"content":"     * @param matches the list of matching tasks","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mellowfarm"},"content":"     * @return a formatted string of the matching tasks","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mellowfarm"},"content":"    public String showFoundTasks(ArrayList\u003cTask\u003e matches) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mellowfarm"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mellowfarm"},"content":"        list.append(\"your matching tasks are here:\");","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mellowfarm"},"content":"        for (int i \u003d 1; i \u003c\u003d matches.size(); i++) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mellowfarm"},"content":"            list.append(\"\\n\").append(i).append(\".\").append(matches.get(i - 1).toString());","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mellowfarm"},"content":"        return list.toString();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T16:08:49","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T16:08:49","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"mellowfarm"},"content":"     * Displays a message confirming that a task has been snoozed.","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"mellowfarm"},"content":"     * Shows the task with its updated date/time information after snoozing.","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"mellowfarm"},"content":"     * @param task the task that was snoozed with updated deadline or event times","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"mellowfarm"},"content":"     * @return a formatted string showing the confirmation message and the snoozed task details","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"mellowfarm"},"content":"    public String showSnooze(Task task) {","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"mellowfarm"},"content":"        return \"OK, I\u0027ve snoozed this task:\\n\" + task.toString();","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:25:35","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-31T12:07:10","isFullCredit":false}],"authorContributionMap":{"mellowfarm":164}},{"path":"src/main/java/bug/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":" * Represents an unknown command that is triggered when the user enters an unrecognized command.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":" * This command returns an error message indicating that the input is invalid.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"    private final String errorMessage;","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"     * Default constructor for unknown commands with generic error message.","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"    public UnknownCommand() {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"        this.errorMessage \u003d \":(! i don\u0027t know what you mean! please re-enter your task :)!\";","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"     * Constructor with custom error message for specific format errors.","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     * @param errorMessage the specific error message to display","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"    public UnknownCommand(String errorMessage) {","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"     * Executes the UnknownCommand, displaying an error message to the user when the input is unrecognized.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the current list of tasks (not used in this command)","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface used to display the error message","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage used to save the tasks (not used in this command)","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"     * @return a response message indicating that the command was unrecognized","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"        return ui.showError(errorMessage);","lastModifiedDate":"2025-09-16T20:41:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":39}},{"path":"src/main/java/bug/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"/**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":" * Represents the command to mark a task as not done.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":" * This command marks a specific task in the task list as undone based on the given index.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":" */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"    private final int index;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"     * Represents the command to mark a task as not done.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"     * This command marks a specific task in the task list as undone based on the given index.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"    /**","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"     * Executes the UnmarkCommand by marking the task at the specified index as undone.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"     * If the task index is invalid (out of bounds), a BugException is thrown.","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"     *","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"     * @param tasks the current list of tasks","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"     * @param ui the user interface used to display the result","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"     * @param storage the storage used to save the tasks","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"     * @return a response message showing the task that was marked as undone","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"     * @throws BugException if the task index is invalid or out of bounds","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"     */","lastModifiedDate":"2025-09-11T22:28:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BugException {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\":(! no tasks available to unark!\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\":(! task index \" + (index + 1) + \" is out of range! You have \" + tasks.size() + \" tasks.\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"        try {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"            task.markAsUndone();","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"            storage.update(tasks);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"            return ui.showUndone(task);","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"            throw new BugException(\":(! could not unmark task at index \" + (index + 1) + \"!\");","lastModifiedDate":"2025-09-16T21:32:10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":48}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"         stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/24.0.1\"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"        \u003cTextFlow fx:id\u003d\"dialog\" styleClass\u003d\"text-flow\"\u003e","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"                \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\"/\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"                \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\"/\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"        \u003c/TextFlow\u003e","lastModifiedDate":"2025-09-16T19:45:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2025-09-12T10:45:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/24.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bug.MainWindow\"\u003e","lastModifiedDate":"2025-09-06T22:04:17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false}],"authorContributionMap":{"mellowfarm":19}},{"path":"src/test/java/bug/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"public class ParserTest {","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"    // Test 1: test parsing todo","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"    public void testParseTodo() {","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d \"todo test task\";","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-06T12:29:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(command instanceof TodoCommand);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"        // TodoCommand doesn\u0027t expose description, but we can test execution","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"    // Test 2: test parsing deadline","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"    public void testParseDeadline() {","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d \"deadline test deadline /by 2025-09-01\";","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(command instanceof DeadlineCommand);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"    // Test 3: test parsing event","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"    public void testParseEvent() {","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d \"event test event /from 2025-09-01 0800 /to 2025-09-01 1200\";","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(command instanceof EventCommand);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"    // Test 4: test unknown command","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"    public void testUnknownCommand() {","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d \"unknown command\";","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(command instanceof UnknownCommand);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"    // Test 5: test parsing mark command","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"    public void testParseMark() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d \"mark 1\";","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(command instanceof MarkCommand);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"    // Test 6: test parsing unmark command","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"    public void testParseUnmark() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d \"unmark 2\";","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(command instanceof UnmarkCommand);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"    // Test 7: test parsing delete command","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"    public void testParseDelete() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d \"delete 3\";","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(command instanceof DeleteCommand);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"    // Test 8: test parsing snooze command","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"    public void testParseSnooze() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d \"snooze 1 3d\";","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mellowfarm"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(command instanceof SnoozeCommand);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mellowfarm"},"content":"    // Test 9: test parsing find command","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mellowfarm"},"content":"    public void testParseFind() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d \"find book\";","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mellowfarm"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(command instanceof FindCommand);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mellowfarm"},"content":"    // Test 10: test parsing bye command","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mellowfarm"},"content":"    public void testParseBye() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d \"bye\";","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mellowfarm"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(command instanceof ByeCommand);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mellowfarm"},"content":"    // Test 11: test parsing list command","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mellowfarm"},"content":"    public void testParseList() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mellowfarm"},"content":"        String input \u003d \"list\";","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mellowfarm"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(command instanceof ListCommand);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mellowfarm"},"content":"    // Test 12: test case insensitive parsing","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mellowfarm"},"content":"    public void testCaseInsensitive() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mellowfarm"},"content":"        String[] inputs \u003d {\"TODO test\", \"List\", \"BYE\", \"MARK 1\"};","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mellowfarm"},"content":"        for (String input : inputs) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mellowfarm"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mellowfarm"},"content":"            assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mellowfarm"},"content":"            assertFalse(command instanceof UnknownCommand,","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mellowfarm"},"content":"                    \"Should parse case-insensitive: \" + input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mellowfarm"},"content":"    // Test 13: test invalid inputs return UnknownCommand","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mellowfarm"},"content":"    public void testInvalidInputs() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mellowfarm"},"content":"        String[] invalidInputs \u003d {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mellowfarm"},"content":"                \"\",                    // Empty string","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mellowfarm"},"content":"                \"   \",                 // Just spaces","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mellowfarm"},"content":"                null,                  // Null input","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mellowfarm"},"content":"                \"mark\",                // Missing index","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mellowfarm"},"content":"                \"deadline\",            // Missing description and date","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mellowfarm"},"content":"                \"snooze 1\",           // Missing duration","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mellowfarm"},"content":"                \"randomcommand\"        // Unknown command","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mellowfarm"},"content":"        };","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mellowfarm"},"content":"        for (String input : invalidInputs) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mellowfarm"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mellowfarm"},"content":"            assertNotNull(command);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mellowfarm"},"content":"            assertTrue(command instanceof UnknownCommand,","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mellowfarm"},"content":"                    \"Should be UnknownCommand for: \" + input);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false}],"authorContributionMap":{"mellowfarm":153}},{"path":"src/test/java/bug/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"package bug;","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mellowfarm"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mellowfarm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mellowfarm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mellowfarm"},"content":"import java.util.List;","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mellowfarm"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mellowfarm"},"content":"public class StorageTest {","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mellowfarm"},"content":"    private TestStorage storage;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mellowfarm"},"content":"    private Path testDataDir;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mellowfarm"},"content":"    private Path testFile;","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mellowfarm"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mellowfarm"},"content":"    public void setUp() throws IOException {","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mellowfarm"},"content":"        // Create temporary directory for testing","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mellowfarm"},"content":"        testDataDir \u003d Files.createTempDirectory(\"bug-test-data\");","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mellowfarm"},"content":"        testFile \u003d testDataDir.resolve(\"test-bug.txt\");","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T15:34:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mellowfarm"},"content":"        // Create custom storage that uses our test file","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mellowfarm"},"content":"        storage \u003d new TestStorage(testFile);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mellowfarm"},"content":"    @AfterEach","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mellowfarm"},"content":"    public void tearDown() throws IOException {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mellowfarm"},"content":"        // Clean up test files","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mellowfarm"},"content":"        if (Files.exists(testFile)) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mellowfarm"},"content":"            Files.delete(testFile);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mellowfarm"},"content":"        if (Files.exists(testDataDir)) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mellowfarm"},"content":"            Files.delete(testDataDir);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mellowfarm"},"content":"    // Test 1: Load from empty/non-existent file","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mellowfarm"},"content":"    public void testLoadEmptyFile() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mellowfarm"},"content":"        List\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mellowfarm"},"content":"        assertNotNull(tasks);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mellowfarm"},"content":"    // Test 2: Save and load single todo task","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mellowfarm"},"content":"    public void testSaveAndLoadTodo() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mellowfarm"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mellowfarm"},"content":"        ToDos todo \u003d new ToDos(\"buy groceries\");","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mellowfarm"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mellowfarm"},"content":"        // Save tasks","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mellowfarm"},"content":"        storage.update(tasks);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mellowfarm"},"content":"        // Load tasks back","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mellowfarm"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(1, loadedTasks.size());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mellowfarm"},"content":"        Task loadedTask \u003d loadedTasks.get(0);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(loadedTask instanceof ToDos);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\"buy groceries\", loadedTask.getDescription());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\" \", loadedTask.getStatusIcon()); // Not done","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mellowfarm"},"content":"    // Test 3: Save and load completed todo task","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mellowfarm"},"content":"    public void testSaveAndLoadCompletedTodo() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mellowfarm"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mellowfarm"},"content":"        ToDos todo \u003d new ToDos(\"completed task\");","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mellowfarm"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mellowfarm"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mellowfarm"},"content":"        storage.update(tasks);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mellowfarm"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(1, loadedTasks.size());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mellowfarm"},"content":"        Task loadedTask \u003d loadedTasks.get(0);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\"X\", loadedTask.getStatusIcon()); // Should be marked as done","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mellowfarm"},"content":"    // Test 4: Save and load deadline task","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mellowfarm"},"content":"    public void testSaveAndLoadDeadline() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mellowfarm"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mellowfarm"},"content":"        LocalDate dueDate \u003d LocalDate.of(2025, 12, 31);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mellowfarm"},"content":"        Deadlines deadline \u003d new Deadlines(\"submit report\", dueDate);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mellowfarm"},"content":"        tasks.add(deadline);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mellowfarm"},"content":"        storage.update(tasks);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mellowfarm"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(1, loadedTasks.size());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mellowfarm"},"content":"        Task loadedTask \u003d loadedTasks.get(0);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(loadedTask instanceof Deadlines);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\"submit report\", loadedTask.getDescription());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(loadedTask.toString().contains(\"31 Dec 2025\"));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mellowfarm"},"content":"    // Test 5: Save and load event task","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mellowfarm"},"content":"    public void testSaveAndLoadEvent() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mellowfarm"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mellowfarm"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 12, 25, 14, 0);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mellowfarm"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2025, 12, 25, 16, 0);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mellowfarm"},"content":"        Events event \u003d new Events(\"team meeting\", start, end);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mellowfarm"},"content":"        tasks.add(event);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mellowfarm"},"content":"        storage.update(tasks);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mellowfarm"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(1, loadedTasks.size());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mellowfarm"},"content":"        Task loadedTask \u003d loadedTasks.get(0);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(loadedTask instanceof Events);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\"team meeting\", loadedTask.getDescription());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(loadedTask.toString().contains(\"25 Dec 2025\"));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(loadedTask.toString().contains(\"14:00\"));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(loadedTask.toString().contains(\"16:00\"));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mellowfarm"},"content":"    // Test 6: Save and load multiple mixed task types","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mellowfarm"},"content":"    public void testSaveAndLoadMultipleTasks() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mellowfarm"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mellowfarm"},"content":"        // Add different task types","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mellowfarm"},"content":"        ToDos todo \u003d new ToDos(\"buy milk\");","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mellowfarm"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mellowfarm"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mellowfarm"},"content":"        Deadlines deadline \u003d new Deadlines(\"assignment\", LocalDate.of(2025, 6, 15));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mellowfarm"},"content":"        tasks.add(deadline);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mellowfarm"},"content":"        Events event \u003d new Events(\"party\",","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mellowfarm"},"content":"                LocalDateTime.of(2025, 7, 4, 19, 0),","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mellowfarm"},"content":"                LocalDateTime.of(2025, 7, 4, 23, 0));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mellowfarm"},"content":"        event.markAsDone();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mellowfarm"},"content":"        tasks.add(event);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mellowfarm"},"content":"        storage.update(tasks);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mellowfarm"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(3, loadedTasks.size());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mellowfarm"},"content":"        // Check todo","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mellowfarm"},"content":"        Task task1 \u003d loadedTasks.get(0);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(task1 instanceof ToDos);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\"X\", task1.getStatusIcon());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"mellowfarm"},"content":"        // Check deadline","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"mellowfarm"},"content":"        Task task2 \u003d loadedTasks.get(1);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(task2 instanceof Deadlines);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\" \", task2.getStatusIcon());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"mellowfarm"},"content":"        // Check event","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"mellowfarm"},"content":"        Task task3 \u003d loadedTasks.get(2);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"mellowfarm"},"content":"        assertTrue(task3 instanceof Events);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\"X\", task3.getStatusIcon());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"mellowfarm"},"content":"    // Test 7: Test file format correctness","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"mellowfarm"},"content":"    public void testFileFormatCorrectness() throws IOException {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"mellowfarm"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"mellowfarm"},"content":"        tasks.add(new ToDos(\"test todo\"));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"mellowfarm"},"content":"        tasks.add(new Deadlines(\"test deadline\", LocalDate.of(2025, 1, 1)));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"mellowfarm"},"content":"        storage.update(tasks);","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"mellowfarm"},"content":"        // Read the actual file content","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"mellowfarm"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(testFile);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(2, lines.size());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\"T | 0 | test todo\", lines.get(0));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\"D | 0 | test deadline | 2025-01-01\", lines.get(1));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"mellowfarm"},"content":"    // Test 8: Test overwriting existing file","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"mellowfarm"},"content":"    public void testOverwriteExistingFile() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"mellowfarm"},"content":"        // Save first set of tasks","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"mellowfarm"},"content":"        TaskList tasks1 \u003d new TaskList();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"mellowfarm"},"content":"        tasks1.add(new ToDos(\"first task\"));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"mellowfarm"},"content":"        storage.update(tasks1);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"mellowfarm"},"content":"        // Save different set of tasks (should overwrite)","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"mellowfarm"},"content":"        TaskList tasks2 \u003d new TaskList();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"mellowfarm"},"content":"        tasks2.add(new ToDos(\"second task\"));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"mellowfarm"},"content":"        tasks2.add(new ToDos(\"third task\"));","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"mellowfarm"},"content":"        storage.update(tasks2);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"mellowfarm"},"content":"        // Load and verify only second set exists","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"mellowfarm"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(2, loadedTasks.size());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\"second task\", loadedTasks.get(0).getDescription());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(\"third task\", loadedTasks.get(1).getDescription());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"mellowfarm"},"content":"    // Test 10: Test empty task list save","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"mellowfarm"},"content":"    @Test","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"mellowfarm"},"content":"    public void testSaveEmptyTaskList() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"mellowfarm"},"content":"        TaskList emptyTasks \u003d new TaskList();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"mellowfarm"},"content":"        storage.update(emptyTasks);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"mellowfarm"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"mellowfarm"},"content":"        assertEquals(0, loadedTasks.size());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"mellowfarm"},"content":"    // Custom Storage class that actually overrides the file path","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"mellowfarm"},"content":"    private static class TestStorage extends Storage {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"mellowfarm"},"content":"        private final Path testFilePath;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"mellowfarm"},"content":"        public TestStorage(Path testFilePath) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"mellowfarm"},"content":"            this.testFilePath \u003d testFilePath;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"mellowfarm"},"content":"        @Override","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"mellowfarm"},"content":"        public List\u003cTask\u003e load() {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"mellowfarm"},"content":"            // Copy the logic from Storage.load() but use our test file","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"mellowfarm"},"content":"            List\u003cTask\u003e out \u003d new java.util.ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"mellowfarm"},"content":"            try {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"mellowfarm"},"content":"                // Ensure the parent directory exists","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"mellowfarm"},"content":"                if (testFilePath.getParent() !\u003d null) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"mellowfarm"},"content":"                    Files.createDirectories(testFilePath.getParent());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"mellowfarm"},"content":"                }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"mellowfarm"},"content":"                // If the file doesn\u0027t exist or is empty, return empty list","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"mellowfarm"},"content":"                if (Files.notExists(testFilePath) || Files.size(testFilePath) \u003d\u003d 0) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"mellowfarm"},"content":"                    return out;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"mellowfarm"},"content":"                }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"mellowfarm"},"content":"                // Read all lines from the test file","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"mellowfarm"},"content":"                for (String line : Files.readAllLines(testFilePath)) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"mellowfarm"},"content":"                    String s \u003d line.trim();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"mellowfarm"},"content":"                    if (s.isEmpty()) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"mellowfarm"},"content":"                        continue;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"mellowfarm"},"content":"                    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"mellowfarm"},"content":"                    try {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"mellowfarm"},"content":"                        String[] p \u003d s.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"mellowfarm"},"content":"                        // Skip lines that don\u0027t have enough parts","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"mellowfarm"},"content":"                        if (p.length \u003c 3) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"mellowfarm"},"content":"                            continue; // Skip invalid lines","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"mellowfarm"},"content":"                        }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"mellowfarm"},"content":"                        String type \u003d p[0];","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"mellowfarm"},"content":"                        boolean isDone \u003d \"1\".equals(p[1]);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"mellowfarm"},"content":"                        switch (type) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"mellowfarm"},"content":"                            case \"T\":","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"mellowfarm"},"content":"                                if (p.length \u003e\u003d 3) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"mellowfarm"},"content":"                                    Task todo \u003d new ToDos(p[2]);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"mellowfarm"},"content":"                                    if (isDone) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"mellowfarm"},"content":"                                        todo.markAsDone();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"mellowfarm"},"content":"                                    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"mellowfarm"},"content":"                                    out.add(todo);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"mellowfarm"},"content":"                                }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"mellowfarm"},"content":"                                break;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"mellowfarm"},"content":"                            case \"D\":","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"mellowfarm"},"content":"                                if (p.length \u003e\u003d 4) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"mellowfarm"},"content":"                                    LocalDate by \u003d LocalDate.parse(p[3]);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"mellowfarm"},"content":"                                    Task deadline \u003d new Deadlines(p[2], by);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"mellowfarm"},"content":"                                    if (isDone) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"mellowfarm"},"content":"                                        deadline.markAsDone();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"mellowfarm"},"content":"                                    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"mellowfarm"},"content":"                                    out.add(deadline);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"mellowfarm"},"content":"                                }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"mellowfarm"},"content":"                                break;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"mellowfarm"},"content":"                            case \"E\":","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"mellowfarm"},"content":"                                if (p.length \u003e\u003d 5) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"mellowfarm"},"content":"                                    LocalDateTime start \u003d LocalDateTime.parse(p[3]);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"mellowfarm"},"content":"                                    LocalDateTime end \u003d LocalDateTime.parse(p[4]);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"mellowfarm"},"content":"                                    Task event \u003d new Events(p[2], start, end);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"mellowfarm"},"content":"                                    if (isDone) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"mellowfarm"},"content":"                                        event.markAsDone();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"mellowfarm"},"content":"                                    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"mellowfarm"},"content":"                                    out.add(event);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"mellowfarm"},"content":"                                }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"mellowfarm"},"content":"                                break;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"mellowfarm"},"content":"                            default:","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"mellowfarm"},"content":"                                // Unknown task type, skip this line","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"mellowfarm"},"content":"                                break;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"mellowfarm"},"content":"                        }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"mellowfarm"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"mellowfarm"},"content":"                        // Skip any line that causes parsing errors","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"mellowfarm"},"content":"                        System.err.println(\"Skipping invalid line: \" + s);","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"mellowfarm"},"content":"                        continue;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"mellowfarm"},"content":"                    }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"mellowfarm"},"content":"                }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"mellowfarm"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"mellowfarm"},"content":"                System.err.println(\"Warning: failed to load test tasks: \" + e.getMessage());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"mellowfarm"},"content":"            return out;","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"mellowfarm"},"content":"        @Override","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"mellowfarm"},"content":"        public void update(TaskList tasks) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"mellowfarm"},"content":"            // Copy the logic from Storage.update() but use our test file","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"mellowfarm"},"content":"            try {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"mellowfarm"},"content":"                // Ensure the parent directory exists","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"mellowfarm"},"content":"                if (testFilePath.getParent() !\u003d null) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"mellowfarm"},"content":"                    Files.createDirectories(testFilePath.getParent());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"mellowfarm"},"content":"                }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"mellowfarm"},"content":"","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"mellowfarm"},"content":"                // Write each task to the test file","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"mellowfarm"},"content":"                FileWriter fw \u003d new FileWriter(testFilePath.toFile());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"mellowfarm"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"mellowfarm"},"content":"                    fw.write(tasks.get(i).toFileString());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"mellowfarm"},"content":"                    fw.write(System.lineSeparator());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"mellowfarm"},"content":"                }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"mellowfarm"},"content":"                fw.close();","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"mellowfarm"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"mellowfarm"},"content":"                System.err.println(\"Failed to save test file: \" + e.getMessage());","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"mellowfarm"},"content":"            }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"mellowfarm"},"content":"        }","lastModifiedDate":"2025-09-12T10:59:46","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"mellowfarm"},"content":"    }","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"mellowfarm"},"content":"}","lastModifiedDate":"2025-08-31T14:06:36","isFullCredit":false}],"authorContributionMap":{"mellowfarm":327}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mellowfarm"},"content":"todo read book","lastModifiedDate":"2025-08-21T09:51:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mellowfarm"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-21T09:51:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mellowfarm"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-21T09:51:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mellowfarm"},"content":"list","lastModifiedDate":"2025-08-21T09:51:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mellowfarm"},"content":"mark 2","lastModifiedDate":"2025-08-21T09:51:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mellowfarm"},"content":"mark 1","lastModifiedDate":"2025-08-21T09:51:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mellowfarm"},"content":"unmark 1","lastModifiedDate":"2025-08-21T09:51:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mellowfarm"},"content":"list","lastModifiedDate":"2025-08-21T09:51:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mellowfarm"},"content":"bye","lastModifiedDate":"2025-08-21T09:51:52","isFullCredit":false}],"authorContributionMap":{"mellowfarm":9}}]
