[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-02T18:44:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"    mainClass.set(\"Nina.main\")","lastModifiedDate":"2025-08-29T12:07:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"haorui2004"},"content":"    archiveBaseName \u003d \"nina\"","lastModifiedDate":"2025-08-29T02:19:40","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-02T18:44:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"haorui2004"},"content":"checkstyle {","lastModifiedDate":"2025-09-02T18:44:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"haorui2004"},"content":"    toolVersion \u003d \u002711.0.1\u0027","lastModifiedDate":"2025-09-02T18:44:14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-09-02T18:44:14","isFullCredit":false}],"authorContributionMap":{"haorui2004":7,"-":39}},{"path":"src/main/java/nina/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"public class CommandException extends Exception{","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"    public CommandException(String msg) {","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"        super(msg);","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false}],"authorContributionMap":{"haorui2004":7}},{"path":"src/main/java/nina/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"public class InvalidInputException extends Exception{","lastModifiedDate":"2025-08-22T01:02:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"    public InvalidInputException (String msg) {","lastModifiedDate":"2025-08-22T01:02:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"        super(msg);","lastModifiedDate":"2025-08-22T01:02:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-22T01:02:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-22T01:02:37","isFullCredit":false}],"authorContributionMap":{"haorui2004":7}},{"path":"src/main/java/nina/Nina.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import nina.command.Command;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import nina.task.TaskList;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-21T20:17:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T20:17:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"public class Nina {","lastModifiedDate":"2025-08-21T19:33:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"    static String LINE \u003d \"___________________________________\\n\";","lastModifiedDate":"2025-08-29T11:45:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-29T11:45:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-28T22:30:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"    private UI ui;","lastModifiedDate":"2025-08-28T23:59:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"    private static final String STORAGE_FILE_PATH \u003d \"data/nina.Nina.txt\";","lastModifiedDate":"2025-08-29T11:45:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T19:33:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"     * Creates a Nina chatbot object.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"     * Initializes storage, read tasks from file, and sets up the UI.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    public Nina() {","lastModifiedDate":"2025-08-21T22:33:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"        this.storage \u003d new Storage(\"data/Nina.txt\");","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"        this.storage \u003d new Storage(STORAGE_FILE_PATH);","lastModifiedDate":"2025-08-29T11:45:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"        this.tasks \u003d storage.read();","lastModifiedDate":"2025-08-28T22:30:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2025-08-28T23:59:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T19:33:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T19:33:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"     * Runs the main program loop.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"     * Displays a greeting, continuously reads user input,","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"     * parses it into a Command object, executes the command,","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"     * and saves the updated tasks. The loop terminates when the user","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"     * enters the bye command.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"    public void run() {","lastModifiedDate":"2025-08-21T22:33:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"        ui.greet();","lastModifiedDate":"2025-08-28T23:59:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"haorui2004"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-21T20:17:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"haorui2004"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2025-08-21T20:17:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"haorui2004"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2025-08-21T22:33:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T20:46:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"haorui2004"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2025-08-21T22:33:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"haorui2004"},"content":"                ui.exit();","lastModifiedDate":"2025-08-28T23:59:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"haorui2004"},"content":"                break;","lastModifiedDate":"2025-08-21T22:33:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"haorui2004"},"content":"            }","lastModifiedDate":"2025-08-21T20:46:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:33:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"haorui2004"},"content":"            try {","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"haorui2004"},"content":"                Command cmd \u003d Parser.parse(input);","lastModifiedDate":"2025-08-28T23:59:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"haorui2004"},"content":"                System.out.print(LINE);","lastModifiedDate":"2025-08-29T11:45:31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"haorui2004"},"content":"                cmd.execute(tasks);","lastModifiedDate":"2025-08-21T22:33:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"haorui2004"},"content":"                storage.write(tasks);","lastModifiedDate":"2025-08-28T22:30:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"haorui2004"},"content":"                System.out.print(LINE);","lastModifiedDate":"2025-08-29T11:45:31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"haorui2004"},"content":"            } catch (CommandException e) {","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"haorui2004"},"content":"                ui.showError(\"nina.command.Command error: \" + e.getMessage());","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"haorui2004"},"content":"            } catch (InvalidInputException i) {","lastModifiedDate":"2025-08-22T01:03:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"haorui2004"},"content":"                ui.showError(\"Input error: \" + i.getMessage());","lastModifiedDate":"2025-08-28T23:59:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"haorui2004"},"content":"            }","lastModifiedDate":"2025-08-22T01:22:01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-21T20:17:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T20:17:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T20:17:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"haorui2004"},"content":"     * Main entry point of the program.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"haorui2004"},"content":"     * @param args","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"haorui2004"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-21T19:33:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"haorui2004"},"content":"        Nina test \u003d new Nina();","lastModifiedDate":"2025-08-21T20:17:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"haorui2004"},"content":"        test.run();","lastModifiedDate":"2025-08-21T22:33:59","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T19:33:27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-21T19:33:27","isFullCredit":false}],"authorContributionMap":{"haorui2004":67}},{"path":"src/main/java/nina/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import nina.command.*;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import nina.task.DeadlineTask;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"import nina.task.EventTask;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"import nina.task.TodoTask;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":" * Parses raw user input strings and convert them to corresponding commands","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"     * Parses a raw input string into a command object","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"     * @param str raw input from user","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"     * @return Command object corresponding to the input","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"     * @throws CommandException if the input is empty","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"     * @throws InvalidInputException if the input format is invalid","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"    public static Command parse (String str) throws CommandException, InvalidInputException {","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"        if (str.isEmpty()) {","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"            throw new CommandException(\"The command is empty\");","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"        if (str.equals(\"list\")) {","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"            return new ListCommand();","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"        if (str.startsWith(\"mark \")) {","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"            String taskNo \u003d str.substring(5).trim();","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"            try {","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"                int number \u003d Integer.parseInt(taskNo);","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"                return new MarkCommand(number);","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"haorui2004"},"content":"                throw new InvalidInputException(\"Only number can come after mark!\");","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"haorui2004"},"content":"            }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"haorui2004"},"content":"        if (str.startsWith(\"unmark \")) {","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"haorui2004"},"content":"            String taskNo \u003d str.substring(7).trim();","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"haorui2004"},"content":"            try {","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"haorui2004"},"content":"                int number \u003d Integer.parseInt(taskNo);","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"haorui2004"},"content":"                return new UnmarkCommand(number);","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"haorui2004"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"haorui2004"},"content":"                throw new InvalidInputException(\"Only number can come after unmark!\");","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"haorui2004"},"content":"            }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"haorui2004"},"content":"        if (str.startsWith(\"todo \")) {","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"haorui2004"},"content":"            String des \u003d str.substring(5).trim();","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"haorui2004"},"content":"            TodoTask td \u003d new TodoTask(des);","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"haorui2004"},"content":"            return new AddCommand(td);","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"haorui2004"},"content":"        if (str.startsWith(\"deadline \")) {","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"haorui2004"},"content":"            String[] parts \u003d str.substring(9).split(\"/by\", 2);","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"haorui2004"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"haorui2004"},"content":"                throw new InvalidInputException(\"Please check the format of task input again!\");","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"haorui2004"},"content":"            }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"haorui2004"},"content":"            String des \u003d parts[0].trim();","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"haorui2004"},"content":"            String by \u003d parts[1].trim();","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"haorui2004"},"content":"            DeadlineTask ddl \u003d new DeadlineTask(des, by);","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"haorui2004"},"content":"            return new AddCommand(ddl);","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"haorui2004"},"content":"        if (str.startsWith(\"event \")) {","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"haorui2004"},"content":"            String[] parts \u003d str.substring(6).split(\"/from|/to\");","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"haorui2004"},"content":"            if (parts.length \u003c 3) {","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"haorui2004"},"content":"                throw new InvalidInputException(\"Please check the format of task input again!\");","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"haorui2004"},"content":"            }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"haorui2004"},"content":"            String des \u003d parts[0].trim();","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"haorui2004"},"content":"            String from \u003d parts[1].trim();","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"haorui2004"},"content":"            String to \u003d parts[2].trim();","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"haorui2004"},"content":"            EventTask ev \u003d new EventTask(des, from, to);","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"haorui2004"},"content":"            return new AddCommand(ev);","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"haorui2004"},"content":"        if (str.startsWith(\"delete \")) {","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"haorui2004"},"content":"            String taskNo \u003d str.substring(7).trim();","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"haorui2004"},"content":"            try {","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"haorui2004"},"content":"                int number \u003d Integer.parseInt(taskNo);","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"haorui2004"},"content":"                return new DeleteCommand(number);","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"haorui2004"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"haorui2004"},"content":"                throw new InvalidInputException(\"Only number can come after delete!\");","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"haorui2004"},"content":"            }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"haorui2004"},"content":"        if(str.startsWith(\"find \")) {","lastModifiedDate":"2025-08-29T02:42:42","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"haorui2004"},"content":"            String keyword \u003d str.substring(5).trim();","lastModifiedDate":"2025-08-29T02:42:42","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"haorui2004"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2025-08-29T02:42:42","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-29T02:42:42","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:42:42","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"haorui2004"},"content":"        throw new InvalidInputException(\"I cannot find the command OvO\");","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false}],"authorContributionMap":{"haorui2004":95}},{"path":"src/main/java/nina/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import nina.task.Task;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import nina.task.TaskList;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"import java.util.List;","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":" * Handles saving and loading of tasks to and from a storage file.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"public class Storage {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"    private final Path filePath;","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    private final Path dirPath;","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"     * Creates a Storage object given a file path string.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"     * The directory path is inferred from the given file path.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"     * @param path the file path string where tasks will be saved","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"    public Storage(String path) {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"        this.filePath \u003d Paths.get(path).normalize();","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"        this.dirPath \u003d filePath.getParent() \u003d\u003d null ? Paths.get(\".\") : filePath.getParent();","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"     * Ensures that the storage file and its directory exist.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"     * Creates them if they do not exist.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"haorui2004"},"content":"     * @throws IOException if the directory or file cannot be created","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"haorui2004"},"content":"    private void ensureFile() throws IOException {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"haorui2004"},"content":"        if (Files.notExists(dirPath)) Files.createDirectories(dirPath);","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"haorui2004"},"content":"        if (Files.notExists(filePath)) Files.createFile(filePath);","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"haorui2004"},"content":"     * Reads tasks from the storage file into a TaskList.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"haorui2004"},"content":"     * @return a TaskList containing tasks in the file","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"haorui2004"},"content":"    public TaskList read() {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"haorui2004"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"haorui2004"},"content":"        try {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"haorui2004"},"content":"            ensureFile();","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"haorui2004"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"haorui2004"},"content":"            for (String raw : lines) {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"haorui2004"},"content":"                String line \u003d raw.trim();","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"haorui2004"},"content":"                if (!line.isEmpty()) {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"haorui2004"},"content":"                    list.addTask(Task.fromSaveLine(line));","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"haorui2004"},"content":"                }","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"haorui2004"},"content":"            }","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"haorui2004"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"haorui2004"},"content":"            System.err.println(\"[nina.Storage] read error: \" + e.getMessage());","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"haorui2004"},"content":"        return list;","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"haorui2004"},"content":"     * Writes the given TaskList to the storage file.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"haorui2004"},"content":"     * Each task is serialized into a save line and written to the file.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"haorui2004"},"content":"     * @param tasksToStore the TaskList to be saved","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"haorui2004"},"content":"    public void write(TaskList tasksToStore) {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"haorui2004"},"content":"        try {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"haorui2004"},"content":"            ensureFile();","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"haorui2004"},"content":"            try (BufferedWriter w \u003d new BufferedWriter(new FileWriter(filePath.toFile()))) {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"haorui2004"},"content":"                for (Task t : tasksToStore.items()) {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"haorui2004"},"content":"                    w.write(t.toSaveLine());","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"haorui2004"},"content":"                    w.newLine();","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"haorui2004"},"content":"                }","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"haorui2004"},"content":"            }","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"haorui2004"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"haorui2004"},"content":"            System.err.println(\"[nina.Storage] write error: \" + e.getMessage());","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false}],"authorContributionMap":{"haorui2004":85}},{"path":"src/main/java/nina/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":" * Handles user interactions with the program","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"public class UI {","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"    private static String line \u003d \"___________________________________\\n\";","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"     * Prints the greeting message when the program starts.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"    public void greet() {","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"        System.out.print(line);","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"        System.out.println(\"Hello, I am your personal assistant nina.Nina\\n\" +","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"                \"What can I do for you?\");","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"        System.out.print(line);","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"     * Prints the exit message when the program is about to terminate.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"    public void exit() {","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"        System.out.print(line);","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"        System.out.println(\"See you again soon!\");","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"        System.out.print(line);","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"     * Prints an error message to inform the user of invalid input or issues.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"     * @param msg The error message to be displayed","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"    public void showError(String msg) {","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"        System.out.println(\"OOPS!!! \" + msg);","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false}],"authorContributionMap":{"haorui2004":37}},{"path":"src/main/java/nina/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.command;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import nina.task.Task;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import nina.task.TaskList;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"    protected Task task;","lastModifiedDate":"2025-08-22T00:22:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"     * Constructs a AddCommand object.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"     * @param task task to be added into the tasks list","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2025-08-22T00:22:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-08-22T00:22:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-08-22T00:22:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + task);","lastModifiedDate":"2025-08-22T00:22:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-22T00:22:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false}],"authorContributionMap":{"haorui2004":24}},{"path":"src/main/java/nina/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.command;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import nina.CommandException;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import nina.task.TaskList;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":" * Represents a command that can be executed on a TaskList.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"public interface Command {","lastModifiedDate":"2025-08-21T22:32:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"     * Executes the command on the given TaskList.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"     * @param tasks the task list the command operates on","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"     * @throws CommandException if the command cannot be executed successfully","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"    void execute(TaskList tasks) throws CommandException;","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-21T22:32:51","isFullCredit":false}],"authorContributionMap":{"haorui2004":18}},{"path":"src/main/java/nina/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.command;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import nina.CommandException;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import nina.task.TaskList;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"    protected int index;","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"     * Constructs a DeleteCommand object.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"     * @param index index of the task to be deleted","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T11:51:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"    public void execute(TaskList tasks) throws CommandException {","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"        try{","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"            tasks.delete(index);","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"            throw new CommandException(\"That task doesn\u0027t exist\");","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false}],"authorContributionMap":{"haorui2004":28}},{"path":"src/main/java/nina/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.command;","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import nina.task.Task;","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import nina.task.TaskList;","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"public class FindCommand implements Command{","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"    private String keyword;","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"        int index \u003d 1;","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"        for(Task t : tasks.items()) {","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"            if(t.match(keyword)) {","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"                System.out.println(index + \".\" + t);","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"                index++;","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"            }","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"        if(index \u003d\u003d 1) {","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"            System.out.println(\"No matching task is found\");","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false}],"authorContributionMap":{"haorui2004":27}},{"path":"src/main/java/nina/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.command;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import nina.task.TaskList;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"        tasks.showList();","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false}],"authorContributionMap":{"haorui2004":10}},{"path":"src/main/java/nina/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.command;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import nina.CommandException;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import nina.task.TaskList;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"    protected int index;","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"     * Constructs a MarkCommand object.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"     * @param index index of the task to be marked","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T11:51:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"    public void execute(TaskList tasks) throws CommandException {","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"        try {","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"            tasks.mark(index);","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"            throw new CommandException(\"That task doesn\u0027t exist\");","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false}],"authorContributionMap":{"haorui2004":27}},{"path":"src/main/java/nina/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.command;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import nina.CommandException;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import nina.task.TaskList;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"    protected int index;","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"     * Constructs a UnmarkCommand object.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"     * @param index index of the task to be unmarked","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    public void execute(TaskList tasks) throws CommandException {","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"        try {","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"            tasks.unmark(index);","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"            throw new CommandException(\"That task doesn\u0027t exist\");","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false}],"authorContributionMap":{"haorui2004":26}},{"path":"src/main/java/nina/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.task;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2025-08-22T00:21:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-22T00:21:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"    protected LocalDate by;","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"    private static final long serialVersionUID \u003d 10L;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-22T00:21:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"     * Constructs a DeadlineTask object","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"     * @param description description of the task","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"     * @param by the deadline time of the task","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"    public DeadlineTask(String description, String by) {","lastModifiedDate":"2025-08-22T00:21:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"        super(description);","lastModifiedDate":"2025-08-22T00:21:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-22T00:21:13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-22T00:21:13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"    public String toSaveLine() {","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"        return basePrefix(\"D\") + \" | \" + by.toString();","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-22T00:21:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T00:21:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))  + \")\";","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-22T00:21:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-22T00:21:13","isFullCredit":false}],"authorContributionMap":{"haorui2004":31}},{"path":"src/main/java/nina/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.task;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"public class EventTask extends Task {","lastModifiedDate":"2025-08-22T00:21:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"    protected LocalDate from;","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"    protected LocalDate to;","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"    private static final long serialVersionUID \u003d 10L;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-22T00:21:28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"     * Constructs a EventTask object","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"     * @param description description of the task","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"     * @param from the start time of the event task","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"     * @param to the end time of the event task","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"    public EventTask(String description, String from, String to) {","lastModifiedDate":"2025-08-22T00:21:28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"        super(description);","lastModifiedDate":"2025-08-22T00:21:28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-22T00:21:28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-22T00:21:28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"    public String toSaveLine() {","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"        return basePrefix(\"E\") + \" | \" + from.toString() + \" | \" + to.toString();","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-22T00:21:28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T00:21:28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-22T00:21:28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-22T00:21:28","isFullCredit":false}],"authorContributionMap":{"haorui2004":34}},{"path":"src/main/java/nina/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.task;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import java.io.Serializable;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":" * Represents a generic task with a description and completion status.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"    protected String description;","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"    private static final long serialVersionUID \u003d 10L;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"     * Constructs a Task object with the specified description.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"     * @param description description of the task","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"     * Marks this task as done.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"    public void markDone() {","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"     * Marks this task as not done.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"    public void unmarkDone(){","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"haorui2004"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"haorui2004"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"haorui2004"},"content":"     * @return X if done, blank space if not done","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"haorui2004"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"haorui2004"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"haorui2004"},"content":"     * Returns the base prefix for serialization.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"haorui2004"},"content":"     * Used by subclasses when generating save lines.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"haorui2004"},"content":"     * @param type the short type identifier: T/D/E","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"haorui2004"},"content":"     * @return a string prefix containing the type, done status, and description","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"haorui2004"},"content":"    protected String basePrefix(String type) {","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"haorui2004"},"content":"        return type + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"haorui2004"},"content":"     * Converts this task into a save line string for storage.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"haorui2004"},"content":"     * @return the save line string representation of the task","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"haorui2004"},"content":"    public abstract String toSaveLine();","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"haorui2004"},"content":"    public boolean match(String keyword) {","lastModifiedDate":"2025-08-29T02:43:02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"haorui2004"},"content":"        return description.contains(keyword);","lastModifiedDate":"2025-08-29T02:43:02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-29T02:43:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:43:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"haorui2004"},"content":"     * Creates a Task object from a saved line string.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"haorui2004"},"content":"     * @param line the saved line string","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"haorui2004"},"content":"     * @return a Task object parsed from the saved line","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"haorui2004"},"content":"     * @throws IllegalArgumentException if the line is not well formatted or task type is unknown","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"haorui2004"},"content":"    public static Task fromSaveLine(String line) {","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"haorui2004"},"content":"        String[] p \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"haorui2004"},"content":"        for (int i \u003d 0; i \u003c p.length; i++) {","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"haorui2004"},"content":"            p[i] \u003d p[i].trim();","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"haorui2004"},"content":"        if (p.length \u003c 3) throw new IllegalArgumentException(\"Bad line: \" + line);","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"haorui2004"},"content":"        String type \u003d p[0];","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"haorui2004"},"content":"        boolean done \u003d \"1\".equals(p[1]);","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"haorui2004"},"content":"        String des \u003d p[2];","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"haorui2004"},"content":"        Task t;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"haorui2004"},"content":"        switch (type) {","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"haorui2004"},"content":"            case \"T\":","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"haorui2004"},"content":"                if (p.length !\u003d 3) throw new IllegalArgumentException(\"Todo needs 3 fields\");","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"haorui2004"},"content":"                t \u003d new TodoTask(des);","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"haorui2004"},"content":"                break;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"haorui2004"},"content":"            case \"D\":","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"haorui2004"},"content":"                if (p.length !\u003d 4) throw new IllegalArgumentException(\"Deadline needs 4 fields\");","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"haorui2004"},"content":"                t \u003d new DeadlineTask(des, p[3]);","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"haorui2004"},"content":"                break;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"haorui2004"},"content":"            case \"E\":","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"haorui2004"},"content":"                if (p.length !\u003d 5) throw new IllegalArgumentException(\"Event needs 5 fields\");","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"haorui2004"},"content":"                t \u003d new EventTask(des, p[3], p[4]);","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"haorui2004"},"content":"                break;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"haorui2004"},"content":"            default:","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"haorui2004"},"content":"                throw new IllegalArgumentException(\"Unknown type: \" + type);","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"haorui2004"},"content":"        if (done) t.markDone();","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"haorui2004"},"content":"        return t;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"haorui2004"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"haorui2004"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \" \" + description;","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false}],"authorContributionMap":{"haorui2004":112}},{"path":"src/main/java/nina/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.task;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import java.io.Serializable;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"import java.util.Collections;","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":" * Represents a list of Task objects.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"    private static final long serialVersionUID \u003d 10L;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"     * Creates an empty TaskList.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"     * @param t the task to add","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"        tasks.add(t);","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"     * Marks the task at the given position as done and prints confirmation.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"     * @param number index of the task to mark","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"haorui2004"},"content":"    public void mark(int number) {","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"haorui2004"},"content":"        Task t \u003d tasks.get(number - 1);","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"haorui2004"},"content":"        t.markDone();","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"haorui2004"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"haorui2004"},"content":"        System.out.print(\"  \" + t + \"\\n\");","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"haorui2004"},"content":"     * Marks the task at the given position as not done and prints confirmation.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"haorui2004"},"content":"     * @param number index of the task to mark","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"haorui2004"},"content":"    public void unmark(int number) {","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"haorui2004"},"content":"        Task t \u003d tasks.get(number - 1);","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"haorui2004"},"content":"        t.unmarkDone();","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"haorui2004"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"haorui2004"},"content":"        System.out.print(\"  \" + t + \"\\n\");","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"haorui2004"},"content":"     * Returns the number of tasks in the list","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"haorui2004"},"content":"     * @return the total number of tasks in the list","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"haorui2004"},"content":"    public int size() {","lastModifiedDate":"2025-08-22T00:22:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"haorui2004"},"content":"        return tasks.size();","lastModifiedDate":"2025-08-22T00:22:44","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-22T00:22:44","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-22T00:22:44","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"haorui2004"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"haorui2004"},"content":"     * @param index of the task to be extracted from the list","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"haorui2004"},"content":"     * @return the Task object with the same index","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"haorui2004"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-08-29T02:05:34","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"haorui2004"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-08-29T02:05:34","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-29T02:05:34","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:05:34","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"haorui2004"},"content":"     * Deletes the task at the given position and prints confirmation.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"haorui2004"},"content":"     * @param number index of the task to delete","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"haorui2004"},"content":"    public void delete(int number) {","lastModifiedDate":"2025-08-22T01:39:28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"haorui2004"},"content":"        Task t \u003d tasks.remove(number - 1);","lastModifiedDate":"2025-08-22T01:39:28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"haorui2004"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2025-08-22T01:39:28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"haorui2004"},"content":"        System.out.print(\"  \" + t + \"\\n\");","lastModifiedDate":"2025-08-22T01:39:28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-22T01:39:28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-22T01:39:28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"haorui2004"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"haorui2004"},"content":"     * If the list is empty, nothing will be printed.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"haorui2004"},"content":"    public void showList() {","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"haorui2004"},"content":"        if(!tasks.isEmpty()) {","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"haorui2004"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"haorui2004"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"haorui2004"},"content":"                System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"haorui2004"},"content":"            }","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"haorui2004"},"content":"     * Returns an unmodifiable iterable view of the tasks.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"haorui2004"},"content":"     * @return an iterable collection of tasks","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"haorui2004"},"content":"    public Iterable\u003cTask\u003e items() {","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"haorui2004"},"content":"        return Collections.unmodifiableList(tasks);","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false}],"authorContributionMap":{"haorui2004":105}},{"path":"src/main/java/nina/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.task;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2025-08-22T00:21:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"    private static final long serialVersionUID \u003d 10L;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"     * Constructs a TodoTask object","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"     * @param description description of the task","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"    public TodoTask(String description) {","lastModifiedDate":"2025-08-22T00:21:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"        super(description);","lastModifiedDate":"2025-08-22T00:21:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-22T00:21:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-22T00:21:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"    public String toSaveLine() {","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"        return basePrefix(\"T\");","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-22T00:21:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T00:21:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-22T00:21:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-22T00:21:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-22T00:21:02","isFullCredit":false}],"authorContributionMap":{"haorui2004":24}},{"path":"src/test/java/nina/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina;","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import nina.task.DeadlineTask;","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import nina.task.TaskList;","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"import nina.task.TodoTask;","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"public class StorageTest {","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"    @Test","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"    void testWriteAndRead() throws Exception {","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"        Path storageTestFile \u003d Files.createTempFile(\"storageTest\", \".txt\");","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"        Storage storage \u003d new Storage(storageTestFile.toString());","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"        TaskList original \u003d new TaskList();","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"        original.addTask(new TodoTask(\"read book\"));","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"        original.addTask(new DeadlineTask(\"return book\", \"2019-12-02\"));","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"        storage.write(original);","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"        TaskList loaded \u003d storage.read();","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"        assertEquals(2, loaded.size());","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"        assertTrue(loaded.get(0) instanceof TodoTask);","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"        assertTrue(loaded.get(1) instanceof DeadlineTask);","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"        assertEquals(original.get(0).toString(), loaded.get(0).toString());","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"        assertEquals(original.get(1).toString(), loaded.get(1).toString());","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false}],"authorContributionMap":{"haorui2004":35}},{"path":"src/test/java/nina/task/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.task;","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"    @Test","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"    public void testToSaveLineStoresDateCorrectly() {","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"        DeadlineTask d \u003d new DeadlineTask(\"return book\", \"2019-12-02\");","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"        String expected \u003d \"D | 0 | return book | 2019-12-02\";","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"        assertEquals(expected, d.toSaveLine());","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"    @Test","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"    void testToStringFormatsDateCorrectly() {","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"        DeadlineTask d \u003d new DeadlineTask(\"return book\", \"2019-12-02\");","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"        String expected \u003d \"[D][ ] return book (by: Dec 02 2019)\";","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"        assertEquals(expected, d.toString());","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false}],"authorContributionMap":{"haorui2004":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-22T00:58:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-22T00:58:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"todo borrow book","lastModifiedDate":"2025-08-22T00:58:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"list","lastModifiedDate":"2025-08-22T00:58:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"todo wash dishes","lastModifiedDate":"2025-08-22T00:58:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"event career fair /from Wed 3pm /to 5pm","lastModifiedDate":"2025-08-22T00:58:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"list","lastModifiedDate":"2025-08-22T00:58:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"mark 1","lastModifiedDate":"2025-08-22T00:58:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"mark 3","lastModifiedDate":"2025-08-22T00:58:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"unmark 1","lastModifiedDate":"2025-08-22T00:58:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"mark 11","lastModifiedDate":"2025-08-22T00:58:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"todo","lastModifiedDate":"2025-08-22T00:58:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"list","lastModifiedDate":"2025-08-22T00:58:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"deadline return book","lastModifiedDate":"2025-08-22T00:58:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"mark return book","lastModifiedDate":"2025-08-22T01:21:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"blah","lastModifiedDate":"2025-08-22T01:21:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"ohno","lastModifiedDate":"2025-08-22T01:21:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"list show","lastModifiedDate":"2025-08-22T01:21:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"list 1","lastModifiedDate":"2025-08-22T01:21:42","isFullCredit":false}],"authorContributionMap":{"haorui2004":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"java -classpath ../bin Nina \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-22T00:57:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"haorui2004":1,"-":37}}]
