[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"# Record of use of AI tools","lastModifiedDate":"2025-09-17T12:18:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"## Code Quality ","lastModifiedDate":"2025-09-17T12:18:50","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"### src/main/java/nina/Parser.java  ","lastModifiedDate":"2025-09-17T12:18:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"\u003eChatGPT assisted in shortening the long method.  ","lastModifiedDate":"2025-09-17T12:18:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"original method:  ","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"```Java","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"public static Command parse(String str) throws CommandException, InvalidInputException {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"    if (str.isEmpty()) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"        throw new CommandException(\"The command is empty\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"    if (str.equals(\"list\")) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"        return new ListCommand();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"    if (str.startsWith(\"mark \")) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"        String taskNo \u003d str.substring(5).trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"        try {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"            int number \u003d Integer.parseInt(taskNo);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"            return new MarkCommand(number);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"            throw new InvalidInputException(\"Only number can come after mark!\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"    if (str.startsWith(\"unmark \")) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"        String taskNo \u003d str.substring(7).trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"        try {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"            int number \u003d Integer.parseInt(taskNo);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"            return new UnmarkCommand(number);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"            throw new InvalidInputException(\"Only number can come after unmark!\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"haorui2004"},"content":"    if (str.startsWith(\"todo \")) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"haorui2004"},"content":"        String des \u003d str.substring(5).trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"haorui2004"},"content":"        TodoTask td \u003d new TodoTask(des);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"haorui2004"},"content":"        return new AddCommand(td);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"haorui2004"},"content":"    if (str.startsWith(\"deadline \")) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"haorui2004"},"content":"        String[] parts \u003d str.substring(9).split(\"/by\", 2);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"haorui2004"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"haorui2004"},"content":"            throw new InvalidInputException(\"Please check the format of task input again!\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"haorui2004"},"content":"        String des \u003d parts[0].trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"haorui2004"},"content":"        String by \u003d parts[1].trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"haorui2004"},"content":"        assert !des.isEmpty() : \"DeadlineTask description must not be empty\";","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"haorui2004"},"content":"        assert !by.isEmpty() : \"DeadlineTask by date must not be empty\";","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"haorui2004"},"content":"        DeadlineTask ddl \u003d new DeadlineTask(des, by);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"haorui2004"},"content":"        return new AddCommand(ddl);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"haorui2004"},"content":"    if (str.startsWith(\"event \")) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"haorui2004"},"content":"        String[] parts \u003d str.substring(6).split(\"/from|/to\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"haorui2004"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"haorui2004"},"content":"            throw new InvalidInputException(\"Please check the format of task input again!\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"haorui2004"},"content":"        String des \u003d parts[0].trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"haorui2004"},"content":"        String from \u003d parts[1].trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"haorui2004"},"content":"        String to \u003d parts[2].trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"haorui2004"},"content":"        assert !des.isEmpty() : \"EventTask description must not be empty\";","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"haorui2004"},"content":"        assert !from.isEmpty() : \"EventTask from date must not be empty\";","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"haorui2004"},"content":"        assert !to.isEmpty() : \"EventTask to date must not be empty\";","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"haorui2004"},"content":"        EventTask ev \u003d new EventTask(des, from, to);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"haorui2004"},"content":"        return new AddCommand(ev);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"haorui2004"},"content":"    if (str.startsWith(\"delete \")) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"haorui2004"},"content":"        String taskNo \u003d str.substring(7).trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"haorui2004"},"content":"        try {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"haorui2004"},"content":"            int number \u003d Integer.parseInt(taskNo);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"haorui2004"},"content":"            return new DeleteCommand(number);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"haorui2004"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"haorui2004"},"content":"            throw new InvalidInputException(\"Only number can come after delete!\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"haorui2004"},"content":"    if (str.startsWith(\"find \")) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"haorui2004"},"content":"        String keyword \u003d str.substring(5).trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"haorui2004"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"haorui2004"},"content":"            throw new InvalidInputException(\"FindCommand needs a keyword for searching\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"haorui2004"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"haorui2004"},"content":"    throw new InvalidInputException(\"I cannot find the command OvO\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"haorui2004"},"content":"```","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"haorui2004"},"content":"Smaller methods as suggested by GPT:  ","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"haorui2004"},"content":"```Java","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"haorui2004"},"content":"public static Command parse(String raw)","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"haorui2004"},"content":"            throws CommandException, InvalidInputException {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"haorui2004"},"content":"        String s \u003d sanitize(raw);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"haorui2004"},"content":"        Optional\u003cCommand\u003e c;","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"haorui2004"},"content":"        if ((c \u003d tryList(s)).isPresent()) return c.get();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"haorui2004"},"content":"        if ((c \u003d tryMark(s)).isPresent()) return c.get();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"haorui2004"},"content":"        if ((c \u003d tryUnmark(s)).isPresent()) return c.get();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"haorui2004"},"content":"        if ((c \u003d tryDelete(s)).isPresent()) return c.get();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"haorui2004"},"content":"        if ((c \u003d tryTodo(s)).isPresent()) return c.get();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"haorui2004"},"content":"        if ((c \u003d tryDeadline(s)).isPresent()) return c.get();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"haorui2004"},"content":"        if ((c \u003d tryEvent(s)).isPresent()) return c.get();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"haorui2004"},"content":"        if ((c \u003d tryFind(s)).isPresent()) return c.get();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"haorui2004"},"content":"        throw new InvalidInputException(\"I cannot find the command OvO\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"haorui2004"},"content":"private static Optional\u003cCommand\u003e tryList(String s) throws InvalidInputException {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"haorui2004"},"content":"    if (!s.equals(\"list\")) return Optional.empty();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"haorui2004"},"content":"    return Optional.of(new ListCommand());","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"haorui2004"},"content":"private static Optional\u003cCommand\u003e tryMark(String s) throws InvalidInputException {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"haorui2004"},"content":"    return tryNumbered(s, \"mark \",","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"haorui2004"},"content":"            n -\u003e new MarkCommand(n),","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"haorui2004"},"content":"            \"Only number can come after mark!\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"haorui2004"},"content":"private static Optional\u003cCommand\u003e tryUnmark(String s) throws InvalidInputException {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"haorui2004"},"content":"    return tryNumbered(s, \"unmark \",","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"haorui2004"},"content":"            n -\u003e new UnmarkCommand(n),","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"haorui2004"},"content":"            \"Only number can come after unmark!\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"haorui2004"},"content":"private static Optional\u003cCommand\u003e tryDelete(String s) throws InvalidInputException {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"haorui2004"},"content":"    return tryNumbered(s, \"delete \",","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"haorui2004"},"content":"            n -\u003e new DeleteCommand(n),","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"haorui2004"},"content":"            \"Only number can come after delete!\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"haorui2004"},"content":"private static Optional\u003cCommand\u003e tryTodo(String s) throws InvalidInputException {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"haorui2004"},"content":"    final String p \u003d \"todo \";","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"haorui2004"},"content":"    if (!s.startsWith(p)) return Optional.empty();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"haorui2004"},"content":"    String desc \u003d afterPrefix(s, p);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"haorui2004"},"content":"    if (desc.isEmpty()) throw new InvalidInputException(\"Todo description must not be empty\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"haorui2004"},"content":"    return Optional.of(new AddCommand(new TodoTask(desc)));","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"haorui2004"},"content":"private static Optional\u003cCommand\u003e tryDeadline(String s) throws InvalidInputException {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"haorui2004"},"content":"    final String p \u003d \"deadline \";","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"haorui2004"},"content":"    if (!s.startsWith(p)) return Optional.empty();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"haorui2004"},"content":"    String arg \u003d afterPrefix(s, p);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"haorui2004"},"content":"    int cut \u003d arg.indexOf(\"/by\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"haorui2004"},"content":"    if (cut \u003c 0) throw new InvalidInputException(\"Format: deadline \u003cdesc\u003e /by \u003cwhen\u003e\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"haorui2004"},"content":"    String desc \u003d arg.substring(0, cut).trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"haorui2004"},"content":"    String by \u003d arg.substring(cut + 3).trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"haorui2004"},"content":"    if (desc.isEmpty() || by.isEmpty())","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"haorui2004"},"content":"        throw new InvalidInputException(\"Please check the format of task input again!\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"haorui2004"},"content":"    return Optional.of(new AddCommand(new DeadlineTask(desc, by)));","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"haorui2004"},"content":"private static Optional\u003cCommand\u003e tryEvent(String s) throws InvalidInputException {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"haorui2004"},"content":"    final String p \u003d \"event \";","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"haorui2004"},"content":"    if (!s.startsWith(p)) return Optional.empty();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"haorui2004"},"content":"    String arg \u003d afterPrefix(s, p);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"haorui2004"},"content":"    int i \u003d arg.indexOf(\"/from\"), j \u003d arg.indexOf(\"/to\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"haorui2004"},"content":"    if (i \u003c 0 || j \u003c 0 || j \u003c i)","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"haorui2004"},"content":"        throw new InvalidInputException(\"Format: event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"haorui2004"},"content":"    String desc \u003d arg.substring(0, i).trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"haorui2004"},"content":"    String from \u003d arg.substring(i + 5, j).trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"haorui2004"},"content":"    String to \u003d arg.substring(j + 3).trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"haorui2004"},"content":"    if (desc.isEmpty() || from.isEmpty() || to.isEmpty())","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"haorui2004"},"content":"        throw new InvalidInputException(\"Please check the format of task input again!\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"haorui2004"},"content":"    return Optional.of(new AddCommand(new EventTask(desc, from, to)));","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"haorui2004"},"content":"private static Optional\u003cCommand\u003e tryFind(String s) throws InvalidInputException {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"haorui2004"},"content":"    final String p \u003d \"find \";","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"haorui2004"},"content":"    if (!s.startsWith(p)) return Optional.empty();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"haorui2004"},"content":"    String kw \u003d afterPrefix(s, p);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"haorui2004"},"content":"    if (kw.isEmpty()) throw new InvalidInputException(\"FindCommand needs a keyword for searching\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"haorui2004"},"content":"    return Optional.of(new FindCommand(kw));","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"haorui2004"},"content":"// -------- helpers --------","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"haorui2004"},"content":"private static Optional\u003cCommand\u003e tryNumbered(","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"haorui2004"},"content":"        String s, String prefix, java.util.function.IntFunction\u003cCommand\u003e ctor, String err)","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"haorui2004"},"content":"        throws InvalidInputException {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"haorui2004"},"content":"    if (!s.startsWith(prefix)) return Optional.empty();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"haorui2004"},"content":"    String arg \u003d afterPrefix(s, prefix);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"haorui2004"},"content":"    try {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"haorui2004"},"content":"        int n \u003d Integer.parseInt(arg);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"haorui2004"},"content":"        return Optional.of(ctor.apply(n));","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"haorui2004"},"content":"    } catch (Exception e) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"haorui2004"},"content":"        throw new InvalidInputException(err);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"haorui2004"},"content":"private static String sanitize(String raw) throws CommandException {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"haorui2004"},"content":"    if (raw \u003d\u003d null || raw.trim().isEmpty())","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"haorui2004"},"content":"        throw new CommandException(\"The command is empty\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"haorui2004"},"content":"    return raw.trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"haorui2004"},"content":"private static String afterPrefix(String s, String prefix) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"haorui2004"},"content":"    return s.substring(prefix.length()).trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"haorui2004"},"content":"} ","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"haorui2004"},"content":"```","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"haorui2004"},"content":"### Observation: ","lastModifiedDate":"2025-09-17T12:18:50","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"haorui2004"},"content":"when directly asking GPT to improve the code quality by making the parse method shorter than 30LoC, the response was not up to expectation (30LoC). GPT shortens the code by changing it to another format (switch instead of if-else), but was only shortening the code by removing repetitive checks instead of breaking it into smaller methods or different levels of abstraction. Only with specific requirements like \"Please break each if block into an individual method\", GPT can then satisfy the expectation of 30LoC.  ","lastModifiedDate":"2025-09-17T12:18:50","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T21:15:51","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"haorui2004"},"content":"## Testing","lastModifiedDate":"2025-09-17T21:15:51","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"haorui2004"},"content":"### src/test/java/nina/StorageTest.java","lastModifiedDate":"2025-09-17T21:15:51","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"haorui2004"},"content":"\u003eChatGPT assisted in enhancing my original JUnit test  ","lastModifiedDate":"2025-09-17T21:36:10","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T21:15:51","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"haorui2004"},"content":"Initially, I used Files.createTempFile when I was trying to test my Storage class. ChatGPT suggested that TempDir can keep the test environment cleaner. Since createTempFile will create a real file and will not automatically remove it after testing, but directory made from TempDir will be automatically deleted after testing.","lastModifiedDate":"2025-09-17T21:15:51","isFullCredit":false}],"authorContributionMap":{"haorui2004":207}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-02T18:44:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-03T14:25:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-03T14:25:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-03T14:25:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-03T14:25:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-03T14:25:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-03T14:25:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-03T14:25:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-03T14:25:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-03T14:25:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-03T14:25:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-03T14:25:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-03T14:25:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-03T14:25:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-09-03T14:25:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"application {","lastModifiedDate":"2025-09-03T14:25:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2025-09-03T14:25:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"haorui2004"},"content":"    mainClass.set(\"Main\")","lastModifiedDate":"2025-09-03T14:25:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"haorui2004"},"content":"    archiveBaseName \u003d \"nina\"","lastModifiedDate":"2025-08-29T02:19:40","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-02T18:44:14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"haorui2004"},"content":"checkstyle {","lastModifiedDate":"2025-09-02T18:44:14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"haorui2004"},"content":"    toolVersion \u003d \u002711.0.1\u0027","lastModifiedDate":"2025-09-02T18:44:14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-09-02T18:44:14","isFullCredit":false}],"authorContributionMap":{"haorui2004":25,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"# Nina User Guide","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"![Ui.png](Ui.png)","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"## Introduction","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"\u003eYour time is limited, so don\u0027t waste it living someone else\u0027s life.  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"\u003e--Steve Jobs  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"Nina is not any chatbot, she is your **personal assistant**. Nina manages your everyday task list, and provides you short commands to make any change to the list.  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"No matter you are a student, working adult, or any one trying to be productive, you will spend a great time working with Nina. Just call Nina any time through our Graphical User Interface (GUI)!","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"## Navigating Around ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"[Features](#features)","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"- [add](#adding-a-task)","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"- [list](#listing-tasks-list)","lastModifiedDate":"2025-09-18T01:02:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"- [mark](#marking-a-task-as-done-mark)","lastModifiedDate":"2025-09-18T01:02:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"- [unmark](#unmarking-a-task-as-done-unmark)","lastModifiedDate":"2025-09-18T01:02:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"- [delete](#deleting-a-task-delete)","lastModifiedDate":"2025-09-18T01:02:39","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"- [find](#finding-tasks-find)","lastModifiedDate":"2025-09-18T01:02:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"## Features","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"### Adding a task","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"Adds a task to the task list.","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"1. `todo`: adds a general task with description.  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"Command format: `todo \u003ctask_description\u003e`   ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"Example: `todo borrow book`  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"Expected output:","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"```declarative","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"[T][] borrow book","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"haorui2004"},"content":"2. `deadline`: adds a deadline task with description and deadline date. (date format: YYYY-MM_DD)  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"haorui2004"},"content":"Command format: `deadline \u003ctask_description\u003e /by \u003cdate\u003e`  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"haorui2004"},"content":"Example: `deadline return book /by 2025-03-01`  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"haorui2004"},"content":"Expected output:  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"haorui2004"},"content":"```declarative","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"haorui2004"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"haorui2004"},"content":"[D][] return book (by: Mar 01 2025)","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"haorui2004"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"haorui2004"},"content":"```  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"haorui2004"},"content":"3. `event`: adds an event task with description, a specific start/from date, and a specific end/to date. (date format: YYYY-MM_DD)","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"haorui2004"},"content":"Command format: `event \u003ctask_description\u003e /from \u003cdate1\u003e /to \u003cdate2\u003e`  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"haorui2004"},"content":"Example: `event training /from 2025-05-02 /to 2025-05-04`  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"haorui2004"},"content":"Expected output:","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"haorui2004"},"content":"```declarative","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"haorui2004"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"haorui2004"},"content":"[E][] training (from: May 02 2025 to: May 04 2025)","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"haorui2004"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"haorui2004"},"content":"```","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"haorui2004"},"content":"### Listing tasks: `list`  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"haorui2004"},"content":"Shows the list containing all tasks.  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"haorui2004"},"content":"Command format: `list`  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"haorui2004"},"content":"Example: `list`  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"haorui2004"},"content":"Expected output:","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"haorui2004"},"content":"```declarative","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"haorui2004"},"content":"Here are your tasks:","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"haorui2004"},"content":"1. [T][] borrow book","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"haorui2004"},"content":"2. [D][] return book (by: Mar 01 2025)","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"haorui2004"},"content":"3. [E][] training (from: May 02 2025 to: May 04 2025)","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"haorui2004"},"content":"```","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"haorui2004"},"content":"### Marking a task as done: `mark`  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"haorui2004"},"content":"Marks a task as done.  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"haorui2004"},"content":"Command format: `mark \u003ctask_index\u003e`  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"haorui2004"},"content":"Example: `mark 1`  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"haorui2004"},"content":"Expected output:  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"haorui2004"},"content":"```declarative","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"haorui2004"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"haorui2004"},"content":"[T][X] borrow book","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"haorui2004"},"content":"```  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"haorui2004"},"content":"### Unmarking a task as done: `unmark` ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"haorui2004"},"content":"Unmarks a task as done when you indicate a task as done by mistake.  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"haorui2004"},"content":"Command format: `unmark \u003ctask_index\u003e`  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"haorui2004"},"content":"Example: `unmakr 1`  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"haorui2004"},"content":"```declarative","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"haorui2004"},"content":"Ok, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"haorui2004"},"content":"[T][] borrow book","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"haorui2004"},"content":"```  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"haorui2004"},"content":"### Deleting a task: `delete`  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"haorui2004"},"content":"Deletes a task from the list.  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"haorui2004"},"content":"Command format: `delete \u003ctask_index\u003e`","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"haorui2004"},"content":"Example: `delete 3`  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"haorui2004"},"content":"```declarative","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"haorui2004"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"haorui2004"},"content":" [E][] training (from: May 02 2025 to: May 04 2025)  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"haorui2004"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"haorui2004"},"content":"```  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"haorui2004"},"content":"### Finding tasks: `find`  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"haorui2004"},"content":"Finds tasks by searching a keyword in the task description.  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"haorui2004"},"content":"Command format: `find \u003ckeyword\u003e`  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"haorui2004"},"content":"Example: `find book`  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"haorui2004"},"content":"Expected output:  ","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"haorui2004"},"content":"```declarative","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"haorui2004"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"haorui2004"},"content":"1. [T][] borrow book","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"haorui2004"},"content":"2. [D][] return book (by: Mar 01 2025)","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"haorui2004"},"content":"```","lastModifiedDate":"2025-09-18T00:57:23","isFullCredit":false}],"authorContributionMap":{"haorui2004":91,"-":12}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-09T01:11:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-09T01:11:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-09T01:11:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-09T01:11:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-09T01:11:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"    @FXML","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"    @FXML","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"        try {","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"haorui2004"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"haorui2004"},"content":"    private void flip() {","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"haorui2004"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"haorui2004"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"haorui2004"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"haorui2004"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"haorui2004"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"haorui2004"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"haorui2004"},"content":"    public static DialogBox getNinaDialog(String text, Image img) {","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"haorui2004"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"haorui2004"},"content":"        db.flip();","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"haorui2004"},"content":"        return db;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false}],"authorContributionMap":{"haorui2004":56}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"public class Launcher {","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false}],"authorContributionMap":{"haorui2004":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"import nina.Nina;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":" * A GUI for Nina using FXML.","lastModifiedDate":"2025-09-17T21:45:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"    private final Nina nina \u003d new Nina();","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"        try {","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"            stage.setTitle(\"Nina\");","lastModifiedDate":"2025-09-17T21:45:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setNina(nina);","lastModifiedDate":"2025-09-09T01:20:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"            stage.show();","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false}],"authorContributionMap":{"haorui2004":31}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"import nina.Nina;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"    @FXML","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"    @FXML","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"    @FXML","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"    @FXML","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"    private Nina nina;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"    private static String LINE \u003d \"___________________________________\\n\";","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"    private Image ninaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Nina.png\"));","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"    @FXML","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"    /** Injects the Nina instance */","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"haorui2004"},"content":"    public void setNina(Nina n) {","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"haorui2004"},"content":"        nina \u003d n;","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"haorui2004"},"content":"        String greet \u003d nina.getResponse(\"greet\");","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"haorui2004"},"content":"        dialogContainer.getChildren().add(DialogBox.getNinaDialog(greet, ninaImage));","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"haorui2004"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Nina\u0027s reply and then appends them to","lastModifiedDate":"2025-09-17T21:45:06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"haorui2004"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"haorui2004"},"content":"    @FXML","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"haorui2004"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"haorui2004"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"haorui2004"},"content":"        String response \u003d LINE + nina.getResponse(input) + \"\\n\" + LINE;","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"haorui2004"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"haorui2004"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"haorui2004"},"content":"                DialogBox.getNinaDialog(response, ninaImage)","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"haorui2004"},"content":"        );","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"haorui2004"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false}],"authorContributionMap":{"haorui2004":57}},{"path":"src/main/java/nina/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":" * Handles exceptions that may occur in executing a task","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"     * Constructs a CommandException","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"     * @param msg error message of the exception","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"    public CommandException(String msg) {","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"        super(msg);","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false}],"authorContributionMap":{"haorui2004":14}},{"path":"src/main/java/nina/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":" * Handles exceptions that may occur when input is invalid","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"public class InvalidInputException extends Exception{","lastModifiedDate":"2025-08-22T01:02:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"     * Constructs an InvalidInputException","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"     * @param msg error message of the exception","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"    public InvalidInputException(String msg) {","lastModifiedDate":"2025-08-22T01:02:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"        super(msg);","lastModifiedDate":"2025-08-22T01:02:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-22T01:02:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-22T01:02:37","isFullCredit":false}],"authorContributionMap":{"haorui2004":14}},{"path":"src/main/java/nina/Nina.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-09T01:11:28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-09T01:11:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"import nina.command.Command;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"import nina.task.TaskList;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"public class Nina {","lastModifiedDate":"2025-08-21T19:33:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"    static String LINE \u003d \"___________________________________\\n\";","lastModifiedDate":"2025-08-29T11:45:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"    private static final String STORAGE_FILE_PATH \u003d \"data/nina.Nina.txt\";","lastModifiedDate":"2025-09-09T00:51:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-29T11:45:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-28T22:30:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"    private UI ui;","lastModifiedDate":"2025-08-28T23:59:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-09T00:51:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T19:33:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"     * Creates a Nina chatbot object.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"     * Initializes storage, read tasks from file, and sets up the UI.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"    public Nina() {","lastModifiedDate":"2025-08-21T22:33:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"        this.storage \u003d new Storage(STORAGE_FILE_PATH);","lastModifiedDate":"2025-08-29T11:45:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"        this.tasks \u003d storage.read();","lastModifiedDate":"2025-08-28T22:30:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2025-08-28T23:59:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T19:33:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T19:33:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"     * Runs the main program loop.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"     * Displays a greeting, continuously reads user input,","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"     * parses it into a Command object, executes the command,","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"     * and saves the updated tasks. The loop terminates when the user","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"     * enters the bye command.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"    public void run() {","lastModifiedDate":"2025-08-21T22:33:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"        ui.greet();","lastModifiedDate":"2025-08-28T23:59:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"haorui2004"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-21T20:17:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"haorui2004"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2025-08-21T20:17:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"haorui2004"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2025-08-21T22:33:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T20:46:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"haorui2004"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2025-08-21T22:33:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"haorui2004"},"content":"                ui.exit();","lastModifiedDate":"2025-08-28T23:59:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"haorui2004"},"content":"                break;","lastModifiedDate":"2025-08-21T22:33:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"haorui2004"},"content":"            }","lastModifiedDate":"2025-08-21T20:46:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:33:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"haorui2004"},"content":"            try {","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"haorui2004"},"content":"                Command cmd \u003d Parser.parse(input);","lastModifiedDate":"2025-08-28T23:59:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"haorui2004"},"content":"                System.out.println(LINE);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"haorui2004"},"content":"                cmd.execute(tasks);","lastModifiedDate":"2025-08-21T22:33:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"haorui2004"},"content":"                storage.write(tasks);","lastModifiedDate":"2025-08-28T22:30:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"haorui2004"},"content":"                System.out.println(LINE);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"haorui2004"},"content":"            } catch (CommandException e) {","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"haorui2004"},"content":"                ui.showError(\"nina.command.Command error: \" + e.getMessage());","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"haorui2004"},"content":"            } catch (InvalidInputException i) {","lastModifiedDate":"2025-08-22T01:03:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"haorui2004"},"content":"                ui.showError(\"Input error: \" + i.getMessage());","lastModifiedDate":"2025-08-28T23:59:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"haorui2004"},"content":"            }","lastModifiedDate":"2025-08-22T01:22:01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-21T20:17:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T20:17:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T20:17:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"haorui2004"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"haorui2004"},"content":"        String trimmedInput \u003d input.trim();","lastModifiedDate":"2025-09-09T01:16:40","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"haorui2004"},"content":"        if (trimmedInput.equals(\"greet\")) {","lastModifiedDate":"2025-09-09T01:16:40","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"haorui2004"},"content":"            return ui.greet();","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"haorui2004"},"content":"        if (trimmedInput.equals(\"bye\")) {","lastModifiedDate":"2025-09-09T01:16:40","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"haorui2004"},"content":"            return ui.exit();","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"haorui2004"},"content":"        try {","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"haorui2004"},"content":"            Command cmd \u003d Parser.parse(input);","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"haorui2004"},"content":"            String response \u003d cmd.execute(tasks);","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"haorui2004"},"content":"            storage.write(tasks);","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"haorui2004"},"content":"            return response;","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"haorui2004"},"content":"        } catch (CommandException c) {","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"haorui2004"},"content":"            return ui.showError(c.getMessage());","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"haorui2004"},"content":"        } catch (InvalidInputException i) {","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"haorui2004"},"content":"            return ui.showError(i.getMessage());","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"haorui2004"},"content":"     * Main entry point of the program.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"haorui2004"},"content":"     * @param args","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"haorui2004"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-21T19:33:27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"haorui2004"},"content":"        Nina test \u003d new Nina();","lastModifiedDate":"2025-08-21T20:17:35","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"haorui2004"},"content":"        test.run();","lastModifiedDate":"2025-08-21T22:33:59","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T19:33:27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-21T19:33:27","isFullCredit":false}],"authorContributionMap":{"haorui2004":89}},{"path":"src/main/java/nina/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import java.util.Optional;","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"import nina.command.AddCommand;","lastModifiedDate":"2025-09-08T23:20:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"import nina.command.Command;","lastModifiedDate":"2025-09-08T23:20:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"import nina.command.DeleteCommand;","lastModifiedDate":"2025-09-08T23:20:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"import nina.command.FindCommand;","lastModifiedDate":"2025-09-08T23:20:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"import nina.command.ListCommand;","lastModifiedDate":"2025-09-08T23:20:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"import nina.command.MarkCommand;","lastModifiedDate":"2025-09-08T23:20:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"import nina.command.UnmarkCommand;","lastModifiedDate":"2025-09-08T23:20:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"import nina.task.DeadlineTask;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"import nina.task.EventTask;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"import nina.task.TodoTask;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":" * Parses raw user input strings and convert them to corresponding commands","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"     * Parses a raw input string into a command object","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"     * @param raw raw input from user","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"     * @return Command object corresponding to the input","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"     * @throws CommandException if the input is empty","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"     * @throws InvalidInputException if the input format is invalid","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"    public static Command parse(String raw)","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"            throws CommandException, InvalidInputException { //This method is assisted by ChatGPT in shortening","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"        String s \u003d sanitize(raw);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"        Optional\u003cCommand\u003e c;","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"        if ((c \u003d tryList(s)).isPresent()) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"            return c.get();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"        if ((c \u003d tryMark(s)).isPresent()) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"haorui2004"},"content":"            return c.get();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"haorui2004"},"content":"        if ((c \u003d tryUnmark(s)).isPresent()) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"haorui2004"},"content":"            return c.get();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"haorui2004"},"content":"        if ((c \u003d tryDelete(s)).isPresent()) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"haorui2004"},"content":"            return c.get();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"haorui2004"},"content":"        if ((c \u003d tryTodo(s)).isPresent()) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"haorui2004"},"content":"            return c.get();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"haorui2004"},"content":"        if ((c \u003d tryDeadline(s)).isPresent()) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"haorui2004"},"content":"            return c.get();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"haorui2004"},"content":"        if ((c \u003d tryEvent(s)).isPresent()) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"haorui2004"},"content":"            return c.get();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"haorui2004"},"content":"        if ((c \u003d tryFind(s)).isPresent()) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"haorui2004"},"content":"            return c.get();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"haorui2004"},"content":"        throw new InvalidInputException(\"I cannot find the command OvO\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"haorui2004"},"content":"    //the following 8 methods are broken down from parse by ChatGPT","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"haorui2004"},"content":"    private static Optional\u003cCommand\u003e tryList(String s) throws InvalidInputException {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"haorui2004"},"content":"        if (!s.equals(\"list\")) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"haorui2004"},"content":"            return Optional.empty();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"haorui2004"},"content":"        return Optional.of(new ListCommand());","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"haorui2004"},"content":"    private static Optional\u003cCommand\u003e tryMark(String s) throws InvalidInputException {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"haorui2004"},"content":"        return tryNumbered(s, \"mark \",","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"haorui2004"},"content":"            n -\u003e new MarkCommand(n),","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"haorui2004"},"content":"            \"Only number can come after mark!\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"haorui2004"},"content":"    private static Optional\u003cCommand\u003e tryUnmark(String s) throws InvalidInputException {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"haorui2004"},"content":"        return tryNumbered(s, \"unmark \",","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"haorui2004"},"content":"            n -\u003e new UnmarkCommand(n),","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"haorui2004"},"content":"            \"Only number can come after unmark!\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"haorui2004"},"content":"    private static Optional\u003cCommand\u003e tryDelete(String s) throws InvalidInputException {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"haorui2004"},"content":"        return tryNumbered(s, \"delete \",","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"haorui2004"},"content":"            n -\u003e new DeleteCommand(n),","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"haorui2004"},"content":"            \"Only number can come after delete!\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"haorui2004"},"content":"    private static Optional\u003cCommand\u003e tryTodo(String s) throws InvalidInputException {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"haorui2004"},"content":"        final String p \u003d \"todo \";","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"haorui2004"},"content":"        if (!s.startsWith(p)) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"haorui2004"},"content":"            return Optional.empty();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"haorui2004"},"content":"        String desc \u003d afterPrefix(s, p);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"haorui2004"},"content":"        if (desc.isEmpty()) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"haorui2004"},"content":"            throw new InvalidInputException(\"Todo description must not be empty\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"haorui2004"},"content":"        return Optional.of(new AddCommand(new TodoTask(desc)));","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"haorui2004"},"content":"    private static Optional\u003cCommand\u003e tryDeadline(String s) throws InvalidInputException {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"haorui2004"},"content":"        final String p \u003d \"deadline \";","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"haorui2004"},"content":"        if (!s.startsWith(p)) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"haorui2004"},"content":"            return Optional.empty();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"haorui2004"},"content":"        String arg \u003d afterPrefix(s, p);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"haorui2004"},"content":"        int cut \u003d arg.indexOf(\"/by\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"haorui2004"},"content":"        if (cut \u003c 0) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"haorui2004"},"content":"            throw new InvalidInputException(\"Format: deadline \u003cdesc\u003e /by \u003cwhen\u003e\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"haorui2004"},"content":"        String desc \u003d arg.substring(0, cut).trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"haorui2004"},"content":"        String by \u003d arg.substring(cut + 3).trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"haorui2004"},"content":"        if (desc.isEmpty() || by.isEmpty()) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"haorui2004"},"content":"            throw new InvalidInputException(\"Please check the format of task input again!\");","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"haorui2004"},"content":"        return Optional.of(new AddCommand(new DeadlineTask(desc, by)));","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"haorui2004"},"content":"    private static Optional\u003cCommand\u003e tryEvent(String s) throws InvalidInputException {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"haorui2004"},"content":"        final String p \u003d \"event \";","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"haorui2004"},"content":"        if (!s.startsWith(p)) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"haorui2004"},"content":"            return Optional.empty();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"haorui2004"},"content":"        String arg \u003d afterPrefix(s, p);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"haorui2004"},"content":"        int i \u003d arg.indexOf(\"/from\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"haorui2004"},"content":"        int j \u003d arg.indexOf(\"/to\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"haorui2004"},"content":"        if (i \u003c 0 || j \u003c 0 || j \u003c i) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"haorui2004"},"content":"            throw new InvalidInputException(\"Format: event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"haorui2004"},"content":"        String desc \u003d arg.substring(0, i).trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"haorui2004"},"content":"        String from \u003d arg.substring(i + 5, j).trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"haorui2004"},"content":"        String to \u003d arg.substring(j + 3).trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"haorui2004"},"content":"        if (desc.isEmpty() || from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"haorui2004"},"content":"            throw new InvalidInputException(\"Please check the format of task input again!\");","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"haorui2004"},"content":"        return Optional.of(new AddCommand(new EventTask(desc, from, to)));","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"haorui2004"},"content":"    private static Optional\u003cCommand\u003e tryFind(String s) throws InvalidInputException {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"haorui2004"},"content":"        final String p \u003d \"find \";","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"haorui2004"},"content":"        if (!s.startsWith(p)) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"haorui2004"},"content":"            return Optional.empty();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"haorui2004"},"content":"        String kw \u003d afterPrefix(s, p);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"haorui2004"},"content":"        if (kw.isEmpty()) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"haorui2004"},"content":"            throw new InvalidInputException(\"FindCommand needs a keyword for searching\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"haorui2004"},"content":"        return Optional.of(new FindCommand(kw));","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"haorui2004"},"content":"    // -------- helpers --------","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"haorui2004"},"content":"    private static Optional\u003cCommand\u003e tryNumbered(","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"haorui2004"},"content":"        String s, String prefix, java.util.function.IntFunction\u003cCommand\u003e ctor, String err)","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"haorui2004"},"content":"            throws InvalidInputException {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"haorui2004"},"content":"        if (!s.startsWith(prefix)) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"haorui2004"},"content":"            return Optional.empty();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"haorui2004"},"content":"        String arg \u003d afterPrefix(s, prefix);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"haorui2004"},"content":"        try {","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"haorui2004"},"content":"            int n \u003d Integer.parseInt(arg);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"haorui2004"},"content":"            return Optional.of(ctor.apply(n));","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"haorui2004"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"haorui2004"},"content":"            throw new InvalidInputException(err);","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"haorui2004"},"content":"    private static String sanitize(String raw) throws CommandException {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"haorui2004"},"content":"        if (raw \u003d\u003d null || raw.trim().isEmpty()) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"haorui2004"},"content":"            throw new CommandException(\"The command is empty\");","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-09T00:51:10","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"haorui2004"},"content":"        return raw.trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-29T02:42:42","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:42:42","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"haorui2004"},"content":"    private static String afterPrefix(String s, String prefix) {","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"haorui2004"},"content":"        return s.substring(prefix.length()).trim();","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-28T23:58:55","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T12:10:09","isFullCredit":false}],"authorContributionMap":{"haorui2004":175}},{"path":"src/main/java/nina/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"import java.util.List;","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"import nina.task.Task;","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"import nina.task.TaskList;","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":" * Handles saving and loading of tasks to and from a storage file.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"public class Storage {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"    private final Path filePath;","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    private final Path dirPath;","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"     * Creates a Storage object given a file path string.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"     * The directory path is inferred from the given file path.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"     * @param path the file path string where tasks will be saved","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"    public Storage(String path) {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"        this.filePath \u003d Paths.get(path).normalize();","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"        this.dirPath \u003d filePath.getParent() \u003d\u003d null ? Paths.get(\".\") : filePath.getParent();","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"     * Ensures that the storage file and its directory exist.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"     * Creates them if they do not exist.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"haorui2004"},"content":"     * @throws IOException if the directory or file cannot be created","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"haorui2004"},"content":"    private void ensureFile() throws IOException {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"haorui2004"},"content":"        if (Files.notExists(dirPath)) {","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"haorui2004"},"content":"            Files.createDirectories(dirPath);","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"haorui2004"},"content":"        if (Files.notExists(filePath)) {","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"haorui2004"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"haorui2004"},"content":"        assert !Files.notExists(dirPath) : \"dirPath does not exist for data storage\";","lastModifiedDate":"2025-09-09T00:51:10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"haorui2004"},"content":"        assert !Files.notExists(filePath) : \"filePath does not exist for data storage\";","lastModifiedDate":"2025-09-09T00:51:10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"haorui2004"},"content":"     * Reads tasks from the storage file into a TaskList.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"haorui2004"},"content":"     * @return a TaskList containing tasks in the file","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"haorui2004"},"content":"    public TaskList read() {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"haorui2004"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"haorui2004"},"content":"        try {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"haorui2004"},"content":"            ensureFile();","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"haorui2004"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"haorui2004"},"content":"            for (String raw : lines) {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"haorui2004"},"content":"                String line \u003d raw.trim();","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"haorui2004"},"content":"                if (!line.isEmpty()) {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"haorui2004"},"content":"                    list.addTask(Task.fromSaveLine(line));","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"haorui2004"},"content":"                }","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"haorui2004"},"content":"            }","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"haorui2004"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"haorui2004"},"content":"            System.err.println(\"[nina.Storage] read error: \" + e.getMessage());","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"haorui2004"},"content":"        return list;","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"haorui2004"},"content":"     * Writes the given TaskList to the storage file.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"haorui2004"},"content":"     * Each task is serialized into a save line and written to the file.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"haorui2004"},"content":"     * @param tasksToStore the TaskList to be saved","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"haorui2004"},"content":"    public void write(TaskList tasksToStore) {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"haorui2004"},"content":"        try {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"haorui2004"},"content":"            ensureFile();","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"haorui2004"},"content":"            try (BufferedWriter w \u003d new BufferedWriter(new FileWriter(filePath.toFile()))) {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"haorui2004"},"content":"                for (Task t : tasksToStore.items()) {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"haorui2004"},"content":"                    w.write(t.toSaveableLine());","lastModifiedDate":"2025-09-09T01:20:48","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"haorui2004"},"content":"                    w.newLine();","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"haorui2004"},"content":"                }","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"haorui2004"},"content":"            }","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"haorui2004"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"haorui2004"},"content":"            System.err.println(\"[nina.Storage] write error: \" + e.getMessage());","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-28T22:28:13","isFullCredit":false}],"authorContributionMap":{"haorui2004":91}},{"path":"src/main/java/nina/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import static nina.Nina.LINE;","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":" * Handles user interactions with the program","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"public class UI {","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"     * Prints the greeting message when the program starts.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"    public String greet() {","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"        return LINE + \"Hello, I am your personal assistant Nina\\n\"","lastModifiedDate":"2025-09-17T21:38:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"                + \"What can I do for you?\\n\" + LINE;","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"     * Prints the exit message when the program is about to terminate.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"    public String exit() {","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"        return \"See you again soon!\\n\";","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"     * Prints an error message to inform the user of invalid input or issues.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"     * @param msg The error message to be displayed","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"    public String showError(String msg) {","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"        return \"OOPS!!! \" + msg;","lastModifiedDate":"2025-09-03T14:26:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-28T23:59:09","isFullCredit":false}],"authorContributionMap":{"haorui2004":34}},{"path":"src/main/java/nina/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.command;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import nina.task.Task;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import nina.task.TaskList;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":" * Represents an AddCommand that can add a task to the TaskList.","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"    protected Task task;","lastModifiedDate":"2025-08-22T00:22:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"     * Constructs a AddCommand object.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"     * @param task task to be added into the tasks list","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2025-08-22T00:22:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-08-22T00:22:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"        int dupIndex \u003d tasks.findDuplicated(task);","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"        if (dupIndex !\u003d -1) {","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"            return \"This task has already been added!\\n See task \" + (dupIndex + 1) + \" \"","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"                    + tasks.get(dupIndex) + \"\\n This task is not added again\";","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-08-22T00:22:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"                + task","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false}],"authorContributionMap":{"haorui2004":34}},{"path":"src/main/java/nina/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.command;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import nina.CommandException;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import nina.task.TaskList;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":" * Represents a command that can be executed on a TaskList.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"public interface Command {","lastModifiedDate":"2025-08-21T22:32:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"     * Executes the command on the given TaskList.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"     * @param tasks the task list the command operates on","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"     * @throws CommandException if the command cannot be executed successfully","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"    String execute(TaskList tasks) throws CommandException;","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-21T22:32:51","isFullCredit":false}],"authorContributionMap":{"haorui2004":18}},{"path":"src/main/java/nina/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.command;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import nina.CommandException;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import nina.task.Task;","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"import nina.task.TaskList;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":" * Represents a DeleteCommand that can delete a task from the TaskList.","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"    protected int index;","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"     * Constructs a DeleteCommand object.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"     * @param index index of the task to be deleted","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"    public String execute(TaskList tasks) throws CommandException {","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"        try {","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"            Task removed \u003d tasks.delete(index);","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"            return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"                    + \"  \" + removed + \"\\n\"","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"                    + \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"            throw new CommandException(\"That task doesn\u0027t exist\");","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-22T01:39:11","isFullCredit":false}],"authorContributionMap":{"haorui2004":32}},{"path":"src/main/java/nina/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.command;","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import nina.task.Task;","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import nina.task.TaskList;","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":" * Represents a FindCommand that can find all tasks in the TaskList with the keyword","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"    private String keyword;","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"     * Constructs a FindCommand object.","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"     * @param keyword keyword of the task to be searched","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"        int index \u003d 1;","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"        for (Task t : tasks.items()) {","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"            if (t.match(keyword)) {","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"                sb.append(index).append(\". \").append(t).append(\"\\n\");","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"                index++;","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"            }","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"        if (index \u003d\u003d 1) {","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"            return \"No matching task is found.\";","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"haorui2004"},"content":"        return sb.toString().trim();","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-29T02:42:23","isFullCredit":false}],"authorContributionMap":{"haorui2004":37}},{"path":"src/main/java/nina/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.command;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import nina.task.TaskList;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":" * Represents a ListCommand that can list all tasks in a TaskList.","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"        return tasks.showList();","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false}],"authorContributionMap":{"haorui2004":12}},{"path":"src/main/java/nina/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.command;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import nina.CommandException;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import nina.task.Task;","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"import nina.task.TaskList;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":" * Represents a MarkCommand that can mark a task as done in the TaskList.","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"    protected int index;","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"     * Constructs a MarkCommand object.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"     * @param index index of the task to be marked","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"    public String execute(TaskList tasks) throws CommandException {","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"        try {","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"            Task t \u003d tasks.get(index - 1);","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"            t.markDone();","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n  \" + t;","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"            throw new CommandException(\"That task doesn\u0027t exist.\");","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false}],"authorContributionMap":{"haorui2004":31}},{"path":"src/main/java/nina/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.command;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import nina.CommandException;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import nina.task.Task;","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"import nina.task.TaskList;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":" * Represents a UnmarkCommand that can unmark a task\u0027s done status.","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"    protected int index;","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"     * Constructs a UnmarkCommand object.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"     * @param index index of the task to be unmarked","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"    public String execute(TaskList tasks) throws CommandException {","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"        try {","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"            Task t \u003d tasks.get(index - 1);","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"            t.unmarkDone();","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"            return \"Ok, I\u0027ve marked this task as not done yet:\\n\" + t;","lastModifiedDate":"2025-09-18T00:57:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"            throw new CommandException(\"That task doesn\u0027t exist.\");","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-21T22:50:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-21T22:33:15","isFullCredit":false}],"authorContributionMap":{"haorui2004":31}},{"path":"src/main/java/nina/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.task;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":" * Represents a DeadlineTask with description and by date","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2025-08-22T00:21:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-22T00:21:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"    protected LocalDate by;","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"    private static final long serialVersionUID \u003d 10L;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-22T00:21:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"     * Constructs a DeadlineTask object","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"     * @param description description of the task","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"     * @param by the deadline date of the task, in ISO format, YYYY-MM-DD","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"    public DeadlineTask(String description, String by) {","lastModifiedDate":"2025-08-22T00:21:13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"        super(description);","lastModifiedDate":"2025-08-22T00:21:13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-22T00:21:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-22T00:21:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"    public String toSaveableLine() {","lastModifiedDate":"2025-09-09T01:16:40","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"        return basePrefix(\"D\") + \" | \" + by.toString();","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"    public String deDupKey() {","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"        return this.getClass().getName() + \"|\" + normalizeKey(this.description) + \"|\" + this.by;","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-22T00:21:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"haorui2004"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T00:21:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"haorui2004"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))  + \")\";","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-22T00:21:13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-22T00:21:13","isFullCredit":false}],"authorContributionMap":{"haorui2004":39}},{"path":"src/main/java/nina/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.task;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":" * Represents an EventTask with description, from date, and to date","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"public class EventTask extends Task {","lastModifiedDate":"2025-08-22T00:21:28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"    protected LocalDate from;","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"    protected LocalDate to;","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"    private static final long serialVersionUID \u003d 10L;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-22T00:21:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"     * Constructs a EventTask object","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"     * @param description description of the task","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"     * @param from the start time of the event task in format yyyy-MM-dd","lastModifiedDate":"2025-09-09T00:51:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"     * @param to the end time of the event task in format yyyy-MM-dd","lastModifiedDate":"2025-09-09T00:51:10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"    public EventTask(String description, String from, String to) {","lastModifiedDate":"2025-08-22T00:21:28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"        super(description);","lastModifiedDate":"2025-08-22T00:21:28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-22T00:21:28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-22T00:21:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"    public String toSaveableLine() {","lastModifiedDate":"2025-09-09T01:16:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"        return basePrefix(\"E\") + \" | \" + from.toString() + \" | \" + to.toString();","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"    public String deDupKey() {","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"        return this.getClass().getName() + \"|\" + normalizeKey(this.description) + \"|\" + this.from + \"|\" + this.to;","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-22T00:21:28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"haorui2004"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T00:21:28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"haorui2004"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"haorui2004"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2025-08-28T23:28:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-22T00:21:28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-22T00:21:28","isFullCredit":false}],"authorContributionMap":{"haorui2004":42}},{"path":"src/main/java/nina/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.task;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import java.io.Serializable;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":" * Represents a generic task with a description and completion status.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"    protected String description;","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"    private static final long serialVersionUID \u003d 10L;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"     * Constructs a Task object with the specified description.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"     * @param description description of the task","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"     * Marks this task as done.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"    public void markDone() {","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"     * Marks this task as not done.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"    public void unmarkDone() {","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"haorui2004"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"haorui2004"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"haorui2004"},"content":"     * @return X if done, blank space if not done","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"haorui2004"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"haorui2004"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"haorui2004"},"content":"     * Returns the base prefix for serialization.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"haorui2004"},"content":"     * Used by subclasses when generating save lines.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"haorui2004"},"content":"     * @param type the short type identifier: T/D/E","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"haorui2004"},"content":"     * @return a string prefix containing the type, done status, and description","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"haorui2004"},"content":"    protected String basePrefix(String type) {","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"haorui2004"},"content":"        return type + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"haorui2004"},"content":"     * Converts this task into a save line string for storage.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"haorui2004"},"content":"     * @return the save line string representation of the task","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"haorui2004"},"content":"    public abstract String toSaveableLine();","lastModifiedDate":"2025-09-09T01:16:40","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"haorui2004"},"content":"     * Check if the description of a task contains a certain keyword","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"haorui2004"},"content":"     * @param keyword the word to be checked for","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"haorui2004"},"content":"     * @return","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"haorui2004"},"content":"    public boolean match(String keyword) {","lastModifiedDate":"2025-08-29T02:43:02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"haorui2004"},"content":"        return description.contains(keyword);","lastModifiedDate":"2025-08-29T02:43:02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-29T02:43:02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:43:02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"haorui2004"},"content":"     * Creates a Task object from a saved line string.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"haorui2004"},"content":"     * @param line the saved line string","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"haorui2004"},"content":"     * @return a Task object parsed from the saved line","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"haorui2004"},"content":"     * @throws IllegalArgumentException if the line is not well formatted or task type is unknown","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"haorui2004"},"content":"    public static Task fromSaveLine(String line) {","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"haorui2004"},"content":"        String[] p \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"haorui2004"},"content":"        for (int i \u003d 0; i \u003c p.length; i++) {","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"haorui2004"},"content":"            p[i] \u003d p[i].trim();","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-09T01:20:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"haorui2004"},"content":"        if (p.length \u003c 3) {","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"haorui2004"},"content":"            throw new IllegalArgumentException(\"Bad line: \" + line);","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"haorui2004"},"content":"        String type \u003d p[0];","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"haorui2004"},"content":"        boolean done \u003d \"1\".equals(p[1]);","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"haorui2004"},"content":"        String des \u003d p[2];","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"haorui2004"},"content":"        Task t;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"haorui2004"},"content":"        switch (type) {","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"haorui2004"},"content":"        case \"T\":","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"haorui2004"},"content":"            if (p.length !\u003d 3) {","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"haorui2004"},"content":"                throw new IllegalArgumentException(\"Todo needs 3 fields\");","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"haorui2004"},"content":"            }","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"haorui2004"},"content":"            t \u003d new TodoTask(des);","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"haorui2004"},"content":"            break;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"haorui2004"},"content":"        case \"D\":","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"haorui2004"},"content":"            if (p.length !\u003d 4) {","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"haorui2004"},"content":"                throw new IllegalArgumentException(\"Deadline needs 4 fields\");","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"haorui2004"},"content":"            }","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"haorui2004"},"content":"            t \u003d new DeadlineTask(des, p[3]);","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"haorui2004"},"content":"            break;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"haorui2004"},"content":"        case \"E\":","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"haorui2004"},"content":"            if (p.length !\u003d 5) {","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"haorui2004"},"content":"                throw new IllegalArgumentException(\"Event needs 5 fields\");","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"haorui2004"},"content":"            }","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"haorui2004"},"content":"            t \u003d new EventTask(des, p[3], p[4]);","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"haorui2004"},"content":"            break;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"haorui2004"},"content":"        default:","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"haorui2004"},"content":"            throw new IllegalArgumentException(\"Unknown type: \" + type);","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"haorui2004"},"content":"        if (done) {","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"haorui2004"},"content":"            t.markDone();","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"haorui2004"},"content":"        return t;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"haorui2004"},"content":"     * Normalizes a string by removing trailing spaces and convert all letters to lowercase","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"haorui2004"},"content":"     * @param str string input to be normalized","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"haorui2004"},"content":"     * @return normalized String str with all letters converted to lowercase and with trailing spaces trimmed.","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"haorui2004"},"content":"    public String normalizeKey(String str) {","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"haorui2004"},"content":"        String s \u003d str \u003d\u003d null ? \"\" : str.trim().toLowerCase();","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"haorui2004"},"content":"        return s;","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"haorui2004"},"content":"     * Generates a genetic deDupKey for a task","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"haorui2004"},"content":"     * @return a key with task type and task description which are to be used for de-duplication","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"haorui2004"},"content":"    public String deDupKey() {","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"haorui2004"},"content":"        return this.getClass().getName() + \"|\" + normalizeKey(this.description);","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"haorui2004"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"haorui2004"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \" \" + description;","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:32:33","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-21T20:55:59","isFullCredit":false}],"authorContributionMap":{"haorui2004":147}},{"path":"src/main/java/nina/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.task;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import java.io.Serializable;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"import java.util.Collections;","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":" * Represents a list of Task objects.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"    private static final long serialVersionUID \u003d 10L;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"     * Creates an empty TaskList.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"     * @param t the task to add","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"        tasks.add(t);","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"     * Returns the number of tasks in the list","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"     * @return the total number of tasks in the list","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"haorui2004"},"content":"    public int size() {","lastModifiedDate":"2025-08-22T00:22:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"haorui2004"},"content":"        return tasks.size();","lastModifiedDate":"2025-08-22T00:22:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-22T00:22:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-22T00:22:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"haorui2004"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"haorui2004"},"content":"     * @param index of the task to be extracted from the list","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"haorui2004"},"content":"     * @return the Task object with the same index","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"haorui2004"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-08-29T02:05:34","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"haorui2004"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-08-29T02:05:34","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-29T02:05:34","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:05:34","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"haorui2004"},"content":"     * Deletes the task at the given position and prints confirmation.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"haorui2004"},"content":"     * @param number index of the task to delete","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"haorui2004"},"content":"    public Task delete(int number) {","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"haorui2004"},"content":"        if (number \u003c 1 || number \u003e tasks.size()) {","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"haorui2004"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"haorui2004"},"content":"        return tasks.remove(number - 1);","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-22T01:39:28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-22T01:39:28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"haorui2004"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"haorui2004"},"content":"     * If the list is empty, nothing will be printed.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"haorui2004"},"content":"    public String showList() {","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"haorui2004"},"content":"        if (!tasks.isEmpty()) {","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"haorui2004"},"content":"            StringBuilder sb \u003d new StringBuilder(\"Here are your tasks:\");","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"haorui2004"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"haorui2004"},"content":"                sb.append(\"\\n\").append(i + 1).append(\". \").append(tasks.get(i));","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"haorui2004"},"content":"            }","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"haorui2004"},"content":"            return sb.toString();","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"haorui2004"},"content":"        } else {","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"haorui2004"},"content":"            return \"The list is empty\";","lastModifiedDate":"2025-09-03T14:26:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"haorui2004"},"content":"     * Finds duplicates of the input task in a tasklist","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"haorui2004"},"content":"     * @param t new task to be searched for duplicates when it is being added to the tasklist","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"haorui2004"},"content":"     * @return index of the first duplicate found, i","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"haorui2004"},"content":"    public int findDuplicated(Task t) {","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"haorui2004"},"content":"        String key \u003d t.deDupKey();","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"haorui2004"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"haorui2004"},"content":"            if (tasks.get(i).deDupKey().equals((key))) {","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"haorui2004"},"content":"                return i;","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"haorui2004"},"content":"            }","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"haorui2004"},"content":"        }","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"haorui2004"},"content":"        return -1;","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"haorui2004"},"content":"     * Returns an unmodifiable iterable view of the tasks.","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"haorui2004"},"content":"     * @return an iterable collection of tasks","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"haorui2004"},"content":"    public Iterable\u003cTask\u003e items() {","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"haorui2004"},"content":"        return Collections.unmodifiableList(tasks);","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-21T22:32:41","isFullCredit":false}],"authorContributionMap":{"haorui2004":99}},{"path":"src/main/java/nina/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.task;","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T00:18:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"/**","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":" * Represents a TodoTask with description.","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":" */","lastModifiedDate":"2025-09-17T20:01:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2025-08-22T00:21:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"    private static final long serialVersionUID \u003d 10L;","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"    /**","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"     * Constructs a TodoTask object","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"     *","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"     * @param description description of the task","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"     */","lastModifiedDate":"2025-08-29T11:35:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"    public TodoTask(String description) {","lastModifiedDate":"2025-08-22T00:21:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"        super(description);","lastModifiedDate":"2025-08-22T00:21:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-22T00:21:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-22T00:21:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    public String toSaveableLine() {","lastModifiedDate":"2025-09-09T01:16:40","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"        return basePrefix(\"T\");","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-28T22:29:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"    @Override","lastModifiedDate":"2025-08-22T00:21:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T00:21:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-22T00:21:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-22T00:21:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-22T00:21:02","isFullCredit":false}],"authorContributionMap":{"haorui2004":27}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false}],"authorContributionMap":{"haorui2004":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"            fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"haorui2004"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"haorui2004"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"haorui2004"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"haorui2004"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"haorui2004"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"haorui2004"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"haorui2004"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"haorui2004"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"haorui2004"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-03T14:25:46","isFullCredit":false}],"authorContributionMap":{"haorui2004":43}},{"path":"src/test/java/nina/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina;","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import nina.task.DeadlineTask;","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import nina.task.TaskList;","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"import nina.task.TodoTask;","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-09-17T21:17:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-09-17T21:17:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"public class StorageTest {","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"    @Test","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"    void testWriteAndRead(@TempDir Path tempDir) throws Exception {","lastModifiedDate":"2025-09-17T21:17:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"        //suggested by Chatgpt to use TempDir instead of createTempFile","lastModifiedDate":"2025-09-17T21:17:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"        Path storageTestFile \u003d tempDir.resolve(\"storageTest.txt\");","lastModifiedDate":"2025-09-17T21:17:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"        Storage storage \u003d new Storage(storageTestFile.toString());","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"        TaskList original \u003d new TaskList();","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"        original.addTask(new TodoTask(\"read book\"));","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"        original.addTask(new DeadlineTask(\"return book\", \"2019-12-02\"));","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"        storage.write(original);","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"        TaskList loaded \u003d storage.read();","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"        assertEquals(2, loaded.size());","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"        assertTrue(loaded.get(0) instanceof TodoTask);","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"        assertTrue(loaded.get(1) instanceof DeadlineTask);","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"        assertEquals(original.get(0).toString(), loaded.get(0).toString());","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"haorui2004"},"content":"        assertEquals(original.get(1).toString(), loaded.get(1).toString());","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T21:17:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"haorui2004"},"content":"        assertTrue(Files.exists(storageTestFile));","lastModifiedDate":"2025-09-17T21:17:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"haorui2004"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"haorui2004"},"content":"    void testReadCreatesFileIfMissing(@TempDir Path tempDir) {","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"haorui2004"},"content":"        Path file \u003d tempDir.resolve(\"dir/data.txt\");","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"haorui2004"},"content":"        Storage storage \u003d new Storage(file.toString());","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"haorui2004"},"content":"        TaskList loaded \u003d storage.read();","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"haorui2004"},"content":"        assertNotNull(loaded);","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"haorui2004"},"content":"        assertEquals(0, loaded.size());","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"haorui2004"},"content":"        assertTrue(Files.exists(file), \"file should be created automatically.\");","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-29T02:04:58","isFullCredit":false}],"authorContributionMap":{"haorui2004":50}},{"path":"src/test/java/nina/task/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"package nina.task;","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"    @Test","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"    public void testToSaveLineStoresDateCorrectly() {","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"        DeadlineTask d \u003d new DeadlineTask(\"return book\", \"2019-12-02\");","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"        String expected \u003d \"D | 0 | return book | 2019-12-02\";","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"        assertEquals(expected, d.toSaveableLine());","lastModifiedDate":"2025-09-09T19:02:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"    @Test","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"    void testToStringFormatsDateCorrectly() {","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"        DeadlineTask d \u003d new DeadlineTask(\"return book\", \"2019-12-02\");","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"        String expected \u003d \"[D][ ] return book (by: Dec 02 2019)\";","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"        assertEquals(expected, d.toString());","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"    void testEmptyDescription() {","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"        DeadlineTask d \u003d new DeadlineTask(\"\", \"2025-05-01\");","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"        assertTrue(d.toString().contains(\"(by: May 01 2025)\"));","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"    void testInvalidDate() {","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"        assertThrows(DateTimeParseException.class,","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"                () -\u003e new DeadlineTask(\"return book\", \"Tue\"));","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"haorui2004"},"content":"    }","lastModifiedDate":"2025-09-17T21:31:30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"haorui2004"},"content":"}","lastModifiedDate":"2025-08-29T02:04:50","isFullCredit":false}],"authorContributionMap":{"haorui2004":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"haorui2004"},"content":"list","lastModifiedDate":"2025-08-22T00:58:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"haorui2004"},"content":"todo borrow book","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"haorui2004"},"content":"deadline return book /by 2025-01-20","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"haorui2004"},"content":"event project meeting /from 2025-01-03 /to 2025-01-03","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"haorui2004"},"content":"list","lastModifiedDate":"2025-08-22T00:58:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"haorui2004"},"content":"find book","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"haorui2004"},"content":"mark 1","lastModifiedDate":"2025-08-22T00:58:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"haorui2004"},"content":"unmark 1","lastModifiedDate":"2025-08-22T00:58:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"haorui2004"},"content":"mark 3","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"haorui2004"},"content":"delete 2","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"haorui2004"},"content":"mark 110","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"haorui2004"},"content":"unmark 0","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"haorui2004"},"content":"delete -1","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"haorui2004"},"content":"delete abc","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"haorui2004"},"content":"   list","lastModifiedDate":"2025-08-22T00:58:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"haorui2004"},"content":"todo    wash     dishes","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"haorui2004"},"content":"deadline   r /by     2026-12-31","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"haorui2004"},"content":"event   x  /from   2026-01-01   /to  2026-01-02","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"haorui2004"},"content":"find      dishes","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"haorui2004"},"content":"todo","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"haorui2004"},"content":"deadline return book","lastModifiedDate":"2025-08-22T00:58:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"haorui2004"},"content":"deadline /by 2025-02-01","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"deadline        /by","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"haorui2004"},"content":"event project /from 2025-07-01","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"haorui2004"},"content":"event project /to 2025-07-02","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"haorui2004"},"content":"event /from 2025-07-01 /to 2025-07-02","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"haorui2004"},"content":"event project /from 2025-07-02 /to","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"haorui2004"},"content":"mark","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"haorui2004"},"content":"unmark","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"haorui2004"},"content":"delete","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"haorui2004"},"content":"mark return book","lastModifiedDate":"2025-08-22T01:21:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"haorui2004"},"content":"blah","lastModifiedDate":"2025-08-22T01:21:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"haorui2004"},"content":"ohno","lastModifiedDate":"2025-08-22T01:21:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"haorui2004"},"content":"list show","lastModifiedDate":"2025-08-22T01:21:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"haorui2004"},"content":"list 1","lastModifiedDate":"2025-08-22T01:21:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"haorui2004"},"content":"find","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"haorui2004"},"content":"FiNd book","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"haorui2004"},"content":"todo 图书馆开会","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"haorui2004"},"content":"deadline 提交作业 /by 2025-03-04","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"haorui2004"},"content":"炒饭","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"haorui2004"},"content":"bye","lastModifiedDate":"2025-09-17T20:53:23","isFullCredit":false}],"authorContributionMap":{"haorui2004":41}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"haorui2004"},"content":"java -classpath ../bin Nina \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-22T00:57:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"haorui2004":1,"-":37}}]
