[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"checkstyle {","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"    toolVersion \u003d \u002711.0.1\u0027","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brandontwj1"},"content":"    mainClass.set(\"omni.app.Launcher\")","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brandontwj1"},"content":"    archiveBaseName \u003d \"omni\"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brandontwj1"},"content":"    archiveFileName \u003d \u0027omni.jar\u0027","lastModifiedDate":"2025-09-02T18:08:23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brandontwj1"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-09-13T00:59:11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"-":39,"brandontwj1":24}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"# omni.omni User Guide","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"brandontwj1":1,"-":29}},{"path":"src/main/java/omni/app/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.app;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":" * and a label containing text from the speaker. Used to display conversations between","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":" * the user and Omni in the GUI interface.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"    @FXML","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"    @FXML","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"     * Constructs a DialogBox with the specified text and image.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"     * Loads the FXML layout and sets up the dialog content.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"     * @param text The text content to display in the dialog.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"     * @param img The image to display as the speaker\u0027s avatar.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"        try {","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brandontwj1"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brandontwj1"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brandontwj1"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brandontwj1"},"content":"     * Changes the alignment to TOP_LEFT to match the flipped layout.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brandontwj1"},"content":"    private void flip() {","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brandontwj1"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brandontwj1"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brandontwj1"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brandontwj1"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brandontwj1"},"content":"     * Creates a dialog box for user messages with the specified text and image.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brandontwj1"},"content":"     * The image appears on the right side with text on the left.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brandontwj1"},"content":"     * @param text The user\u0027s message text.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brandontwj1"},"content":"     * @param img The user\u0027s avatar image.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brandontwj1"},"content":"     * @return A DialogBox configured for user messages.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brandontwj1"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brandontwj1"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brandontwj1"},"content":"     * Creates a dialog box for Omni\u0027s responses with the specified text and image.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brandontwj1"},"content":"     * The image appears on the left side with text on the right (flipped layout).","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brandontwj1"},"content":"     * @param text The Omni\u0027s response text.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brandontwj1"},"content":"     * @param img The Omni\u0027s avatar image.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brandontwj1"},"content":"     * @return A DialogBox configured for Omni responses.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brandontwj1"},"content":"    public static DialogBox getOmniDialog(String text, Image img) {","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brandontwj1"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brandontwj1"},"content":"        db.flip();","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brandontwj1"},"content":"        return db;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false}],"authorContributionMap":{"brandontwj1":87}},{"path":"src/main/java/omni/app/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.app;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"public class Launcher {","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false}],"authorContributionMap":{"brandontwj1":12}},{"path":"src/main/java/omni/app/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.app;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":" * The main JavaFX application class for the Omni task management GUI.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":" * Handles the initialization and setup of the primary stage and scene.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":" * Sets up the FXML loader and connects the controller with the Omni instance.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"    private Path filePath \u003d Paths.get(\"data\", \"tasks.txt\");","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"    private Omni omni \u003d new Omni(filePath);","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"     * Starts the JavaFX application by setting up the primary stage.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"     * Loads the FXML layout, creates the scene, and initializes the controller","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"     * with the Omni instance and greeting message.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"     * @param stage The primary stage for this application.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"    @Override","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"        try {","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setOmni(omni);","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setGreeting();","lastModifiedDate":"2025-09-08T16:42:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"            stage.show();","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false}],"authorContributionMap":{"brandontwj1":46}},{"path":"src/main/java/omni/app/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.app;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":" * Controller for the main GUI window of the Omni application.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":" * Handles user input, displays dialog boxes, and manages the interaction","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":" * between the user interface and the Omni application logic.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"    @FXML","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"    @FXML","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"    @FXML","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"    @FXML","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"    private Omni omni;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/ben10.png\"));","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"    private Image omniImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/omnitrix.png\"));","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"     * Initializes the MainWindow controller.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"     * Sets up the scroll pane to automatically scroll to the bottom when new content is added.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"    @FXML","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brandontwj1"},"content":"     * Injects the Omni instance into this controller.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brandontwj1"},"content":"     * @param omni The Omni application instance to be used for processing commands.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brandontwj1"},"content":"    public void setOmni(Omni omni) {","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brandontwj1"},"content":"        this.omni \u003d omni;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brandontwj1"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brandontwj1"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brandontwj1"},"content":"    @FXML","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brandontwj1"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brandontwj1"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brandontwj1"},"content":"        String response \u003d omni.getResponse(input);","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brandontwj1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brandontwj1"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brandontwj1"},"content":"                DialogBox.getOmniDialog(response, omniImage)","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brandontwj1"},"content":"        );","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brandontwj1"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brandontwj1"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-09-08T17:02:56","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brandontwj1"},"content":"            exitWithDelay(1);","lastModifiedDate":"2025-09-13T15:34:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-13T15:34:20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-13T15:34:20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T15:34:20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brandontwj1"},"content":"    private static void exitWithDelay(int delay) {","lastModifiedDate":"2025-09-13T15:34:20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brandontwj1"},"content":"        PauseTransition pause \u003d new PauseTransition(Duration.seconds(delay));","lastModifiedDate":"2025-09-13T15:34:20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brandontwj1"},"content":"        pause.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2025-09-08T17:02:56","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brandontwj1"},"content":"        pause.play();","lastModifiedDate":"2025-09-08T17:02:56","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-08T17:02:56","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brandontwj1"},"content":"     * Sets the greeting message from Omni and displays it in the dialog container.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brandontwj1"},"content":"    public void setGreeting() {","lastModifiedDate":"2025-09-08T16:42:04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brandontwj1"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getOmniDialog(omni.greet(), omniImage));","lastModifiedDate":"2025-09-08T16:42:04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-08T16:42:04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false}],"authorContributionMap":{"brandontwj1":84}},{"path":"src/main/java/omni/app/Omni.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.app;","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T02:04:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"import omni.exceptions.OmniException;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"import omni.parser.Parser;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"import omni.storage.Storage;","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"import omni.tasklist.TaskList;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"import omni.ui.Ui;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-25T00:10:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":" * Main class for the Omni task management application.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":" * Coordinates between UI, storage, task list, and parser components to provide","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":" * GUI interfaces for managing tasks.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"public class Omni {","lastModifiedDate":"2025-08-24T16:33:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"    private Ui ui;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"    private Parser parser;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"     * Constructs an Omni application with the specified file path for task storage.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"     * Initializes all components and loads existing tasks from storage.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"     * @param filePath The path to the tasks storage file.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"    public Omni(Path filePath) {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"        assert filePath !\u003d null : \"filePath cannot be null\";","lastModifiedDate":"2025-09-13T00:59:11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"        try {","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"        } catch (OmniException e) {","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"            ui.showLoadingError(e.getUserMessage());","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"        parser \u003d new Parser(ui, tasks, storage);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brandontwj1"},"content":"     * Processes user input and returns the appropriate response.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brandontwj1"},"content":"     * This method is used for GUI interface mode to handle user commands.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brandontwj1"},"content":"     * @param input The user\u0027s input command string.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brandontwj1"},"content":"     * @return The response message from processing the command.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brandontwj1"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brandontwj1"},"content":"        return parser.handleInput(input);","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brandontwj1"},"content":"     * Returns the greeting message for the application.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brandontwj1"},"content":"     * Used to display the initial welcome message to users.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brandontwj1"},"content":"     * @return The greeting message string.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brandontwj1"},"content":"    public String greet() {","lastModifiedDate":"2025-09-08T16:42:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brandontwj1"},"content":"        return ui.greet();","lastModifiedDate":"2025-09-08T16:42:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-08T16:42:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-08-24T16:33:09","isFullCredit":false}],"authorContributionMap":{"brandontwj1":64}},{"path":"src/main/java/omni/exceptions/CorruptedFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.exceptions;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":" * Exception thrown when there are issues with reading from or writing to the task storage file.","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":" * This includes cases where the file is corrupted, cannot be created, or has invalid format.","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"public class CorruptedFileException extends OmniException {","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"     * Constructs a CorruptedFileException with the specified detail message.","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"     * @param message The detail message explaining the file corruption issue.","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"    public CorruptedFileException(String message) {","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"        super(message);","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false}],"authorContributionMap":{"brandontwj1":18}},{"path":"src/main/java/omni/exceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.exceptions;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":" * Exception thrown when a user provides invalid arguments for a command.","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":" * This includes cases where required parameters are missing, have incorrect format,","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":" * or contain invalid values.","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"public class InvalidArgumentException extends OmniException {","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"     * Constructs an InvalidArgumentException with the specified detail message.","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"     * @param message The detail message explaining the invalid argument issue.","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"    public InvalidArgumentException(String message) {","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"        super(message);","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false}],"authorContributionMap":{"brandontwj1":19}},{"path":"src/main/java/omni/exceptions/OmniException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.exceptions;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":" * Base exception class for the Omni task management application.","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":" * All custom exceptions in the Omni application extend from this class.","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"public class OmniException extends Exception {","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"     * Constructs an OmniException with the specified detail message.","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"     * @param message The detail message explaining the exception.","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"    public OmniException(String message) {","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"        super(message);","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"     * Returns the user-friendly error message for this exception.","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"     * @return The error message to be displayed to the user.","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"    public String getUserMessage() {","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"        return this.getMessage();","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false}],"authorContributionMap":{"brandontwj1":28}},{"path":"src/main/java/omni/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.exceptions;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":" * Exception thrown when a user enters a command that is not recognized by the application.","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":" * This occurs when the command does not match any of the valid commands supported by Omni.","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"public class UnknownCommandException extends OmniException {","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"     * Constructs an UnknownCommandException with the specified detail message.","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"     * @param message The detail message explaining the unknown command issue.","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"    public UnknownCommandException(String message) {","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"        super(message);","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false}],"authorContributionMap":{"brandontwj1":18}},{"path":"src/main/java/omni/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.parser;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T02:04:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"import omni.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"import omni.exceptions.OmniException;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"import omni.exceptions.UnknownCommandException;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"import omni.storage.Storage;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"import omni.tasklist.TaskList;","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Deadline;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Event;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Task;","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Todo;","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"import omni.ui.Ui;","lastModifiedDate":"2025-09-06T23:23:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":" * The Parser class is responsible for parsing and executing user commands in the Omni task management system.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":" * It handles various commands such as adding tasks (todo, deadline, event), marking/unmarking tasks,","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":" * deleting tasks, and listing all tasks. The parser validates input formats and coordinates between","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":" * the UI, TaskList, and Storage components.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"public class Parser {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"    private static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"    private static final String MESSAGE_INVALID_DATE \u003d \"Invalid date format! Check your date and time is in the form\"","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"            + \" DD-MM-YYYY HHMM\";","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"    private static final String MESSAGE_INVALID_EVENT_FORMAT \u003d \"Unable to set event,\"","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"            + \" remember to use /from and /to in that order!\";","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"    private static final String MESSAGE_INVALID_DEADLINE_FORMAT \u003d \"Unable to set deadline,\"","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"            + \" remember to use /by to specify your deadline!\";","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"    private static final String MESSAGE_INVALID_DELETE_COMMAND \u003d \"Invalid delete command. Try again.\";","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"    private static final String MESSAGE_INVALID_MARK_COMMAND \u003d \"Invalid mark command. Try again.\";","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"    private static final String MESSAGE_INVALID_UNMARK_COMMAND \u003d \"Invalid unmark command. Try again.\";","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"    private static final String MESSAGE_INVALID_UPDATE_COMMAND \u003d \"Invalid update command. Try again.\";","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brandontwj1"},"content":"    private static final int MIN_UPDATE_ARGS \u003d 3;","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brandontwj1"},"content":"    private static final int TASK_INDEX_POSITION \u003d 0;","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brandontwj1"},"content":"    private static final int FIRST_UPDATE_ARG \u003d 1;","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brandontwj1"},"content":"    private Ui ui;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brandontwj1"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brandontwj1"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brandontwj1"},"content":"     * Constructs a Parser with the specified UI, TaskList, and Storage objects.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brandontwj1"},"content":"     * @param ui      The UI object.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brandontwj1"},"content":"     * @param tasks   The TaskList object.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brandontwj1"},"content":"     * @param storage The Storage object.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brandontwj1"},"content":"    public Parser(Ui ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brandontwj1"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brandontwj1"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brandontwj1"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brandontwj1"},"content":"        assert ui !\u003d null : \"Ui object cannot be null\";","lastModifiedDate":"2025-09-13T00:59:11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brandontwj1"},"content":"        assert tasks !\u003d null : \"TaskList object cannot be null\";","lastModifiedDate":"2025-09-13T00:59:11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brandontwj1"},"content":"        assert storage !\u003d null : \"Storage object cannot be null\";","lastModifiedDate":"2025-09-13T00:59:11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brandontwj1"},"content":"     * Displays the list of all tasks to the user.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brandontwj1"},"content":"    private String handleList() {","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brandontwj1"},"content":"        return ui.showTasks(tasks);","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brandontwj1"},"content":"     * Marks a task as done based on the given task number.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brandontwj1"},"content":"     * @param n The task number as a string.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brandontwj1"},"content":"     * @return Reply string for the user.","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brandontwj1"},"content":"     * @throws InvalidArgumentException If the task number is invalid or task doesn\u0027t exist.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brandontwj1"},"content":"     * @throws IOException              If an I/O error occurs during storage update.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brandontwj1"},"content":"    private String handleMark(String n) throws InvalidArgumentException, IOException {","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brandontwj1"},"content":"        int num \u003d getIndexFromString(n, MESSAGE_INVALID_MARK_COMMAND);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brandontwj1"},"content":"        Task markedTask \u003d tasks.markTaskDone(num);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brandontwj1"},"content":"        storage.rewriteTask(markedTask, num);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brandontwj1"},"content":"        return ui.showMarked(markedTask);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brandontwj1"},"content":"     * Marks a task as not done based on the given task number.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"brandontwj1"},"content":"     * @param n The task number as a string.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"brandontwj1"},"content":"     * @throws InvalidArgumentException If the task number is invalid or task doesn\u0027t exist.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"brandontwj1"},"content":"     * @throws IOException              If an I/O error occurs during storage update.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"brandontwj1"},"content":"    private String handleUnmark(String n) throws InvalidArgumentException, IOException {","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"brandontwj1"},"content":"        int num \u003d getIndexFromString(n, MESSAGE_INVALID_UNMARK_COMMAND);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"brandontwj1"},"content":"        Task unmarkedTask \u003d tasks.unmarkTaskDone(num);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"brandontwj1"},"content":"        storage.rewriteTask(unmarkedTask, num);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"brandontwj1"},"content":"        return ui.showUnmarked(unmarkedTask);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"brandontwj1"},"content":"     * Deletes a task based on the given task index.","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"brandontwj1"},"content":"     * @param n The task number as a string.","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"brandontwj1"},"content":"     * @throws InvalidArgumentException If the task number is invalid or task doesn\u0027t exist.","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"brandontwj1"},"content":"     * @throws IOException              If an I/O error occurs during storage update.","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"brandontwj1"},"content":"    private String handleDelete(String n) throws InvalidArgumentException, IOException {","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"brandontwj1"},"content":"        int num \u003d getIndexFromString(n, MESSAGE_INVALID_DELETE_COMMAND);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"brandontwj1"},"content":"        Task removedTask \u003d tasks.removeTask(num);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"brandontwj1"},"content":"        storage.eraseTask(num);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"brandontwj1"},"content":"        return ui.showErased(removedTask);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"brandontwj1"},"content":"    private int getIndexFromString(String n, String invalidCommandMessage) throws InvalidArgumentException {","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"brandontwj1"},"content":"        try {","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"brandontwj1"},"content":"            int index \u003d parseInt(n);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"brandontwj1"},"content":"            if (index \u003e tasks.getSize() || index \u003c 1) {","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"brandontwj1"},"content":"                throw new InvalidArgumentException(\"That task does not exist! Try again!\");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"brandontwj1"},"content":"            }","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"brandontwj1"},"content":"            return index - 1; // Correct to 0-indexed for parsing","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"brandontwj1"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(invalidCommandMessage);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"brandontwj1"},"content":"     * Handles unknown commands by throwing an exception.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"brandontwj1"},"content":"     * @throws UnknownCommandException If unknown command received.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"brandontwj1"},"content":"    private void handleUnknownCmd() throws UnknownCommandException {","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"brandontwj1"},"content":"        throw new UnknownCommandException(ui.showUnknownCommandError());","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"brandontwj1"},"content":"     * Adds a task to the task list and storage, then displays confirmation.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"brandontwj1"},"content":"     * @param task The task to add.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"brandontwj1"},"content":"     * @throws IOException If an I/O error occurs during storage write.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"brandontwj1"},"content":"    private String handleAddTask(Task task) throws IOException {","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"brandontwj1"},"content":"        storage.writeTask(task);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"brandontwj1"},"content":"        Task t \u003d tasks.addTask(task);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"brandontwj1"},"content":"        return ui.showAdded(t, tasks);","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"brandontwj1"},"content":"     * Creates and adds a new todo task.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"brandontwj1"},"content":"     * @param arg The todo description.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"brandontwj1"},"content":"     * @throws InvalidArgumentException If the description is empty.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"brandontwj1"},"content":"     * @throws IOException              If an I/O error occurs during storage write.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"brandontwj1"},"content":"    private String handleTodo(String arg) throws InvalidArgumentException, IOException {","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"brandontwj1"},"content":"        if (arg.isEmpty()) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(\"Give your todo a description!\");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"brandontwj1"},"content":"        Todo newTodo \u003d new Todo(arg, false);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"brandontwj1"},"content":"        return handleAddTask(newTodo);","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"brandontwj1"},"content":"     * Checks if the date string(s) is valid according to the expected format (DD-MM-YYYY HHMM).","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"brandontwj1"},"content":"     * @param firstDate The primary date string to validate.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"brandontwj1"},"content":"     * @param additionalDates Additional date strings to validate (varargs).","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"brandontwj1"},"content":"     * @return True if all dates are valid.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"brandontwj1"},"content":"     * @throws InvalidArgumentException If the date format of any date string is invalid.","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"brandontwj1"},"content":"    public static boolean checkValidDateString(String firstDate, String... additionalDates)","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"brandontwj1"},"content":"            throws InvalidArgumentException {","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"brandontwj1"},"content":"        validateSingleDate(firstDate);","lastModifiedDate":"2025-09-13T16:44:33","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"brandontwj1"},"content":"        for (String date : additionalDates) {","lastModifiedDate":"2025-09-13T16:44:33","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"brandontwj1"},"content":"            validateSingleDate(date);","lastModifiedDate":"2025-09-13T16:44:33","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-13T16:44:33","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"brandontwj1"},"content":"        return true;","lastModifiedDate":"2025-09-13T16:44:33","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-13T16:44:33","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T16:44:33","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"brandontwj1"},"content":"    private static void validateSingleDate(String date) throws InvalidArgumentException {","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"brandontwj1"},"content":"        parseDateFromDateTime(date);","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"brandontwj1"},"content":"        parseTimeFromDateTime(date);","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-13T16:44:33","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T16:44:33","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"brandontwj1"},"content":"    private static void validateDateFormat(String date) throws InvalidArgumentException {","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"brandontwj1"},"content":"        String[] dateAndTime \u003d date.split(\" \");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"brandontwj1"},"content":"        if (dateAndTime.length \u003e 2) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(MESSAGE_INVALID_DATE);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-13T16:44:33","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T16:44:33","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"brandontwj1"},"content":"    private static LocalDate parseDate(String dateStr) throws InvalidArgumentException {","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"brandontwj1"},"content":"        try {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"brandontwj1"},"content":"            return LocalDate.parse(dateStr.trim(), DATE_FORMATTER);","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"brandontwj1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-13T16:44:33","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(MESSAGE_INVALID_DATE);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-13T16:44:33","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T16:44:33","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"brandontwj1"},"content":"    private static LocalTime parseTime(String timeStr) throws InvalidArgumentException {","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"brandontwj1"},"content":"        try {","lastModifiedDate":"2025-09-13T16:44:33","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"brandontwj1"},"content":"            return LocalTime.parse(timeStr.trim(), TIME_FORMATTER);","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"brandontwj1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(MESSAGE_INVALID_DATE);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"brandontwj1"},"content":"     * Parses and returns the {@link LocalDate} from a date-time string.","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"brandontwj1"},"content":"     * The expected format is \"DD-MM-YYYY HHMM\".","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"brandontwj1"},"content":"     * @param date The date-time string to parse.","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"brandontwj1"},"content":"     * @return The parsed {@link LocalDate}.","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"brandontwj1"},"content":"     * @throws InvalidArgumentException If the date format is invalid.","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"brandontwj1"},"content":"    public static LocalDate parseDateFromDateTime(String date) throws InvalidArgumentException {","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"brandontwj1"},"content":"        validateDateFormat(date);","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"brandontwj1"},"content":"        String dateStr \u003d date.split(\" \")[0].trim();","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"brandontwj1"},"content":"        return parseDate(dateStr);","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"brandontwj1"},"content":"     * Parses and returns the {@link LocalTime} from a date-time string.","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"brandontwj1"},"content":"     * The expected format is \"DD-MM-YYYY HHMM\".","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"brandontwj1"},"content":"     * @param date The date-time string to parse.","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"brandontwj1"},"content":"     * @return The parsed {@link LocalTime}, or null if no time is present.","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"brandontwj1"},"content":"     * @throws InvalidArgumentException If the time format is invalid.","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"brandontwj1"},"content":"    public static LocalTime parseTimeFromDateTime(String date) throws InvalidArgumentException {","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"brandontwj1"},"content":"        validateDateFormat(date);","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"brandontwj1"},"content":"        String[] dateAndTime \u003d date.split(\" \");","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"brandontwj1"},"content":"        if (dateAndTime.length \u003c\u003d 1) {","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"brandontwj1"},"content":"            return null;","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"brandontwj1"},"content":"        return parseTime(dateAndTime[1]);","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"brandontwj1"},"content":"     * Creates and adds a new deadline task.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"brandontwj1"},"content":"     * @param arg The deadline argument containing description and due date.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"brandontwj1"},"content":"     * @throws InvalidArgumentException If the format is invalid or description is empty.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"brandontwj1"},"content":"     * @throws IOException              If an I/O error occurs during storage write.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"brandontwj1"},"content":"    private String handleDeadline(String arg) throws InvalidArgumentException, IOException {","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"brandontwj1"},"content":"        String[] parts \u003d getDeadlineParts(arg);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"brandontwj1"},"content":"        String description \u003d getDeadlineDescription(parts);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"brandontwj1"},"content":"        String date \u003d parts[1].trim();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"brandontwj1"},"content":"        checkValidDateString(date);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"brandontwj1"},"content":"        Deadline newDeadline \u003d new Deadline(description, false, date);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"brandontwj1"},"content":"        return handleAddTask(newDeadline);","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"brandontwj1"},"content":"    private static String getDeadlineDescription(String[] parts) throws InvalidArgumentException {","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"brandontwj1"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"brandontwj1"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(\"Give your deadline a description!\");","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"brandontwj1"},"content":"        return description;","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"brandontwj1"},"content":"    private static String[] getDeadlineParts(String arg) throws InvalidArgumentException {","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"brandontwj1"},"content":"        String[] parts \u003d arg.split(\"/by\", 2);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"brandontwj1"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(MESSAGE_INVALID_DEADLINE_FORMAT);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"brandontwj1"},"content":"        return parts;","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"brandontwj1"},"content":"     * Creates and adds a new event task.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"brandontwj1"},"content":"     * @param arg The event argument containing description, start and end times.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"brandontwj1"},"content":"     * @throws InvalidArgumentException If the format is invalid or description is empty.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"brandontwj1"},"content":"     * @throws IOException              If an I/O error occurs during storage write.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"brandontwj1"},"content":"    private String handleEvent(String arg) throws InvalidArgumentException, IOException {","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"brandontwj1"},"content":"        String[] parts \u003d getEventParts(arg);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"brandontwj1"},"content":"        String description \u003d getEventDescription(parts);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"brandontwj1"},"content":"        String[] dates \u003d getDates(parts);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"brandontwj1"},"content":"        String from \u003d dates[0].trim();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"brandontwj1"},"content":"        String to \u003d dates[1].trim();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"brandontwj1"},"content":"        checkValidDateString(from, to);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"brandontwj1"},"content":"        Event newEvent \u003d new Event(description, false, from, to);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"brandontwj1"},"content":"        return handleAddTask(newEvent);","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"brandontwj1"},"content":"    private static String[] getDates(String[] parts) throws InvalidArgumentException {","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"brandontwj1"},"content":"        String[] dates \u003d parts[1].trim().split(\"/to\", 2);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"brandontwj1"},"content":"        if (dates.length \u003c 2) {","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(MESSAGE_INVALID_EVENT_FORMAT);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"brandontwj1"},"content":"        return dates;","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"brandontwj1"},"content":"    private static String getEventDescription(String[] parts) throws InvalidArgumentException {","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"brandontwj1"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"brandontwj1"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(\"Give your event a description!\");","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"brandontwj1"},"content":"        return description;","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"brandontwj1"},"content":"    private static String[] getEventParts(String arg) throws InvalidArgumentException {","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"brandontwj1"},"content":"        String[] parts \u003d arg.split(\"/from\", 2);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"brandontwj1"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(MESSAGE_INVALID_EVENT_FORMAT);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"brandontwj1"},"content":"        return parts;","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"brandontwj1"},"content":"     * Finds tasks containing the keyword.","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"brandontwj1"},"content":"     * @param keyword The user input keyword.","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"brandontwj1"},"content":"    private String handleFind(String keyword) {","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"brandontwj1"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findMatchingTasks(keyword);","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"brandontwj1"},"content":"        return ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"brandontwj1"},"content":"     * Updates a task with new values based on the provided arguments.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"brandontwj1"},"content":"     * Expects format: \"index /tag newValue\" (e.g., \"1 /desc new description\").","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"brandontwj1"},"content":"     * @param arg The update command arguments containing task index and modifications","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"brandontwj1"},"content":"     * @return Confirmation message showing the updated task","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"brandontwj1"},"content":"     * @throws InvalidArgumentException If arguments are invalid or update fails","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"brandontwj1"},"content":"     * @throws IOException If storage update fails","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"brandontwj1"},"content":"    private String handleUpdate(String arg) throws InvalidArgumentException, IOException {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"brandontwj1"},"content":"        String[] args \u003d parseUpdateArgs(arg);","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"brandontwj1"},"content":"        int taskIndex \u003d extractTaskIndex(args);","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"brandontwj1"},"content":"        return executeUpdateWithRollback(args, taskIndex);","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"brandontwj1"},"content":"    private String[] parseUpdateArgs(String arg) throws InvalidArgumentException {","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"brandontwj1"},"content":"        String[] args \u003d arg.split(\"\\\\s+\");","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"brandontwj1"},"content":"        if (args.length \u003c MIN_UPDATE_ARGS) {","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(MESSAGE_INVALID_UPDATE_COMMAND);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"brandontwj1"},"content":"        return args;","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"brandontwj1"},"content":"    private int extractTaskIndex(String[] args) throws InvalidArgumentException {","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"brandontwj1"},"content":"        return getIndexFromString(args[TASK_INDEX_POSITION], MESSAGE_INVALID_UPDATE_COMMAND);","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"brandontwj1"},"content":"    private String executeUpdateWithRollback(String[] args, int taskIndex) throws InvalidArgumentException, IOException {","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"brandontwj1"},"content":"        Task originalTask \u003d tasks.getTask(taskIndex).copy();","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"brandontwj1"},"content":"        try {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"brandontwj1"},"content":"            applyUpdates(args, taskIndex);","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"brandontwj1"},"content":"            persistUpdatedTask(taskIndex);","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"brandontwj1"},"content":"            return ui.showUpdated(tasks.getTask(taskIndex));","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"brandontwj1"},"content":"        } catch (InvalidArgumentException | IOException e) {","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"brandontwj1"},"content":"            rollbackTask(taskIndex, originalTask);","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"brandontwj1"},"content":"            throw e;","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"brandontwj1"},"content":"    private void applyUpdates(String[] args, int taskIndex) throws InvalidArgumentException {","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"brandontwj1"},"content":"        handleUpdateArgs(args, taskIndex);","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"brandontwj1"},"content":"    private void persistUpdatedTask(int taskIndex) throws IOException {","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"brandontwj1"},"content":"        Task updatedTask \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"brandontwj1"},"content":"        storage.rewriteTask(updatedTask, taskIndex);","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"brandontwj1"},"content":"    private void rollbackTask(int taskIndex, Task originalTask) {","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"brandontwj1"},"content":"        tasks.setTask(taskIndex, originalTask);","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"brandontwj1"},"content":"    private void handleUpdateArgs(String[] args, int index) throws InvalidArgumentException {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"brandontwj1"},"content":"        for (int i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"brandontwj1"},"content":"            checkSufficientUpdateArgs(i, args);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"brandontwj1"},"content":"            switch (args[i]) {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"brandontwj1"},"content":"            case \"/desc\" -\u003e handleUpdateDescription(index, i + 1, args);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"brandontwj1"},"content":"            case \"/by\" -\u003e handleUpdateBy(index, i + 1, args);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"brandontwj1"},"content":"            case \"/from\" -\u003e handleUpdateFrom(index, i + 1, args);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"brandontwj1"},"content":"            case \"/to\" -\u003e handleUpdateTo(index, i + 1, args);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"brandontwj1"},"content":"            default -\u003e {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"brandontwj1"},"content":"                continue;","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"brandontwj1"},"content":"            }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"brandontwj1"},"content":"            }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"brandontwj1"},"content":"    private void checkSufficientUpdateArgs(int index, String[] args) throws InvalidArgumentException {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"brandontwj1"},"content":"        if (isUpdateTag(args[index]) \u0026\u0026 (index + 1 \u003e\u003d args.length)) {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(\"Not enough arguments!\");","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"brandontwj1"},"content":"    private boolean isUpdateTag(String arg) {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"brandontwj1"},"content":"        return arg.equals(\"/desc\") || arg.equals(\"/from\") || arg.equals(\"/to\") || arg.equals(\"/by\");","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"brandontwj1"},"content":"    private void handleUpdateDescription(int taskIndex, int argIndex, String[] args) throws InvalidArgumentException {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"brandontwj1"},"content":"        StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"brandontwj1"},"content":"        while (argIndex \u003c args.length \u0026\u0026 !isUpdateTag(args[argIndex])) {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"brandontwj1"},"content":"            if (args[argIndex].equals(\"/desc\")) {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"brandontwj1"},"content":"                throw new InvalidArgumentException(\"Can\u0027t change the same entry twice!\");","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"brandontwj1"},"content":"            }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"brandontwj1"},"content":"            description.append(args[argIndex]).append(\" \");","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"brandontwj1"},"content":"            argIndex++;","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"brandontwj1"},"content":"        tasks.changeDescription(taskIndex, description.toString().trim());","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"brandontwj1"},"content":"    private String getDateToUpdate(int argIndex, String[] args) throws InvalidArgumentException {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"brandontwj1"},"content":"        if (args.length \u003c\u003d argIndex) {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(\"Not enough arguments!\");","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"brandontwj1"},"content":"        String date \u003d args[argIndex];","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"brandontwj1"},"content":"        if (argIndex + 1 \u003c args.length \u0026\u0026 !isUpdateTag(args[argIndex + 1])) {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"brandontwj1"},"content":"            date \u003d date + \" \" + args[argIndex + 1];","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"brandontwj1"},"content":"        checkValidDateString(date);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"brandontwj1"},"content":"        return date;","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"brandontwj1"},"content":"    private void handleUpdateBy(int taskIndex, int argIndex, String[] args) throws InvalidArgumentException {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"brandontwj1"},"content":"        String date \u003d getDateToUpdate(argIndex, args);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"brandontwj1"},"content":"        tasks.changeBy(taskIndex, date);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"brandontwj1"},"content":"    private void handleUpdateFrom(int taskIndex, int argIndex, String[] args) throws InvalidArgumentException {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"brandontwj1"},"content":"        String date \u003d getDateToUpdate(argIndex, args);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"brandontwj1"},"content":"        tasks.changeFrom(taskIndex, date);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"brandontwj1"},"content":"    private void handleUpdateTo(int taskIndex, int argIndex, String[] args) throws InvalidArgumentException {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"brandontwj1"},"content":"        String date \u003d getDateToUpdate(argIndex, args);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"brandontwj1"},"content":"        tasks.changeTo(taskIndex, date);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"brandontwj1"},"content":"     * Handles user input and executes the corresponding command.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"brandontwj1"},"content":"     * @param input The user input string.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"brandontwj1"},"content":"     * @return Output string reply.","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"brandontwj1"},"content":"    public String handleInput(String input) {","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"brandontwj1"},"content":"        assert input !\u003d null : \"input cannot be null\";","lastModifiedDate":"2025-09-13T00:59:11","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"brandontwj1"},"content":"        String[] parts \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"brandontwj1"},"content":"        String cmd \u003d parts[0];","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"brandontwj1"},"content":"        String arg \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"brandontwj1"},"content":"        return handleCommand(cmd, arg);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"brandontwj1"},"content":"    private String handleCommand(String cmd, String arg) {","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"brandontwj1"},"content":"        try {","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"brandontwj1"},"content":"            return switch (cmd.toLowerCase()) {","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"brandontwj1"},"content":"            case \"list\" -\u003e handleList();","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"brandontwj1"},"content":"            case \"mark\" -\u003e handleMark(arg);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"brandontwj1"},"content":"            case \"unmark\" -\u003e handleUnmark(arg);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"brandontwj1"},"content":"            case \"todo\" -\u003e handleTodo(arg);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"brandontwj1"},"content":"            case \"deadline\" -\u003e handleDeadline(arg);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"brandontwj1"},"content":"            case \"event\" -\u003e handleEvent(arg);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"brandontwj1"},"content":"            case \"delete\" -\u003e handleDelete(arg);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"brandontwj1"},"content":"            case \"find\" -\u003e handleFind(arg);","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"brandontwj1"},"content":"            case \"update\" -\u003e handleUpdate(arg);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"brandontwj1"},"content":"            case \"bye\" -\u003e ui.exit();","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"brandontwj1"},"content":"            default -\u003e ui.showUnknownCommandError();","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"brandontwj1"},"content":"            };","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"brandontwj1"},"content":"        } catch (OmniException e) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"brandontwj1"},"content":"            return e.getUserMessage();","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"brandontwj1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"brandontwj1"},"content":"            return e.getMessage();","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false}],"authorContributionMap":{"brandontwj1":485}},{"path":"src/main/java/omni/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.storage;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T02:04:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"import java.util.List;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"import omni.exceptions.CorruptedFileException;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"import omni.exceptions.OmniException;","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Deadline;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Event;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Task;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Todo;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":" * Handles reading from and writing to the task storage file.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":" * Provides methods to load, update, add, and remove tasks from persistent storage.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"public class Storage {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"    private Path tasksPath;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"     * @param filePath The path to the tasks file.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"    public Storage(Path filePath) {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"        this.tasksPath \u003d filePath;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"     * Loads tasks from the file and returns them as an ArrayList.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"     * @return An ArrayList of tasks loaded from the file.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"     * @throws OmniException If the file is corrupted or cannot be read, or when date format is invalid.","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws OmniException {","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brandontwj1"},"content":"        if (!Files.exists(tasksPath)) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brandontwj1"},"content":"            createTasksFile();","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brandontwj1"},"content":"            return tasks;","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brandontwj1"},"content":"        List\u003cString\u003e lines \u003d getAllLines();","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brandontwj1"},"content":"        for (String line : lines) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brandontwj1"},"content":"            String[] values \u003d getValues(line);","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brandontwj1"},"content":"            String type \u003d values[0].trim();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brandontwj1"},"content":"            String description \u003d values[1].trim();","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brandontwj1"},"content":"            boolean isDone \u003d parseInt(values[2].trim()) !\u003d 0;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brandontwj1"},"content":"            Task taskToAdd \u003d getTaskToAdd(line, type, values, description, isDone);","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brandontwj1"},"content":"            tasks.add(taskToAdd);","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brandontwj1"},"content":"        return tasks;","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brandontwj1"},"content":"    private static Task getTaskToAdd(String line, String type, String[] values, String description, boolean isDone)","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brandontwj1"},"content":"            throws OmniException {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brandontwj1"},"content":"        return switch (type) {","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brandontwj1"},"content":"        case \"T\" -\u003e createTodo(line, values, description, isDone);","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brandontwj1"},"content":"        case \"D\" -\u003e createDeadline(line, values, description, isDone);","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brandontwj1"},"content":"        case \"E\" -\u003e createEvent(line, values, description, isDone);","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brandontwj1"},"content":"        default -\u003e throw new CorruptedFileException(\"Task type not found.\\n\" + line);","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brandontwj1"},"content":"        };","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brandontwj1"},"content":"    private static Event createEvent(String line, String[] values, String description, boolean isDone)","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brandontwj1"},"content":"            throws OmniException {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brandontwj1"},"content":"        if (values.length !\u003d 5) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brandontwj1"},"content":"            throw new CorruptedFileException(\"Entry length for event invalid.\\n\" + line);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brandontwj1"},"content":"        return new Event(description, isDone, values[3].trim(), values[4].trim());","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brandontwj1"},"content":"    private static Deadline createDeadline(String line, String[] values, String description, boolean isDone)","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brandontwj1"},"content":"            throws OmniException {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brandontwj1"},"content":"        if (values.length !\u003d 4) {","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brandontwj1"},"content":"            throw new CorruptedFileException(\"Entry length for deadline invalid.\\n\" + line);","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brandontwj1"},"content":"        return new Deadline(description, isDone, values[3].trim());","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brandontwj1"},"content":"    private static Todo createTodo(String line, String[] values, String description, boolean isDone)","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brandontwj1"},"content":"            throws OmniException {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brandontwj1"},"content":"        if (values.length !\u003d 3) {","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brandontwj1"},"content":"            throw new CorruptedFileException(\"Entry length for todo invalid.\\n\" + line);","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"brandontwj1"},"content":"        return new Todo(description, isDone);","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"brandontwj1"},"content":"    private static String[] getValues(String line) throws CorruptedFileException {","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"brandontwj1"},"content":"        String[] values \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"brandontwj1"},"content":"        if (values.length \u003c 3 || values.length \u003e 5) {","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"brandontwj1"},"content":"            throw new CorruptedFileException(\"Entry length invalid.\\n\" + line);","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"brandontwj1"},"content":"        return values;","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"brandontwj1"},"content":"    private List\u003cString\u003e getAllLines() throws CorruptedFileException {","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"brandontwj1"},"content":"        List\u003cString\u003e lines;","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"brandontwj1"},"content":"        try {","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"brandontwj1"},"content":"            lines \u003d Files.readAllLines(tasksPath);","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"brandontwj1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"brandontwj1"},"content":"            throw new CorruptedFileException(e.getMessage());","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"brandontwj1"},"content":"        return lines;","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"brandontwj1"},"content":"    /** Create file based on the specified tasksPath */","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"brandontwj1"},"content":"    private void createTasksFile() throws CorruptedFileException {","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"brandontwj1"},"content":"        try {","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"brandontwj1"},"content":"            Files.createDirectories(tasksPath.getParent());","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"brandontwj1"},"content":"            Files.createFile(tasksPath);","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"brandontwj1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"brandontwj1"},"content":"            throw new CorruptedFileException(e.getMessage());","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-13T21:24:59","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"brandontwj1"},"content":"     * Rewrites the task at the specified index in the file.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"brandontwj1"},"content":"     * @param task The task to write.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"brandontwj1"},"content":"     * @param index The index of the task to rewrite.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"brandontwj1"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"brandontwj1"},"content":"    public void rewriteTask(Task task, int index) throws IOException {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"brandontwj1"},"content":"        assert task !\u003d null : \"task cannot be null\";","lastModifiedDate":"2025-09-13T00:59:11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"brandontwj1"},"content":"        assert index \u003e\u003d 0 : \"index must be non-negative\";","lastModifiedDate":"2025-09-13T00:59:11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"brandontwj1"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(tasksPath);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"brandontwj1"},"content":"        lines.remove(index);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"brandontwj1"},"content":"        lines.add(index, task.getEntryString());","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"brandontwj1"},"content":"        Files.write(tasksPath, lines);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"brandontwj1"},"content":"     * Appends a new task to the file.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"brandontwj1"},"content":"     * @param task The task to write.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"brandontwj1"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"brandontwj1"},"content":"    public void writeTask(Task task) throws IOException {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"brandontwj1"},"content":"        Files.writeString(tasksPath, task.getEntryString() + \"\\n\", StandardOpenOption.APPEND);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"brandontwj1"},"content":"     * Erases the task at the specified index from the file.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"brandontwj1"},"content":"     * @param index The index of the task to erase.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"brandontwj1"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"brandontwj1"},"content":"    public void eraseTask(int index) throws IOException {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"brandontwj1"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(tasksPath);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"brandontwj1"},"content":"        lines.remove(index);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"brandontwj1"},"content":"        Files.write(tasksPath, lines);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false}],"authorContributionMap":{"brandontwj1":162}},{"path":"src/main/java/omni/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.tasklist;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T02:04:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"import omni.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Deadline;","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Event;","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Task;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T02:04:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":" * Represents a list of tasks and provides methods to manipulate them.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":" * Supports adding, removing, marking, and unmarking tasks.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"public class TaskList {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"     * @param tasks The initial list of tasks.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"    public TaskList() {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"     * @return True if the task list is empty, false otherwise.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brandontwj1"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brandontwj1"},"content":"     * @return The size of the task list.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brandontwj1"},"content":"    public int getSize() {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brandontwj1"},"content":"        return tasks.size();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brandontwj1"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brandontwj1"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brandontwj1"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brandontwj1"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brandontwj1"},"content":"        assert index \u003e\u003d 0 : \"index must be positive\";","lastModifiedDate":"2025-09-13T00:59:11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brandontwj1"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brandontwj1"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brandontwj1"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brandontwj1"},"content":"     * @return The task that was marked as done.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brandontwj1"},"content":"    public Task markTaskDone(int index) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brandontwj1"},"content":"        assert index \u003e\u003d 0 : \"index must be positive\";","lastModifiedDate":"2025-09-13T00:59:11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brandontwj1"},"content":"        Task t \u003d getTask(index);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brandontwj1"},"content":"        t.markDone();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brandontwj1"},"content":"        return t;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brandontwj1"},"content":"     * Marks the task at the specified index as not done.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brandontwj1"},"content":"     * @param index The index of the task to unmark.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brandontwj1"},"content":"     * @return The task that was unmarked.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brandontwj1"},"content":"    public Task unmarkTaskDone(int index) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brandontwj1"},"content":"        assert index \u003e\u003d 0 : \"index must be positive\";","lastModifiedDate":"2025-09-13T00:59:11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brandontwj1"},"content":"        Task t \u003d getTask(index);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brandontwj1"},"content":"        t.unmarkDone();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brandontwj1"},"content":"        return t;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brandontwj1"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"brandontwj1"},"content":"     * @param task The task to add.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"brandontwj1"},"content":"     * @return The added task.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"brandontwj1"},"content":"    public Task addTask(Task task) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"brandontwj1"},"content":"        assert task !\u003d null : \"task cannot be null\";","lastModifiedDate":"2025-09-13T00:59:11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"brandontwj1"},"content":"        tasks.add(task);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"brandontwj1"},"content":"        return task;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"brandontwj1"},"content":"     * Removes the task at the specified index from the list.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"brandontwj1"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"brandontwj1"},"content":"     * @return The removed task.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"brandontwj1"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"brandontwj1"},"content":"        assert index \u003e\u003d 0 : \"index must be positive\";","lastModifiedDate":"2025-09-13T00:59:11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"brandontwj1"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"brandontwj1"},"content":"     * Finds the tasks that contains the keyword provided.","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"brandontwj1"},"content":"     * @param keyword The keyword to find.","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"brandontwj1"},"content":"     * @return The tasks containing the keyword","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"brandontwj1"},"content":"    public ArrayList\u003cTask\u003e findMatchingTasks(String keyword) {","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"brandontwj1"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"brandontwj1"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"brandontwj1"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"brandontwj1"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"brandontwj1"},"content":"            }","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"brandontwj1"},"content":"        return matchingTasks;","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"brandontwj1"},"content":"    public void setTask(int index, Task task) {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"brandontwj1"},"content":"        tasks.set(index, task);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"brandontwj1"},"content":"     * Sets the description of a task at the specified index.","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"brandontwj1"},"content":"    public void changeDescription(int index, String description) {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"brandontwj1"},"content":"        Task taskToSet \u003d tasks.get(index);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"brandontwj1"},"content":"        taskToSet.setDescription(description);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"brandontwj1"},"content":"     * Changes the deadline date of the task at the specified index.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"brandontwj1"},"content":"     * The task must be a Deadline task for this operation to succeed.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"brandontwj1"},"content":"     * @param index The index of the task to update.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"brandontwj1"},"content":"     * @param by The new deadline date string.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"brandontwj1"},"content":"     * @throws InvalidArgumentException If the task is not a Deadline task.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"brandontwj1"},"content":"    public void changeBy(int index, String by) throws InvalidArgumentException {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"brandontwj1"},"content":"        Task taskToSet \u003d tasks.get(index);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"brandontwj1"},"content":"        if (!(taskToSet instanceof Deadline deadlineTask)) {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(\"Task is not a deadline!\");","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"brandontwj1"},"content":"        deadlineTask.setDeadline(by);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"brandontwj1"},"content":"     * Changes the start date of the task at the specified index.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"brandontwj1"},"content":"     * The task must be an Event task for this operation to succeed.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"brandontwj1"},"content":"     * @param index The index of the task to update.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"brandontwj1"},"content":"     * @param from The new start date string.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"brandontwj1"},"content":"     * @throws InvalidArgumentException If the task is not an Event task.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"brandontwj1"},"content":"    public void changeFrom(int index, String from) throws InvalidArgumentException {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"brandontwj1"},"content":"        Task taskToSet \u003d tasks.get(index);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"brandontwj1"},"content":"        if (!(taskToSet instanceof Event eventTask)) {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(\"Task is not an Event!\");","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"brandontwj1"},"content":"        eventTask.setStart(from);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"brandontwj1"},"content":"     * Changes the end date of the task at the specified index.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"brandontwj1"},"content":"     * The task must be an Event task for this operation to succeed.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"brandontwj1"},"content":"     * @param index The index of the task to update.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"brandontwj1"},"content":"     * @param to The new end date string.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"brandontwj1"},"content":"     * @throws InvalidArgumentException If the task is not an Event task.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"brandontwj1"},"content":"    public void changeTo(int index, String to) throws InvalidArgumentException {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"brandontwj1"},"content":"        Task taskToSet \u003d tasks.get(index);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"brandontwj1"},"content":"        if (!(taskToSet instanceof Event eventTask)) {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(\"Task is not an Event!\");","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"brandontwj1"},"content":"        eventTask.setEnd(to);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false}],"authorContributionMap":{"brandontwj1":190}},{"path":"src/main/java/omni/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.tasks;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T02:04:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"import omni.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"import omni.parser.Parser;","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":" * Represents a deadline task with a specific due date and optional time.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":" * Extends the base Task class to include deadline-specific functionality.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-25T00:44:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"    private static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"    protected LocalDate date;","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"    protected LocalTime time;","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-25T00:44:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"     * Constructs a Deadline task with the specified description, completion status, and deadline.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"     * @param description The task description.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"     * @param isDone Whether the task is completed.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"     * @param deadline The deadline string in format \"dd-MM-yyyy\" or \"dd-MM-yyyy HHmm\".","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"    public Deadline(String description, boolean isDone, String deadline) throws InvalidArgumentException {","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-29T12:18:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"        this.date \u003d Parser.parseDateFromDateTime(deadline);","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"        this.time \u003d Parser.parseTimeFromDateTime(deadline);","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"     *  * Creates a copy of the given Deadline object.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"     * @param other The Deadline object to copy.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"    public Deadline(Deadline other) {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"        super(other);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"        this.date \u003d other.date;","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"        this.time \u003d other.time;","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brandontwj1"},"content":"    @Override","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brandontwj1"},"content":"    public Deadline copy() {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brandontwj1"},"content":"        return new Deadline(this);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brandontwj1"},"content":"     * Returns the deadline as a formatted string.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brandontwj1"},"content":"     * @return The deadline string in the original format.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brandontwj1"},"content":"    public String getDeadlineString() {","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brandontwj1"},"content":"        String dateTimeString \u003d this.date.format(DATE_FORMATTER);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brandontwj1"},"content":"        if (this.time !\u003d null) {","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brandontwj1"},"content":"            dateTimeString \u003d dateTimeString + \" \" + this.time.format(TIME_FORMATTER);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-08-29T23:08:30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brandontwj1"},"content":"        return dateTimeString;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brandontwj1"},"content":"    @Override","lastModifiedDate":"2025-08-29T23:08:30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brandontwj1"},"content":"    public String getEntryString() {","lastModifiedDate":"2025-08-29T23:08:30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brandontwj1"},"content":"        String done \u003d this.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2025-08-29T23:08:30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brandontwj1"},"content":"        String dateTimeString \u003d getDeadlineString();","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brandontwj1"},"content":"        return \"D | \" + this.getDescription() + \" | \" + done + \" | \" + dateTimeString;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-29T23:08:30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-29T23:08:30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brandontwj1"},"content":"    public void setDeadline(String deadline) throws InvalidArgumentException {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brandontwj1"},"content":"        this.date \u003d Parser.parseDateFromDateTime(deadline);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brandontwj1"},"content":"        this.time \u003d Parser.parseTimeFromDateTime(deadline);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brandontwj1"},"content":"    @Override","lastModifiedDate":"2025-08-25T00:44:16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brandontwj1"},"content":"    public String toString() {","lastModifiedDate":"2025-08-25T00:44:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brandontwj1"},"content":"        String dateTimeString \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brandontwj1"},"content":"        if (time !\u003d null) {","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brandontwj1"},"content":"            dateTimeString \u003d dateTimeString + \" \" + time.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brandontwj1"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dateTimeString + \")\";","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-25T00:44:16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-08-25T00:44:16","isFullCredit":false}],"authorContributionMap":{"brandontwj1":85}},{"path":"src/main/java/omni/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.tasks;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"import omni.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"import omni.parser.Parser;","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":" * Represents an event task with start and end dates and optional times.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":" * Extends the base Task class to include event-specific functionality with duration.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"public class Event extends Task {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"    private static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"    protected LocalDate startDate;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"    protected LocalTime startTime;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"    protected LocalTime endTime;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"     * Constructs an Event task with the specified description, completion status, start and end times.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"     * @param description The task description.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"     * @param isDone Whether the task is completed.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"     * @param start The start date and time string in format \"dd-MM-yyyy\" or \"dd-MM-yyyy HHmm\".","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"     * @param end The end date and time string in format \"dd-MM-yyyy\" or \"dd-MM-yyyy HHmm\".","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"    public Event(String description, boolean isDone, String start, String end) throws InvalidArgumentException {","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"        super(description, isDone);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"        this.startDate \u003d Parser.parseDateFromDateTime(start);","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"        this.startTime \u003d Parser.parseTimeFromDateTime(start);","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"        this.endDate \u003d Parser.parseDateFromDateTime(end);","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"        this.endTime \u003d Parser.parseTimeFromDateTime(end);","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"     * Creates a copy of the given Event object.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"     * @param other The Event object to copy.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brandontwj1"},"content":"    public Event(Event other) {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brandontwj1"},"content":"        super(other);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brandontwj1"},"content":"        this.startDate \u003d other.startDate;","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brandontwj1"},"content":"        this.startTime \u003d other.startTime;","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brandontwj1"},"content":"        this.endDate \u003d other.endDate;","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brandontwj1"},"content":"        this.endTime \u003d other.endTime;","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brandontwj1"},"content":"    @Override","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brandontwj1"},"content":"    public Event copy() {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brandontwj1"},"content":"        return new Event(this);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brandontwj1"},"content":"     * Returns the start date and time as a formatted string.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brandontwj1"},"content":"     * @return The start date and time string in the original format.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brandontwj1"},"content":"    public String getStartString() {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brandontwj1"},"content":"        String dateAndTime \u003d this.startDate.format(DATE_FORMATTER);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brandontwj1"},"content":"        if (this.startTime !\u003d null) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brandontwj1"},"content":"            dateAndTime \u003d dateAndTime + \" \" + this.startTime.format(TIME_FORMATTER);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brandontwj1"},"content":"        return dateAndTime;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brandontwj1"},"content":"    public void setStart(String start) throws InvalidArgumentException {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brandontwj1"},"content":"        this.startDate \u003d Parser.parseDateFromDateTime(start);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brandontwj1"},"content":"        this.startTime \u003d Parser.parseTimeFromDateTime(start);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brandontwj1"},"content":"     * Returns the end date and time as a formatted string.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brandontwj1"},"content":"     * @return The end date and time string in the original format.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brandontwj1"},"content":"    public String getEndString() {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brandontwj1"},"content":"        String dateAndTime \u003d this.endDate.format(DATE_FORMATTER);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brandontwj1"},"content":"        if (this.endTime !\u003d null) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brandontwj1"},"content":"            dateAndTime \u003d dateAndTime + \" \" + this.endTime.format(TIME_FORMATTER);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brandontwj1"},"content":"        return dateAndTime;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brandontwj1"},"content":"    @Override","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brandontwj1"},"content":"    public String getEntryString() {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brandontwj1"},"content":"        String done \u003d this.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brandontwj1"},"content":"        return \"E | \" + this.getDescription() + \" | \" + done + \" | \" + getStartString() + \" | \" + getEndString();","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"brandontwj1"},"content":"    public void setEnd(String end) throws InvalidArgumentException {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"brandontwj1"},"content":"        this.endDate \u003d Parser.parseDateFromDateTime(end);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"brandontwj1"},"content":"        this.endTime \u003d Parser.parseTimeFromDateTime(end);","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"brandontwj1"},"content":"    @Override","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"brandontwj1"},"content":"    public String toString() {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"brandontwj1"},"content":"        String startDateAndTime \u003d startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"brandontwj1"},"content":"        if (startTime !\u003d null) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"brandontwj1"},"content":"            startDateAndTime \u003d startDateAndTime + \" \" + startTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"brandontwj1"},"content":"        String endDateAndTime \u003d endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"brandontwj1"},"content":"        if (endTime !\u003d null) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"brandontwj1"},"content":"            endDateAndTime \u003d endDateAndTime + \" \" + endTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"brandontwj1"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startDateAndTime + \" to: \" + endDateAndTime + \")\";","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false}],"authorContributionMap":{"brandontwj1":112}},{"path":"src/main/java/omni/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.tasks;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T02:04:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":" * Serves as the base class for all task types in the Omni task management system.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"public class Task {","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"    protected String description;","lastModifiedDate":"2025-08-25T01:00:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-25T01:00:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"     * Constructs a Task with the specified description and completion status.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"     * @param description The task description.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"     * @param isDone Whether the task is completed.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-08-29T12:18:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-08-29T12:18:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"     * Copy constructor for creating a deep copy of another Task.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"     * @param other The Task to copy.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"    public Task(Task other) {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"        this.description \u003d other.description;","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"        this.isDone \u003d other.isDone;","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"     * Creates and returns a copy of this Task.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"     * @return Copy of the current instance.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"    public Task copy() {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"        return new Task(this);","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"     * Marks this task as done.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brandontwj1"},"content":"    public void markDone() {","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brandontwj1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-25T00:10:11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brandontwj1"},"content":"     * Marks this task as not done.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brandontwj1"},"content":"    public void unmarkDone() {","lastModifiedDate":"2025-08-24T23:02:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brandontwj1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-25T00:10:11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brandontwj1"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brandontwj1"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brandontwj1"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-08-24T23:02:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brandontwj1"},"content":"        return this.isDone;","lastModifiedDate":"2025-08-25T00:10:11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-25T00:10:11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-25T00:10:11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brandontwj1"},"content":"     * Returns the status icon representing the completion status of the task.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brandontwj1"},"content":"     * @return \"X\" if the task is done, \" \" otherwise.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brandontwj1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-25T00:10:11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brandontwj1"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2025-08-25T00:10:11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-24T23:02:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-24T23:02:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brandontwj1"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brandontwj1"},"content":"     * @return The task description.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brandontwj1"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-29T22:25:25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brandontwj1"},"content":"        return this.description;","lastModifiedDate":"2025-08-29T22:25:25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-29T22:25:25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-29T22:25:25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brandontwj1"},"content":"     * Returns the entry string representation for file storage.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brandontwj1"},"content":"     * @return The formatted string for saving to file.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brandontwj1"},"content":"    public String getEntryString() {","lastModifiedDate":"2025-08-29T23:08:30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brandontwj1"},"content":"        String done \u003d this.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2025-08-29T23:08:30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brandontwj1"},"content":"        return \"T | \" + this.getDescription() + \" | \" + done;","lastModifiedDate":"2025-08-29T23:22:42","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-29T23:08:30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-29T23:08:30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"brandontwj1"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"brandontwj1"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"brandontwj1"},"content":"     * Returns the string representation of this task for display.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"brandontwj1"},"content":"     * @return the formatted task string for display","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"brandontwj1"},"content":"    @Override","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"brandontwj1"},"content":"    public String toString() {","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"brandontwj1"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-08-25T01:00:12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false}],"authorContributionMap":{"brandontwj1":107}},{"path":"src/main/java/omni/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.tasks;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T02:04:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":" * Represents a simple todo task without any date or time constraints.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":" * Extends the base Task class with basic todo functionality.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-25T00:45:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-25T00:44:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"     * Constructs a Todo task with the specified description and completion status.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"     * @param description The task description.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"     * @param isDone Whether the task is completed.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2025-08-29T12:18:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-29T12:18:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-25T00:45:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-25T00:45:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"    @Override","lastModifiedDate":"2025-08-25T00:45:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"    public String toString() {","lastModifiedDate":"2025-08-25T00:45:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-25T00:45:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-25T00:45:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-08-25T00:44:16","isFullCredit":false}],"authorContributionMap":{"brandontwj1":25}},{"path":"src/main/java/omni/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.ui;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"import omni.tasklist.TaskList;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Task;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T02:04:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":" * Handles user interface interactions and displays messages to the user.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":" * Provides methods to show various types of feedback including greetings, errors,","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":" * task status updates, and formatted task lists.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"public class Ui {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"    private static final String INDENT \u003d \"    \";","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"     * Constructs a new Ui object.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"    public Ui() {}","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"     * Displays a greeting message to the user.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"     * @return The greeting message string.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"    public String greet() {","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"        return \"Helloo! I\u0027m Omni!\\n\"","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"                + \"What can I do for you?\\n\";","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"     * Displays an exit message to the user.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"     * @return The exit message string.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"    public String exit() {","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"        return \"Byeee! See you in a bit!\";","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"     * Displays a loading error message.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brandontwj1"},"content":"     * @param errorMessage The loading error message to display.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brandontwj1"},"content":"    public void showLoadingError(String errorMessage) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brandontwj1"},"content":"        System.out.println(\"Error creating tasks.txt file: \" + errorMessage);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brandontwj1"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brandontwj1"},"content":"     * @param tasks The task list to display.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brandontwj1"},"content":"     * @return String representation of the task list.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brandontwj1"},"content":"    public String showTasks(TaskList tasks) {","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brandontwj1"},"content":"        assert tasks !\u003d null : \"tasks cannot be null\";","lastModifiedDate":"2025-09-13T00:59:11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brandontwj1"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brandontwj1"},"content":"            return \"You have no tasks... Add one!\";","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brandontwj1"},"content":"        StringBuilder reply \u003d new StringBuilder(\"Here are the tasks you\u0027ve added:\\n\");","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brandontwj1"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brandontwj1"},"content":"            Task t \u003d tasks.getTask(i);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brandontwj1"},"content":"            reply.append(String.format(\"    %d.%s\\n\", i + 1, t));","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brandontwj1"},"content":"        return reply.toString();","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brandontwj1"},"content":"     * Returns a confirmation message when a task is marked as done.","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brandontwj1"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brandontwj1"},"content":"     * @return Confirmation message string.","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brandontwj1"},"content":"    public String showMarked(Task task) {","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brandontwj1"},"content":"        assert task !\u003d null : \"task cannot be null\";","lastModifiedDate":"2025-09-13T00:59:11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brandontwj1"},"content":"        return \"Congrats! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brandontwj1"},"content":"                + \"  \" + task;","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brandontwj1"},"content":"     * Displays a confirmation message when a task is unmarked.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brandontwj1"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brandontwj1"},"content":"     * @return Confirmation message string.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brandontwj1"},"content":"    public String showUnmarked(Task task) {","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brandontwj1"},"content":"        assert task !\u003d null : \"task cannot be null\";","lastModifiedDate":"2025-09-13T00:59:11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brandontwj1"},"content":"        return \"Sure thing, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brandontwj1"},"content":"                + \"  \" + task;","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"brandontwj1"},"content":"     * Displays a confirmation message when a task is added.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"brandontwj1"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"brandontwj1"},"content":"     * @param tasks The updated task list.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"brandontwj1"},"content":"     * @return Confirmation message string with task count.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"brandontwj1"},"content":"    public String showAdded(Task task, TaskList tasks) {","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"brandontwj1"},"content":"        assert task !\u003d null : \"task cannot be null\";","lastModifiedDate":"2025-09-13T00:59:11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"brandontwj1"},"content":"        assert tasks !\u003d null : \"tasks cannot be null\";","lastModifiedDate":"2025-09-13T00:59:11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"brandontwj1"},"content":"        String taskStr \u003d tasks.getSize() \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"brandontwj1"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"brandontwj1"},"content":"                + \"  \" + task + \"\\n\"","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"brandontwj1"},"content":"                + \"Now you have \" + tasks.getSize() + \" \" + taskStr + \" in the list.\";","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"brandontwj1"},"content":"     * Displays a confirmation message when a task is deleted.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"brandontwj1"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"brandontwj1"},"content":"     * @return Confirmation message string.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"brandontwj1"},"content":"    public String showErased(Task task) {","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"brandontwj1"},"content":"        assert task !\u003d null : \"task cannot be null\";","lastModifiedDate":"2025-09-13T00:59:11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"brandontwj1"},"content":"        return \"Gotchu, I\u0027ve deleted this task for you:\\n\"","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"brandontwj1"},"content":"                + \"  \" + task;","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"brandontwj1"},"content":"     * Displays an error message when a command is not recognised.","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"brandontwj1"},"content":"     * @return Error message string.","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"brandontwj1"},"content":"    public String showUnknownCommandError() {","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"brandontwj1"},"content":"        return \"I can\u0027t lie I have no idea what that means...\";","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T17:24:16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"brandontwj1"},"content":"     * Displays the matching tasks with a given keyword.","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"brandontwj1"},"content":"     * @param matchingTasks The tasks that contain the given keyword.","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"brandontwj1"},"content":"     * @return String representation of matching tasks or message if none found.","lastModifiedDate":"2025-09-08T17:03:33","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"brandontwj1"},"content":"    public String showMatchingTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"brandontwj1"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"brandontwj1"},"content":"            return \"No tasks containing that keyword. Try another one!\";","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"brandontwj1"},"content":"        StringBuilder reply \u003d getReply(matchingTasks);","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"brandontwj1"},"content":"        return reply.toString();","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"brandontwj1"},"content":"    private static StringBuilder getReply(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"brandontwj1"},"content":"        StringBuilder reply \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"brandontwj1"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"brandontwj1"},"content":"            Task t \u003d matchingTasks.get(i);","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"brandontwj1"},"content":"            reply.append(String.format(\"    %d.%s\\n\", i + 1, t));","lastModifiedDate":"2025-09-08T16:28:22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"brandontwj1"},"content":"        return reply;","lastModifiedDate":"2025-09-13T22:32:35","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"brandontwj1"},"content":"     * Shows a confirmation message when a task has been updated.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"brandontwj1"},"content":"     * @param updatedTask The task that was updated.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"brandontwj1"},"content":"     * @return The formatted confirmation message.","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"brandontwj1"},"content":"    public String showUpdated(Task updatedTask) {","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"brandontwj1"},"content":"        return \"Alrighty, I\u0027ve updated this task for you:\\n\"","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"brandontwj1"},"content":"                + \"  \" + updatedTask;","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-20T00:10:14","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false}],"authorContributionMap":{"brandontwj1":165}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false}],"authorContributionMap":{"brandontwj1":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"            fx:controller\u003d\"omni.app.MainWindow\"\u003e \u003c!-- change to fit package e.g. seedu,duke.MainWindow --\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-08T15:51:43","isFullCredit":false}],"authorContributionMap":{"brandontwj1":43}},{"path":"src/test/java/omni/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.parser;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"import omni.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":" * Test class for the Parser component.","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":" * Contains unit tests to verify the functionality of date string validation.","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"public class ParserTest {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"     * Tests the checkValidDateString method with valid date formats.","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"     * Verifies that both \"dd-MM-yyyy\" and \"dd-MM-yyyy HHmm\" formats are accepted.","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"     * @throws Exception If any unexpected error occurs during testing.","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"    @Test","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"    public void checkValidDateString_success() throws Exception {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"        assertTrue(Parser.checkValidDateString(\"01-01-2025\"));","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"        assertTrue(Parser.checkValidDateString(\"01-01-2025 1400\"));","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"     * Tests the checkValidDateString method with invalid date formats.","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"     * Verifies that InvalidArgumentException is thrown for incorrect formats.","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"    @Test","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"    public void checkInvalidDateString_success() {","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"        InvalidArgumentException e1 \u003d assertThrows(InvalidArgumentException.class, () -\u003e","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"                Parser.checkValidDateString(\"01/01/2025\"));","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"        InvalidArgumentException e2 \u003d assertThrows(InvalidArgumentException.class, () -\u003e","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"                Parser.checkValidDateString(\"01-01-2025 14:00\"));","lastModifiedDate":"2025-09-20T01:07:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"        assertTrue(e1.getMessage().contains(\"Invalid date format!\"));","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"        assertTrue(e2.getMessage().contains(\"Invalid date format!\"));","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false}],"authorContributionMap":{"brandontwj1":44}},{"path":"src/test/java/omni/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.storage;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"import omni.exceptions.CorruptedFileException;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Deadline;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Event;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Task;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Todo;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":" * Test class for the Storage component.","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":" * Contains unit tests to verify the functionality of task loading from files.","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"public class StorageTest {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"     * Tests the loadTasks method with a regular file containing valid task data.","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"     * Verifies that tasks are loaded correctly and match expected format.","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"     * @throws Exception If any unexpected error occurs during testing.","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"    @Test","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"    public void loadTasks_regular_success() throws Exception {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"        Path path \u003d Paths.get(\"src\", \"test\", \"java\", \"omni\", \"storage\", \"loadTasksTest.txt\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"        tasks.add(new Todo(\"todo\", true));","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"        tasks.add(new Deadline(\"deadline\", false, \"01-01-2025\"));","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"        tasks.add(new Event(\"event\", true, \"01-01-2025\", \"02-02-2025\"));","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"        assertEquals(tasks.toString(), new Storage(path).loadTasks().toString());","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"     * Tests the loadTasks method with a file containing incorrect task type.","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brandontwj1"},"content":"     * Verifies that CorruptedFileException is thrown when task type is invalid.","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brandontwj1"},"content":"     * @throws Exception If any unexpected error occurs during testing.","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brandontwj1"},"content":"    @Test","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brandontwj1"},"content":"    public void loadTasks_incorrectType_exceptionThrown() throws Exception {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brandontwj1"},"content":"        Path path \u003d Paths.get(\"src\", \"test\", \"java\", \"omni\", \"storage\", \"incorrectTypeTest.txt\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brandontwj1"},"content":"        CorruptedFileException exception \u003d assertThrows(CorruptedFileException.class, () -\u003e {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brandontwj1"},"content":"            new Storage(path).loadTasks();","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brandontwj1"},"content":"        });","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brandontwj1"},"content":"        assertTrue(exception.getMessage().contains(\"Task type not found.\"));","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brandontwj1"},"content":"     * Tests the loadTasks method with files containing incorrect entry lengths.","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brandontwj1"},"content":"     * Verifies that CorruptedFileException is thrown for various invalid entry formats.","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brandontwj1"},"content":"     * @throws Exception If any unexpected error occurs during testing.","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-04T13:24:55","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brandontwj1"},"content":"    @Test","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brandontwj1"},"content":"    public void loadTasks_incorrectLength_exceptionThrown() throws Exception {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brandontwj1"},"content":"        Path path1 \u003d Paths.get(\"src\", \"test\", \"java\", \"omni\", \"storage\", \"incorrectLengthTest.txt\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brandontwj1"},"content":"        CorruptedFileException exception1 \u003d assertThrows(CorruptedFileException.class, () -\u003e {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brandontwj1"},"content":"            new Storage(path1).loadTasks();","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brandontwj1"},"content":"        });","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brandontwj1"},"content":"        assertTrue(exception1.getMessage().contains(\"Entry length invalid.\"));","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brandontwj1"},"content":"        Path path2 \u003d Paths.get(\"src\", \"test\", \"java\", \"omni\", \"storage\", \"incorrectTodoLengthTest.txt\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brandontwj1"},"content":"        CorruptedFileException exception2 \u003d assertThrows(CorruptedFileException.class, () -\u003e {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brandontwj1"},"content":"            new Storage(path2).loadTasks();","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brandontwj1"},"content":"        });","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brandontwj1"},"content":"        assertTrue(exception2.getMessage().contains(\"Entry length for todo invalid.\"));","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brandontwj1"},"content":"        Path path3 \u003d Paths.get(\"src\", \"test\", \"java\", \"omni\", \"storage\", \"incorrectDeadlineLengthTest.txt\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brandontwj1"},"content":"        CorruptedFileException exception3 \u003d assertThrows(CorruptedFileException.class, () -\u003e {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brandontwj1"},"content":"            new Storage(path3).loadTasks();","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brandontwj1"},"content":"        });","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brandontwj1"},"content":"        assertTrue(exception3.getMessage().contains(\"Entry length for deadline invalid.\"));","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brandontwj1"},"content":"        Path path4 \u003d Paths.get(\"src\", \"test\", \"java\", \"omni\", \"storage\", \"incorrectEventLengthTest.txt\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brandontwj1"},"content":"        CorruptedFileException exception4 \u003d assertThrows(CorruptedFileException.class, () -\u003e {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brandontwj1"},"content":"            new Storage(path4).loadTasks();","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brandontwj1"},"content":"        });","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brandontwj1"},"content":"        assertTrue(exception4.getMessage().contains(\"Entry length for event invalid.\"));","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false}],"authorContributionMap":{"brandontwj1":92}},{"path":"src/test/java/omni/storage/incorrectDeadlineLengthTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"T | todo | 1","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"D | deadline | 0","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"E | event | 1 | 01-01-2025 | 02-02-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false}],"authorContributionMap":{"brandontwj1":3}},{"path":"src/test/java/omni/storage/incorrectEventLengthTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"T | todo | 1","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"D | deadline | 0 | 01-01-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"E | event | 1 | 01-01-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false}],"authorContributionMap":{"brandontwj1":3}},{"path":"src/test/java/omni/storage/incorrectLengthTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"T | todo | 1","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"D | deadline | 0 | 01-01-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"E | event | 1 | 01-01-2025 | 02-02-2025 | 03-03-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false}],"authorContributionMap":{"brandontwj1":3}},{"path":"src/test/java/omni/storage/incorrectTodoLengthTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"T | todo | 1 | 01-01-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"D | deadline | 0 | 01-01-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"E | event | 1 | 01-01-2025 | 02-02-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false}],"authorContributionMap":{"brandontwj1":3}},{"path":"src/test/java/omni/storage/incorrectTypeTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"T | todo | 1","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"G | deadline | 0 | 01-01-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"E | event | 1 | 01-01-2025 | 02-02-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false}],"authorContributionMap":{"brandontwj1":3}},{"path":"src/test/java/omni/storage/loadTasksTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"T | todo | 1","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"D | deadline | 0 | 01-01-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"E | event | 1 | 01-01-2025 | 02-02-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false}],"authorContributionMap":{"brandontwj1":3}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"T | make lunch | 0","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"D | do homework | 1 | 01-01-2025 1200","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"E | project meeting | 1 | 01-01-2025 1400 | 01-01-2025 1800","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"T | buy concert tickets | 1","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"T | make lunch | 1","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"D | do homework | 0 | 01-01-2025 1200","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"E | project meeting | 0 | 01-01-2025 1400 | 01-01-2025 1800","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"T | buy concert tickets | 0","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"T | make lunch | 0","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"D | do homework | 0 | 01-01-2025 1200","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"E | project meeting | 0 | 01-01-2025 1400 | 01-01-2025 1800","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"T | buy concert tickets | 0","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"T | make lunch | 0","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"D | do homework | 0 | 01-01-2025 1200","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"E | project meeting | 0 | 01-01-2025 1400 | 01-01-2025 1800","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"T | buy concert tickets | 0","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"T | make lunch | 0","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"D | do homework | 0 | 01-01-2025 1200","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"E | project meeting | 0 | 01-01-2025 1400 | 01-01-2025 1800","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"T | buy concert tickets | 0","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"T | make lunch | 0","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"D | do homework | 0 | 01-01-2025 1200","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"E | project meeting | 0 | 01-01-2025 1400 | 01-01-2025 1800","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"T | buy concert tickets | 0","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false}],"authorContributionMap":{"brandontwj1":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"list","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"hi","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"todo","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"todo make lunch","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"deadline","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"deadline do homework by tuesday 12pm","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"deadline do homework /by tuesday 12pm","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"deadline do homework /by 01-01-2025 12:00","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"deadline do homework /by 01-01-2025 1200","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"event","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"event project meeting /from 01-01-2025 1400","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"event project meeting /to 01-01-2025 1800","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"event project meeting /from 01-01-2025 1400 /to 01-01-2025 1800","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"todo buy concert tickets","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"mark","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"mark 2","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"mark 6","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"mark 4","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"list","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"unmark","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"unmark 78","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"unmark 2","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"list","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"delete","lastModifiedDate":"2025-08-25T13:37:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"delete 2","lastModifiedDate":"2025-08-25T13:37:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"list","lastModifiedDate":"2025-08-25T13:37:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"bye","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false}],"authorContributionMap":{"brandontwj1":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"java -classpath ..\\bin Omni \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"-":20,"brandontwj1":1}}]
