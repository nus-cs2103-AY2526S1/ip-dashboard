[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"    mainClass.set(\"omni.Omni\")","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"    archiveBaseName \u003d \"omni\"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"    archiveFileName \u003d \u0027omni.jar\u0027","lastModifiedDate":"2025-09-02T18:08:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"-":39,"brandontwj1":3}},{"path":"coding-standard.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"# CS2103T Java Coding Standard (Basic + Intermediate)","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"\u003e Use the Google Java style guide for any topics not covered in this document.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"**Legend:** ⭐ basic rule | ⭐⭐ intermediate rule | ⭐⭐⭐ advanced rule","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"## Naming","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"### ⭐ Package Names","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"Names representing packages should be in all lower case.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"**For school projects:** The root name of the package should be your group name or project name followed by logical group names.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"// Good","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"todobuddy.ui","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"todobuddy.file","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"com.company.application.ui","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"// Bad - Do not use edu.nus.comp.* or similar","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"edu.nus.comp.cs2103t.todobuddy","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"**Rationale:** Your code is not officially \u0027produced by NUS\u0027, therefore do not use `edu.nus.comp.*` or anything similar.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"### ⭐ Class and Enum Names","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"Class/enum names must be nouns and written in **PascalCase**.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"// Good","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"Line, AudioSystem, TodoItem, TaskManager","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"### ⭐ Variable Names","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"Variable names must be in **camelCase**.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"// Good","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"line, audioSystem, todoItem, taskManager","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"### ⭐ Constant Names","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"Constant names must be all uppercase using underscore to separate words (**SCREAMING_SNAKE_CASE**).","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brandontwj1"},"content":"// Good","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brandontwj1"},"content":"MAX_ITERATIONS, COLOR_RED, DEFAULT_TIMEOUT","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brandontwj1"},"content":"To find what exactly are considered constants, refer to the Google Java Style Guide.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brandontwj1"},"content":"### ⭐ Method Names","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brandontwj1"},"content":"Names representing methods must be verbs and written in **camelCase**.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brandontwj1"},"content":"// Good","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brandontwj1"},"content":"getName(), computeTotalWidth(), processData()","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brandontwj1"},"content":"**For test method names:** Underscores may be used in the following three-part format:","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brandontwj1"},"content":"`featureUnderTest_testScenario_expectedBehavior()`","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brandontwj1"},"content":"// Examples","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brandontwj1"},"content":"sortList_emptyList_exceptionThrown()","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brandontwj1"},"content":"getMember_memberNotFound_nullReturned()","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brandontwj1"},"content":"sortList_emptyList()  // Third part omitted","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brandontwj1"},"content":"sortList()           // Both second and third parts omitted","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brandontwj1"},"content":"### ⭐⭐ Abbreviations and Acronyms","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brandontwj1"},"content":"Abbreviations and acronyms should not be uppercase when used as a part of a name.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brandontwj1"},"content":"// Good","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brandontwj1"},"content":"exportHtmlSource();","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brandontwj1"},"content":"openDvdPlayer();","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brandontwj1"},"content":"// Bad","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brandontwj1"},"content":"exportHTMLSource();","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brandontwj1"},"content":"openDVDPlayer();","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brandontwj1"},"content":"### ⭐ English Language","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brandontwj1"},"content":"All names should be written in English.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brandontwj1"},"content":"**Rationale:** The code is meant for an international audience.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brandontwj1"},"content":"### ⭐⭐ Scope-Based Naming","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brandontwj1"},"content":"Variables with a large scope should have long names, variables with a small scope can have short names.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brandontwj1"},"content":"Scratch variables used for temporary storage or indices can be kept short. Common scratch variables:","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brandontwj1"},"content":"- For integers: `i, j, k, m, n`","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"brandontwj1"},"content":"- For characters: `c, d`","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"brandontwj1"},"content":"**Rationale:** When the scope is small, the reader does not have to remember it for long.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"brandontwj1"},"content":"### ⭐ Boolean Naming","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"brandontwj1"},"content":"Boolean variables/methods should be named to sound like booleans.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"brandontwj1"},"content":"// Variables","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"brandontwj1"},"content":"isSet, isVisible, isFinished, isFound, isOpen, hasData, wasOpen","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"brandontwj1"},"content":"// Methods","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"brandontwj1"},"content":"boolean hasLicense();","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"brandontwj1"},"content":"boolean canEvaluate();","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"brandontwj1"},"content":"boolean shouldAbort \u003d false;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"brandontwj1"},"content":"Use prefixes such as `is`, `has`, `was`, etc. for boolean variable/method names.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"brandontwj1"},"content":"**Setter methods for boolean variables:**","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"brandontwj1"},"content":"void setFound(boolean isFound);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"brandontwj1"},"content":"**Rationale:** This makes the code read like normal English, e.g., `if(isOpen) ...`","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"brandontwj1"},"content":"### ⭐ Collection Names","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"brandontwj1"},"content":"Plural form should be used on names representing a collection of objects.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"brandontwj1"},"content":"// Good","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"brandontwj1"},"content":"Collection\u003cPoint\u003e points;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"brandontwj1"},"content":"int[] values;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"brandontwj1"},"content":"**Rationale:** Enhances readability since the name gives the user an immediate clue of the type of the variable.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"brandontwj1"},"content":"### ⭐ Iterator Variables","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"brandontwj1"},"content":"Iterator variables can be called `i, j, k` etc.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"brandontwj1"},"content":"for (Iterator i \u003d points.iterator(); i.hasNext(); ) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"brandontwj1"},"content":"    // ...","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"brandontwj1"},"content":"for (int i \u003d 0; i \u003c nTables; i++) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"brandontwj1"},"content":"    // ...","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"brandontwj1"},"content":"Variables named `j, k` etc. should be used for nested loops only.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"brandontwj1"},"content":"**Rationale:** The notation is taken from mathematics where it is an established convention.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"brandontwj1"},"content":"### ⭐⭐ Associated Constants","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"brandontwj1"},"content":"Associated constants should have a common prefix.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"brandontwj1"},"content":"static final int COLOR_RED \u003d 1;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"brandontwj1"},"content":"static final int COLOR_GREEN \u003d 2;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"brandontwj1"},"content":"static final int COLOR_BLUE \u003d 3;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"brandontwj1"},"content":"**Rationale:** This indicates that they belong together and makes them appear together when sorted alphabetically.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"brandontwj1"},"content":"## Layout","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"brandontwj1"},"content":"### ⭐ Indentation","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"brandontwj1"},"content":"Basic indentation should be **4 spaces** (not tabs).","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"brandontwj1"},"content":"for (i \u003d 0; i \u003c nElements; i++) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"brandontwj1"},"content":"    a[i] \u003d 0;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"brandontwj1"},"content":"### ⭐ Line Length","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"brandontwj1"},"content":"Line length should be no longer than **120 characters**.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"brandontwj1"},"content":"- **Soft limit:** 110 characters","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"brandontwj1"},"content":"- **Hard limit:** 120 characters","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"brandontwj1"},"content":"**Line wrapping:** Indentation for wrapped lines should be **8 spaces** (twice the normal indentation) more than the parent line.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"brandontwj1"},"content":"### ⭐⭐ Line Breaking for Readability","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"brandontwj1"},"content":"When wrapping lines, the main objective is to improve readability.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"brandontwj1"},"content":"**General rules:**","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"brandontwj1"},"content":"- Break after a comma","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"brandontwj1"},"content":"- Break before an operator","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"brandontwj1"},"content":"- Method or constructor name stays attached to the open parenthesis `(`","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"brandontwj1"},"content":"// Good","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"brandontwj1"},"content":"setText(\"Long line split\"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"brandontwj1"},"content":"        + \"into two parts.\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"brandontwj1"},"content":"totalSum \u003d a + b + c","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"brandontwj1"},"content":"        + d + e;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"brandontwj1"},"content":"method(param1,","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"brandontwj1"},"content":"        object.method()","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"brandontwj1"},"content":"                .method2(),","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"brandontwj1"},"content":"        param3);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"brandontwj1"},"content":"// Prefer higher-level breaks","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"brandontwj1"},"content":"longName1 \u003d longName2 * (longName3 + longName4 - longName5)","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"brandontwj1"},"content":"        + 4 * longname6;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"brandontwj1"},"content":"// Ternary expressions","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"brandontwj1"},"content":"alpha \u003d (aLongBooleanExpression) ? beta : gamma;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"brandontwj1"},"content":"// OR","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"brandontwj1"},"content":"alpha \u003d (aLongBooleanExpression)","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"brandontwj1"},"content":"        ? beta","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"brandontwj1"},"content":"        : gamma;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"brandontwj1"},"content":"### ⭐ K\u0026R Style Brackets","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"brandontwj1"},"content":"Use **K\u0026R style brackets** (aka Egyptian style).","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"brandontwj1"},"content":"// Good","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"brandontwj1"},"content":"while (!done) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"brandontwj1"},"content":"    doSomething();","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"brandontwj1"},"content":"    done \u003d moreToDo();","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"brandontwj1"},"content":"// Bad","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"brandontwj1"},"content":"while (!done)","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"brandontwj1"},"content":"{","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"brandontwj1"},"content":"    doSomething();","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"brandontwj1"},"content":"    done \u003d moreToDo();","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"brandontwj1"},"content":"### ⭐ Method Definitions","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"brandontwj1"},"content":"public void someMethod() throws SomeException {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"brandontwj1"},"content":"    // ...","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"brandontwj1"},"content":"### ⭐ If-Else Statements","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"brandontwj1"},"content":"if (condition) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"brandontwj1"},"content":"    statements;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"brandontwj1"},"content":"if (condition) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"brandontwj1"},"content":"    statements;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"brandontwj1"},"content":"} else {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"brandontwj1"},"content":"    statements;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"brandontwj1"},"content":"if (condition) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"brandontwj1"},"content":"    statements;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"brandontwj1"},"content":"} else if (condition) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"brandontwj1"},"content":"    statements;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"brandontwj1"},"content":"} else {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"brandontwj1"},"content":"    statements;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"brandontwj1"},"content":"### ⭐ For Statements","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"brandontwj1"},"content":"for (initialization; condition; update) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"brandontwj1"},"content":"    statements;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"brandontwj1"},"content":"### ⭐ While and Do-While Statements","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"brandontwj1"},"content":"while (condition) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"brandontwj1"},"content":"    statements;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"brandontwj1"},"content":"do {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"brandontwj1"},"content":"    statements;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"brandontwj1"},"content":"} while (condition);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"brandontwj1"},"content":"### ⭐ Switch Statements","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"brandontwj1"},"content":"Note: No indentation for `case` clauses.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"brandontwj1"},"content":"switch (condition) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"brandontwj1"},"content":"case ABC:","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"brandontwj1"},"content":"    statements;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"brandontwj1"},"content":"    // Fallthrough","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"brandontwj1"},"content":"case DEF:","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"brandontwj1"},"content":"    statements;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"brandontwj1"},"content":"    break;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"brandontwj1"},"content":"case XYZ:","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"brandontwj1"},"content":"    statements;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"brandontwj1"},"content":"    break;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"brandontwj1"},"content":"default:","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"brandontwj1"},"content":"    statements;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"brandontwj1"},"content":"    break;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"brandontwj1"},"content":"**Lambda-style switch statements/expressions:**","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"brandontwj1"},"content":"switch (condition) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"brandontwj1"},"content":"case ABC -\u003e method(\"1\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"brandontwj1"},"content":"case DEF -\u003e method(\"2\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"brandontwj1"},"content":"case XYZ -\u003e method(\"3\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"brandontwj1"},"content":"default -\u003e method(\"0\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"brandontwj1"},"content":"int size \u003d switch (condition) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"brandontwj1"},"content":"case ABC -\u003e 1;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"brandontwj1"},"content":"case DEF -\u003e 2;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"brandontwj1"},"content":"case XYZ -\u003e 3;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"brandontwj1"},"content":"default -\u003e 0;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"brandontwj1"},"content":"**Fallthrough comment:** The explicit `// Fallthrough` comment should be included whenever there is a case statement without a break statement.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"brandontwj1"},"content":"### ⭐ Try-Catch Statements","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"brandontwj1"},"content":"try {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"brandontwj1"},"content":"    statements;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"brandontwj1"},"content":"} catch (Exception exception) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"brandontwj1"},"content":"    statements;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"brandontwj1"},"content":"try {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"brandontwj1"},"content":"    statements;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"brandontwj1"},"content":"} catch (Exception exception) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"brandontwj1"},"content":"    statements;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"brandontwj1"},"content":"} finally {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"brandontwj1"},"content":"    statements;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"brandontwj1"},"content":"### ⭐⭐ White Space Within Statements","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"brandontwj1"},"content":"| Rule | Good | Bad |","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"brandontwj1"},"content":"|------|------|-----|","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"brandontwj1"},"content":"| Operators should be surrounded by a space | `a \u003d (b + c) * d;` | `a\u003d(b+c)*d;` |","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"brandontwj1"},"content":"| Java reserved words should be followed by a white space | `while (true) {` | `while(true){` |","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"brandontwj1"},"content":"| Commas should be followed by a white space | `doSomething(a, b, c, d);` | `doSomething(a,b,c,d);` |","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"brandontwj1"},"content":"| Semicolons in for statements should be followed by a space | `for (i \u003d 0; i \u003c 10; i++) {` | `for(i\u003d0;i\u003c10;i++){` |","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"brandontwj1"},"content":"**Rationale:** Makes the individual components of the statements stand out and enhances readability.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"brandontwj1"},"content":"### ⭐⭐ Logical Units Separation","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"brandontwj1"},"content":"Logical units within a block should be separated by one blank line.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"brandontwj1"},"content":"// Create a new identity matrix","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"brandontwj1"},"content":"Matrix4x4 matrix \u003d new Matrix4x4();","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"brandontwj1"},"content":"// Precompute angles for efficiency","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"brandontwj1"},"content":"double cosAngle \u003d Math.cos(angle);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"brandontwj1"},"content":"double sinAngle \u003d Math.sin(angle);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"brandontwj1"},"content":"// Specify matrix as a rotation transformation","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"brandontwj1"},"content":"matrix.setElement(1, 1, cosAngle);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"brandontwj1"},"content":"matrix.setElement(1, 2, sinAngle);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"brandontwj1"},"content":"## Statements","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"brandontwj1"},"content":"### Package and Import Statements","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"brandontwj1"},"content":"### ⭐ Package Declaration","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"brandontwj1"},"content":"Put every class in a package.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"brandontwj1"},"content":"**Rationale:** It will help you and other developers easily understand the code base when all classes have been grouped in packages.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"brandontwj1"},"content":"### ⭐⭐ Import Ordering","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"brandontwj1"},"content":"The ordering of import statements must be consistent.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"brandontwj1"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"brandontwj1"},"content":"import static org.junit.Assert.assertTrue;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"brandontwj1"},"content":"import java.io.File;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"brandontwj1"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"brandontwj1"},"content":"import javax.xml.bind.JAXBContext;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"brandontwj1"},"content":"import javax.xml.bind.JAXBException;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"brandontwj1"},"content":"import org.loadui.testfx.GuiTest;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"brandontwj1"},"content":"import org.testfx.api.FxToolkit;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"brandontwj1"},"content":"import com.google.common.io.Files;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"brandontwj1"},"content":"import javafx.geometry.Bounds;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"brandontwj1"},"content":"import javafx.geometry.Point2D;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"brandontwj1"},"content":"import junit.framework.AssertionFailedError;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"brandontwj1"},"content":"### ⭐ Explicit Imports","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"brandontwj1"},"content":"Imported classes should always be listed explicitly.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"brandontwj1"},"content":"// Good","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"brandontwj1"},"content":"import java.util.List;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"brandontwj1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"brandontwj1"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"brandontwj1"},"content":"// Bad","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"brandontwj1"},"content":"import java.util.*;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"brandontwj1"},"content":"**Rationale:** Importing classes explicitly gives excellent documentation value and makes the class easier to comprehend and maintain.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"brandontwj1"},"content":"## Types","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"brandontwj1"},"content":"### ⭐ Array Specifiers","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"brandontwj1"},"content":"Array specifiers must be attached to the type, not the variable.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"brandontwj1"},"content":"// Good","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"brandontwj1"},"content":"int[] a \u003d new int[20];","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"brandontwj1"},"content":"// Bad","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"brandontwj1"},"content":"int a[] \u003d new int[20];","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"brandontwj1"},"content":"**Rationale:** The arrayness is a feature of the base type, not the variable.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"brandontwj1"},"content":"## Variables","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"brandontwj1"},"content":"### ⭐⭐ Variable Initialization and Scope","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"brandontwj1"},"content":"Variables should be initialized where they are declared and should be declared in the smallest scope possible.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"brandontwj1"},"content":"// Good","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"brandontwj1"},"content":"int sum \u003d 0;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"brandontwj1"},"content":"for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"brandontwj1"},"content":"    for (int j \u003d 0; j \u003c 10; j++) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"brandontwj1"},"content":"        sum +\u003d i * j;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"brandontwj1"},"content":"// Bad","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"brandontwj1"},"content":"int i, j, sum;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"brandontwj1"},"content":"sum \u003d 0;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"brandontwj1"},"content":"for (i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"brandontwj1"},"content":"    for (j \u003d 0; j \u003c 10; j++) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"brandontwj1"},"content":"        sum +\u003d i * j;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"brandontwj1"},"content":"**Rationale:** This ensures that variables are valid at any time.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"brandontwj1"},"content":"### ⭐⭐ Class Variables Visibility","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"brandontwj1"},"content":"Class variables should never be declared public unless the class is a data class with no behavior. This rule does not apply to constants.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"brandontwj1"},"content":"// Bad","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"brandontwj1"},"content":"public class Foo {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"brandontwj1"},"content":"    public int bar;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"brandontwj1"},"content":"**Rationale:** The concept of Java information hiding and encapsulation is violated by public variables.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"brandontwj1"},"content":"## Loops","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"brandontwj1"},"content":"### ⭐ Loop Body Brackets","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"brandontwj1"},"content":"The loop body should be wrapped by curly brackets irrespective of how many lines there are in the body.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"brandontwj1"},"content":"// Good","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"brandontwj1"},"content":"for (i \u003d 0; i \u003c 100; i++) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"brandontwj1"},"content":"    sum +\u003d value[i];","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"brandontwj1"},"content":"// Bad","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"brandontwj1"},"content":"for (i \u003d 0, sum \u003d 0; i \u003c 100; i++)","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"brandontwj1"},"content":"    sum +\u003d value[i];","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"brandontwj1"},"content":"**Rationale:** Error-prone when there is only one statement without braces.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"brandontwj1"},"content":"## Conditionals","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"brandontwj1"},"content":"### ⭐ Conditional Placement","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"brandontwj1"},"content":"The conditional should be put on a separate line.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"brandontwj1"},"content":"// Good","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"brandontwj1"},"content":"if (isDone) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"brandontwj1"},"content":"    doCleanup();","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"brandontwj1"},"content":"// Bad","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"brandontwj1"},"content":"if (isDone) doCleanup();","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"brandontwj1"},"content":"**Rationale:** This helps when debugging using an IDE debugger.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"brandontwj1"},"content":"### ⭐ Single Statement Conditionals","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"brandontwj1"},"content":"Single statement conditionals should still be wrapped by curly brackets.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"brandontwj1"},"content":"// Good","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"brandontwj1"},"content":"InputStream stream \u003d File.open(fileName, \"w\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"brandontwj1"},"content":"if (stream !\u003d null) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"brandontwj1"},"content":"    readFile(stream);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"brandontwj1"},"content":"// Bad","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"brandontwj1"},"content":"InputStream stream \u003d File.open(fileName, \"w\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"brandontwj1"},"content":"if (stream !\u003d null)","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"brandontwj1"},"content":"    readFile(stream);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"brandontwj1"},"content":"**Rationale:** Omitting braces can lead to subtle bugs.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"brandontwj1"},"content":"## Comments","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"brandontwj1"},"content":"### ⭐ Language","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"brandontwj1"},"content":"All comments should be written in English.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"brandontwj1"},"content":"- Choose either American or British spelling and use it consistently","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"brandontwj1"},"content":"- Avoid local slang","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"brandontwj1"},"content":"**Rationale:** The code is meant for an international audience.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"brandontwj1"},"content":"### ⭐⭐ Header Comments","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"brandontwj1"},"content":"Write descriptive header comments for all public classes/methods.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"brandontwj1"},"content":"**Required for:** All classes, public methods","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"brandontwj1"},"content":"**Can be omitted for:**","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"brandontwj1"},"content":"1. Getters/setters","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"brandontwj1"},"content":"2. When overriding methods (provided the parent method\u0027s Javadoc applies exactly)","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"brandontwj1"},"content":"**Rationale:** Public methods are meant to be used by others and users should not be forced to read the code to understand behavior.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"brandontwj1"},"content":"### ⭐ Javadoc Format","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"brandontwj1"},"content":" * Returns lateral location of the specified position.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"brandontwj1"},"content":" * If the position is unset, NaN is returned.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"brandontwj1"},"content":" * @param x X coordinate of position.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"brandontwj1"},"content":" * @param y Y coordinate of position.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"brandontwj1"},"content":" * @param zone Zone of position.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"brandontwj1"},"content":" * @return Lateral location.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"brandontwj1"},"content":" * @throws IllegalArgumentException If zone is \u003c\u003d 0.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"brandontwj1"},"content":"public double computeLocation(double x, double y, int zone)","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"brandontwj1"},"content":"        throws IllegalArgumentException {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"brandontwj1"},"content":"    // ...","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"brandontwj1"},"content":"**Key points:**","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"brandontwj1"},"content":"- Opening `/**` on a separate line","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"brandontwj1"},"content":"- First sentence as short summary","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"brandontwj1"},"content":"- Start with \"Returns...\", \"Sends...\", \"Adds...\" (not \"Return\" or \"Returning\")","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"brandontwj1"},"content":"- Subsequent `*` aligned with the first","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"brandontwj1"},"content":"- Space after each `*`","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"brandontwj1"},"content":"- Empty line between description and parameter section","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"brandontwj1"},"content":"- Punctuation behind each parameter description","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"brandontwj1"},"content":"- No blank line between documentation block and method/class","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"brandontwj1"},"content":"**Single-line Javadoc for class members:**","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"brandontwj1"},"content":"/** Number of connections to this database */","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"brandontwj1"},"content":"private int connectionCount;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"brandontwj1"},"content":"### ⭐ Comment Indentation","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"brandontwj1"},"content":"Comments should be indented relative to their position in the code.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"brandontwj1"},"content":"```java","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"brandontwj1"},"content":"// Good","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"brandontwj1"},"content":"while (true) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"brandontwj1"},"content":"    // Do something","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"brandontwj1"},"content":"    something();","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"brandontwj1"},"content":"// Trailing comments are allowed","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"brandontwj1"},"content":"process(\u0027ABC\u0027); // process a dummy String first","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"brandontwj1"},"content":"```","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"brandontwj1"},"content":"**Rationale:** This avoids comments from breaking the logical structure of the program.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"brandontwj1"},"content":"## References","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"brandontwj1"},"content":"1. [Oracle\u0027s Java Style Guide](https://www.oracle.com/docs/tech/java/codeconventions.pdf)","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"brandontwj1"},"content":"2. [Google\u0027s Java Style Guide](https://google.github.io/styleguide/javaguide.html)","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"brandontwj1"},"content":"## Contributors","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"brandontwj1"},"content":"- Nimantha Baranasuriya - Initial draft","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"brandontwj1"},"content":"- Dai Thanh - Further tweaks","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"brandontwj1"},"content":"- Tong Chun Kit - Further tweaks","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"brandontwj1"},"content":"- Barnabas Tan - Converted from Google Docs to Markdown Document","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false}],"authorContributionMap":{"brandontwj1":593}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"# omni.omni User Guide","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"brandontwj1":1,"-":29}},{"path":"src/main/java/omni/Omni.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T02:04:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"import omni.exceptions.OmniException;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"import omni.storage.Storage;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"import omni.parser.Parser;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"import omni.tasklist.TaskList;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"import omni.ui.Ui;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-25T00:10:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-24T21:58:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-24T21:58:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":" * Main class for the Omni task management application.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":" * Coordinates between UI, storage, task list, and parser components to provide","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":" * a command-line interface for managing tasks.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"public class Omni {","lastModifiedDate":"2025-08-24T16:33:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"    private Ui ui;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"    private Parser parser;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"     * Constructs an Omni application with the specified file path for task storage.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"     * Initializes all components and loads existing tasks from storage.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"     * @param filePath The path to the tasks storage file.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"    public Omni(Path filePath) {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"        try {","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"        } catch (OmniException e) {","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"            ui.showLoadingError(e.getUserMessage());","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"        parser \u003d new Parser(ui, tasks, storage);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brandontwj1"},"content":"     * Starts the main application loop that handles user input and commands.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brandontwj1"},"content":"     * Continues running until the user enters the exit command \"bye\".","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brandontwj1"},"content":"    public void run() {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brandontwj1"},"content":"        ui.greet();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brandontwj1"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-24T21:58:11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brandontwj1"},"content":"        String input \u003d sc.nextLine().trim();","lastModifiedDate":"2025-08-25T01:19:28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brandontwj1"},"content":"        boolean continueExecution \u003d true;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brandontwj1"},"content":"        while (continueExecution) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brandontwj1"},"content":"            continueExecution \u003d parser.handleInput(input);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brandontwj1"},"content":"            if (continueExecution) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brandontwj1"},"content":"                input \u003d sc.nextLine().trim();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brandontwj1"},"content":"            }","lastModifiedDate":"2025-08-24T22:32:21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brandontwj1"},"content":"        sc.close();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-24T21:58:11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brandontwj1"},"content":"     * Main entry point for the Omni application.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brandontwj1"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brandontwj1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brandontwj1"},"content":"        Path filePath \u003d Paths.get(\"data\", \"tasks.txt\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brandontwj1"},"content":"        new Omni(filePath).run();","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-24T16:33:09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-08-24T16:33:09","isFullCredit":false}],"authorContributionMap":{"brandontwj1":72}},{"path":"src/main/java/omni/exceptions/CorruptedFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.exceptions;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"public class CorruptedFileException extends OmniException {","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"    public CorruptedFileException(String message) {","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"        super(message);","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-08-29T21:02:25","isFullCredit":false}],"authorContributionMap":{"brandontwj1":7}},{"path":"src/main/java/omni/exceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.exceptions;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"public class InvalidArgumentException extends OmniException {","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"    public InvalidArgumentException(String message) {","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"        super(message);","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false}],"authorContributionMap":{"brandontwj1":7}},{"path":"src/main/java/omni/exceptions/OmniException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.exceptions;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"public class OmniException extends Exception {","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"    public OmniException(String message) {","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"        super(message);","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"    public String getUserMessage() {","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"        return this.getMessage();","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false}],"authorContributionMap":{"brandontwj1":12}},{"path":"src/main/java/omni/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.exceptions;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"public class UnknownCommandException extends OmniException {","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"    public UnknownCommandException(String message) {","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"        super(message);","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false}],"authorContributionMap":{"brandontwj1":7}},{"path":"src/main/java/omni/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.parser;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T02:04:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"import omni.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"import omni.exceptions.OmniException;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"import omni.exceptions.UnknownCommandException;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"import omni.ui.Ui;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"import omni.tasklist.TaskList;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"import omni.storage.Storage;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Task;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Todo;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Deadline;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Event;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":" * The Parser class is responsible for parsing and executing user commands in the Omni task management system.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":" * It handles various commands such as adding tasks (todo, deadline, event), marking/unmarking tasks,","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":" * deleting tasks, and listing all tasks. The parser validates input formats and coordinates between","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":" * the UI, TaskList, and Storage components.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"public class Parser {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"    private static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"    private Ui ui;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"     * Constructs a Parser with the specified UI, TaskList, and Storage objects.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"     * @param ui The UI object.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"     * @param tasks The TaskList object.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"     * @param storage The Storage object.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brandontwj1"},"content":"    public Parser(Ui ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brandontwj1"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brandontwj1"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brandontwj1"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brandontwj1"},"content":"     * Displays the list of all tasks to the user.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brandontwj1"},"content":"    private void handleList() {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brandontwj1"},"content":"        ui.showTasks(tasks);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brandontwj1"},"content":"     * Marks a task as done based on the given task number.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brandontwj1"},"content":"     * @param n The task number as a string.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brandontwj1"},"content":"     * @throws InvalidArgumentException If the task number is invalid or task doesn\u0027t exist.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brandontwj1"},"content":"     * @throws IOException If an I/O error occurs during storage update.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brandontwj1"},"content":"    private void handleMark(String n) throws InvalidArgumentException, IOException {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brandontwj1"},"content":"        int num;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brandontwj1"},"content":"        try {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brandontwj1"},"content":"            num \u003d parseInt(n);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brandontwj1"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(\"Invalid mark command. Try again.\");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brandontwj1"},"content":"        if (num \u003e tasks.getSize()) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(\"That task does not exist! Try again!\");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brandontwj1"},"content":"        } else {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brandontwj1"},"content":"            Task t \u003d tasks.markTaskDone(num - 1);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brandontwj1"},"content":"            storage.rewriteTask(t, num - 1);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brandontwj1"},"content":"            ui.showMarked(t);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brandontwj1"},"content":"     * Marks a task as not done based on the given task number.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brandontwj1"},"content":"     * @param n The task number as a string.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brandontwj1"},"content":"     * @throws InvalidArgumentException If the task number is invalid or task doesn\u0027t exist.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brandontwj1"},"content":"     * @throws IOException If an I/O error occurs during storage update.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brandontwj1"},"content":"    private void handleUnmark(String n) throws InvalidArgumentException, IOException {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brandontwj1"},"content":"        int num;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brandontwj1"},"content":"        try {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brandontwj1"},"content":"            num \u003d parseInt(n);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"brandontwj1"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(\"Invalid mark command. Try again.\");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"brandontwj1"},"content":"        if (num \u003e tasks.getSize()) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(\"That task does not exist! Try again!\");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"brandontwj1"},"content":"        } else {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"brandontwj1"},"content":"            Task t \u003d tasks.unmarkTaskDone(num - 1);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"brandontwj1"},"content":"            storage.rewriteTask(t, num - 1);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"brandontwj1"},"content":"            ui.showUnmarked(t);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"brandontwj1"},"content":"     * Handles unknown commands by throwing an exception.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"brandontwj1"},"content":"     * @throws UnknownCommandException If unknown command received.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"brandontwj1"},"content":"    private void handleUnknownCmd() throws UnknownCommandException {","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"brandontwj1"},"content":"        throw new UnknownCommandException(\"I can\u0027t lie I have no idea what that means...\");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"brandontwj1"},"content":"     * Adds a task to the task list and storage, then displays confirmation.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"brandontwj1"},"content":"     * @param task The task to add.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"brandontwj1"},"content":"     * @throws IOException If an I/O error occurs during storage write.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"brandontwj1"},"content":"    private void handleAddTask(Task task) throws IOException {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"brandontwj1"},"content":"        storage.writeTask(task);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"brandontwj1"},"content":"        Task t \u003d tasks.addTask(task);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"brandontwj1"},"content":"        ui.showAdded(t, tasks);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"brandontwj1"},"content":"     * Creates and adds a new todo task.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"brandontwj1"},"content":"     * @param arg The todo description.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"brandontwj1"},"content":"     * @throws InvalidArgumentException If the description is empty.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"brandontwj1"},"content":"     * @throws IOException If an I/O error occurs during storage write.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"brandontwj1"},"content":"    private void handleTodo(String arg) throws InvalidArgumentException, IOException {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"brandontwj1"},"content":"        if (arg.isEmpty()) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(\"Give your todo a description!\");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"brandontwj1"},"content":"        Todo newTodo \u003d new Todo(arg, false);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"brandontwj1"},"content":"        handleAddTask(newTodo);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"brandontwj1"},"content":"     * Checks if the given date string is valid according to the expected format (DD-MM-YYYY HHMM).","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"brandontwj1"},"content":"     * @param date The date string to validate.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"brandontwj1"},"content":"     * @return True if the date string is valid.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"brandontwj1"},"content":"     * @throws InvalidArgumentException If the date format is invalid.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"brandontwj1"},"content":"    boolean checkValidDateString(String date) throws InvalidArgumentException {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"brandontwj1"},"content":"        String[] dateAndTime \u003d date.split(\" \");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"brandontwj1"},"content":"        if (dateAndTime.length \u003e 2) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(\"Invalid date format! Check your date and time is in the form\"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"brandontwj1"},"content":"                    + \" DD-MM-YYYY HHMM\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"brandontwj1"},"content":"        LocalDate d;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"brandontwj1"},"content":"        LocalTime t;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"brandontwj1"},"content":"        try {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"brandontwj1"},"content":"            String dateStr \u003d dateAndTime[0].trim();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"brandontwj1"},"content":"            d \u003d LocalDate.parse(dateStr, DATE_FORMATTER);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"brandontwj1"},"content":"            if (dateAndTime.length \u003e 1) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"brandontwj1"},"content":"                t \u003d LocalTime.parse(dateAndTime[1].trim(), TIME_FORMATTER);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"brandontwj1"},"content":"            }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"brandontwj1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(\"Invalid date format! Check your date and time is in the form\"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"brandontwj1"},"content":"                    + \" DD-MM-YYYY HHMM\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"brandontwj1"},"content":"        return true;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"brandontwj1"},"content":"     * Creates and adds a new deadline task.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"brandontwj1"},"content":"     * @param arg The deadline argument containing description and due date.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"brandontwj1"},"content":"     * @throws InvalidArgumentException If the format is invalid or description is empty.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"brandontwj1"},"content":"     * @throws IOException If an I/O error occurs during storage write.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"brandontwj1"},"content":"    private void handleDeadline(String arg) throws InvalidArgumentException, IOException {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"brandontwj1"},"content":"        String[] parts \u003d arg.split(\"/by\", 2);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"brandontwj1"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(\"Unable to set deadline, remember to use /by to specify your deadline!\");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"brandontwj1"},"content":"        } else {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"brandontwj1"},"content":"            String description \u003d parts[0].trim();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"brandontwj1"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"brandontwj1"},"content":"                throw new InvalidArgumentException(\"Give your deadline a description!\");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"brandontwj1"},"content":"            }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"brandontwj1"},"content":"            String date \u003d parts[1].trim();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"brandontwj1"},"content":"            checkValidDateString(date);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"brandontwj1"},"content":"            Deadline newDeadline \u003d new Deadline(description, false, date);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"brandontwj1"},"content":"            handleAddTask(newDeadline);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"brandontwj1"},"content":"     * Creates and adds a new event task.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"brandontwj1"},"content":"     * @param arg The event argument containing description, start and end times.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"brandontwj1"},"content":"     * @throws InvalidArgumentException If the format is invalid or description is empty.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"brandontwj1"},"content":"     * @throws IOException If an I/O error occurs during storage write.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"brandontwj1"},"content":"    private void handleEvent(String arg) throws InvalidArgumentException, IOException {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"brandontwj1"},"content":"        String[] parts \u003d arg.split(\"/from\", 2);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"brandontwj1"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(\"Unable to set Omni.tasks.Event, remember to use /from and /to in that order!\");","lastModifiedDate":"2025-09-02T02:04:46","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"brandontwj1"},"content":"        } else {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"brandontwj1"},"content":"            String description \u003d parts[0].trim();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"brandontwj1"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"brandontwj1"},"content":"                throw new InvalidArgumentException(\"Give your event a description!\");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"brandontwj1"},"content":"            }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"brandontwj1"},"content":"            String[] dates \u003d parts[1].trim().split(\"/to\", 2);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"brandontwj1"},"content":"            if (dates.length \u003c 2) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"brandontwj1"},"content":"                throw new InvalidArgumentException(\"Unable to set event, remember to use /from and /to in that order!\");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"brandontwj1"},"content":"            } else {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"brandontwj1"},"content":"                String from \u003d dates[0].trim();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"brandontwj1"},"content":"                String to \u003d dates[1].trim();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"brandontwj1"},"content":"                checkValidDateString(from);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"brandontwj1"},"content":"                checkValidDateString(to);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"brandontwj1"},"content":"                Event newEvent \u003d new Event(description, false, from, to);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"brandontwj1"},"content":"                handleAddTask(newEvent);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"brandontwj1"},"content":"            }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"brandontwj1"},"content":"     * Deletes a task based on the given task index.","lastModifiedDate":"2025-09-04T00:55:12","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"brandontwj1"},"content":"     * @param index The task number as a string.","lastModifiedDate":"2025-09-04T00:56:56","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"brandontwj1"},"content":"     * @throws InvalidArgumentException If the task number is invalid or task doesn\u0027t exist.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"brandontwj1"},"content":"     * @throws IOException If an I/O error occurs during storage update.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"brandontwj1"},"content":"    private void handleDelete(String index) throws InvalidArgumentException, IOException {","lastModifiedDate":"2025-09-04T00:56:56","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"brandontwj1"},"content":"        int num;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"brandontwj1"},"content":"        try {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"brandontwj1"},"content":"            num \u003d parseInt(index);","lastModifiedDate":"2025-09-04T00:56:56","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"brandontwj1"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(\"Invalid delete command. Try again.\");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"brandontwj1"},"content":"        if (num \u003e tasks.getSize()) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"brandontwj1"},"content":"            throw new InvalidArgumentException(\"That task does not exist! Try again!\");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"brandontwj1"},"content":"        } else {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"brandontwj1"},"content":"            Task removedTask \u003d tasks.removeTask(num - 1);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"brandontwj1"},"content":"            storage.eraseTask(num - 1);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"brandontwj1"},"content":"            ui.showErased(removedTask);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"brandontwj1"},"content":"     * Finds tasks containing the keyword.","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"brandontwj1"},"content":"     * @param keyword The user input keyword.","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"brandontwj1"},"content":"    private void handleFind(String keyword) {","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"brandontwj1"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findMatchingTasks(keyword);","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"brandontwj1"},"content":"        ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"brandontwj1"},"content":"     * Handles user input and executes the corresponding command.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"brandontwj1"},"content":"     * @param input The user input string.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"brandontwj1"},"content":"     * @return True to continue, false to exit.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"brandontwj1"},"content":"    public boolean handleInput(String input) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"brandontwj1"},"content":"        String[] parts \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"brandontwj1"},"content":"        String cmd \u003d parts[0];","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"brandontwj1"},"content":"        String arg \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"brandontwj1"},"content":"        boolean continueExecution \u003d true;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"brandontwj1"},"content":"        ui.startReply();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"brandontwj1"},"content":"        try {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"brandontwj1"},"content":"            switch (cmd.toLowerCase()) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"brandontwj1"},"content":"            case \"list\":","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"brandontwj1"},"content":"                handleList();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"brandontwj1"},"content":"                break;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"brandontwj1"},"content":"            case \"mark\":","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"brandontwj1"},"content":"                handleMark(arg);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"brandontwj1"},"content":"                break;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"brandontwj1"},"content":"            case \"unmark\":","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"brandontwj1"},"content":"                handleUnmark(arg);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"brandontwj1"},"content":"                break;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"brandontwj1"},"content":"            case \"todo\":","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"brandontwj1"},"content":"                handleTodo(arg);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"brandontwj1"},"content":"                break;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"brandontwj1"},"content":"            case \"deadline\":","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"brandontwj1"},"content":"                handleDeadline(arg);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"brandontwj1"},"content":"                break;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"brandontwj1"},"content":"            case \"event\":","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"brandontwj1"},"content":"                handleEvent(arg);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"brandontwj1"},"content":"                break;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"brandontwj1"},"content":"            case \"delete\":","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"brandontwj1"},"content":"                handleDelete(arg);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"brandontwj1"},"content":"                break;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"brandontwj1"},"content":"            case \"find\":","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"brandontwj1"},"content":"                handleFind(arg);","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"brandontwj1"},"content":"                break;","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"brandontwj1"},"content":"            case \"bye\":","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"brandontwj1"},"content":"                continueExecution \u003d false;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"brandontwj1"},"content":"                ui.exit();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"brandontwj1"},"content":"                break;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"brandontwj1"},"content":"            default:","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"brandontwj1"},"content":"                handleUnknownCmd();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"brandontwj1"},"content":"            }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"brandontwj1"},"content":"        } catch (OmniException e) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"brandontwj1"},"content":"            ui.showError(e.getUserMessage());","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"brandontwj1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"brandontwj1"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"brandontwj1"},"content":"        ui.endReply();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"brandontwj1"},"content":"        return continueExecution;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false}],"authorContributionMap":{"brandontwj1":313}},{"path":"src/main/java/omni/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.storage;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T02:04:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"import java.util.List;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"import omni.exceptions.CorruptedFileException;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Deadline;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Event;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Task;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Todo;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":" * Handles reading from and writing to the task storage file.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":" * Provides methods to load, update, add, and remove tasks from persistent storage.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"public class Storage {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"    private Path tasksPath;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"     * @param filePath The path to the tasks file.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"    public Storage(Path filePath) {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"        this.tasksPath \u003d filePath;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"     * Loads tasks from the file and returns them as an ArrayList.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"     * @return An ArrayList of tasks loaded from the file.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"     * @throws CorruptedFileException If the file is corrupted or cannot be read.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws CorruptedFileException {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"        if (!Files.exists(tasksPath)) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"            try {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brandontwj1"},"content":"                Files.createDirectories(tasksPath.getParent());","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brandontwj1"},"content":"                Files.createFile(tasksPath);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brandontwj1"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brandontwj1"},"content":"                throw new CorruptedFileException(e.getMessage());","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brandontwj1"},"content":"            }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brandontwj1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brandontwj1"},"content":"        try {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brandontwj1"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(tasksPath);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brandontwj1"},"content":"            for (String line : lines) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brandontwj1"},"content":"                String[] values \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brandontwj1"},"content":"                if (values.length \u003c 3 || values.length \u003e 5) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brandontwj1"},"content":"                    throw new CorruptedFileException(\"Entry length invalid.\\n\" + line);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brandontwj1"},"content":"                } else {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brandontwj1"},"content":"                    String type \u003d values[0].trim();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brandontwj1"},"content":"                    String description \u003d values[1].trim();","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brandontwj1"},"content":"                    boolean isDone \u003d parseInt(values[2].trim()) !\u003d 0;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brandontwj1"},"content":"                    switch (type) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brandontwj1"},"content":"                    case \"T\":","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brandontwj1"},"content":"                        if (values.length !\u003d 3) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brandontwj1"},"content":"                            throw new CorruptedFileException(\"Entry length for todo invalid.\\n\" + line);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brandontwj1"},"content":"                        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brandontwj1"},"content":"                        tasks.add(new Todo(description, isDone));","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brandontwj1"},"content":"                        break;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brandontwj1"},"content":"                    case \"D\":","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brandontwj1"},"content":"                        if (values.length !\u003d 4) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brandontwj1"},"content":"                            throw new CorruptedFileException(\"Entry length for deadline invalid.\\n\" + line);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brandontwj1"},"content":"                        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brandontwj1"},"content":"                        tasks.add(new Deadline(description, isDone, values[3].trim()));","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brandontwj1"},"content":"                        break;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brandontwj1"},"content":"                    case \"E\":","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brandontwj1"},"content":"                        if (values.length !\u003d 5) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brandontwj1"},"content":"                            throw new CorruptedFileException(\"Entry length for event invalid.\\n\" + line);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brandontwj1"},"content":"                        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brandontwj1"},"content":"                        tasks.add(new Event(description, isDone, values[3].trim(), values[4].trim()));","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brandontwj1"},"content":"                        break;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brandontwj1"},"content":"                    default:","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brandontwj1"},"content":"                        throw new CorruptedFileException(\"Task type not found.\\n\" + line);","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brandontwj1"},"content":"                    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brandontwj1"},"content":"                }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brandontwj1"},"content":"            }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brandontwj1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brandontwj1"},"content":"            throw new CorruptedFileException(e.getMessage());","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brandontwj1"},"content":"        return tasks;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"brandontwj1"},"content":"     * Rewrites the task at the specified index in the file.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"brandontwj1"},"content":"     * @param task The task to write.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"brandontwj1"},"content":"     * @param index The index of the task to rewrite.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"brandontwj1"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"brandontwj1"},"content":"    public void rewriteTask(Task task, int index) throws IOException {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"brandontwj1"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(tasksPath);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"brandontwj1"},"content":"        lines.remove(index);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"brandontwj1"},"content":"        lines.add(index, task.getEntryString());","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"brandontwj1"},"content":"        Files.write(tasksPath, lines);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"brandontwj1"},"content":"     * Appends a new task to the file.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"brandontwj1"},"content":"     * @param task The task to write.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"brandontwj1"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"brandontwj1"},"content":"    public void writeTask(Task task) throws IOException {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"brandontwj1"},"content":"        Files.writeString(tasksPath, task.getEntryString() + \"\\n\", StandardOpenOption.APPEND);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"brandontwj1"},"content":"     * Erases the task at the specified index from the file.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"brandontwj1"},"content":"     * @param index The index of the task to erase.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"brandontwj1"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"brandontwj1"},"content":"    public void eraseTask(int index) throws IOException {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"brandontwj1"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(tasksPath);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"brandontwj1"},"content":"        lines.remove(index);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"brandontwj1"},"content":"        Files.write(tasksPath, lines);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false}],"authorContributionMap":{"brandontwj1":130}},{"path":"src/main/java/omni/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.tasklist;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T02:04:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Task;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T02:04:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":" * Represents a list of tasks and provides methods to manipulate them.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":" * Supports adding, removing, marking, and unmarking tasks.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"public class TaskList {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"     * @param tasks The initial list of tasks.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"    public TaskList() {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"     * @return True if the task list is empty, false otherwise.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brandontwj1"},"content":"     * @return The size of the task list.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brandontwj1"},"content":"    public int getSize() {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brandontwj1"},"content":"        return tasks.size();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brandontwj1"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brandontwj1"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brandontwj1"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brandontwj1"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brandontwj1"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brandontwj1"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brandontwj1"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brandontwj1"},"content":"     * @return The task that was marked as done.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brandontwj1"},"content":"    public Task markTaskDone(int index) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brandontwj1"},"content":"        Task t \u003d getTask(index);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brandontwj1"},"content":"        t.markDone();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brandontwj1"},"content":"        return t;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brandontwj1"},"content":"     * Marks the task at the specified index as not done.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brandontwj1"},"content":"     * @param index The index of the task to unmark.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brandontwj1"},"content":"     * @return The task that was unmarked.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brandontwj1"},"content":"    public Task unmarkTaskDone(int index) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brandontwj1"},"content":"        Task t \u003d getTask(index);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brandontwj1"},"content":"        t.unmarkDone();","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brandontwj1"},"content":"        return t;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brandontwj1"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brandontwj1"},"content":"     * @param task The task to add.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brandontwj1"},"content":"     * @return The added task.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brandontwj1"},"content":"    public Task addTask(Task task) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brandontwj1"},"content":"        tasks.add(task);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brandontwj1"},"content":"        return task;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"brandontwj1"},"content":"     * Removes the task at the specified index from the list.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"brandontwj1"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"brandontwj1"},"content":"     * @return The removed task.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"brandontwj1"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"brandontwj1"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"brandontwj1"},"content":"     * Finds the tasks that contains the keyword provided.","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"brandontwj1"},"content":"     * @param keyword The keyword to find.","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"brandontwj1"},"content":"     * @return The tasks containing the keyword","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"brandontwj1"},"content":"    public ArrayList\u003cTask\u003e findMatchingTasks(String keyword) {","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"brandontwj1"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"brandontwj1"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"brandontwj1"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"brandontwj1"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"brandontwj1"},"content":"            }","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"brandontwj1"},"content":"        return matchingTasks;","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false}],"authorContributionMap":{"brandontwj1":121}},{"path":"src/main/java/omni/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.tasks;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T02:04:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":" * Represents a deadline task with a specific due date and optional time.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":" * Extends the base Task class to include deadline-specific functionality.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-25T00:44:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"    private static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"    protected LocalDate date;","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"    protected LocalTime time;","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-25T00:44:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"     * Constructs a Deadline task with the specified description, completion status, and deadline.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"     * @param description The task description.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"     * @param isDone Whether the task is completed.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"     * @param deadline The deadline string in format \"dd-MM-yyyy\" or \"dd-MM-yyyy HHmm\".","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"    public Deadline(String description, boolean isDone, String deadline) {","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-29T12:18:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"        String[] dateAndTime \u003d deadline.split(\" \");","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"        String dateStr \u003d dateAndTime[0].trim();","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"        this.date \u003d LocalDate.parse(dateStr, DATE_FORMATTER);","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"        if (dateAndTime.length \u003e 1) {","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"            this.time \u003d LocalTime.parse(dateAndTime[1].trim(), TIME_FORMATTER);","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-08-25T00:44:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"     * Returns the deadline as a formatted string.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"     * @return The deadline string in the original format.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"    public String getDeadlineString() {","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"        String dateTimeString \u003d this.date.format(DATE_FORMATTER);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"        if (this.time !\u003d null) {","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brandontwj1"},"content":"            dateTimeString \u003d dateTimeString + \" \" + this.time.format(TIME_FORMATTER);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-08-29T23:08:30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brandontwj1"},"content":"        return dateTimeString;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brandontwj1"},"content":"    @Override","lastModifiedDate":"2025-08-29T23:08:30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brandontwj1"},"content":"    public String getEntryString() {","lastModifiedDate":"2025-08-29T23:08:30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brandontwj1"},"content":"        String done \u003d this.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2025-08-29T23:08:30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brandontwj1"},"content":"        String dateTimeString \u003d getDeadlineString();","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brandontwj1"},"content":"        return \"D | \" + this.getDescription() + \" | \" + done + \" | \" + dateTimeString;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-29T23:08:30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-29T23:08:30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brandontwj1"},"content":"    @Override","lastModifiedDate":"2025-08-25T00:44:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brandontwj1"},"content":"    public String toString() {","lastModifiedDate":"2025-08-25T00:44:16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brandontwj1"},"content":"        String dateTimeString \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brandontwj1"},"content":"        if (time !\u003d null) {","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brandontwj1"},"content":"            dateTimeString \u003d dateTimeString + \" \" + time.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-01T04:45:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brandontwj1"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dateTimeString + \")\";","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-25T00:44:16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-08-25T00:44:16","isFullCredit":false}],"authorContributionMap":{"brandontwj1":65}},{"path":"src/main/java/omni/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.tasks;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":" * Represents an event task with start and end dates and optional times.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":" * Extends the base Task class to include event-specific functionality with duration.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"public class Event extends Task {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"    private static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"    protected LocalDate startDate;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"    protected LocalTime startTime;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"    protected LocalTime endTime;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"     * Constructs an Event task with the specified description, completion status, start and end times.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"     * @param description The task description.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"     * @param isDone Whether the task is completed.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"     * @param start The start date and time string in format \"dd-MM-yyyy\" or \"dd-MM-yyyy HHmm\".","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"     * @param end The end date and time string in format \"dd-MM-yyyy\" or \"dd-MM-yyyy HHmm\".","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"    public Event(String description, boolean isDone, String start, String end) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"        super(description, isDone);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"        String[] startDateAndTime \u003d start.split(\" \");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"        String startDate \u003d startDateAndTime[0].trim();","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"        this.startDate \u003d LocalDate.parse(startDate, DATE_FORMATTER);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"        if (startDateAndTime.length \u003e 1) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"            this.startTime \u003d LocalTime.parse(startDateAndTime[1].trim(), TIME_FORMATTER);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"        String[] endDateAndTime \u003d end.split(\" \");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"        String endD \u003d endDateAndTime[0].trim();","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"        this.endDate \u003d LocalDate.parse(endD, DATE_FORMATTER);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"        if (endDateAndTime.length \u003e 1) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"            this.endTime \u003d LocalTime.parse(endDateAndTime[1].trim(), TIME_FORMATTER);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brandontwj1"},"content":"     * Returns the start date and time as a formatted string.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brandontwj1"},"content":"     * @return The start date and time string in the original format.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brandontwj1"},"content":"    public String getStartString() {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brandontwj1"},"content":"        String dateAndTime \u003d this.startDate.format(DATE_FORMATTER);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brandontwj1"},"content":"        if (this.startTime !\u003d null) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brandontwj1"},"content":"            dateAndTime \u003d dateAndTime + \" \" + this.startTime.format(TIME_FORMATTER);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brandontwj1"},"content":"        return dateAndTime;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brandontwj1"},"content":"     * Returns the end date and time as a formatted string.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brandontwj1"},"content":"     * @return The end date and time string in the original format.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brandontwj1"},"content":"    public String getEndString() {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brandontwj1"},"content":"        String dateAndTime \u003d this.endDate.format(DATE_FORMATTER);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brandontwj1"},"content":"        if (this.endTime !\u003d null) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brandontwj1"},"content":"            dateAndTime \u003d dateAndTime + \" \" + this.endTime.format(TIME_FORMATTER);","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brandontwj1"},"content":"        return dateAndTime;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brandontwj1"},"content":"    @Override","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brandontwj1"},"content":"    public String getEntryString() {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brandontwj1"},"content":"        String done \u003d this.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brandontwj1"},"content":"        return \"E | \" + this.getDescription() + \" | \" + done + \" | \" + getStartString() + \" | \" + getEndString();","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brandontwj1"},"content":"    @Override","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brandontwj1"},"content":"    public String toString() {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brandontwj1"},"content":"        String startDateAndTime \u003d startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brandontwj1"},"content":"        if (startTime !\u003d null) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brandontwj1"},"content":"            startDateAndTime \u003d startDateAndTime + \" \" + startTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brandontwj1"},"content":"        String endDateAndTime \u003d endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brandontwj1"},"content":"        if (endTime !\u003d null) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brandontwj1"},"content":"            endDateAndTime \u003d endDateAndTime + \" \" + endTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brandontwj1"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startDateAndTime + \" to: \" + endDateAndTime + \")\";","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false}],"authorContributionMap":{"brandontwj1":90}},{"path":"src/main/java/omni/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.tasks;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T02:04:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":" * Serves as the base class for all task types in the Omni task management system.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"public class Task {","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"    protected String description;","lastModifiedDate":"2025-08-25T01:00:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-25T01:00:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"     * Constructs a Task with the specified description and completion status.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"     * @param description The task description.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"     * @param isDone Whether the task is completed.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-08-29T12:18:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-08-29T12:18:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"     * Marks this task as done.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"    public void markDone() {","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-25T00:10:11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"     * Marks this task as not done.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"    public void unmarkDone() {","lastModifiedDate":"2025-08-24T23:02:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-25T00:10:11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-08-24T23:02:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"        return this.isDone;","lastModifiedDate":"2025-08-25T00:10:11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-25T00:10:11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-25T00:10:11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brandontwj1"},"content":"     * Returns the status icon representing the completion status of the task.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brandontwj1"},"content":"     * @return \"X\" if the task is done, \" \" otherwise.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brandontwj1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-25T00:10:11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brandontwj1"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2025-08-25T00:10:11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-24T23:02:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-24T23:02:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brandontwj1"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brandontwj1"},"content":"     * @return The task description.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brandontwj1"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-29T22:25:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brandontwj1"},"content":"        return this.description;","lastModifiedDate":"2025-08-29T22:25:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-29T22:25:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-29T22:25:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brandontwj1"},"content":"     * Returns the entry string representation for file storage.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brandontwj1"},"content":"     * @return The formatted string for saving to file.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brandontwj1"},"content":"    public String getEntryString() {","lastModifiedDate":"2025-08-29T23:08:30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brandontwj1"},"content":"        String done \u003d this.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2025-08-29T23:08:30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brandontwj1"},"content":"        return \"T | \" + this.getDescription() + \" | \" + done;","lastModifiedDate":"2025-08-29T23:22:42","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-29T23:08:30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-29T23:08:30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brandontwj1"},"content":"     * Returns the string representation of this task for display.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brandontwj1"},"content":"     * @return the formatted task string for display","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brandontwj1"},"content":"    @Override","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brandontwj1"},"content":"    public String toString() {","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brandontwj1"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-08-25T01:00:12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-08-24T22:49:01","isFullCredit":false}],"authorContributionMap":{"brandontwj1":84}},{"path":"src/main/java/omni/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.tasks;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T02:04:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":" * Represents a simple todo task without any date or time constraints.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":" * Extends the base Task class with basic todo functionality.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-25T00:45:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-25T00:44:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"     * Constructs a Todo task with the specified description and completion status.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"     * @param description The task description.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"     * @param isDone Whether the task is completed.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2025-08-29T12:18:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-29T12:18:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-25T00:45:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-08-25T00:45:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"    @Override","lastModifiedDate":"2025-08-25T00:45:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"    public String toString() {","lastModifiedDate":"2025-08-25T00:45:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-25T00:45:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-08-25T00:45:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-08-25T00:44:16","isFullCredit":false}],"authorContributionMap":{"brandontwj1":25}},{"path":"src/main/java/omni/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.ui;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"import omni.tasklist.TaskList;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Task;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T02:04:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"/**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":" * Handles user interface interactions and displays messages to the user.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":" * Provides methods to show various types of feedback including greetings, errors,","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":" * task status updates, and formatted task lists.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":" *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":" * @author Brandon Tan","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":" */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"public class Ui {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"    private static final String HORIZONTAL_LINE \u003d \"   _________________________________________________________\\n\";","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"    private static final String INDENT \u003d \"    \";","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"     * Constructs a new Ui object.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"    public Ui() {}","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"     * Prints the starting horizontal line for a reply.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"    public void startReply() {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"        System.out.print(HORIZONTAL_LINE);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"     * Prints the ending horizontal line for a reply.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"    public void endReply() {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"     * Displays a greeting message to the user.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"    public void greet() {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"        System.out.println(","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"                HORIZONTAL_LINE","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"                        + INDENT + \"Helloo! I\u0027m Omni!\\n\"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"                        + INDENT + \"What can I do for you?\\n\"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brandontwj1"},"content":"                        + HORIZONTAL_LINE","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brandontwj1"},"content":"        );","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brandontwj1"},"content":"     * Displays an exit message to the user.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brandontwj1"},"content":"    public void exit() {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brandontwj1"},"content":"        System.out.println(INDENT + \"Byeee! See you in a bit!\");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brandontwj1"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brandontwj1"},"content":"     * @param errorMessage The error message to display.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brandontwj1"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brandontwj1"},"content":"        System.out.println(INDENT + errorMessage);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brandontwj1"},"content":"     * Displays a loading error message.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brandontwj1"},"content":"     * @param errorMessage The loading error message to display.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brandontwj1"},"content":"    public void showLoadingError(String errorMessage) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brandontwj1"},"content":"        System.out.println(\"Error creating tasks.txt file: \" + errorMessage);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brandontwj1"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brandontwj1"},"content":"     * @param tasks The task list to display.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brandontwj1"},"content":"    public void showTasks(TaskList tasks) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brandontwj1"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brandontwj1"},"content":"            System.out.println(INDENT + \"You have no tasks... Add one!\");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brandontwj1"},"content":"            return;","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brandontwj1"},"content":"        System.out.print(INDENT + \"Here are the tasks you\u0027ve added:\\n\");","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brandontwj1"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brandontwj1"},"content":"            Task t \u003d tasks.getTask(i);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brandontwj1"},"content":"            System.out.printf(INDENT + \"%d.%s\\n\", i + 1, t);","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brandontwj1"},"content":"     * Displays a confirmation message when a task is marked as done.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"brandontwj1"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"brandontwj1"},"content":"    public void showMarked(Task task) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"brandontwj1"},"content":"        System.out.println(","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"brandontwj1"},"content":"                INDENT + \"Congrats! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"brandontwj1"},"content":"                        INDENT + \"  \" + task","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"brandontwj1"},"content":"        );","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"brandontwj1"},"content":"     * Displays a confirmation message when a task is unmarked.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"brandontwj1"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"brandontwj1"},"content":"    public void showUnmarked(Task task) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"brandontwj1"},"content":"        System.out.println(","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"brandontwj1"},"content":"                INDENT + \"Sure thing, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"brandontwj1"},"content":"                        INDENT + \"  \" + task","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"brandontwj1"},"content":"        );","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"brandontwj1"},"content":"     * Displays a confirmation message when a task is added.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"brandontwj1"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"brandontwj1"},"content":"     * @param tasks The updated task list.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"brandontwj1"},"content":"    public void showAdded(Task task, TaskList tasks) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"brandontwj1"},"content":"        String taskStr \u003d tasks.getSize() \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"brandontwj1"},"content":"        System.out.println(","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"brandontwj1"},"content":"                INDENT + \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"brandontwj1"},"content":"                        INDENT + \"  \" + task + \"\\n\" +","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"brandontwj1"},"content":"                        INDENT + \"Now you have \" + tasks.getSize() + \" \" + taskStr + \" in the list.\"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"brandontwj1"},"content":"        );","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"brandontwj1"},"content":"     * Displays a confirmation message when a task is deleted.","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"brandontwj1"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-03T23:48:58","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"brandontwj1"},"content":"    public void showErased(Task task) {","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"brandontwj1"},"content":"        System.out.println(","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"brandontwj1"},"content":"                INDENT + \"Gotchu, I\u0027ve deleted this task for you:\\n\" +","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"brandontwj1"},"content":"                        INDENT + \"  \" + task","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"brandontwj1"},"content":"        );","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"brandontwj1"},"content":"    /**","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"brandontwj1"},"content":"     * Displays the matching tasks with a given keyword.","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"brandontwj1"},"content":"     *","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"brandontwj1"},"content":"     * @param matchingTasks The tasks that contain the given keyword.","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"brandontwj1"},"content":"     */","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"brandontwj1"},"content":"    public void showMatchingTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"brandontwj1"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"brandontwj1"},"content":"            System.out.println(","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"brandontwj1"},"content":"                    INDENT + \"No tasks containing that keyword. Try another one!\"","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"brandontwj1"},"content":"            );","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"brandontwj1"},"content":"        } else {","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"brandontwj1"},"content":"            System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"brandontwj1"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"brandontwj1"},"content":"                Task t \u003d matchingTasks.get(i);","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"brandontwj1"},"content":"                System.out.printf(INDENT + \"%d.%s\\n\", i + 1, t);","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"brandontwj1"},"content":"            }","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"brandontwj1"},"content":"        }","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-04T01:20:21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false}],"authorContributionMap":{"brandontwj1":160}},{"path":"src/test/java/omni/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.parser;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"import omni.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"import omni.exceptions.OmniException;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"import omni.storage.Storage;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"import omni.tasklist.TaskList;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"import omni.ui.Ui;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"public class ParserTest {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"    @Test","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"    public void checkValidDateString_success() throws Exception {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"        Path currPath \u003d Paths.get(\".\");","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"        assertTrue(new Parser(new Ui(), new TaskList(), new Storage(currPath))","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"                        .checkValidDateString(\"01-01-2025\")","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"        );","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"        assertTrue(new Parser(new Ui(), new TaskList(), new Storage(currPath))","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"                .checkValidDateString(\"01-01-2025 1400\")","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"        );","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"    public void checkInvalidDateString_success() throws OmniException {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"        Path currPath \u003d Paths.get(\".\");","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"        InvalidArgumentException e1 \u003d assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"                () -\u003e new Parser(new Ui(), new TaskList(), new Storage(currPath))","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"                .checkValidDateString(\"01/01/2025\")","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"        );","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"        InvalidArgumentException e2 \u003d assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"                () -\u003e new Parser(new Ui(), new TaskList(), new Storage(currPath))","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"                        .checkValidDateString(\"01-01-2025 14:00\")","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"        );","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"        assertTrue(e1.getMessage().contains(\"Invalid date format!\"));","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brandontwj1"},"content":"        assertTrue(e2.getMessage().contains(\"Invalid date format!\"));","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false}],"authorContributionMap":{"brandontwj1":48}},{"path":"src/test/java/omni/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"package omni.storage;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"import omni.exceptions.CorruptedFileException;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Deadline;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Event;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Task;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"import omni.tasks.Todo;","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"public class StorageTest {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"    @Test","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"    public void loadTasks_regular_success() throws Exception {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"        Path path \u003d Paths.get(\"src\", \"test\", \"java\", \"omni\", \"storage\", \"loadTasksTest.txt\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"        tasks.add(new Todo(\"todo\", true));","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"        tasks.add(new Deadline(\"deadline\", false, \"01-01-2025\"));","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"        tasks.add(new Event(\"event\", true, \"01-01-2025\", \"02-02-2025\"));","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"        assertEquals(tasks.toString(), new Storage(path).loadTasks().toString());","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brandontwj1"},"content":"    @Test","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brandontwj1"},"content":"    public void loadTasks_incorrectType_exceptionThrown() throws Exception {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brandontwj1"},"content":"        Path path \u003d Paths.get(\"src\", \"test\", \"java\", \"omni\", \"storage\", \"incorrectTypeTest.txt\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brandontwj1"},"content":"        CorruptedFileException exception \u003d assertThrows(CorruptedFileException.class, () -\u003e {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brandontwj1"},"content":"            new Storage(path).loadTasks();","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brandontwj1"},"content":"        });","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brandontwj1"},"content":"        assertTrue(exception.getMessage().contains(\"Task type not found.\"));","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brandontwj1"},"content":"    @Test","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brandontwj1"},"content":"    public void loadTasks_incorrectLength_exceptionThrown() throws Exception {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brandontwj1"},"content":"        Path path1 \u003d Paths.get(\"src\", \"test\", \"java\", \"omni\", \"storage\", \"incorrectLengthTest.txt\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brandontwj1"},"content":"        CorruptedFileException exception1 \u003d assertThrows(CorruptedFileException.class, () -\u003e {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brandontwj1"},"content":"            new Storage(path1).loadTasks();","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brandontwj1"},"content":"        });","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brandontwj1"},"content":"        assertTrue(exception1.getMessage().contains(\"Entry length invalid.\"));","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brandontwj1"},"content":"        Path path2 \u003d Paths.get(\"src\", \"test\", \"java\", \"omni\", \"storage\", \"incorrectTodoLengthTest.txt\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brandontwj1"},"content":"        CorruptedFileException exception2 \u003d assertThrows(CorruptedFileException.class, () -\u003e {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brandontwj1"},"content":"            new Storage(path2).loadTasks();","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brandontwj1"},"content":"        });","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brandontwj1"},"content":"        assertTrue(exception2.getMessage().contains(\"Entry length for todo invalid.\"));","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brandontwj1"},"content":"        Path path3 \u003d Paths.get(\"src\", \"test\", \"java\", \"omni\", \"storage\", \"incorrectDeadlineLengthTest.txt\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brandontwj1"},"content":"        CorruptedFileException exception3 \u003d assertThrows(CorruptedFileException.class, () -\u003e {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brandontwj1"},"content":"            new Storage(path3).loadTasks();","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brandontwj1"},"content":"        });","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brandontwj1"},"content":"        assertTrue(exception3.getMessage().contains(\"Entry length for deadline invalid.\"));","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brandontwj1"},"content":"","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brandontwj1"},"content":"        Path path4 \u003d Paths.get(\"src\", \"test\", \"java\", \"omni\", \"storage\", \"incorrectEventLengthTest.txt\");","lastModifiedDate":"2025-09-04T00:46:07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brandontwj1"},"content":"        CorruptedFileException exception4 \u003d assertThrows(CorruptedFileException.class, () -\u003e {","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brandontwj1"},"content":"            new Storage(path4).loadTasks();","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brandontwj1"},"content":"        });","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brandontwj1"},"content":"        assertTrue(exception4.getMessage().contains(\"Entry length for event invalid.\"));","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brandontwj1"},"content":"    }","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brandontwj1"},"content":"}","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false}],"authorContributionMap":{"brandontwj1":67}},{"path":"src/test/java/omni/storage/incorrectDeadlineLengthTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"T | todo | 1","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"D | deadline | 0","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"E | event | 1 | 01-01-2025 | 02-02-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false}],"authorContributionMap":{"brandontwj1":3}},{"path":"src/test/java/omni/storage/incorrectEventLengthTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"T | todo | 1","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"D | deadline | 0 | 01-01-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"E | event | 1 | 01-01-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false}],"authorContributionMap":{"brandontwj1":3}},{"path":"src/test/java/omni/storage/incorrectLengthTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"T | todo | 1","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"D | deadline | 0 | 01-01-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"E | event | 1 | 01-01-2025 | 02-02-2025 | 03-03-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false}],"authorContributionMap":{"brandontwj1":3}},{"path":"src/test/java/omni/storage/incorrectTodoLengthTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"T | todo | 1 | 01-01-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"D | deadline | 0 | 01-01-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"E | event | 1 | 01-01-2025 | 02-02-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false}],"authorContributionMap":{"brandontwj1":3}},{"path":"src/test/java/omni/storage/incorrectTypeTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"T | todo | 1","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"G | deadline | 0 | 01-01-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"E | event | 1 | 01-01-2025 | 02-02-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false}],"authorContributionMap":{"brandontwj1":3}},{"path":"src/test/java/omni/storage/loadTasksTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"T | todo | 1","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"D | deadline | 0 | 01-01-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"E | event | 1 | 01-01-2025 | 02-02-2025","lastModifiedDate":"2025-09-02T17:55:44","isFullCredit":false}],"authorContributionMap":{"brandontwj1":3}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"T | make lunch | 0","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"D | do homework | 1 | 01-01-2025 1200","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"E | project meeting | 1 | 01-01-2025 1400 | 01-01-2025 1800","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"T | buy concert tickets | 1","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"T | make lunch | 1","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"D | do homework | 0 | 01-01-2025 1200","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"E | project meeting | 0 | 01-01-2025 1400 | 01-01-2025 1800","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"T | buy concert tickets | 0","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"T | make lunch | 0","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"D | do homework | 0 | 01-01-2025 1200","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"E | project meeting | 0 | 01-01-2025 1400 | 01-01-2025 1800","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"T | buy concert tickets | 0","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"T | make lunch | 0","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"D | do homework | 0 | 01-01-2025 1200","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"E | project meeting | 0 | 01-01-2025 1400 | 01-01-2025 1800","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"T | buy concert tickets | 0","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"T | make lunch | 0","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"D | do homework | 0 | 01-01-2025 1200","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"E | project meeting | 0 | 01-01-2025 1400 | 01-01-2025 1800","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"T | buy concert tickets | 0","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"T | make lunch | 0","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"D | do homework | 0 | 01-01-2025 1200","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"E | project meeting | 0 | 01-01-2025 1400 | 01-01-2025 1800","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"T | buy concert tickets | 0","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false}],"authorContributionMap":{"brandontwj1":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brandontwj1"},"content":"list","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brandontwj1"},"content":"hi","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brandontwj1"},"content":"todo","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brandontwj1"},"content":"todo make lunch","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brandontwj1"},"content":"deadline","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brandontwj1"},"content":"deadline do homework by tuesday 12pm","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brandontwj1"},"content":"deadline do homework /by tuesday 12pm","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brandontwj1"},"content":"deadline do homework /by 01-01-2025 12:00","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brandontwj1"},"content":"deadline do homework /by 01-01-2025 1200","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brandontwj1"},"content":"event","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brandontwj1"},"content":"event project meeting /from 01-01-2025 1400","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brandontwj1"},"content":"event project meeting /to 01-01-2025 1800","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brandontwj1"},"content":"event project meeting /from 01-01-2025 1400 /to 01-01-2025 1800","lastModifiedDate":"2025-09-02T01:42:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brandontwj1"},"content":"todo buy concert tickets","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brandontwj1"},"content":"mark","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brandontwj1"},"content":"mark 2","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brandontwj1"},"content":"mark 6","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"mark 4","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brandontwj1"},"content":"list","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brandontwj1"},"content":"unmark","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brandontwj1"},"content":"unmark 78","lastModifiedDate":"2025-08-25T13:20:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brandontwj1"},"content":"unmark 2","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brandontwj1"},"content":"list","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brandontwj1"},"content":"delete","lastModifiedDate":"2025-08-25T13:37:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brandontwj1"},"content":"delete 2","lastModifiedDate":"2025-08-25T13:37:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brandontwj1"},"content":"list","lastModifiedDate":"2025-08-25T13:37:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brandontwj1"},"content":"bye","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false}],"authorContributionMap":{"brandontwj1":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brandontwj1"},"content":"java -classpath ..\\bin Omni \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-25T12:22:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"-":20,"brandontwj1":1}}]
