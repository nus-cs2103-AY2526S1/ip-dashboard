[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"# Bobby project template","lastModifiedDate":"2025-08-28T22:34:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"1. After that, locate the `src/main/java/Bobby.java` file, right-click it, and choose `Run Bobby.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-08-28T22:34:17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":2,"-":24}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"# Bobby User Guide","lastModifiedDate":"2025-08-28T22:34:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":1,"-":29}},{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":2}},{"path":"src/main/java/Bobby.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T03:52:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-29T01:24:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T01:24:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class Bobby {","lastModifiedDate":"2025-08-28T22:34:17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private static final String EXIT_COMMAND \u003d \"bye\";","lastModifiedDate":"2025-08-29T01:24:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2025-08-29T03:52:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2025-08-29T15:48:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private Ui ui;","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public Bobby(String filePath) {","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try {","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (BobbyException e) {","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            ui.showLoadingError(e.getMessage());","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void run() {","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        ","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-28T22:34:17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"Hello! I\u0027m Bobby\\nHow can I help you?\");","lastModifiedDate":"2025-08-29T01:24:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-29T01:24:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            tasks \u003d storage.loadTasks();","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T01:24:21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        while (true) {","lastModifiedDate":"2025-08-29T01:24:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            try {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                String userInput \u003d scanner.nextLine();","lastModifiedDate":"2025-08-29T01:24:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                if (userInput.equalsIgnoreCase(EXIT_COMMAND)) {","lastModifiedDate":"2025-08-29T01:24:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-29T01:24:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    break;","lastModifiedDate":"2025-08-29T01:24:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                } else if (userInput.equalsIgnoreCase(LIST_COMMAND)) {","lastModifiedDate":"2025-08-29T03:52:22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        Task t \u003d tasks.get(i);","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        System.out.println((i + 1) + \". \" + t);","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    }","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                } else if (userInput.startsWith(DELETE_COMMAND)) {","lastModifiedDate":"2025-08-29T15:48:30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    handleDeleteCommand(userInput, tasks);","lastModifiedDate":"2025-08-29T15:48:30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    handleTodoCommand(userInput, tasks);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    handleDeadlineCommand(userInput, tasks);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    handleEventCommand(userInput, tasks);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    handleFindCommand(userInput, tasks);","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                } else if (!userInput.isEmpty()) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    throw new BobbyException(\"Whatdatmean\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            } catch (BobbyException e) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                System.out.println(\"An error occurred while saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        scanner.close();","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private static void handleTodoCommand(String userInput, ArrayList\u003cTask\u003e tasks) throws BobbyException {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String desc \u003d userInput.length() \u003e 4 ? userInput.substring(4).trim() : \"\";","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (desc.isEmpty()) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new BobbyException(\"Whatdatmean the description is empty\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-08-29T03:52:22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Task t \u003d new ToDo(desc);","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        tasks.add(t);","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + t);","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private static void handleDeadlineCommand(String userInput, ArrayList\u003cTask\u003e tasks) throws BobbyException {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String[] parts \u003d userInput.length() \u003e 8 ? userInput.substring(8).split(\"/by\", 2) : new String[0];","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (parts.length !\u003d 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new BobbyException(\"Whatdatmean what time does the deadline start and end?\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String desc \u003d parts[0].trim();","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String by \u003d parts[1].trim();","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Task t \u003d new Deadline(desc, by);","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        tasks.add(t);","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + t);","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private static void handleEventCommand(String userInput, ArrayList\u003cTask\u003e tasks) throws BobbyException {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String[] parts \u003d userInput.length() \u003e 5 ? userInput.substring(5).split(\"/from\", 2) : new String[0];","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (parts.length !\u003d 2 || parts[0].trim().isEmpty()) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new BobbyException(\"Whatdateventabout\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String desc \u003d parts[0].trim();","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String[] timeParts \u003d parts[1].split(\"/to\", 2);","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (timeParts.length !\u003d 2 || timeParts[0].trim().isEmpty() || timeParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new BobbyException(\"Whatdatmean what time does the event start and end?\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String from \u003d timeParts[0].trim();","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String to \u003d timeParts[1].trim();","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Task t \u003d new Event(desc, from, to);","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        tasks.add(t);","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + t);","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-28T22:34:17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T15:48:30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private static void handleDeleteCommand(String userInput, ArrayList\u003cTask\u003e tasks) throws BobbyException {","lastModifiedDate":"2025-08-29T15:48:30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String arg \u003d userInput.length() \u003e 6 ? userInput.substring(6).trim() : \"\";","lastModifiedDate":"2025-08-29T15:48:30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (arg.isEmpty()) {","lastModifiedDate":"2025-08-29T15:48:30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new BobbyException(\"OOPS!!! Please specify the task number to delete.\");","lastModifiedDate":"2025-08-29T15:48:30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-08-29T15:48:30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try {","lastModifiedDate":"2025-08-29T15:48:30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            int index \u003d Integer.parseInt(arg) - 1;","lastModifiedDate":"2025-08-29T15:48:30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-08-29T15:48:30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"OOPS!!! The task number is invalid.\");","lastModifiedDate":"2025-08-29T15:48:30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-08-29T15:48:30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            Task removed \u003d tasks.remove(index);","lastModifiedDate":"2025-08-29T15:48:30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + removed);","lastModifiedDate":"2025-08-29T15:48:30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-29T15:48:30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-29T15:48:30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new BobbyException(\"OOPS!!! Please enter a valid task number.\");","lastModifiedDate":"2025-08-29T15:48:30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-08-29T15:48:30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-29T15:48:30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private static void handleFindCommand(String userInput, ArrayList\u003cTask\u003e tasks) throws BobbyException {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String dateString \u003d userInput.length() \u003e 4 ? userInput.substring(4).trim() : \"\";","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (dateString.isEmpty()) {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new BobbyException(\"Whatdatmean the date is empty\");","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            LocalDate searchDate \u003d LocalDate.parse(dateString, formatter);","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                if (t instanceof Deadline) {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    Deadline d \u003d (Deadline) t;","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    if (d.getBy().toLocalDate().equals(searchDate)) {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        matchingTasks.add(t);","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    }","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                } else if (t instanceof Event) {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    Event e \u003d (Event) t;","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    LocalDate eventFromDate \u003d e.getFrom().toLocalDate();","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    LocalDate eventToDate \u003d e.getTo().toLocalDate();","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    if (!searchDate.isBefore(eventFromDate) \u0026\u0026 !searchDate.isAfter(eventToDate)) {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        matchingTasks.add(t);","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    }","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                System.out.println(\"No tasks bro you are free on \" + searchDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            } else {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                System.out.println(\"Bro here are the tasks on \" + searchDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \":\");","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    Task t \u003d matchingTasks.get(i);","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    System.out.println((i + 1) + \". \" + t);","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new BobbyException(\"Whatdatmean the date format is wrong. Use d/M/yyyy like 2/12/2019\");","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-08-28T22:34:17","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":181}},{"path":"src/main/java/BobbyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"// src/main/java/BobbyException.java","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class BobbyException extends Exception {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public BobbyException(String message) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        super(message);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":6}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public abstract class Command {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException;","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return false;","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":6}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private LocalDateTime by;","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public Deadline(String description, String by) throws BobbyException {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        super(description);","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            this.by \u003d LocalDateTime.parse(by, INPUT_FORMAT);","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new BobbyException(\"Whatdatmean the date and time format is wrong. Use d/M/yyyy HHmm like 2/12/2019 1800\");","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return \"[D]\";","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String toString() {","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String statusIcon \u003d isMarked ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return \"[D]\" + statusIcon + \" \" + description + \" (by: \" + by.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String toStorageString() {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return \"DEADLINE | \" + (isMarked ? \"1\" : \"0\") + \" | \" + description + \" | \" + by.format(INPUT_FORMAT);","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public static Deadline fromStorageString(String data) {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            String[] parts \u003d data.split(\" \\\\| \");","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (parts.length !\u003d 4) {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"Whatdatmean invalid storage format for Deadline\");","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            Deadline deadline \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (parts[1].equals(\"1\")) {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                deadline.mark();","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            return deadline;","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (BobbyException e) {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return by;","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":54}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":2}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class DoneCommand {","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":2}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private LocalDateTime from;","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private LocalDateTime to;","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public Event(String description, String from, String to) throws BobbyException {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        super(description);","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            this.from \u003d LocalDateTime.parse(from, INPUT_FORMAT);","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            this.to \u003d LocalDateTime.parse(to, INPUT_FORMAT);","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new BobbyException(\"Whatdatmean the date and time format is wrong. Use d/M/yyyy HHmm like 2/12/2019 1800\");","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return \"[E]\";","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String toString() {","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return getTypeIcon() + getStatus() + \" \" + getDescription() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String toStorageString() {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return \"EVENT | \" + (isMarked ? \"1\" : \"0\") + \" | \" + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return from;","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return to;","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":43}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        ui.showError(\"bye bye see you next time\")","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return true;","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":12}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class FindCommand {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":2}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class ListCommand {","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":2}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class Parser {","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public static Command parse(String fullCommand) throws BobbyException {","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String[] words \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String commandWord \u003d words[0];","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String arguments \u003d words.length \u003e 1 ? words[1] : \"\";","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        switch (commandWord) {","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            case \"bye\":","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                return new ExitCommand();","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            case \"list\":","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                return new ListCommand();","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            case \"done\":","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                return new DoneCommand(arguments);","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            case \"delete\":","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                return new DeleteCommand(arguments);","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            case \"todo\":","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                return new AddCommand(\"todo\", arguments);","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            case \"deadline\":","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                return new AddCommand(\"deadline\", arguments);","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            case \"event\":","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                return new AddCommand(\"event\", arguments);","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            case \"find\":","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                return new FindCommand(arguments);","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            default:","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"Whatdatmean i dont know that one\");","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":28}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.io.*;","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.nio.file.*;","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class Storage {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private String filePath;","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Files.createDirectories(Paths.get(filePath));","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try (BufferedWriter writer \u003d Files.newBufferedWriter(Paths.get(filePath))) {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                writer.write(task.toStorageString());","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                writer.newLine();","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"   public ArrayList\u003cTask\u003e loadTasks() throws IOException {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            return tasks; // Return empty list if file doesn\u0027t exist","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            String line;","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                String type \u003d parts[0];","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                boolean isMarked \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                String description \u003d parts[2];","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                Task task \u003d null;","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                switch (type) {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    case \"TODO\":","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        task \u003d new ToDo(description);","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        break;","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    case \"DEADLINE\":","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        String by \u003d parts[3];","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        task \u003d new Deadline(description, by);","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        break;","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    case \"EVENT\":","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        String from \u003d parts[3];","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        String to \u003d parts[4];","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        task \u003d new Event(description, from, to);","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        break;","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                if (task !\u003d null \u0026\u0026 isMarked) {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    task.mark();","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (BobbyException e) {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            System.out.println(\"error loading tasks gg: \" + e.getMessage());","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return tasks;","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"   }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":62}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public abstract class Task {","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    protected String description;","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public abstract String toStorageString();","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public static Task fromStorageString(String line) throws BobbyException {","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        switch (type) {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            case \"T\":","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                ToDo todo \u003d new ToDo(parts[2]);","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                if (parts[1].equals(\"1\")) {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    todo.mark();","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                return todo;","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            case \"D\":","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                Deadline deadline \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                if (parts[1].equals(\"1\")) {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    deadline.mark();","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                return deadline;","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            case \"E\":","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                Event event \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                if (parts[1].equals(\"1\")) {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    event.mark();","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                return event;","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            default:","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"Unknown task type: \" + type);","lastModifiedDate":"2025-09-05T12:45:01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    protected boolean isMarked;","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void mark() {","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void unmark() {","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public boolean isMarked() {","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return this.isMarked;","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return this.description;","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String getStatus() {","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return (isMarked ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public abstract String getTypeIcon();","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public abstract String toString();","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-08-29T04:36:05","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":59}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class TaskList {","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public TaskList() {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void add(Task task) {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        tasks.add(task);","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public Task remove(int index) {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return tasks;","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":25}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        super(description);","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return \"[T]\";","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String toString() {","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return getTypeIcon() + getStatus() + \" \" + getDescription();","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String toStorageString() {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return \"TODO | \" + (isMarked ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T11:58:12","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":21}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class Ui {","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"Hi im Bobby\\nHow can I help you\");","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String readCommand() {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void showLine() {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"_________\");","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void showLoadingError(String message) {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"error loading tasks gg: \" + message);","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"got error gg: \" + message);","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"todo borrow book","lastModifiedDate":"2025-08-29T15:05:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"list","lastModifiedDate":"2025-08-29T15:05:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"bye","lastModifiedDate":"2025-08-29T15:05:39","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"java -classpath ..\\bin Bobby \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-28T22:34:17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"java -classpath ../bin Bobby \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-29T15:05:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Bobby is a simple chatbot that echoes user input until the user types \"bye\".","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class Bobby {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private static final String EXIT_COMMAND \u003d \"bye\";","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"Hello! I\u0027m Bobby\\nHow can I help you?\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        while (true) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (userInput.equalsIgnoreCase(EXIT_COMMAND)) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                break;","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            } else if (userInput.equalsIgnoreCase(LIST_COMMAND)) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    Task t \u003d tasks.get(i);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    System.out.println((i + 1) + \". \" + t);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            } else if (userInput.startsWith(\"mark \")) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                try {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    int index \u003d Integer.parseInt(userInput.substring(5).trim()) - 1;","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        tasks.get(index).mark();","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + \"  \" + tasks.get(index).toString());","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    } else {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        System.out.println(\"Invalid task number.\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    System.out.println(\"Please provide a valid task number to mark.\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            } else if (userInput.startsWith(\"unmark \")) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                try {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    int index \u003d Integer.parseInt(userInput.substring(7).trim()) - 1;","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        tasks.get(index).unmark();","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + \"  \" + tasks.get(index).toString());","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    } else {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        System.out.println(\"Invalid task number.\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    System.out.println(\"Please provide a valid task number to unmark.\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            } else if (userInput.startsWith(\"todo \")) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                String desc \u003d userInput.substring(5).trim();","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                Task t \u003d new ToDo(desc);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                tasks.add(t);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + t);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            } else if (userInput.startsWith(\"deadline \")) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                String[] parts \u003d userInput.substring(9).split(\"/by\", 2);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    String desc \u003d parts[0].trim();","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    String by \u003d parts[1].trim();","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    Task t \u003d new Deadline(desc, by);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    tasks.add(t);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + t);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                } else {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    System.out.println(\"Please specify deadline in format: deadline \u003cdesc\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            } else if (userInput.startsWith(\"event \")) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                String[] parts \u003d userInput.substring(6).split(\"/from\", 2);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    String desc \u003d parts[0].trim();","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    String[] timeParts \u003d parts[1].split(\"/to\", 2);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    if (timeParts.length \u003d\u003d 2) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        String from \u003d timeParts[0].trim();","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        String to \u003d timeParts[1].trim();","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        Task t \u003d new Event(desc, from, to);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        tasks.add(t);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + t);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    } else {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        System.out.println(\"Please specify event in format: event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                } else {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    System.out.println(\"Please specify event in format: event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            } else if (!userInput.isEmpty()) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                Task t \u003d new ToDo(userInput);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                tasks.add(t);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                System.out.println(\"added: \" + userInput);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        scanner.close();","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":100,"-":37}}]
