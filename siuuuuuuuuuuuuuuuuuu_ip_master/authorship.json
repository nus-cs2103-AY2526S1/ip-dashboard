[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"# Bobby project template","lastModifiedDate":"2025-08-28T22:34:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"1. After that, locate the `src/main/java/Bobby.java` file, right-click it, and choose `Run Bobby.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-08-28T22:34:17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"checkstyle {","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    jvmArgs \u0027-ea\u0027","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    mainClass.set(\"bobby.gui.Launcher\")","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    archiveBaseName \u003d \"bobby\"","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    archiveFileName \u003d \"Bobby.jar\"","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":23,"-":38}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"T | 0 | tutorial","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"E | 0 | bowling | 22/9/2025 1400 | 22/9/2025 1600","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"T | 0 | homework","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":3}},{"path":"data/test_tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"T | 0 | read book","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"# 🎉 Bobby ChatBot User Guide","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"![Product Screenshot](Ui.png)","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003e **Bobby** is your friendly, no-nonsense personal task manager chatbot! Add todos, deadlines, and events with natural commands. Bobby keeps your life organized and your tasks safe—automatically!","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"## 🚀 Features at a Glance","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"- 📝 Add todos, deadlines, and events","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"- 📋 List all your tasks","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"- ✅ Mark and unmark tasks as done","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"- ❌ Delete tasks you no longer need","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"- 🔍 Find tasks by keyword","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"- 📅 View your schedule for a specific date","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"- 💾 Auto-save and load your data","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"- 🛑 Red error messages for mistakes","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"---","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"## ⏰ Adding deadlines","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"Add a task with a deadline. The deadline must be in the format `d/M/yyyy HHmm` (e.g., 25/12/2024 1800).","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Usage:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"deadline TASK_DESCRIPTION /by DATE_TIME","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Example:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"deadline Submit report /by 25/12/2024 1800","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Outcome:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003e 🆕 Deadline added and shown in your chat window!","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"---","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"## 📝 Adding todos","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"Add a simple todo task with a description.","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Usage:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"todo TASK_DESCRIPTION","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Example:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"todo Read book","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Outcome:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003e 🆕 Todo added and shown in your chat window!","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"---","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"## 📅 Adding events","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"Add a task with a start and end time. Both must be in the format `d/M/yyyy HHmm` (e.g., 01/07/2024 1400).","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Usage:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"event TASK_DESCRIPTION /from START_DATE_TIME /to END_DATE_TIME","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Example:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"event Project meeting /from 01/07/2024 1400 /to 01/07/2024 1600","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Outcome:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003e 🆕 Event added and shown in your chat window!","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"---","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"## 📋 Listing all tasks","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"Show all your tasks, including todos, deadlines, and events.","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Usage:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"list","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Outcome:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003e 📃 All tasks are listed in the chat window, with type, status, and details.","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"---","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"## ✅ Marking and unmarking tasks","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"Mark a task as done or not done by its number in the list.","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Usage:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"mark TASK_NUMBER","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"unmark TASK_NUMBER","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Example:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"mark 2","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Outcome:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003e ✨ Task status updated and shown in the chat window!","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"---","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"## ❌ Deleting a task","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"Delete a task by its number in the list.","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Usage:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"delete TASK_NUMBER","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Example:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"delete 3","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Outcome:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003e 🗑️ Task deleted and the updated list is shown.","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"---","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"## 🔍 Finding tasks","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"Find and list all tasks containing a given keyword. Keyword matching is case-insensitive and can be partial.","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Usage:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"find KEYWORD","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Example:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"find book","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Outcome:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003e 🔎 All matching tasks are shown in the chat window.","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"---","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"## 📆 ViewSchedule","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"See all tasks scheduled for a specific date. The date must be in the format `d/M/yyyy` (e.g., 25/12/2024).","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Usage:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"viewschedule DATE","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Example:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"viewschedule 25/12/2024","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Outcome:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003e 📅 All tasks scheduled for that date are shown in the chat window.","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"---","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"## 🚪 Exiting the application","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"Close Bobby and save your tasks.","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Usage:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"bye","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"```","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Outcome:**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003e 👋 The application closes after a short delay. Your data is safe!","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"---","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"## 📝 Command format notes","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"- Words in **UPPER_CASE** are parameters to be supplied by the user.  ","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"  Example: `deadline TASK_DESCRIPTION /by DATE_TIME`","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"- Parameters can be in any order.","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"- Extraneous parameters for commands that do not take in parameters will be ignored.","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003e **Tip:** Use the correct date/time format to avoid errors. Bobby will let you know if something\u0027s off!","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"---","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"## 🛑 Error handling","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003e **Bobby will show errors in a dialog box if your command is invalid or data is incorrect.**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003e","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003e Examples: missing parameters, invalid dates, duplicate tasks, file issues, or invalid task numbers.","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"---","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"## 💾 Saving data","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"- Your tasks are saved automatically and loaded the next time you start Bobby.","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"---","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"**Ready to get organized? Start chatting with Bobby now! 🎉**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":175,"-":16}},{"path":"src/main/java/bobby/bobbyexception/BobbyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.bobbyexception;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Custom exception class for Bobby application errors.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class BobbyException extends Exception {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private static final String DEFAULT_MESSAGE \u003d \"An error occurred in Bobby.\";","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Constructs a BobbyException with the specified error message.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param message The error message.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public BobbyException(String message) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        super(message !\u003d null ? message : DEFAULT_MESSAGE);","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Constructs a BobbyException with the specified cause.","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param cause The cause of the exception.","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public BobbyException(Throwable cause) {","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        super(DEFAULT_MESSAGE, cause);","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Constructs a BobbyException with the specified error message and cause.","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param message The error message.","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param cause The cause of the exception.","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public BobbyException(String message, Throwable cause) {","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        super(message !\u003d null ? message : DEFAULT_MESSAGE, cause);","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":36}},{"path":"src/main/java/bobby/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.command;","lastModifiedDate":"2025-09-11T19:21:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.bobbyexception.BobbyException;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.Deadline;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.Task;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:21:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Command to add a new deadline task to the task list.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private final String description;","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private final String by;","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Constructs an AddDeadlineCommand with the specified description and deadline.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param description Description of the deadline task to add.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param by Deadline date as a string.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public AddDeadlineCommand(String description, String by) {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Executes the add deadline command, adding the new task and saving changes.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param storage The storage handler for saving tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @throws BobbyException If an error occurs during task creation.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Task deadline;","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try {","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            deadline \u003d new Deadline(description, by);","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new BobbyException(\"Invalid date/time for deadline. Please use d/M/yyyy HHmm, e.g., 19/09/2025 1800, and ensure the date exists.\");","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (tasks.containsDuplicate(deadline)) {","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new BobbyException(\"A deadline with the same description and date already exists.\");","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        tasks.add(deadline);","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        response.append(\"Added: \").append(deadline.toString()).append(System.lineSeparator());","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        response.append(\"Now you have \").append(tasks.size()).append(\" tasks in the list.\");","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            storage.saveTasks(tasks.getAll());","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            response.append(System.lineSeparator())","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    .append(\"Failed to save tasks fam: \").append(e.getMessage());","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return response.toString();","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":60}},{"path":"src/main/java/bobby/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.command;","lastModifiedDate":"2025-09-11T19:21:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:21:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.bobbyexception.BobbyException;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.Event;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.Task;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Command to add a new event task to the task list.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private final String description;","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private final String from;","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private final String to;","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Constructs an AddEventCommand with the specified description, start, and end times.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param description Description of the event task to add.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param from Start date/time as a string.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param to End date/time as a string.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public AddEventCommand(String description, String from, String to) {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Executes the add event command, adding the new task and saving changes.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param storage The storage handler for saving tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @throws BobbyException If an error occurs during task creation.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Event event;","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try {","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            event \u003d new Event(description, from, to);","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (BobbyException e) {","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new BobbyException(\"Invalid date/time for event. Please use d/M/yyyy HHmm, e.g., 19/09/2025 1800, and ensure the date exists.\");","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (!event.getFrom().isBefore(event.getTo())) {","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new BobbyException(\"Event start date/time must be before end date/time.\");","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (tasks.containsDuplicate(event)) {","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new BobbyException(\"An event with the same description, start, and end already exists.\");","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        tasks.add(event);","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        response.append(\"Added: \").append(event.toString()).append(System.lineSeparator());","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        response.append(\"Now you have \").append(tasks.size()).append(\" tasks in the list.\");","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            storage.saveTasks(tasks.getAll());","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            response.append(System.lineSeparator())","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    .append(\"Failed to save tasks fam: \").append(e.getMessage());","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return response.toString();","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":67}},{"path":"src/main/java/bobby/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.command;","lastModifiedDate":"2025-09-11T19:21:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:21:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.bobbyexception.BobbyException;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.ToDo;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.Task;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Command to add a new todo task to the task list.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private final String description;","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Constructs an AddTodoCommand with the specified task description.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param description Description of the todo task to add.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert description !\u003d null : \"Description should not be null\";","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Executes the add todo command, adding the new task and saving changes.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param storage The storage handler for saving tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @throws BobbyException If an error occurs during task creation.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Task todo \u003d new ToDo(description);","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        response.append(\"Added: \").append(todo.toString()).append(System.lineSeparator());","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        response.append(\"Now you have \").append(tasks.size()).append(\" tasks in the list.\");","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            storage.saveTasks(tasks.getAll());","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            response.append(System.lineSeparator())","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    .append(\"Failed to save tasks fam: \").append(e.getMessage());","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return response.toString();","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":49}},{"path":"src/main/java/bobby/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.command;","lastModifiedDate":"2025-09-11T19:21:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:21:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.bobbyexception.BobbyException;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Abstract base class for all commands in the Bobby application.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Provides the interface for executing commands and checking for exit.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public abstract class Command {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Executes the command using the provided task list, UI, and storage.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param storage The storage handler for saving/loading tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return A string message describing the result of the command.","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @throws BobbyException If an error occurs during command execution.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Returns whether this command should exit the application.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return true if the command is an exit command, false otherwise.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return false;","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":32}},{"path":"src/main/java/bobby/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.command;","lastModifiedDate":"2025-09-11T19:21:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:21:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.bobbyexception.BobbyException;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.Task;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:21:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Command to delete a specific task from the task list.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Constructs a DeleteCommand for the specified task index.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param taskIndex Index of the task to delete.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Executes the delete command, removing the specified task and saving changes.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param storage The storage handler for saving tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @throws BobbyException If the task index is invalid.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new BobbyException(","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                \"Whatdatmean thats not a task number fam choose a number from 1 to \"","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                + tasks.size()","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            );","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Task removed \u003d tasks.delete(taskIndex);","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        response.append(\"Noted. I\u0027ve removed this task:\").append(System.lineSeparator())","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                .append(removed.toString()).append(System.lineSeparator())","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                .append(\"Now you have \").append(tasks.size()).append(\" tasks in the list.\");","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            storage.saveTasks(tasks.getAll());","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            response.append(System.lineSeparator())","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    .append(\"Failed to save tasks: \").append(e.getMessage());","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return response.toString();","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":53}},{"path":"src/main/java/bobby/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.command;","lastModifiedDate":"2025-09-11T19:21:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:21:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Command to exit the Bobby application.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Executes the exit command, displaying a farewell message.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return \"Goodbye! Have a great day.\";","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Returns true to indicate that this command will exit the application.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return true, since this is the exit command.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return true;","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-10T16:13:05","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":32}},{"path":"src/main/java/bobby/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.command;","lastModifiedDate":"2025-09-11T19:21:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.Task;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Command to find and display tasks matching a keyword.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private final String keyword;","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Constructs a FindCommand with the specified search keyword.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Executes the find command, displaying tasks that match the keyword.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        ArrayList\u003cTask\u003e found \u003d tasks.find(keyword);","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (found.isEmpty()) {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            return \"No matching tasks found, fam!\";","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        for (int i \u003d 0; i \u003c found.size(); i++) {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            response.append(System.lineSeparator())","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    .append((i + 1)).append(\". \")","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    .append(found.get(i).toString());","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return response.toString();","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":45}},{"path":"src/main/java/bobby/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.command;","lastModifiedDate":"2025-09-11T19:21:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:21:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Command to display the list of all tasks to the user.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Executes the list command, showing all tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            return \"No tasks in your list, fam!\";","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            response.append(System.lineSeparator())","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    .append((i + 1)).append(\". \")","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    .append(tasks.get(i).toString());","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return response.toString();","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":31}},{"path":"src/main/java/bobby/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.command;","lastModifiedDate":"2025-09-11T19:21:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:21:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.bobbyexception.BobbyException;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.Task;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Command to mark a specific task as done.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Constructs a DoneCommand for the specified task index.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param taskIndex Index of the task to mark as done.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Executes the done command, marking the specified task as done and saving changes.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param storage The storage handler for saving tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @throws BobbyException If the task index is invalid.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new BobbyException(\"Whatdatmean thats not a task number fam choose a number from 1 to \" + tasks.size());","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        task.markAsDone();","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        response.append(\"Nice! I\u0027ve marked this task as done:\").append(System.lineSeparator())","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                .append(task.toString());","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            storage.saveTasks(tasks.getAll());","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            response.append(System.lineSeparator())","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    .append(\"Failed to save tasks: \").append(e.getMessage());","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return response.toString();","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":50}},{"path":"src/main/java/bobby/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.command;","lastModifiedDate":"2025-09-17T21:04:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T21:04:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.bobbyexception.BobbyException;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.Task;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Constructs an UnmarkCommand for the specified task index.","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param taskIndex Index of the task to unmark as done.","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Executes the unmark command, marking the specified task as not done and saving changes.","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param storage The storage handler for saving tasks.","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @throws BobbyException If the task index is invalid.","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException {","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new BobbyException(\"What that mean that\u0027s not a task number fam choose a number from 1 to \" + tasks.size());","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        task.markAsNotDone();","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        response.append(\"OK! I\u0027ve unmarked this task:\").append(System.lineSeparator())","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                .append(task);","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try {","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            storage.saveTasks(tasks.getAll());","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            response.append(System.lineSeparator())","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    .append(\"Failed to save tasks: \").append(e.getMessage());","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return response.toString();","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-17T21:04:22","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":47}},{"path":"src/main/java/bobby/command/ViewScheduleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.command;","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.bobbyexception.BobbyException;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.Task;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Command to view the schedule for a specific date.","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class ViewScheduleCommand extends Command {","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private final LocalDate date;","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public ViewScheduleCommand(String dateStr) throws BobbyException {","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try {","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            DateTimeFormatter fmt \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            this.date \u003d LocalDate.parse(dateStr.trim(), fmt);","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new BobbyException(\"Invalid date format. Use d/M/yyyy, e.g., 19/09/2025\");","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        ArrayList\u003cTask\u003e scheduled \u003d tasks.getTasksForDate(date);","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return ui.showScheduleForDate(date, scheduled);","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":35}},{"path":"src/main/java/bobby/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.gui;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Represents a dialog box consisting of a label for text and an image for the display picture.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Used for displaying user, bot, and error messages in the chat window.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class DialogBox extends HBox{","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @FXML","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @FXML","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Constructs a DialogBox with the specified text and image.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param text The message to display in the dialog box.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param img The image to display (e.g., user or bot avatar).","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        // Add default style class","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        dialog.getStyleClass().add(\"dialog-label\");","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        // Load CSS if not already loaded","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (getStylesheets().isEmpty()) {","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            getStylesheets().add(getClass().getResource(\"/view/dialogbox.css\").toExternalForm());","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        // Removed circular clip logic as per user request","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Used for bot and error messages.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private void flip() {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Creates a dialog box for user messages.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param s The user message.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param i The user\u0027s display image.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return A DialogBox styled for user messages.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public static DialogBox getUserDialog(String s, Image i) {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        DialogBox db \u003d new DialogBox(s, i);","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        db.dialog.getStyleClass().add(\"user-dialog\");","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        db.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        db.displayPicture.setFitWidth(72);","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        db.displayPicture.setFitHeight(72);","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return db;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Creates a dialog box for bot messages.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param s The bot\u0027s message.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param i The bot\u0027s display image.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return A DialogBox styled for bot messages.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public static DialogBox getBobbyDialog(String s, Image i) {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        DialogBox db \u003d new DialogBox(s, i);","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        db.dialog.getStyleClass().add(\"bot-dialog\");","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        db.flip();","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        db.displayPicture.setFitWidth(72);","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        db.displayPicture.setFitHeight(72);","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return db;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Creates a dialog box for error messages (displayed in red).","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param text The error message.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param img The bot\u0027s display image.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return A DialogBox styled for error messages.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public static DialogBox getErrorDialog(String text, Image img) {","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        db.dialog.getStyleClass().add(\"error-dialog\");","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        db.flip();","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        db.displayPicture.setFitWidth(72);","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        db.displayPicture.setFitHeight(72);","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return db;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":114}},{"path":"src/main/java/bobby/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.gui;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class Launcher {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Launches the JavaFX application by calling Application.launch().","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":17}},{"path":"src/main/java/bobby/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.gui;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.io.File;","lastModifiedDate":"2025-09-21T21:42:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2025-09-21T21:42:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.main.Bobby;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Main entry point for the JavaFX GUI application.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private Bobby bobby;","lastModifiedDate":"2025-09-21T21:42:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Starts the JavaFX application and sets up the main window.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param stage The primary stage for this application.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            // Determine the directory of the running JAR or class files","lastModifiedDate":"2025-09-21T21:42:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            String dataFilePath \u003d getDataFilePath();","lastModifiedDate":"2025-09-21T21:42:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            bobby \u003d new Bobby(dataFilePath);","lastModifiedDate":"2025-09-21T21:42:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T21:42:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            stage.setWidth(700);","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            stage.setMinWidth(500);","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            stage.setTitle(\"Bobby\");","lastModifiedDate":"2025-09-21T18:55:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBobby(bobby);","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            stage.show();","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            // Use robust logging instead of printStackTrace","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            System.err.println(\"Failed to load main window: \" + e.getMessage());","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T21:42:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-21T21:42:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Returns the absolute path to the data/tasks.txt file, always next to the JAR or class files.","lastModifiedDate":"2025-09-21T21:42:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-21T21:42:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private String getDataFilePath() {","lastModifiedDate":"2025-09-21T21:42:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try {","lastModifiedDate":"2025-09-21T21:42:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            File jarDir \u003d new File(Main.class.getProtectionDomain().getCodeSource().getLocation().toURI()).getParentFile();","lastModifiedDate":"2025-09-21T21:42:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            File dataFile \u003d new File(jarDir, \"data/tasks.txt\");","lastModifiedDate":"2025-09-21T21:42:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            return dataFile.getAbsolutePath();","lastModifiedDate":"2025-09-21T21:42:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (URISyntaxException e) {","lastModifiedDate":"2025-09-21T21:42:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            // Fallback: use working directory","lastModifiedDate":"2025-09-21T21:42:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            return \"data/tasks.txt\";","lastModifiedDate":"2025-09-21T21:42:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-21T21:42:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-21T21:42:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":60}},{"path":"src/main/java/bobby/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.gui;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.main.Bobby;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @FXML","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @FXML","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @FXML","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private Bobby bobby;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private final Image userImage;","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private final Image bobbyImage;","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public MainWindow() {","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        // Load images with null checks to avoid NullPointerException","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        var userStream \u003d this.getClass().getResourceAsStream(\"/images/131DC1C4-04BE-41DB-B15D-5D55A1F44DA3_4_5005_c.jpeg\");","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (userStream \u003d\u003d null) {","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new IllegalStateException(\"User image resource not found\");","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        userImage \u003d new Image(userStream);","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        var bobbyStream \u003d this.getClass().getResourceAsStream(\"/images/D72925AD-1ED8-4147-8382-714C9825A3CD.jpeg\");","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (bobbyStream \u003d\u003d null) {","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new IllegalStateException(\"Duke image resource not found\");","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        bobbyImage \u003d new Image(bobbyStream);","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Initializes the main window. Binds the scroll pane to the dialog container height.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @FXML","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Injects the Bobby instance and displays the welcome message, today\u0027s schedule, and todo list.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param d The Bobby instance to use for responses.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void setBobby(Bobby d) {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        bobby \u003d d;","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        // Show welcome message in GUI using the constant from Ui","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            DialogBox.getBobbyDialog(Ui.WELCOME_MESSAGE, bobbyImage)","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        );","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        // Show today\u0027s schedule","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            DialogBox.getBobbyDialog(bobby.getTodaySchedule(), bobbyImage)","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        );","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        // Show todo list","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            DialogBox.getBobbyDialog(bobby.getTodoList(), bobbyImage)","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        );","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Handles user input: displays user and bot dialogs, processes commands, and handles exit.","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @FXML","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String response \u003d bobby.getResponse(input);","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                DialogBox.getUserDialog(input, userImage)","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        );","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        // If response indicates an error, use error dialog","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (response !\u003d null \u0026\u0026 (response.startsWith(\"Error:\") || response.startsWith(\"Whatdatmean\") || response.toLowerCase().contains(\"error\"))) {","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                DialogBox.getErrorDialog(response, bobbyImage)","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            );","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } else {","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                DialogBox.getBobbyDialog(response, bobbyImage)","lastModifiedDate":"2025-09-21T21:29:18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            );","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        // Delay and show goodbye message if the user types \u0027bye\u0027","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (input.trim().equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            delay.setOnFinished(event -\u003e {","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                javafx.stage.Stage stage \u003d (javafx.stage.Stage) dialogContainer.getScene().getWindow();","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                stage.close();","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            });","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            delay.play();","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":104}},{"path":"src/main/java/bobby/main/Bobby.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.main;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.bobbyexception.BobbyException;","lastModifiedDate":"2025-09-21T18:21:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.command.Command;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.parser.Parser;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.Task;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.ToDo;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Main class for the Bobby task manager application.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Handles initialization, command loop, and program entry point.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class Bobby {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private final Storage storage;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private final Ui ui;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Constructs a Bobby instance, loading tasks from the specified file path.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * If loading fails, initializes with an empty task list.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param filePath Path to the file storing tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public Bobby(String filePath) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert filePath !\u003d null : \"File path should not be null\";","lastModifiedDate":"2025-09-17T21:39:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            ui.showLoadingError(e.getMessage());","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Runs the main command loop, reading and executing user commands until exit.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void run() {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-12T15:38:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        while (!isExit) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            try {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                ui.showLine();","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-09-12T15:38:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2025-09-12T15:38:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2025-09-12T15:38:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            } catch (BobbyException e) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                ui.showError(\"An unexpected error occurred: \" + e.getMessage());","lastModifiedDate":"2025-09-12T15:38:05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Entry point for the Bobby application.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        new Bobby(\"data/tasks.txt\").run();","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert input !\u003d null : \"Input to getResponse should not be null\";","lastModifiedDate":"2025-09-17T21:39:31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            return command.execute(tasks, ui, storage);","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (BobbyException e) {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            return e.getMessage();","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            return \"An unexpected error occurred: \" + e.getMessage();","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Returns a formatted string of today\u0027s schedule (Deadlines and Events).","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String getTodaySchedule() {","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        ArrayList\u003cTask\u003e todayTasks \u003d tasks.getTasksForDate(LocalDate.now());","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (todayTasks.isEmpty()) {","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            return \"You have no events or deadlines scheduled for today.\";","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        sb.append(\"Here is your schedule for today (\" + LocalDate.now() + \"):\\n\");","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        int idx \u003d 1;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        for (Task t : todayTasks) {","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            sb.append(idx++).append(\". \").append(t).append(\"\\n\");","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return sb.toString().trim();","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Returns a formatted string of all ToDo tasks.","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String getTodoList() {","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d tasks.getAll();","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        ArrayList\u003cToDo\u003e todos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        for (Task t : allTasks) {","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (t instanceof ToDo) {","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                todos.add((ToDo) t);","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (todos.isEmpty()) {","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            return \"You have no todos in your list.\";","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        sb.append(\"Here is your todo list:\\n\");","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        int idx \u003d 1;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        for (ToDo todo : todos) {","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            sb.append(idx++).append(\". \").append(todo).append(\"\\n\");","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return sb.toString().trim();","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":124}},{"path":"src/main/java/bobby/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.parser;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.bobbyexception.BobbyException;","lastModifiedDate":"2025-09-21T18:21:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.command.AddDeadlineCommand;","lastModifiedDate":"2025-09-12T15:38:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.command.AddEventCommand;","lastModifiedDate":"2025-09-12T15:38:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.command.AddTodoCommand;","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.command.Command;","lastModifiedDate":"2025-09-12T15:38:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.command.DeleteCommand;","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.command.MarkCommand;","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.command.ExitCommand;","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.command.FindCommand;","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.command.ListCommand;","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.command.UnmarkCommand;","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Parses user input commands and returns the corresponding Command object.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class Parser {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private static final String[] VALID_COMMANDS \u003d {","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        \"list\", \"mark\", \"unmark\", \"delete\", \"todo\", \"deadline\", \"event\", \"find\", \"bye\", \"viewschedule\"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    };","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Parses the full user command string and returns the appropriate Command object.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param fullCommand The full command string entered by the user.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return The corresponding Command object.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @throws BobbyException If the command is invalid or arguments are missing.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public static Command parse(String fullCommand) throws BobbyException {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert fullCommand !\u003d null : \"Input command should not be null\";","lastModifiedDate":"2025-09-17T21:39:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        // Normalize input: trim and replace multiple spaces with single space","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        fullCommand \u003d fullCommand.trim().replaceAll(\"\\\\s+\", \" \");","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String[] words \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String command \u003d words[0];","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        switch (command) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        case \"list\":","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            return new ListCommand();","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        case \"mark\":","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (words.length \u003c 2 || words[1].trim().isEmpty()) {","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"Please specify the task number to mark.\");","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (!words[1].trim().matches(\"\\\\d+\")) {","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"Task number for mark must be a positive integer.\");","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            int doneIndex \u003d Integer.parseInt(words[1].trim()) - 1;","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            return new MarkCommand(doneIndex);","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        case \"unmark\":","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (words.length \u003c 2 || words[1].trim().isEmpty()) {","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"Please specify the task number to unmark.\");","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (!words[1].trim().matches(\"\\\\d+\")) {","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"Task number for unmark must be a positive integer.\");","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            int undoneIndex \u003d Integer.parseInt(words[1].trim()) - 1;","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            return new UnmarkCommand(undoneIndex);","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        case \"delete\":","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (words.length \u003c 2 || words[1].trim().isEmpty()) {","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"Please specify the task number to delete.\");","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (!words[1].trim().matches(\"\\\\d+\")) {","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"Task number for delete must be a positive integer.\");","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            int deleteIndex \u003d Integer.parseInt(words[1].trim()) - 1;","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            return new DeleteCommand(deleteIndex);","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        case \"todo\":","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (words.length \u003c 2 || words[1].trim().isEmpty()) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"Whatdatmean the description of a todo cannot be empty.\");","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (words[1].contains(\"/\")) {","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"Todo description should not contain \u0027/\u0027 characters.\");","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            return new AddTodoCommand(words[1].trim());","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        case \"deadline\":","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (words.length \u003c 2 || words[1].trim().isEmpty()) {","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"Deadline must have both a description and a /by date famalam\");","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (words[1].split(\"/by\").length \u003e 2) {","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"Deadline command should only have one /by.\");","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            String[] deadlineParts \u003d words[1].split(\"/by\", 2);","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (deadlineParts.length \u003c 2) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"Deadline must have a /by date famalam\");","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (deadlineParts[0].trim().isEmpty() || deadlineParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"Deadline must have both a description and a /by date famalam\");","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (deadlineParts[0].contains(\"/\")) {","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"Deadline description should not contain \u0027/\u0027 except for /by.\");","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            return new AddDeadlineCommand(deadlineParts[0].trim(), deadlineParts[1].trim());","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        case \"event\":","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (words.length \u003c 2 || words[1].trim().isEmpty()) {","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"Event must have a description, a /from date, and a /to date bro try again!\");","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (words[1].split(\"/from\").length \u003e 2 || words[1].split(\"/to\").length \u003e 2) {","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"Event command should only have one /from and one /to.\");","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            String[] eventParts \u003d words[1].split(\"/from|/to\");","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (eventParts.length \u003c 3) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"Event must have /from and /to dates bro try again!\");","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (eventParts[0].trim().isEmpty() || eventParts[1].trim().isEmpty() || eventParts[2].trim().isEmpty()) {","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"Event must have a description, a /from date, and a /to date bro try again!\");","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (eventParts[0].contains(\"/\")) {","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"Event description should not contain \u0027/\u0027 except for /from and /to.\");","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            return new AddEventCommand(eventParts[0].trim(), eventParts[1].trim(), eventParts[2].trim());","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        case \"find\":","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (words.length \u003c 2 || words[1].trim().isEmpty()) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"Whatdatmean the search keyword cant be empty fam\");","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            return new FindCommand(words[1].trim());","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        case \"bye\":","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        case \"viewschedule\":","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (words.length \u003c 2 || words[1].trim().isEmpty()) {","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                throw new BobbyException(\"Please specify a date in d/M/yyyy format, e.g., viewschedule 19/09/2025\");","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            return new bobby.command.ViewScheduleCommand(words[1].trim());","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        default:","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            sb.append(\"Whatdatmean! I can do these commands:\\n\");","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            sb.append(\"- list\\n\");","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            sb.append(\"- mark \u003ctask number\u003e\\n\");","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            sb.append(\"- unmark \u003ctask number\u003e\\n\");","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            sb.append(\"- delete \u003ctask number\u003e\\n\");","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            sb.append(\"- todo \u003cdescription\u003e\\n\");","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            sb.append(\"- deadline \u003cdescription\u003e /by \u003cdate time\u003e\\n\");","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            sb.append(\"- event \u003cdescription\u003e /from \u003cdate time\u003e /to \u003cdate time\u003e\\n\");","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            sb.append(\"- find \u003ckeyword\u003e\\n\");","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            sb.append(\"- viewschedule \u003cdate\u003e\\n\");","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            sb.append(\"- bye\\n\");","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new BobbyException(sb.toString().trim());","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":138}},{"path":"src/main/java/bobby/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.storage;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.Deadline;","lastModifiedDate":"2025-09-21T18:21:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.Event;","lastModifiedDate":"2025-09-21T18:21:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.Task;","lastModifiedDate":"2025-09-21T18:21:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.ToDo;","lastModifiedDate":"2025-09-21T18:21:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T18:21:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Handles saving and loading tasks to and from a file for persistence.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class Storage {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private final String filePath;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param filePath Path to the file for storing tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert filePath !\u003d null : \"File path should not be null\";","lastModifiedDate":"2025-09-17T21:39:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Saves the given list of tasks to the file.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Creates parent directories if they do not exist.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param tasks List of tasks to save.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @throws IOException If an I/O error occurs during saving.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert tasks !\u003d null : \"Tasks list should not be null\";","lastModifiedDate":"2025-09-17T21:39:31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (!Files.exists(path.getParent())) {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2025-09-11T19:19:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                writer.write(task.toSaveFormat());","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                writer.newLine();","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Returns an empty list if the file does not exist or lines are malformed.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return ArrayList of loaded tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @throws IOException If an I/O error occurs during loading.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            return tasks; // Return empty list if file doesn\u0027t exist","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2025-09-10T17:09:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            String line;","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                String type \u003d parts[0];","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                String description \u003d parts[2];","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                Task task \u003d null;","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                try {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    switch (type) {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    case \"T\":","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        task \u003d new ToDo(description);","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        break;","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    case \"D\":","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        String by \u003d parts[3];","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        task \u003d new Deadline(description, by);","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        break;","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    case \"E\":","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        String from \u003d parts[3];","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        String to \u003d parts[4];","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        task \u003d new Event(description, from, to);","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        break;","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    default:","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        // Unknown type, skip","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        break;","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    // Skip malformed lines","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    continue;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                if (task !\u003d null \u0026\u0026 isDone) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    task.markAsDone();","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return tasks;","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Returns an empty list if the file does not exist or lines are malformed.","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return ArrayList of loaded tasks.","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @throws IOException If an I/O error occurs during loading.","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public ArrayList\u003cTask\u003e loadTasksWithWarnings(ArrayList\u003cString\u003e warnings) throws IOException {","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            return tasks; // Return empty list if file doesn\u0027t exist","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            String line;","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            int lineNum \u003d 1;","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                String type \u003d parts[0];","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                boolean isDone \u003d parts.length \u003e 1 \u0026\u0026 parts[1].equals(\"1\");","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                String description \u003d parts.length \u003e 2 ? parts[2] : \"\";","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                Task task \u003d null;","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                try {","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    switch (type) {","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    case \"T\":","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        task \u003d new ToDo(description);","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        break;","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    case \"D\":","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        if (parts.length \u003c 4) throw new Exception(\"Malformed deadline line\");","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        String by \u003d parts[3];","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        task \u003d new Deadline(description, by);","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        break;","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    case \"E\":","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        if (parts.length \u003c 5) throw new Exception(\"Malformed event line\");","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        String from \u003d parts[3];","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        String to \u003d parts[4];","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        task \u003d new Event(description, from, to);","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        break;","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    default:","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        warnings.add(\"Line \" + lineNum + \": Unknown task type, skipped.\");","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        break;","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    }","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    warnings.add(\"Line \" + lineNum + \": Malformed or corrupt, skipped. Reason: \" + e.getMessage());","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    continue;","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                if (task !\u003d null \u0026\u0026 isDone) {","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    task.markAsDone();","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                lineNum++;","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new IOException(\"Could not read tasks file: \" + e.getMessage(), e);","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return tasks;","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-21T19:36:14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-05T03:20:32","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":168}},{"path":"src/main/java/bobby/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.task;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Represents a task with a deadline, storing the due date and description.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private LocalDateTime by;","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\");","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Constructs a Deadline task with the given description and deadline string.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param by Deadline date as a string in d/M/yyyy HHmm format.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public Deadline(final String description, final String by) {","lastModifiedDate":"2025-09-18T12:13:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        super(description);","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert description !\u003d null : \"Description should not be null\";","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert by !\u003d null : \"Deadline date should not be null\";","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.by \u003d LocalDateTime.parse(by, INPUT_FORMAT);","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert this.by !\u003d null : \"Deadline date should not be null\";","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Constructs a Deadline task with the given description and deadline date.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param by Deadline date as a LocalDateTime.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public Deadline(final String description, final LocalDateTime by) {","lastModifiedDate":"2025-09-18T12:13:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        super(description);","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert description !\u003d null : \"Description should not be null\";","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert by !\u003d null : \"Deadline date should not be null\";","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Returns the deadline date of this task.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return The deadline as a LocalDateTime.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert this.by !\u003d null : \"Deadline date should not be null\";","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return by;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Returns a string representation of the deadline task for display.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return String representation of the deadline task.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String toString() {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert this.by !\u003d null : \"Deadline date should not be null\";","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return \"[D]\" + (isDone ? \"[X] \" : \"[ ] \") + description + \" (by: \" + by.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Returns a string representation of the deadline task for saving to file.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return Save format string for the deadline task.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert this.by !\u003d null : \"Deadline date should not be null\";","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return String.format(\"D | %d | %s | %s\", isDone ? 1 : 0, description, by.format(INPUT_FORMAT));","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":72}},{"path":"src/main/java/bobby/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.task;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.bobbyexception.BobbyException;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Represents an event task with a start and end time.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class Event extends Task {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\");","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Constructs an Event task with the given description and string dates.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Throws BobbyException if the date format is invalid.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param from Start date as a string in d/M/yyyy HHmm format.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param to End date as a string in d/M/yyyy HHmm format.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @throws BobbyException If the date format is invalid.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public Event(String description, String from, String to) throws BobbyException {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        super(description);","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        try {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            this.from \u003d LocalDateTime.parse(from, INPUT_FORMAT);","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            this.to \u003d LocalDateTime.parse(to, INPUT_FORMAT);","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            throw new BobbyException(\"Whatdatmean invalid date format fam. Use d/M/yyyy HHmm like 2/12/2019 1800...\");","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Constructs an Event task with the given description and LocalDateTime dates.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param from Start date as a LocalDateTime.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param to End date as a LocalDateTime.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        super(description);","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Returns the start date of the event.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return The start date as a LocalDateTime.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return from;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Returns the end date of the event.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return The end date as a LocalDateTime.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return to;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Returns a string representation of the event task for display.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return String representation of the event task.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String toString() {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String status \u003d isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String fromStr \u003d from.format(OUTPUT_FORMAT);","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String toStr \u003d to.format(OUTPUT_FORMAT);","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return \"[E]\" + status + description + \" (from: \" + fromStr + \" to: \" + toStr + \")\";","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Returns a string representation of the event task for saving to file.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return Save format string for the event task.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String fromStr \u003d from.format(INPUT_FORMAT);","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String toStr \u003d to.format(INPUT_FORMAT);","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return String.format(\"E | %d | %s | %s | %s\", isDone ? 1 : 0, description, fromStr, toStr);","lastModifiedDate":"2025-09-13T03:31:41","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":92}},{"path":"src/main/java/bobby/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.task;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Abstract base class representing a task in the Bobby application.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Stores description and completion status, and provides common operations.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public abstract class Task {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    protected String description;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Constructs a new Task with the given description.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public Task(String description) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert this.description \u003d\u003d null : \"Task description should not be null\";","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Marks this task as done.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert !isDone : \"Task should be marked as done\";","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert isDone : \"Task should be marked as done before unmarking\";","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Returns whether this task is marked as done.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return true if the task is done, false otherwise.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return isDone;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Returns the description of this task.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return The task description.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String getDescription() {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return description;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Returns a string representation of the task for display.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return String representation of the task.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public abstract String toString();","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Returns a string representation of the task for saving to file.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return Save format string for the task.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public abstract String toSaveFormat();","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":66}},{"path":"src/main/java/bobby/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.task;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T18:21:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Manages a list of Task objects, providing operations to add, delete, retrieve, and search tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class TaskList {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public TaskList() {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Constructs a TaskList with the given list of tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param tasks Initial list of tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param task Task to add.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void add(Task task) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        tasks.add(task);","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Deletes the task at the specified index.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param index Index of the task to delete.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return The deleted Task.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public Task delete(int index) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param index Index of the task to retrieve.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return The Task at the given index.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return Number of tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public int size() {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return tasks.size();","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Returns the list of all tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return ArrayList of all tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public ArrayList\u003cTask\u003e getAll() {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return tasks;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Finds tasks whose descriptions contain the given keyword.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param keyword Keyword to search for.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return ArrayList of matching tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public ArrayList\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        ArrayList\u003cTask\u003e found \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                found.add(task);","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return found;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Returns a list of tasks scheduled for the given date.","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Includes Deadlines due on that date and Events occurring on that date.","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * ToDos are not included as they have no date.","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param date The date to filter tasks by.","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return List of tasks scheduled for the date.","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public ArrayList\u003cTask\u003e getTasksForDate(LocalDate date) {","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                Deadline d \u003d (Deadline) task;","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                if (d.getBy().toLocalDate().equals(date)) {","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    result.add(task);","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                Event e \u003d (Event) task;","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                LocalDate from \u003d e.getFrom().toLocalDate();","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                LocalDate to \u003d e.getTo().toLocalDate();","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                if ((date.isEqual(from) || date.isAfter(from)) \u0026\u0026 (date.isEqual(to) || date.isBefore(to))) {","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    result.add(task);","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return result;","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Checks if a duplicate of the given task exists in the list.","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param task Task to check for duplication.","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return true if a duplicate exists, false otherwise.","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public boolean containsDuplicate(Task task) {","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (t.equals(task)) {","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                return true;","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return false;","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-21T20:21:17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":133}},{"path":"src/main/java/bobby/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.task;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Represents a todo task with a description.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Constructs a ToDo task with the given description.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public ToDo(final String description) {","lastModifiedDate":"2025-09-18T12:13:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        super(description);","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Returns a string representation of the todo task for display.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return String representation of the todo task.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String toString() {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return \"[T]\" + (isDone ? \"[X] \" : \"[ ] \") + description;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Returns a string representation of the todo task for saving to file.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return Save format string for the todo task.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return String.format(\"T | %d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":35}},{"path":"src/main/java/bobby/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.ui;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.Task;","lastModifiedDate":"2025-09-21T18:21:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T18:21:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Handles user interaction by displaying messages and reading input from the console.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class Ui {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public static final String WELCOME_MESSAGE \u003d \"hi im Bobby\\nWhat can I do for you today?\";","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Displays the welcome message to the user.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(WELCOME_MESSAGE);","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param msg The error message to display.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void showError(String msg) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert msg !\u003d null : \"Error message should not be null\";","lastModifiedDate":"2025-09-17T21:39:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"Error: \" + msg);","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Displays a message indicating a task has been marked as done.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void showTaskMarkedDone(Task task) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2025-09-17T21:39:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"Task marked as done:\");","lastModifiedDate":"2025-09-12T15:38:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void showTaskMarkedNotDone(Task task) {","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2025-09-17T21:39:31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"Task marked as not done:\");","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T21:12:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Displays a message indicating a task has been added.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param size The new size of the task list.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void showTaskAdded(Task task, int size) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2025-09-17T21:39:31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"Task added:\");","lastModifiedDate":"2025-09-12T15:38:05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"You now have \" + size + \" tasks in the list.\");","lastModifiedDate":"2025-09-12T15:38:05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Displays a message indicating a task has been deleted.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param size The new size of the task list.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void showTaskDeleted(Task task, int size) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2025-09-17T21:39:31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"Task removed:\");","lastModifiedDate":"2025-09-12T15:38:05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"You now have \" + size + \" tasks in the list.\");","lastModifiedDate":"2025-09-12T15:38:05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Displays the list of all tasks.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param tasks The list of tasks to display.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void showTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert tasks !\u003d null : \"Tasks list should not be null\";","lastModifiedDate":"2025-09-17T21:39:31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2025-09-17T21:39:31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            assert task !\u003d null : \"Task in list should not be null\";","lastModifiedDate":"2025-09-17T21:39:31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            System.out.println((i + 1) + \". \" + task);","lastModifiedDate":"2025-09-17T21:39:31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Displays the list of found tasks matching a search keyword.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param tasks The list of matching tasks to display.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void showFoundTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assert tasks !\u003d null : \"Tasks list should not be null\";","lastModifiedDate":"2025-09-17T21:39:31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2025-09-17T21:39:31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            assert task !\u003d null : \"Task in found list should not be null\";","lastModifiedDate":"2025-09-17T21:39:31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            System.out.println((i + 1) + \". \" + task);","lastModifiedDate":"2025-09-17T21:39:31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Displays a separator line.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void showLine() {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"____________________________\");","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Reads the next command from the user input.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return The command string entered by the user.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String readCommand() {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Displays an error message when loading tasks fails.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param msg The error message to display.","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-12T11:50:25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void showLoadingError(String msg) {","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"Error loading tasks: \" + msg);","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Displays a generic message to the user.","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param msg The message to display.","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void showMessage(String msg) {","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(msg);","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Displays a message indicating a task has been updated.","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param task The task that was updated.","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return The update confirmation message.","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String showUpdate(Task task) {","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String msg \u003d \"Task updated:\\n  \" + task;","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(msg);","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return msg;","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    /**","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * Displays the schedule for a specific date.","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     *","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param date The date for which to show the schedule.","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @param tasks The list of tasks scheduled for that date.","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     * @return The schedule as a string (for GUI or CLI).","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"     */","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String showScheduleForDate(LocalDate date, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        sb.append(\"Schedule for \").append(date).append(\":\\n\");","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            sb.append(\"No tasks scheduled for this date.\\n\");","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        } else {","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                sb.append((i + 1)).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String result \u003d sb.toString();","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.print(result);","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return result;","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-19T14:56:15","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-11T19:22:15","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":173}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"               maxWidth\u003d\"320.0\" styleClass\u003d\"dialog-label\" /\u003e","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"72.0\" fitWidth\u003d\"72.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        \u003cInsets bottom\u003d\"8.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    \u003cspacing\u003e8.0\u003c/spacing\u003e","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"700.0\"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            fx:controller\u003d\"bobby.gui.MainWindow\"","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            stylesheets\u003d\"/view/mainwindow.css\"","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            styleClass\u003d\"main-window-root\"\u003e","lastModifiedDate":"2025-09-21T19:27:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    vbarPolicy\u003d\"ALWAYS\"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    fitToWidth\u003d\"true\"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    AnchorPane.topAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    AnchorPane.bottomAnchor\u003d\"41.0\"\u003e","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                   AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                   AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                   AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-17T17:38:41","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":47}},{"path":"src/test/java/bobby/BobbyExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby;","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.bobbyexception.BobbyException;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"class BobbyExceptionTest {","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Test","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    void constructor_message_setsMessage() {","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        BobbyException e \u003d new BobbyException(\"error!\");","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertEquals(\"error!\", e.getMessage());","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Test","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    void constructor_nullMessage_usesDefault() {","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        BobbyException e \u003d new BobbyException((String) null);","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertEquals(\"An error occurred in Bobby.\", e.getMessage());","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Test","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    void constructor_cause_setsCause() {","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Throwable cause \u003d new RuntimeException(\"cause\");","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        BobbyException e \u003d new BobbyException(cause);","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertEquals(cause, e.getCause());","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertEquals(\"An error occurred in Bobby.\", e.getMessage());","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Test","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    void constructor_messageAndCause_setsBoth() {","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Throwable cause \u003d new RuntimeException(\"cause\");","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        BobbyException e \u003d new BobbyException(\"msg\", cause);","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertEquals(\"msg\", e.getMessage());","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertEquals(cause, e.getCause());","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":36}},{"path":"src/test/java/bobby/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby;","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.Deadline;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"class DeadlineTest {","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Test","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    void constructor_validInput_success() {","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Deadline d \u003d new Deadline(\"submit report\", \"18/9/2025 2359\");","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertEquals(\"submit report\", d.getDescription());","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertEquals(LocalDateTime.of(2025, 9, 18, 23, 59), d.getBy());","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Test","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    void toString_and_toSaveFormat() {","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Deadline d \u003d new Deadline(\"submit report\", \"18/9/2025 2359\");","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String str \u003d d.toString();","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertTrue(str.contains(\"submit report\"));","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertTrue(str.contains(\"by:\"));","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String save \u003d d.toSaveFormat();","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertTrue(save.startsWith(\"D | 0 | submit report | 18/9/2025 2359\"));","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Test","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    void markAsDone_and_markAsNotDone() {","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Deadline d \u003d new Deadline(\"submit report\", \"18/9/2025 2359\");","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        d.markAsDone();","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertTrue(d.isDone());","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        d.markAsNotDone();","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertFalse(d.isDone());","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":35}},{"path":"src/test/java/bobby/DummyTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby;","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.Task;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class DummyTask extends Task {","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public DummyTask(String description) {","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        super(description);","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String toString() {","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return \"[D]\" + (isDone ? \"[X] \" : \"[ ] \") + description;","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Override","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":19}},{"path":"src/test/java/bobby/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby;","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.command.ListCommand;","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.bobbyexception.BobbyException;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.parser.Parser;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class ParserTest {","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Test","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void testParseValidCommand() throws BobbyException {","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertInstanceOf(ListCommand.class, parser.parse(\"list\"));","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Test","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void testParseInvalidCommand() {","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertThrows(BobbyException.class, () -\u003e parser.parse(\"unknown\"));","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Test","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void testTodoMissingDescription() {","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        BobbyException ex \u003d assertThrows(BobbyException.class, () -\u003e Parser.parse(\"todo \"));","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertTrue(ex.getMessage().contains(\"the description of a todo cannot be empty\"));","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Test","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void testDeadlineMissingBy() {","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        BobbyException ex \u003d assertThrows(BobbyException.class, () -\u003e Parser.parse(\"deadline finish homework\"));","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertTrue(ex.getMessage().contains(\"Deadline must have a /by date famalam\"));","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Test","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void testEventMissingFromOrTo() {","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        BobbyException ex \u003d assertThrows(BobbyException.class, () -\u003e Parser.parse(\"event party /from 1/1/2025 1200\"));","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertTrue(ex.getMessage().contains(\"Event must have /from and /to dates bro try again!\"));","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Test","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void testFindMissingKeyword() {","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        BobbyException ex \u003d assertThrows(BobbyException.class, () -\u003e Parser.parse(\"find \"));","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertTrue(ex.getMessage().contains(\"the search keyword cant be empty fam\"));","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Test","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void testViewScheduleMissingDate() {","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        BobbyException ex \u003d assertThrows(BobbyException.class, () -\u003e Parser.parse(\"viewschedule \"));","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertTrue(ex.getMessage().contains(\"Please specify a date in d/M/yyyy format\"));","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Test","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void testUnknownCommandShowsHelp() {","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        BobbyException ex \u003d assertThrows(BobbyException.class, () -\u003e Parser.parse(\"foobar\"));","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertTrue(ex.getMessage().contains(\"Here are the commands I understand\"));","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertTrue(ex.getMessage().contains(\"date time\"));","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":58}},{"path":"src/test/java/bobby/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby;","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.Deadline;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.Task;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.ToDo;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import org.junit.jupiter.api.*;","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.io.File;","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"class StorageTest {","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private static final String TEST_FILE \u003d \"data/test_storage_tasks.txt\";","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    void cleanUp() {","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        File file \u003d new File(TEST_FILE);","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        if (file.exists()) file.delete();","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Test","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    void saveAndLoadTasks_success() throws Exception {","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Storage storage \u003d new Storage(TEST_FILE);","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        tasks.add(new ToDo(\"task1\"));","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        tasks.add(new Deadline(\"task2\", \"18/9/2025 1200\"));","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        ArrayList\u003cTask\u003e loaded \u003d storage.loadTasks();","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertEquals(2, loaded.size());","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertTrue(loaded.get(0) instanceof ToDo);","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertTrue(loaded.get(1) instanceof Deadline);","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertEquals(\"task1\", loaded.get(0).getDescription());","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertEquals(\"task2\", loaded.get(1).getDescription());","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Test","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    void loadTasks_fileNotExist_returnsEmptyList() throws Exception {","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Storage storage \u003d new Storage(\"data/nonexistent_file.txt\");","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        ArrayList\u003cTask\u003e loaded \u003d storage.loadTasks();","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertNotNull(loaded);","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertTrue(loaded.isEmpty());","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":44}},{"path":"src/test/java/bobby/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby;","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.Task;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class TaskListTest {","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Test","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void testAddAndSize() {","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        list.add(new DummyTask(\"task1\"));","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertEquals(1, list.size());","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Test","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void testDeleteAndGet() {","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        DummyTask t1 \u003d new DummyTask(\"task1\");","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        list.add(t1);","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertEquals(t1, list.get(0));","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertEquals(t1, list.delete(0));","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertEquals(0, list.size());","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Test","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public void testFind() {","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        DummyTask t1 \u003d new DummyTask(\"read book\");","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        DummyTask t2 \u003d new DummyTask(\"write code\");","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        list.add(t1);","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        list.add(t2);","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        ArrayList\u003cTask\u003e found \u003d list.find(\"book\");","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertTrue(found.contains(t1));","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertFalse(found.contains(t2));","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-12T11:17:46","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":38}},{"path":"src/test/java/bobby/command/AddTodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"package bobby.command;","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.TaskList;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.task.ToDo;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2025-09-21T18:24:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"class AddTodoCommandTest {","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Test","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    void execute_addsTodoToTaskList() throws Exception {","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Storage storage \u003d new Storage(\"data/test_tasks.txt\");","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        AddTodoCommand cmd \u003d new AddTodoCommand(\"read book\");","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        String response \u003d cmd.execute(tasks, ui, storage);","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertTrue(tasks.get(0) instanceof ToDo);","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertTrue(response.contains(\"Added:\"));","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertTrue(response.contains(\"read book\"));","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    @Test","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    void execute_nullDescription_throwsAssertionError() {","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        assertThrows(AssertionError.class, () -\u003e new AddTodoCommand(null));","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-09-18T11:47:45","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"todo borrow book","lastModifiedDate":"2025-08-29T15:05:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"list","lastModifiedDate":"2025-08-29T15:05:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"bye","lastModifiedDate":"2025-08-29T15:05:39","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"java -classpath ..\\bin Bobby \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-28T22:34:17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"java -classpath ../bin Bobby \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-29T15:05:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"/**","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" * Bobby is a simple chatbot that echoes user input until the user types \"bye\".","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":" */","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"public class Bobby {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private static final String EXIT_COMMAND \u003d \"bye\";","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        System.out.println(\"Hello! I\u0027m Bobby\\nHow can I help you?\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        while (true) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            if (userInput.equalsIgnoreCase(EXIT_COMMAND)) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                break;","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            } else if (userInput.equalsIgnoreCase(LIST_COMMAND)) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    Task t \u003d tasks.get(i);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    System.out.println((i + 1) + \". \" + t);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            } else if (userInput.startsWith(\"mark \")) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                try {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    int index \u003d Integer.parseInt(userInput.substring(5).trim()) - 1;","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        tasks.get(index).mark();","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + \"  \" + tasks.get(index).toString());","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    } else {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        System.out.println(\"Invalid task number.\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    System.out.println(\"Please provide a valid task number to mark.\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            } else if (userInput.startsWith(\"unmark \")) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                try {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    int index \u003d Integer.parseInt(userInput.substring(7).trim()) - 1;","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        tasks.get(index).unmark();","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + \"  \" + tasks.get(index).toString());","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    } else {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        System.out.println(\"Invalid task number.\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    System.out.println(\"Please provide a valid task number to unmark.\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            } else if (userInput.startsWith(\"todo \")) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                String desc \u003d userInput.substring(5).trim();","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                Task t \u003d new ToDo(desc);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                tasks.add(t);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + t);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            } else if (userInput.startsWith(\"deadline \")) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                String[] parts \u003d userInput.substring(9).split(\"/by\", 2);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    String desc \u003d parts[0].trim();","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    String by \u003d parts[1].trim();","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    Task t \u003d new Deadline(desc, by);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    tasks.add(t);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + t);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                } else {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    System.out.println(\"Please specify deadline in format: deadline \u003cdesc\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            } else if (userInput.startsWith(\"event \")) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                String[] parts \u003d userInput.substring(6).split(\"/from\", 2);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    String desc \u003d parts[0].trim();","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    String[] timeParts \u003d parts[1].split(\"/to\", 2);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    if (timeParts.length \u003d\u003d 2) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        String from \u003d timeParts[0].trim();","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        String to \u003d timeParts[1].trim();","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        Task t \u003d new Event(desc, from, to);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        tasks.add(t);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + t);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    } else {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                        System.out.println(\"Please specify event in format: event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                } else {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                    System.out.println(\"Please specify event in format: event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            } else if (!userInput.isEmpty()) {","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                Task t \u003d new ToDo(userInput);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                tasks.add(t);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"                System.out.println(\"added: \" + userInput);","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"            }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"        scanner.close();","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"    }","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"siuuuuuuuuuuuuuuuuuu"},"content":"}","lastModifiedDate":"2025-08-29T15:34:59","isFullCredit":false}],"authorContributionMap":{"siuuuuuuuuuuuuuuuuuu":100,"-":37}}]
