[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"# John project template","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"1. After that, locate the `src/main/java/John.java` file, right-click it, and choose `Run John.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"-":24,"hylinny":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"     mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hylinny"},"content":"//    mainClass.set(\"John\")","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hylinny"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hylinny"},"content":"    archiveBaseName \u003d \"john\"","lastModifiedDate":"2025-08-28T00:32:07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hylinny"},"content":"checkstyle {","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hylinny"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"-":39,"hylinny":23}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"# John User Guide","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"-":29,"hylinny":1}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"    @FXML","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"    @FXML","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":"        try {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"            fxmlLoader.setController(this); // Set this class as the controller for DialogBox.fxml","lastModifiedDate":"2025-09-06T11:55:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hylinny"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hylinny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hylinny"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hylinny"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hylinny"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hylinny"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hylinny"},"content":"    private void flip() {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hylinny"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hylinny"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hylinny"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hylinny"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hylinny"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hylinny"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hylinny"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hylinny"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hylinny"},"content":"        db.flip();","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hylinny"},"content":"        return db;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false}],"authorContributionMap":{"hylinny":58}},{"path":"src/main/java/John.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"import john.commands.Command;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"import john.commands.CommandFactory;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"import john.exceptions.JohnException;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"import john.parser.Parser;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"import john.storage.Storage;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"import john.tasks.TaskList;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":" * Entry point and command loop for the John task manager application.","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":" * This class handles user input processing and delegates command execution","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":" * to appropriate command objects using the command pattern.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"public class John {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"    /** The list of tasks managed by this application */","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"    private String filePath \u003d \"./data/john.txt\";","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"    private TaskList tasklist;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"     * Constructs a John application instance bound to a storage file path.","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"     * It attempts to load tasks from storage, falling back to an empty list","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"    public John() {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":"        try {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":"            tasklist \u003d new TaskList(storage.load());","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"        } catch (JohnException e) {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"            tasklist \u003d new TaskList();","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hylinny"},"content":"     * Generates a response for the user\u0027s chat message by parsing the input","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hylinny"},"content":"     * and executing the appropriate command.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hylinny"},"content":"     * @param input The user\u0027s input string containing command and parameters","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hylinny"},"content":"     * @return A string response to be displayed to the user","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hylinny"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hylinny"},"content":"        try {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hylinny"},"content":"            String[] pair \u003d Parser.parse(input);","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hylinny"},"content":"            String commandString \u003d pair[0];","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hylinny"},"content":"            String description \u003d pair[1];","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hylinny"},"content":"            Command command \u003d CommandFactory.getCommand(commandString);","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hylinny"},"content":"            return command.execute(tasklist, storage, description);","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hylinny"},"content":"        } catch (JohnException e) {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hylinny"},"content":"            return \"Error: \" + e.getMessage();","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hylinny"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hylinny"},"content":"            return \"Error: Please input a valid command.\";","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hylinny"},"content":"     * Main method to start the John application.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hylinny"},"content":"     * @param args Command line arguments (not used)","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hylinny"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hylinny"},"content":"        new John();","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false}],"authorContributionMap":{"hylinny":63}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"public class Launcher {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false}],"authorContributionMap":{"hylinny":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":" * A GUI for John chatbot using FXML.","lastModifiedDate":"2025-09-06T11:55:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"    private John john \u003d new John();","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"    @Override","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"        try {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJohn(john);  // inject the John instance","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"            stage.show();","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false}],"authorContributionMap":{"hylinny":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"    @FXML","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"    @FXML","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"    @FXML","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"    @FXML","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"    private John john;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"    @FXML","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hylinny"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hylinny"},"content":"                DialogBox.getDukeDialog(\"Hi! How can I help you?\", dukeImage)","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hylinny"},"content":"        );","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hylinny"},"content":"    /** Injects the John instance */","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hylinny"},"content":"    public void setJohn(John d) {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hylinny"},"content":"        john \u003d d;","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hylinny"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing John\u0027s reply and then appends them to","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hylinny"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hylinny"},"content":"    @FXML","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hylinny"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hylinny"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hylinny"},"content":"        String response \u003d john.getResponse(input);","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hylinny"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hylinny"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hylinny"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hylinny"},"content":"        );","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hylinny"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hylinny"},"content":"        if (input.trim().equals(\"bye\")) {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hylinny"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hylinny"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hylinny"},"content":"            Platform.exit();","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false}],"authorContributionMap":{"hylinny":61}},{"path":"src/main/java/john/JohnOld.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"package john;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-27T02:08:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-20T13:10:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T15:39:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"import john.exceptions.JohnException;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"import john.parser.Parser;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"import john.storage.Storage;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"import john.tasks.Deadline;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":"import john.tasks.Event;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":"import john.tasks.Task;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":"import john.tasks.TaskList;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"import john.tasks.Todo;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"import john.ui.JohnUi;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-20T13:10:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":" * Entry point and command loop for the John task manager application. REPLACED.","lastModifiedDate":"2025-09-06T11:54:28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"public class JohnOld {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-20T13:40:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"    private TaskList tasklist;","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"    private JohnUi ui;","lastModifiedDate":"2025-08-26T15:24:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T15:24:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"    enum Command {","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":"        LIST, MARK, UNMARK, DELETE, TODO, DEADLINE, EVENT, FIND","lastModifiedDate":"2025-08-28T22:36:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"     * Constructs a John application instance bound to a storage file path.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hylinny"},"content":"     * It attempts to load tasks from storage, falling back to an empty list","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hylinny"},"content":"     * and showing a UI message if loading fails.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hylinny"},"content":"     * @param filePath path to the persistence file used by {@link Storage}","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hylinny"},"content":"    public JohnOld(String filePath) {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hylinny"},"content":"        ui \u003d new JohnUi();","lastModifiedDate":"2025-08-26T15:24:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hylinny"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hylinny"},"content":"        try {","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hylinny"},"content":"            tasklist \u003d new TaskList(storage.load());","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hylinny"},"content":"        } catch (JohnException e) {","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hylinny"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hylinny"},"content":"            tasklist \u003d new TaskList();","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-26T15:24:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T15:24:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hylinny"},"content":"     * Starts the interactive command loop, processing user input until \"bye\".","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hylinny"},"content":"     * Commands are parsed by {@link Parser} and may modify the {@link TaskList}","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hylinny"},"content":"     * and underlying {@link Storage}.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hylinny"},"content":"    public void run() {","lastModifiedDate":"2025-08-26T15:24:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hylinny"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-20T13:10:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hylinny"},"content":"        ui.printLine();","lastModifiedDate":"2025-08-26T15:24:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hylinny"},"content":"        System.out.println(\"Hello! I\u0027m John. :)\\nWhat can I do for you?\");","lastModifiedDate":"2025-08-27T02:08:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hylinny"},"content":"        ui.printLine();","lastModifiedDate":"2025-08-26T15:24:49","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hylinny"},"content":"        System.out.println();","lastModifiedDate":"2025-08-20T13:10:54","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-20T13:10:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hylinny"},"content":"        String input \u003d sc.nextLine().trim();","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hylinny"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2025-08-20T13:10:54","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hylinny"},"content":"            ui.printLine();","lastModifiedDate":"2025-08-26T15:24:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hylinny"},"content":"            try {","lastModifiedDate":"2025-08-20T22:58:30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hylinny"},"content":"                String[] pair \u003d Parser.parse(input);","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hylinny"},"content":"                String command \u003d pair[0];","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hylinny"},"content":"                String description \u003d pair[1];","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hylinny"},"content":"                Command cmd \u003d Command.valueOf(command.toUpperCase());","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hylinny"},"content":"                Task task;","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hylinny"},"content":"                switch (cmd) {","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hylinny"},"content":"                case LIST:","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hylinny"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-08-20T21:03:53","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hylinny"},"content":"                    tasklist.listTasks();","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hylinny"},"content":"                    break;","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hylinny"},"content":"                case FIND:","lastModifiedDate":"2025-08-28T22:36:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hylinny"},"content":"                    if (description.isBlank()) {","lastModifiedDate":"2025-08-28T22:36:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hylinny"},"content":"                        throw new JohnException(\"Find command must include a keyword.\");","lastModifiedDate":"2025-08-28T22:36:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hylinny"},"content":"                    }","lastModifiedDate":"2025-08-28T22:36:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hylinny"},"content":"                    System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-08-28T22:36:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hylinny"},"content":"                    int count \u003d 0;","lastModifiedDate":"2025-08-28T22:36:51","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hylinny"},"content":"                    for (int i \u003d 0; i \u003c tasklist.getSize(); i++) {","lastModifiedDate":"2025-08-28T22:36:51","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hylinny"},"content":"                        Task t \u003d tasklist.getTask(i);","lastModifiedDate":"2025-08-28T22:36:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hylinny"},"content":"                        if (t.getDescription().contains(description)) {","lastModifiedDate":"2025-08-28T22:36:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hylinny"},"content":"                            System.out.println((count + 1) + \". \" + t);","lastModifiedDate":"2025-08-28T22:36:51","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hylinny"},"content":"                            count++;","lastModifiedDate":"2025-08-28T22:36:51","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hylinny"},"content":"                        }","lastModifiedDate":"2025-08-28T22:36:51","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hylinny"},"content":"                    }","lastModifiedDate":"2025-08-28T22:36:51","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hylinny"},"content":"                    if (count \u003d\u003d 0) {","lastModifiedDate":"2025-08-28T22:36:51","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hylinny"},"content":"                        System.out.println(\"No matching tasks found.\");","lastModifiedDate":"2025-08-28T22:36:51","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hylinny"},"content":"                    }","lastModifiedDate":"2025-08-28T22:36:51","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hylinny"},"content":"                    break;","lastModifiedDate":"2025-08-28T22:36:51","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hylinny"},"content":"                case MARK:","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hylinny"},"content":"                    if (!description.matches(\"\\\\d+\")) {","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hylinny"},"content":"                        throw new JohnException(\"Please input a valid task number.\");","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hylinny"},"content":"                    }","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hylinny"},"content":"                    task \u003d tasklist.getTask(Integer.parseInt(description) - 1);","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hylinny"},"content":"                    task.markDone();","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hylinny"},"content":"                    storage.save(tasklist);","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hylinny"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-08-20T19:48:41","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hylinny"},"content":"                    System.out.println(task);","lastModifiedDate":"2025-08-20T19:48:41","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hylinny"},"content":"                    break;","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"hylinny"},"content":"                case UNMARK:","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"hylinny"},"content":"                    if (!description.matches(\"\\\\d+\")) {","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"hylinny"},"content":"                        throw new JohnException(\"Please input a valid task number.\");","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"hylinny"},"content":"                    }","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"hylinny"},"content":"                    task \u003d tasklist.getTask(Integer.parseInt(description) - 1);","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"hylinny"},"content":"                    task.markUndone();","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"hylinny"},"content":"                    storage.save(tasklist);","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"hylinny"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-08-20T19:48:41","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"hylinny"},"content":"                    System.out.println(task);","lastModifiedDate":"2025-08-20T19:48:41","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"hylinny"},"content":"                    break;","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"hylinny"},"content":"                case DELETE:","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"hylinny"},"content":"                    if (!description.matches(\"\\\\d+\")) {","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"hylinny"},"content":"                        throw new JohnException(\"Please input a valid task number.\");","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"hylinny"},"content":"                    }","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"hylinny"},"content":"                    task \u003d tasklist.getTask(Integer.parseInt(description) - 1);","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"hylinny"},"content":"                    tasklist.deleteTask(Integer.parseInt(description) - 1);","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"hylinny"},"content":"                    storage.save(tasklist);","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"hylinny"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-08-21T10:46:23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"hylinny"},"content":"                    System.out.println(task);","lastModifiedDate":"2025-08-21T10:46:23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"hylinny"},"content":"                    System.out.println(\"You now have \" + tasklist.getSize() + \" tasks in the list.\");","lastModifiedDate":"2025-08-21T10:46:23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"hylinny"},"content":"                    break;","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"hylinny"},"content":"                case TODO:","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"hylinny"},"content":"                    if (description.isBlank()) {","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"hylinny"},"content":"                        throw new JohnException(\"Todo command must include a description.\");","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"hylinny"},"content":"                    }","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"hylinny"},"content":"                    Todo todo \u003d new Todo(description);","lastModifiedDate":"2025-08-20T21:03:53","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"hylinny"},"content":"                    tasklist.addTask(todo);","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"hylinny"},"content":"                    storage.save(tasklist);","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"hylinny"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-20T21:03:53","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"hylinny"},"content":"                    System.out.println(todo);","lastModifiedDate":"2025-08-20T21:03:53","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"hylinny"},"content":"                    System.out.println(\"You now have \" + tasklist.getSize() + \" tasks in the list.\");","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"hylinny"},"content":"                    break;","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"hylinny"},"content":"                case DEADLINE:","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"hylinny"},"content":"                    Deadline deadline \u003d Parser.getDeadline(description);","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"hylinny"},"content":"                    tasklist.addTask(deadline);","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"hylinny"},"content":"                    storage.save(tasklist);","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"hylinny"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-20T21:03:53","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"hylinny"},"content":"                    System.out.println(deadline);","lastModifiedDate":"2025-08-20T21:03:53","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"hylinny"},"content":"                    System.out.println(\"You now have \" + tasklist.getSize() + \" tasks in the list.\");","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"hylinny"},"content":"                    break;","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"hylinny"},"content":"                case EVENT:","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"hylinny"},"content":"                    Event event \u003d Parser.getEvent(description);","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"hylinny"},"content":"                    tasklist.addTask(event);","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"hylinny"},"content":"                    storage.save(tasklist);","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"hylinny"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-20T21:03:53","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"hylinny"},"content":"                    System.out.println(event);","lastModifiedDate":"2025-08-20T21:03:53","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"hylinny"},"content":"                    System.out.println(\"You now have \" + tasklist.getSize() + \" tasks in the list.\");","lastModifiedDate":"2025-08-20T21:03:53","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"hylinny"},"content":"                    break;","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"hylinny"},"content":"                default:","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"hylinny"},"content":"                    throw new JohnException(\"This line should not be reached.\");","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"hylinny"},"content":"                }","lastModifiedDate":"2025-08-20T13:40:27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"hylinny"},"content":"            } catch (JohnException e) {","lastModifiedDate":"2025-08-20T22:58:30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"hylinny"},"content":"                System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2025-08-20T22:58:30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"hylinny"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-08-26T01:32:27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"hylinny"},"content":"                System.out.println(\"Error: Please input a valid command.\");","lastModifiedDate":"2025-08-21T22:03:09","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"hylinny"},"content":"            }","lastModifiedDate":"2025-08-20T22:58:30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"hylinny"},"content":"            ui.printLine();","lastModifiedDate":"2025-08-26T15:24:49","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"hylinny"},"content":"            System.out.println();","lastModifiedDate":"2025-08-20T13:10:54","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"hylinny"},"content":"            input \u003d sc.nextLine().trim();","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-08-20T13:10:54","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"hylinny"},"content":"        ui.printLine();","lastModifiedDate":"2025-08-26T15:24:49","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"hylinny"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-20T13:00:53","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"hylinny"},"content":"        ui.printLine();","lastModifiedDate":"2025-08-26T15:24:49","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"hylinny"},"content":"        sc.close();","lastModifiedDate":"2025-08-20T13:10:54","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-20T13:00:53","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-20T13:00:53","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"hylinny"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-26T15:24:49","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"hylinny"},"content":"        new JohnOld(\"./data/john.txt\").run();","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-26T15:24:49","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-08-20T13:00:53","isFullCredit":false}],"authorContributionMap":{"hylinny":169}},{"path":"src/main/java/john/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"package john.commands;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"import john.exceptions.JohnException;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"import john.storage.Storage;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"import john.tasks.TaskList;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":" * Represents an executable command in the John task manager application.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":" * All command implementations should extend this interface to provide","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":" * consistent command execution behavior.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"public interface Command {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"     * Executes the command with the given parameters.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"     * @param taskList The task list to operate on","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"     * @param storage The storage system for persistence","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"     * @param description The command description or parameters","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"     * @return A string response to be displayed to the user","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"     * @throws JohnException If the command execution fails","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"    String execute(TaskList taskList, Storage storage, String description) throws JohnException;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false}],"authorContributionMap":{"hylinny":24}},{"path":"src/main/java/john/commands/CommandFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"package john.commands;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"import java.util.Map;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":" * Factory class for creating command objects based on command strings.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":" * Maintains a mapping of command names to their corresponding command implementations.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":"public class CommandFactory {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":"    private static final Map\u003cString, Command\u003e commands \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"    static {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"        commands.put(\"LIST\", new ListCommand());","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"        commands.put(\"FIND\", new FindCommand());","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"        commands.put(\"MARK\", new MarkCommand());","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"        commands.put(\"UNMARK\", new UnmarkCommand());","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"        commands.put(\"DELETE\", new DeleteCommand());","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"        commands.put(\"TODO\", new TodoCommand());","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"        commands.put(\"DEADLINE\", new DeadlineCommand());","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"        commands.put(\"EVENT\", new EventCommand());","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":"     * Creates a command object based on the given command string.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"     * @param commandString The command string (case-insensitive)","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"     * @return The corresponding command object","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"     * @throws IllegalArgumentException If the command string is not recognized","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hylinny"},"content":"    public static Command getCommand(String commandString) {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hylinny"},"content":"        Command command \u003d commands.get(commandString.toUpperCase());","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hylinny"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hylinny"},"content":"            throw new IllegalArgumentException(\"Unknown command: \" + commandString);","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hylinny"},"content":"        return command;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false}],"authorContributionMap":{"hylinny":38}},{"path":"src/main/java/john/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"package john.commands;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"import john.exceptions.JohnException;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"import john.parser.Parser;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"import john.storage.Storage;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"import john.tasks.Deadline;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"import john.tasks.TaskList;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":" * Command to create and add a new Deadline task to the task list.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":" * Deadline tasks have a description and a due date/time.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"     * Executes the deadline command to create and add a new Deadline task.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"     * @param taskList The task list to add the new deadline to","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"     * @param storage The storage system for persisting changes","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"     * @param description The description and due date information for the deadline","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"     * @return A confirmation message with the added task details and updated count","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"     * @throws JohnException If parsing the deadline fails or saving to storage fails","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"    @Override","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":"    public String execute(TaskList taskList, Storage storage, String description) throws JohnException {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":"        Deadline deadline \u003d Parser.getDeadline(description);","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"        storage.save(taskList);","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hylinny"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hylinny"},"content":"                deadline + \"\\n\" +","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hylinny"},"content":"                \"You now have \" + taskList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false}],"authorContributionMap":{"hylinny":34}},{"path":"src/main/java/john/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"package john.commands;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"import john.exceptions.JohnException;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"import john.storage.Storage;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"import john.tasks.Task;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"import john.tasks.TaskList;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":" * Command to delete a task from the task list.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":" * Removes the specified task and saves the changes to storage.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"     * Executes the delete command to remove a specified task from the list.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"     * @param taskList The task list containing the task to delete","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"     * @param storage The storage system for persisting changes","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"     * @param description The task number to delete (1-indexed)","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"     * @return A confirmation message with the deleted task details and updated count","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"     * @throws JohnException If the task number is invalid","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"    @Override","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"    public String execute(TaskList taskList, Storage storage, String description) throws JohnException {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":"        if (!description.matches(\"\\\\d+\")) {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":"            throw new JohnException(\"Please input a valid task number.\");","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"        Task task \u003d taskList.getTask(Integer.parseInt(description) - 1);","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hylinny"},"content":"        taskList.deleteTask(Integer.parseInt(description) - 1);","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hylinny"},"content":"        storage.save(taskList);","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hylinny"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hylinny"},"content":"                task + \"\\n\" +","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hylinny"},"content":"                \"You now have \" + taskList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false}],"authorContributionMap":{"hylinny":37}},{"path":"src/main/java/john/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"package john.commands;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"import john.exceptions.JohnException;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"import john.parser.Parser;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"import john.storage.Storage;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"import john.tasks.Event;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"import john.tasks.TaskList;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":" * Command to create and add a new Event task to the task list.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":" * Event tasks have a description and a time period (from/to).","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"     * Executes the event command to create and add a new Event task.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"     * @param taskList The task list to add the new event to","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"     * @param storage The storage system for persisting changes","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"     * @param description The description and time period information for the event","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"     * @return A confirmation message with the added task details and updated count","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"     * @throws JohnException If parsing the event fails or saving to storage fails","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"    @Override","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":"    public String execute(TaskList taskList, Storage storage, String description) throws JohnException {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":"        Event event \u003d Parser.getEvent(description);","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"        taskList.addTask(event);","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"        storage.save(taskList);","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hylinny"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hylinny"},"content":"                event + \"\\n\" +","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hylinny"},"content":"                \"You now have \" + taskList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false}],"authorContributionMap":{"hylinny":34}},{"path":"src/main/java/john/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"package john.commands;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"import john.exceptions.JohnException;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"import john.storage.Storage;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"import john.tasks.Task;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"import john.tasks.TaskList;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":" * Command to find tasks containing a specific keyword.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":" * Searches through all task descriptions and returns matching tasks.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"     * Executes the find command to search for tasks containing the given keyword.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"     * @param taskList The task list to search through","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"     * @param storage The storage system (not used for finding)","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"     * @param description The keyword to search for in task descriptions","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"     * @return A formatted string containing all matching tasks","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"     * @throws JohnException If no keyword is provided","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"    @Override","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"    public String execute(TaskList taskList, Storage storage, String description) throws JohnException {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":"            throw new JohnException(\"Find command must include a keyword.\");","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hylinny"},"content":"        output.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hylinny"},"content":"        int count \u003d 0;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hylinny"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hylinny"},"content":"            Task t \u003d taskList.getTask(i);","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hylinny"},"content":"            if (t.getDescription().contains(description)) {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hylinny"},"content":"                output.append((count + 1)).append(\". \").append(t).append(\"\\n\");","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hylinny"},"content":"                count++;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hylinny"},"content":"            }","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hylinny"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hylinny"},"content":"            output.append(\"No matching tasks found.\\n\");","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hylinny"},"content":"        return output.toString();","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false}],"authorContributionMap":{"hylinny":47}},{"path":"src/main/java/john/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"package john.commands;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"import john.storage.Storage;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"import john.tasks.TaskList;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":" * Command to list all tasks in the task list.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":" * Displays all tasks with their current status and details.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"     * Executes the list command to display all tasks.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"     * @param taskList The task list containing all tasks","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"     * @param storage The storage system (not used for listing)","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"     * @param description The command description (not used for listing)","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"     * @return A formatted string containing all tasks in the list","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"    @Override","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"    public String execute(TaskList taskList, Storage storage, String description) {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"        return \"Here are the tasks in your list:\\n\" + taskList.listTasks();","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false}],"authorContributionMap":{"hylinny":24}},{"path":"src/main/java/john/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"package john.commands;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"import john.exceptions.JohnException;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"import john.storage.Storage;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"import john.tasks.Task;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"import john.tasks.TaskList;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":" * Command to mark a task as completed.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":" * Updates the task status and saves the changes to storage.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"     * Executes the mark command to mark a specified task as done.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"     * @param taskList The task list containing the task to mark","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"     * @param storage The storage system for persisting changes","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"     * @param description The task number to mark (1-indexed)","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"     * @return A confirmation message with the marked task details","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"     * @throws JohnException If the task number is invalid","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"    @Override","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"    public String execute(TaskList taskList, Storage storage, String description) throws JohnException {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":"        if (!description.matches(\"\\\\d+\")) {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":"            throw new JohnException(\"Please input a valid task number.\");","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"        Task task \u003d taskList.getTask(Integer.parseInt(description) - 1);","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hylinny"},"content":"        task.markDone();","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hylinny"},"content":"        storage.save(taskList);","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hylinny"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task + \"\\n\";","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false}],"authorContributionMap":{"hylinny":35}},{"path":"src/main/java/john/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"package john.commands;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"import john.exceptions.JohnException;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"import john.storage.Storage;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"import john.tasks.TaskList;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"import john.tasks.Todo;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":" * Command to create and add a new Todo task to the task list.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":" * Todo tasks are simple tasks with just a description.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"     * Executes the todo command to create and add a new Todo task.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"     * @param taskList The task list to add the new todo to","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"     * @param storage The storage system for persisting changes","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"     * @param description The description of the todo task","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"     * @return A confirmation message with the added task details and updated count","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"     * @throws JohnException If no description is provided","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"     * @throws JohnException If saving to storage fails","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"    @Override","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":"    public String execute(TaskList taskList, Storage storage, String description) throws JohnException {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"            throw new JohnException(\"Todo command must include a description.\");","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hylinny"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hylinny"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hylinny"},"content":"        storage.save(taskList);","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hylinny"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hylinny"},"content":"                todo + \"\\n\" +","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hylinny"},"content":"                \"You now have \" + taskList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false}],"authorContributionMap":{"hylinny":38}},{"path":"src/main/java/john/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"package john.commands;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"import john.exceptions.JohnException;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"import john.storage.Storage;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"import john.tasks.Task;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"import john.tasks.TaskList;","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":" * Command to unmark a task, setting it back to incomplete status.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":" * Updates the task status and saves the changes to storage.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"     * Executes the unmark command to mark a specified task as not done.","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"     * @param taskList The task list containing the task to unmark","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"     * @param storage The storage system for persisting changes","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"     * @param description The task number to unmark (1-indexed)","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"     * @return A confirmation message with the unmarked task details","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"     * @throws JohnException If the task number is invalid","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"    @Override","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"    public String execute(TaskList taskList, Storage storage, String description) throws JohnException {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":"        if (!description.matches(\"\\\\d+\")) {","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":"            throw new JohnException(\"Please input a valid task number.\");","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"        Task task \u003d taskList.getTask(Integer.parseInt(description) - 1);","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hylinny"},"content":"        task.markUndone();","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hylinny"},"content":"        storage.save(taskList);","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hylinny"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hylinny"},"content":"                task + \"\\n\";","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-09-12T17:42:11","isFullCredit":false}],"authorContributionMap":{"hylinny":36}},{"path":"src/main/java/john/exceptions/JohnException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"package john.exceptions;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T15:39:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":" * Custom exception type for John application errors.","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"public class JohnException extends Exception {","lastModifiedDate":"2025-08-20T22:58:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"    public JohnException(String message) {","lastModifiedDate":"2025-08-20T22:58:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"        super(message);","lastModifiedDate":"2025-08-20T22:58:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-20T22:58:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-08-20T22:58:30","isFullCredit":false}],"authorContributionMap":{"hylinny":10}},{"path":"src/main/java/john/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"package john.parser;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"import john.exceptions.JohnException;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"import john.tasks.Deadline;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"import john.tasks.Event;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":" * Parses user input into commands and domain objects.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":" * This helper exposes only static methods and performs validation,","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":" * throwing {@link JohnException} when a command is malformed.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"public class Parser {","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"    // Helper class to parse user input, static methods only","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"     * Splits the raw input into a command word and the remaining description.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"     * @param input full user input line","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"     * @return a pair [command, description] where description may be empty","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"     * @throws IllegalArgumentException if the input cannot be split (should be rare)","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"    public static String[] parse(String input) throws IllegalArgumentException {","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"        String[] userInput \u003d input.split(\" \", 2);","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":"        String command \u003d userInput[0];","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":"        String description \u003d (userInput.length \u003e 1) ? userInput[1].trim() : \"\";","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"        return new String[] {command, description};","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hylinny"},"content":"     * Parses a deadline description in the form:","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hylinny"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hylinny"},"content":"     *   description /by dateTime","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hylinny"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hylinny"},"content":"     * @param description user-provided description including \"/by\"","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hylinny"},"content":"     * @return a constructed {@link Deadline}","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hylinny"},"content":"     * @throws JohnException if required parts are missing or invalid","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hylinny"},"content":"    public static Deadline getDeadline(String description) throws JohnException {","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hylinny"},"content":"        String[] deadlineDescription \u003d description.split(\"\\\\s*/by\\\\s*\", 2);","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hylinny"},"content":"        if (deadlineDescription.length \u003c 2","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hylinny"},"content":"                || deadlineDescription[0].isBlank()","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hylinny"},"content":"                || deadlineDescription[1].isBlank()","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hylinny"},"content":"                || deadlineDescription[1].contains(\"/by\")) { // ensure only one /by","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hylinny"},"content":"            throw new JohnException(\"Deadline command must include a description and a deadline.\");","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hylinny"},"content":"        return new Deadline(deadlineDescription[0], deadlineDescription[1]);","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hylinny"},"content":"     * Parses an event description in the form:","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hylinny"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hylinny"},"content":"     *   description /from startDateTime /to endDateTime","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hylinny"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hylinny"},"content":"     * @param description user-provided description including \"/from\" and \"/to\"","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hylinny"},"content":"     * @return a constructed {@link Event}","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hylinny"},"content":"     * @throws JohnException if keywords are missing, misordered, or parts are blank/invalid","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hylinny"},"content":"    public static Event getEvent(String description) throws JohnException {","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hylinny"},"content":"        int fromIndex \u003d description.indexOf(\"/from\");","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hylinny"},"content":"        int toIndex \u003d description.indexOf(\"/to\");","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hylinny"},"content":"        if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1 || fromIndex \u003e\u003d toIndex) {","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hylinny"},"content":"            throw new JohnException(\"Event command must include /from and /to keywords, in the correct order.\");","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hylinny"},"content":"        String[] eventDescription \u003d description.split(\"\\\\s*/from\\\\s*|\\\\s*/to\\\\s*\", 3);","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hylinny"},"content":"        if (eventDescription.length \u003c 3","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hylinny"},"content":"                || eventDescription[0].isBlank()","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hylinny"},"content":"                || eventDescription[1].isBlank()","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hylinny"},"content":"                || eventDescription[2].isBlank()","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hylinny"},"content":"                || eventDescription[2].contains(\"/from\")","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hylinny"},"content":"                || eventDescription[2].contains(\"/to\")) {","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hylinny"},"content":"            throw new JohnException(\"Event command must include a description, start date, and end date.\");","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hylinny"},"content":"        return new Event(eventDescription[0], eventDescription[1], eventDescription[2]);","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-08-27T01:13:46","isFullCredit":false}],"authorContributionMap":{"hylinny":79}},{"path":"src/main/java/john/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"package john.storage;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"import java.io.File;","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":"import john.exceptions.JohnException;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":"import john.tasks.Deadline;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"import john.tasks.Event;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"import john.tasks.Task;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"import john.tasks.TaskList;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"import john.tasks.Todo;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":" * Handles persistence of tasks to and from a flat file on disk.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":" * The storage format is one line per task using pipe-separated fields, e.g.:","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":" * T | 0 | description","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":" * D | 1 | description | 2019-12-02T18:00","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":" * E | 0 | description | 2019-12-02T18:00 | 2019-12-02T20:00","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"public class Storage {","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"    private String filePath;","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hylinny"},"content":"     * Creates a new Storage instance bound to the specified file path.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hylinny"},"content":"     * Parent directories are created on first save/load if missing.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hylinny"},"content":"     * @param filePath absolute or relative path to the data file","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hylinny"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hylinny"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hylinny"},"content":"     * Loads tasks from the backing file. If the file does not exist, it is created","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hylinny"},"content":"     * and an empty list is returned. Corrupted lines are skipped with a message.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hylinny"},"content":"     * @return the list of tasks loaded from disk (possibly empty)","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hylinny"},"content":"     * @throws JohnException if an IO error occurs while accessing the file","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hylinny"},"content":"    public ArrayList\u003cTask\u003e load() throws JohnException {","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hylinny"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hylinny"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hylinny"},"content":"        try {","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hylinny"},"content":"            if (!f.exists()) {","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hylinny"},"content":"                f.getParentFile().mkdirs();","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hylinny"},"content":"                f.createNewFile();","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hylinny"},"content":"                return tasks;","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hylinny"},"content":"            }","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hylinny"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hylinny"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hylinny"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hylinny"},"content":"                try {","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hylinny"},"content":"                    Task task \u003d parseTask(line);","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hylinny"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hylinny"},"content":"                } catch (JohnException e) {","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hylinny"},"content":"                    System.out.println(\"Skipped corrupted line: \" + e.getMessage()); // skip corrupted line","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hylinny"},"content":"                }","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hylinny"},"content":"            }","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hylinny"},"content":"            s.close();","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hylinny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hylinny"},"content":"            throw new JohnException(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hylinny"},"content":"        return tasks;","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hylinny"},"content":"     * Parses a single line from the storage file into a {@link Task}.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hylinny"},"content":"     * @param line the raw line content","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hylinny"},"content":"     * @return a reconstructed Task instance","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hylinny"},"content":"     * @throws JohnException if the line is malformed or references an unknown type","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hylinny"},"content":"    private static Task parseTask(String line) throws JohnException {","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hylinny"},"content":"        String[] parts \u003d line.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hylinny"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hylinny"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hylinny"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hylinny"},"content":"        Task task;","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hylinny"},"content":"        switch (type) {","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hylinny"},"content":"        case \"T\":","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hylinny"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hylinny"},"content":"            break;","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hylinny"},"content":"        case \"D\":","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hylinny"},"content":"            String date \u003d parts[3];","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hylinny"},"content":"            task \u003d new Deadline(description, date);","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hylinny"},"content":"            break;","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hylinny"},"content":"        case \"E\":","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hylinny"},"content":"            String startDate \u003d parts[3];","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hylinny"},"content":"            String endDate \u003d parts[4];","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hylinny"},"content":"            task \u003d new Event(description, startDate, endDate);","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"hylinny"},"content":"            break;","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"hylinny"},"content":"        default:","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"hylinny"},"content":"            throw new JohnException(\"Unknown task type in file: \" + type);","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"hylinny"},"content":"        if (isDone) {","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"hylinny"},"content":"            task.markDone();","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"hylinny"},"content":"        return task;","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"hylinny"},"content":"     * Saves all tasks to the backing file, overwriting existing content.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"hylinny"},"content":"     * @param tasklist the tasks to persist","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"hylinny"},"content":"    public void save(TaskList tasklist) {","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"hylinny"},"content":"        try {","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"hylinny"},"content":"            List\u003cTask\u003e tasks \u003d tasklist.getTasks();","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"hylinny"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"hylinny"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"hylinny"},"content":"                fw.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"hylinny"},"content":"            }","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"hylinny"},"content":"            fw.close();","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"hylinny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"hylinny"},"content":"            System.err.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false}],"authorContributionMap":{"hylinny":127}},{"path":"src/main/java/john/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"package john.tasks;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T15:39:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"import java.util.Objects;","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"import john.exceptions.JohnException;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T15:39:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":" * A task with a single deadline date/time.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"    protected LocalDateTime endDate;","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"     * Constructs a Deadline with the given description and deadline string.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"     * The date/time string is parsed using {@link Task#parseDateTime(String)}.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"     * @param description description of the task","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"     * @param endDate     deadline (date/time) in a supported format","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"     * @throws JohnException if the date/time cannot be parsed","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"    public Deadline(String description, String endDate) throws JohnException {","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"        super(description);","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":"        this.endDate \u003d this.parseDateTime(endDate);","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"     * Returns the serialized representation of this deadline for storage.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hylinny"},"content":"     * @return a one-line string suitable for persistence","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hylinny"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-26T01:32:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hylinny"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + endDate;","lastModifiedDate":"2025-08-26T01:32:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-26T01:32:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T01:32:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hylinny"},"content":"    @Override","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hylinny"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hylinny"},"content":"        return \"[D]\"","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hylinny"},"content":"                + super.toString()","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hylinny"},"content":"                + \" (by: \"","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hylinny"},"content":"                + endDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"))","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hylinny"},"content":"                + \")\";","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hylinny"},"content":"    @Override","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hylinny"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hylinny"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hylinny"},"content":"            return true;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hylinny"},"content":"        if (!(o instanceof Deadline other)) {","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hylinny"},"content":"            return false;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hylinny"},"content":"        return Objects.equals(description, other.description)","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hylinny"},"content":"                \u0026\u0026 Objects.equals(endDate, other.endDate)","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hylinny"},"content":"                \u0026\u0026 isDone \u003d\u003d other.isDone;","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hylinny"},"content":"    @Override","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hylinny"},"content":"    public int hashCode() {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hylinny"},"content":"        // Purpose of overriding hashcode is to ensure that two equal objects have the same hashcode","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hylinny"},"content":"        // (e.g. if they are added into a HashSet)","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hylinny"},"content":"        return Objects.hash(description, endDate, isDone);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false}],"authorContributionMap":{"hylinny":66}},{"path":"src/main/java/john/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"package john.tasks;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T15:39:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"import john.exceptions.JohnException;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T15:39:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":" * A task representing an event that spans a start and end date/time.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"    protected LocalDateTime startDate;","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"    protected LocalDateTime endDate;","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"     * Constructs an Event with the given description, start and end date/time strings.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"     * The date/time strings are parsed using {@link Task#parseDateTime(String)}.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"     * @param description description of the event","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"     * @param startDate   start date/time in a supported format","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"     * @param endDate     end date/time in a supported format","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"     * @throws JohnException if either date/time cannot be parsed","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"    public Event(String description, String startDate, String endDate) throws JohnException {","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":"        super(description);","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":"        this.startDate \u003d this.parseDateTime(startDate);","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"        this.endDate \u003d this.parseDateTime(endDate);","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hylinny"},"content":"     * Returns the serialized representation of this event for storage.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hylinny"},"content":"     * @return a one-line string suitable for persistence","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hylinny"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-26T01:32:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hylinny"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + startDate + \" | \" + endDate;","lastModifiedDate":"2025-08-26T01:32:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-26T01:32:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T01:32:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hylinny"},"content":"    @Override","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hylinny"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hylinny"},"content":"        return \"[E]\"","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hylinny"},"content":"                + super.toString()","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hylinny"},"content":"                + \" (from: \"","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hylinny"},"content":"                + startDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"))","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hylinny"},"content":"                + \" to: \"","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hylinny"},"content":"                + endDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"))","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hylinny"},"content":"                + \")\";","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hylinny"},"content":"    @Override","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hylinny"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hylinny"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hylinny"},"content":"            return true;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hylinny"},"content":"        if (!(o instanceof Event other)) {","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hylinny"},"content":"            return false;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hylinny"},"content":"        return description.equals(other.description)","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hylinny"},"content":"                \u0026\u0026 startDate.equals(other.startDate)","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hylinny"},"content":"                \u0026\u0026 endDate.equals(other.endDate)","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hylinny"},"content":"                \u0026\u0026 isDone \u003d\u003d other.isDone;","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hylinny"},"content":"    @Override","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hylinny"},"content":"    public int hashCode() {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hylinny"},"content":"        return java.util.Objects.hash(description, startDate, endDate, isDone);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false}],"authorContributionMap":{"hylinny":68}},{"path":"src/main/java/john/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"package john.tasks;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T15:39:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"import john.exceptions.JohnException;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T15:39:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":" * Base abstraction for all task types in John.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":" * A Task has a textual {@code description} and a completion status","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":" * represented by {@code isDone}. Subclasses provide additional data","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":" * (e.g., dates) and must implement {@link #toFileString()} for","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":" * persistence.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"public abstract class Task {","lastModifiedDate":"2025-08-26T01:32:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"    // Supported date/time formats for parsing user input and stored data.","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"    private static final DateTimeFormatter[] DATE_TIME_FORMATS \u003d new DateTimeFormatter[] {","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"        DateTimeFormatter.ISO_LOCAL_DATE_TIME, // 2019-12-02T18:00. Official format, also saved in local file.","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"        DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"), // 2019-12-02 1800","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"        DateTimeFormatter.ofPattern(\"d/M/uuuu HHmm\"), // 2/12/2019 1800","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":"    };","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"    private static final DateTimeFormatter[] DATE_ONLY_FORMATS \u003d new DateTimeFormatter[] {","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"        DateTimeFormatter.ISO_LOCAL_DATE, // 2019-12-02. Official format, also saved in local file.","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"        DateTimeFormatter.ofPattern(\"d/M/uuuu\"), // 2/12/2019","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hylinny"},"content":"        DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"), // 2019-12-02","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hylinny"},"content":"    };","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hylinny"},"content":"    protected String description;","lastModifiedDate":"2025-08-20T14:00:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hylinny"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-20T14:00:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-20T14:00:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hylinny"},"content":"     * Creates a new task with the given description. Newly created tasks are not done.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hylinny"},"content":"     * @param description human-readable description of the task","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hylinny"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-20T14:00:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hylinny"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-20T14:00:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hylinny"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-20T14:00:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-20T14:00:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-20T14:00:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hylinny"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-28T22:36:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hylinny"},"content":"        return description;","lastModifiedDate":"2025-08-28T22:36:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-28T22:36:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T22:36:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hylinny"},"content":"     * Returns the status icon in bracket form, e.g., \"[X]\" for done or \"[ ]\" for not done.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hylinny"},"content":"     * @return status icon string","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hylinny"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-20T14:00:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hylinny"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"]\";","lastModifiedDate":"2025-08-20T19:48:41","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-20T19:48:41","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-20T19:48:41","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hylinny"},"content":"    /** Marks this task as completed. */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hylinny"},"content":"    public void markDone() {","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hylinny"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hylinny"},"content":"    /** Marks this task as not completed. */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hylinny"},"content":"    public void markUndone() {","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hylinny"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-22T00:08:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hylinny"},"content":"     * Serializes this task into a single-line file representation understood by {@code Storage}.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hylinny"},"content":"     * @return string representation for persistence","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hylinny"},"content":"    public abstract String toFileString();","lastModifiedDate":"2025-08-26T01:32:05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T01:32:05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hylinny"},"content":"    @Override","lastModifiedDate":"2025-08-20T19:48:41","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hylinny"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T19:48:41","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hylinny"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2025-08-20T19:48:41","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-20T14:00:43","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hylinny"},"content":"     * Attempts to parse the provided date/time string into a {@link LocalDateTime}.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hylinny"},"content":"     * @param dateTime the input string to parse","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hylinny"},"content":"     * @return a parsed {@link LocalDateTime}","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hylinny"},"content":"     * @throws JohnException if the string does not match any supported format","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hylinny"},"content":"    public LocalDateTime parseDateTime(String dateTime) throws JohnException {","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hylinny"},"content":"        for (DateTimeFormatter f : DATE_TIME_FORMATS) {","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hylinny"},"content":"            try {","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hylinny"},"content":"                return LocalDateTime.parse(dateTime, f);","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hylinny"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hylinny"},"content":"                // do nothing","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hylinny"},"content":"            }","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hylinny"},"content":"        for (DateTimeFormatter f : DATE_ONLY_FORMATS) {","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hylinny"},"content":"            try {","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hylinny"},"content":"                return LocalDate.parse(dateTime, f).atStartOfDay();","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hylinny"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"hylinny"},"content":"                // do nothing","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"hylinny"},"content":"            }","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"hylinny"},"content":"        throw new JohnException(\"Invalid date/time format provided.\");","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-26T13:20:18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-08-20T14:00:43","isFullCredit":false}],"authorContributionMap":{"hylinny":106}},{"path":"src/main/java/john/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"package john.tasks;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T15:39:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-26T01:32:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"import java.util.List;","lastModifiedDate":"2025-08-26T01:32:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T01:32:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"import john.exceptions.JohnException;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T15:39:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":" * Mutable collection of {@link Task} objects with basic list operations.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":"public class TaskList {","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-26T01:32:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"    private int size;","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T01:32:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"     * Creates an empty task list.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-26T01:32:27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"        size \u003d 0;","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"     * Creates a task list initialized with the given tasks.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":"     * @param tasks initial tasks to include","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hylinny"},"content":"        size \u003d tasks.size();","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-26T01:32:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T01:32:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hylinny"},"content":"     * Appends a task to the end of the list.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hylinny"},"content":"     * @param task task to add","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hylinny"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-26T01:32:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hylinny"},"content":"        tasks.add(task);","lastModifiedDate":"2025-08-26T01:32:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hylinny"},"content":"        size++;","lastModifiedDate":"2025-08-26T01:32:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hylinny"},"content":"     * Removes the task at the specified zero-based index.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hylinny"},"content":"     * @param index zero-based index of the task to remove","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hylinny"},"content":"     * @throws JohnException if the index is out of bounds","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hylinny"},"content":"    public void deleteTask(int index) throws JohnException {","lastModifiedDate":"2025-08-21T10:46:23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hylinny"},"content":"        if (index \u003c 0 || index \u003e\u003d size) {","lastModifiedDate":"2025-08-21T10:46:23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hylinny"},"content":"            throw new JohnException(\"Task index out of bounds.\");","lastModifiedDate":"2025-08-21T10:46:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-08-21T10:46:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hylinny"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-08-26T01:32:27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hylinny"},"content":"        size--;","lastModifiedDate":"2025-08-26T01:32:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-21T10:46:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-21T10:46:23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hylinny"},"content":"     * Prints all tasks with one-based numbering to standard output.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hylinny"},"content":"     * Intended for a simple text UI.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hylinny"},"content":"    public String listTasks() {","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hylinny"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hylinny"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hylinny"},"content":"            sb.append((i + 1)).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hylinny"},"content":"        return sb.toString();","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hylinny"},"content":"     * Retrieves the task at the specified zero-based index.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hylinny"},"content":"     * @param index zero-based index","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hylinny"},"content":"     * @return the task at the given index","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hylinny"},"content":"     * @throws JohnException if the index is out of bounds","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hylinny"},"content":"    public Task getTask(int index) throws JohnException {","lastModifiedDate":"2025-08-20T22:58:30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hylinny"},"content":"        if (index \u003c 0 || index \u003e\u003d size) {","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hylinny"},"content":"            throw new JohnException(\"Task index out of bounds.\");","lastModifiedDate":"2025-08-20T22:58:30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hylinny"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-08-26T01:32:27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hylinny"},"content":"     * Returns the number of tasks in this list.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hylinny"},"content":"     * @return size of the list","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hylinny"},"content":"    public int getSize() {","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hylinny"},"content":"        return size;","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hylinny"},"content":"     * Returns the task list.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hylinny"},"content":"     * @return internal list of tasks","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hylinny"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hylinny"},"content":"        return tasks;","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false}],"authorContributionMap":{"hylinny":100}},{"path":"src/main/java/john/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"package john.tasks;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T15:39:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":" * A simple task without any date/time attached.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"     * Constructs a Todo with the given description.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":"     * @param description description of the todo item","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"        super(description);","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"     * Returns the serialized representation of this todo for storage.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"     * @return a one-line string suitable for persistence","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-26T01:32:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-08-26T01:32:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-26T01:32:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T01:32:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":"    @Override","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-08-20T20:29:46","isFullCredit":false}],"authorContributionMap":{"hylinny":29}},{"path":"src/main/java/john/ui/JohnUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"package john.ui;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T15:24:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"/**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":" * UI utilities for the chatbot John. REPLACED by a GUI in new version.","lastModifiedDate":"2025-09-06T11:54:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":" */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"public class JohnUi {","lastModifiedDate":"2025-08-26T15:24:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"    private static final String LINE \u003d \"__________________________________________________\";","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-26T15:24:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":"     * Prints a horizontal separator line to standard output.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"    public void printLine() {","lastModifiedDate":"2025-08-26T15:24:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-26T15:24:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-26T15:24:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"     * Prints a user-friendly message when tasks cannot be loaded from storage.","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"        System.out.println(\"Error loading tasks from file. Initialising an empty task list.\");","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-27T00:39:19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-08-26T15:24:49","isFullCredit":false}],"authorContributionMap":{"hylinny":22}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false}],"authorContributionMap":{"hylinny":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"            fx:controller\u003d\"MainWindow\"\u003e \u003c!-- points to MainWindow.java. If packages are used, modify accordingly. --\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hylinny"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hylinny"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hylinny"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hylinny"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hylinny"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hylinny"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hylinny"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hylinny"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hylinny"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hylinny"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hylinny"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hylinny"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hylinny"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hylinny"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-06T00:47:31","isFullCredit":false}],"authorContributionMap":{"hylinny":44}},{"path":"src/test/java/john/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"package john.parser;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"import john.exceptions.JohnException;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":"import john.tasks.Deadline;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":"import john.tasks.Event;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"public class ParserTest {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"    public void testParse() {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"        // Add test cases for the parse method","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"        String input \u003d \"deadline return book /by Sunday\";","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"        String[] result1 \u003d Parser.parse(input);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"        assertEquals(2, result1.length);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"        assertEquals(\"deadline\", result1[0]);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"        assertEquals(\"return book /by Sunday\", result1[1]);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"        input \u003d \"event project meeting /from Mon 2pm /to Mon 4pm\";","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"        String[] result2 \u003d Parser.parse(input);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"        assertEquals(2, result2.length);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":"        assertEquals(\"event\", result2[0]);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":"        assertEquals(\"project meeting /from Mon 2pm /to Mon 4pm\", result2[1]);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hylinny"},"content":"    public void testParse_exceptionThrown() {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hylinny"},"content":"        String input \u003d \"\";","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hylinny"},"content":"        String[] result1 \u003d Parser.parse(input);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hylinny"},"content":"        assertEquals(\"\", result1[0]);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hylinny"},"content":"        assertEquals(\"\", result1[1]);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hylinny"},"content":"        input \u003d \"   \";","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hylinny"},"content":"        String[] result2 \u003d Parser.parse(input);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hylinny"},"content":"        assertEquals(\"\", result2[0]);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hylinny"},"content":"        assertEquals(\"\", result2[1]);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hylinny"},"content":"        input \u003d \"random command\";","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hylinny"},"content":"        String[] result3 \u003d Parser.parse(input);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hylinny"},"content":"        assertEquals(\"random\", result3[0]);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hylinny"},"content":"        assertEquals(\"command\", result3[1]);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hylinny"},"content":"        input \u003d \"single\";","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hylinny"},"content":"        String[] result4 \u003d Parser.parse(input);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hylinny"},"content":"        assertEquals(\"single\", result4[0]);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hylinny"},"content":"        assertEquals(\"\", result4[1]);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hylinny"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hylinny"},"content":"    public void getDeadline() {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hylinny"},"content":"        String input \u003d \"return book /by 2025-01-01 1800\";","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hylinny"},"content":"        try {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hylinny"},"content":"            Deadline deadline \u003d Parser.getDeadline(input);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hylinny"},"content":"            assertEquals(new Deadline(\"return book\", \"2025-01-01 1800\"), deadline);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hylinny"},"content":"        } catch (JohnException e) {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hylinny"},"content":"            fail();","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hylinny"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hylinny"},"content":"    public void getDeadline_exceptionThrown() {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hylinny"},"content":"        String input \u003d \"/by\";","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hylinny"},"content":"        try {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hylinny"},"content":"            Parser.getDeadline(input);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hylinny"},"content":"            fail();","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hylinny"},"content":"        } catch (JohnException e) {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hylinny"},"content":"            assertEquals(\"Deadline command must include a description and a deadline.\", e.getMessage());","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hylinny"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hylinny"},"content":"    public void getEvent() {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hylinny"},"content":"        String input \u003d \"project meeting /from 2025-01-01 1400 /to 2025-01-01 1600\";","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hylinny"},"content":"        try {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hylinny"},"content":"            Event event \u003d Parser.getEvent(input);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hylinny"},"content":"            assertEquals(new Event(\"project meeting\", \"2025-01-01 1400\", \"2025-01-01 1600\"), event);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hylinny"},"content":"        } catch (JohnException e) {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hylinny"},"content":"            fail();","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hylinny"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hylinny"},"content":"    public void getEvent_exceptionThrown() {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hylinny"},"content":"        String input \u003d \"meeting /from 2025-01-01 1400\";","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hylinny"},"content":"        try {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hylinny"},"content":"            Parser.getEvent(input);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hylinny"},"content":"            fail();","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hylinny"},"content":"        } catch (JohnException e) {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hylinny"},"content":"            assertEquals(\"Event command must include /from and /to keywords, in the correct order.\", e.getMessage());","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false}],"authorContributionMap":{"hylinny":95}},{"path":"src/test/java/john/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"package john.storage;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"import java.io.File;","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"import john.exceptions.JohnException;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"import john.tasks.Deadline;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"import john.tasks.Event;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"import john.tasks.Task;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"import john.tasks.TaskList;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"import john.tasks.Todo;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"class StorageTest {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hylinny"},"content":"    @TempDir","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hylinny"},"content":"    Path tempDir;","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hylinny"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hylinny"},"content":"    void testLoad_emptyFile() throws JohnException {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hylinny"},"content":"        File f \u003d tempDir.resolve(\"tasks.txt\").toFile();","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hylinny"},"content":"        assertFalse(f.exists());","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hylinny"},"content":"        Storage storage \u003d new Storage(f.getAbsolutePath());","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hylinny"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hylinny"},"content":"        assertTrue(f.exists());","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hylinny"},"content":"        assertTrue(tasks.isEmpty());","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hylinny"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hylinny"},"content":"    void testLoad() throws Exception {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hylinny"},"content":"        File f \u003d tempDir.resolve(\"tasks.txt\").toFile();","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hylinny"},"content":"        try (FileWriter fw \u003d new FileWriter(f)) {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hylinny"},"content":"            fw.write(\"T | 1 | buy milk\\n\");","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hylinny"},"content":"            fw.write(\"D | 0 | return book | 2025-01-01T18:00\\n\");","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hylinny"},"content":"            fw.write(\"E | 1 | meet | 2025-01-01 1800 | 2025-01-01T20:00\\n\");","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hylinny"},"content":"        }","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hylinny"},"content":"        Storage storage \u003d new Storage(f.getAbsolutePath());","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hylinny"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hylinny"},"content":"        assertEquals(3, tasks.size());","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hylinny"},"content":"        assertEquals(\"[T][X] buy milk\", tasks.get(0).toString());","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hylinny"},"content":"        assertEquals(\"[D][ ] return book (by: Jan 01 2025 18:00)\", tasks.get(1).toString());","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hylinny"},"content":"        assertEquals(\"[E][X] meet (from: Jan 01 2025 18:00 to: Jan 01 2025 20:00)\", tasks.get(2).toString());","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hylinny"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hylinny"},"content":"    void testSave() throws Exception {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hylinny"},"content":"        File f \u003d tempDir.resolve(\"test.txt\").toFile();","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hylinny"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hylinny"},"content":"        Task t1 \u003d new Todo(\"refactor\");","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hylinny"},"content":"        Task t2 \u003d new Deadline(\"submit assignment\", \"2025-09-01 2359\");","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hylinny"},"content":"        Task t3 \u003d new Event(\"project meeting\", \"2025-01-01 0000\", \"2025-01-01 0200\");","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hylinny"},"content":"        t1.markDone();","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hylinny"},"content":"        t3.markDone();","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hylinny"},"content":"        list.addTask(t1);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hylinny"},"content":"        list.addTask(t2);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hylinny"},"content":"        list.addTask(t3);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hylinny"},"content":"        // Save","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hylinny"},"content":"        Storage storage \u003d new Storage(f.getAbsolutePath());","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hylinny"},"content":"        storage.save(list);","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hylinny"},"content":"        assertTrue(f.exists());","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hylinny"},"content":"        ArrayList\u003cTask\u003e loaded \u003d storage.load();","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hylinny"},"content":"        assertEquals(3, loaded.size());","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hylinny"},"content":"        assertEquals(t1.toFileString(), loaded.get(0).toFileString());","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hylinny"},"content":"        assertEquals(t2.toFileString(), loaded.get(1).toFileString());","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hylinny"},"content":"        assertEquals(t3.toFileString(), loaded.get(2).toFileString());","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false}],"authorContributionMap":{"hylinny":83}},{"path":"src/test/java/john/ui/JohnUiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"package john.ui;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"public class JohnUiTest {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":"    public void testPrintLine() {","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":"        JohnUi ui \u003d new JohnUi();","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":"        String expectedLine \u003d \"__________________________________________________\";","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"        java.io.ByteArrayOutputStream outContent \u003d new java.io.ByteArrayOutputStream();","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"        System.setOut(new java.io.PrintStream(outContent));","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"        ui.printLine();","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"        assertEquals(expectedLine + System.lineSeparator(), outContent.toString());","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"    }","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"}","lastModifiedDate":"2025-08-28T21:09:51","isFullCredit":false}],"authorContributionMap":{"hylinny":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hylinny"},"content":"todo borrow book","lastModifiedDate":"2025-08-20T21:31:14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hylinny"},"content":"list","lastModifiedDate":"2025-08-20T21:31:14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hylinny"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-20T21:31:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hylinny"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-20T21:31:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hylinny"},"content":"list","lastModifiedDate":"2025-08-20T21:31:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hylinny"},"content":"mark 2","lastModifiedDate":"2025-08-20T21:31:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hylinny"},"content":"list","lastModifiedDate":"2025-08-20T21:31:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hylinny"},"content":"unmark 2","lastModifiedDate":"2025-08-21T22:02:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hylinny"},"content":"delete 2","lastModifiedDate":"2025-08-22T00:08:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hylinny"},"content":"list","lastModifiedDate":"2025-08-22T00:08:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hylinny"},"content":"","lastModifiedDate":"2025-08-21T22:02:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hylinny"},"content":"randomCommand","lastModifiedDate":"2025-08-22T00:08:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hylinny"},"content":"mark 0","lastModifiedDate":"2025-08-22T00:08:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hylinny"},"content":"mark one","lastModifiedDate":"2025-08-22T00:08:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hylinny"},"content":"todo","lastModifiedDate":"2025-08-21T22:02:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"deadline submit assignment /by","lastModifiedDate":"2025-08-22T00:08:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hylinny"},"content":"deadline submit assignment /by Sun /by Mon","lastModifiedDate":"2025-08-22T00:08:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"deadline /by","lastModifiedDate":"2025-08-21T22:02:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hylinny"},"content":"deadline return book","lastModifiedDate":"2025-08-22T00:08:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hylinny"},"content":"event project meeting /from /to","lastModifiedDate":"2025-08-21T22:02:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hylinny"},"content":"event meeting /to 4pm /from 2pm","lastModifiedDate":"2025-08-22T00:08:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hylinny"},"content":"event meeting /from Mon 2pm /to 3pm /to 4pm","lastModifiedDate":"2025-08-22T00:08:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"bye","lastModifiedDate":"2025-08-20T21:31:14","isFullCredit":false}],"authorContributionMap":{"hylinny":23}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hylinny"},"content":"java -classpath ..\\bin john.john \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-09-02T23:39:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"-":20,"hylinny":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hylinny"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/John/*.java","lastModifiedDate":"2025-08-27T02:08:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hylinny"},"content":"java -classpath ../bin John.John \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-27T02:08:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"-":36,"hylinny":2}}]
