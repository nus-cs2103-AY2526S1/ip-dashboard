[{"path":"src/main/java/MeowTheCat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RandomNerd01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-19T14:39:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RandomNerd01"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-19T10:09:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-19T10:09:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RandomNerd01"},"content":"public class MeowTheCat {","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RandomNerd01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-18T14:31:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RandomNerd01"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-19T10:09:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RandomNerd01"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-19T10:09:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-18T14:31:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"Hello! I\u0027m MeowTheCat\");","lastModifiedDate":"2025-08-18T14:31:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-08-18T14:31:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-18T14:31:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-19T10:09:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RandomNerd01"},"content":"        while (true) {","lastModifiedDate":"2025-08-19T10:09:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RandomNerd01"},"content":"            String line \u003d sc.nextLine().trim();","lastModifiedDate":"2025-08-19T10:09:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RandomNerd01"},"content":"            try {","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RandomNerd01"},"content":"                if (line.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RandomNerd01"},"content":"                    printGoodbye();","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RandomNerd01"},"content":"                    break;","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RandomNerd01"},"content":"                } else if (line.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RandomNerd01"},"content":"                    printList(tasks);","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RandomNerd01"},"content":"                } else if (line.toLowerCase().startsWith(\"mark \")) {","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RandomNerd01"},"content":"                    handleMark(line, tasks);","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RandomNerd01"},"content":"                } else if (line.toLowerCase().startsWith(\"unmark \")) {","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RandomNerd01"},"content":"                    handleUnmark(line, tasks);","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RandomNerd01"},"content":"                } else if (line.toLowerCase().startsWith(\"delete \")) {","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RandomNerd01"},"content":"                    handleDelete(line, tasks);","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RandomNerd01"},"content":"                } else if (line.toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RandomNerd01"},"content":"                    handleTodo(line, tasks);","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RandomNerd01"},"content":"                } else if (line.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RandomNerd01"},"content":"                    handleDeadline(line, tasks);","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RandomNerd01"},"content":"                } else if (line.toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RandomNerd01"},"content":"                    handleEvent(line, tasks);","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RandomNerd01"},"content":"                }  else {","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RandomNerd01"},"content":"                    throw new MeowException(\"MEOW!! MEOW is Confused!!\");","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RandomNerd01"},"content":"                }","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RandomNerd01"},"content":"            } catch (MeowException de) {","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RandomNerd01"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-19T10:09:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RandomNerd01"},"content":"                System.out.println(\"MEOW OOPS!!! \" + de.getMessage());","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RandomNerd01"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-18T14:31:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RandomNerd01"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RandomNerd01"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RandomNerd01"},"content":"                System.out.println(\"MEOW OOPS!!! Something went wrong: \" + e.getMessage());","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RandomNerd01"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RandomNerd01"},"content":"            }","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RandomNerd01"},"content":"        }","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RandomNerd01"},"content":"        sc.close();","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RandomNerd01"},"content":"    }","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RandomNerd01"},"content":"    private static void handleDelete(String line, ArrayList\u003cTask\u003e tasks) throws MeowException {","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RandomNerd01"},"content":"        try {","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RandomNerd01"},"content":"            int idx \u003d Integer.parseInt(line.substring(7).trim()) - 1;","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RandomNerd01"},"content":"            if (idx \u003c 0 || idx \u003e\u003d tasks.size()) throw new MeowException(\"This number does not align with the tasks you have\");","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RandomNerd01"},"content":"            Task removed \u003d tasks.remove(idx);","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RandomNerd01"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RandomNerd01"},"content":"            System.out.println(\"Meow has Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RandomNerd01"},"content":"            System.out.println(\"  \" + removed);","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RandomNerd01"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RandomNerd01"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RandomNerd01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RandomNerd01"},"content":"            throw new MeowException(\"Please provide a valid task number after \u0027delete\u0027.\");","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RandomNerd01"},"content":"        }","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RandomNerd01"},"content":"    }","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RandomNerd01"},"content":"    private static void handleTodo(String line, ArrayList\u003cTask\u003e tasks) throws MeowException {","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RandomNerd01"},"content":"        String rest \u003d line.length() \u003e 4 ? line.substring(4).trim() : \"\";","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RandomNerd01"},"content":"        if (rest.isEmpty()) throw new MeowException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RandomNerd01"},"content":"        Task t \u003d Task.createToDo(rest);","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RandomNerd01"},"content":"        tasks.add(t);","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"  \" + t);","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RandomNerd01"},"content":"    }","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RandomNerd01"},"content":"    private static void handleDeadline(String line, ArrayList\u003cTask\u003e tasks) throws MeowException {","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RandomNerd01"},"content":"        int byIndex \u003d indexOfIgnoreCase(line, \"/by\");","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RandomNerd01"},"content":"        if (line.length() \u003c\u003d 8 || byIndex \u003d\u003d -1) throw new MeowException(\"The deadline command requires a description and \u0027/by \u003ctime\u003e\u0027.\");","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RandomNerd01"},"content":"        String desc \u003d line.substring(8, byIndex).trim();","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RandomNerd01"},"content":"        String by \u003d line.substring(byIndex + 3).trim();","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RandomNerd01"},"content":"        if (desc.isEmpty()) throw new MeowException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RandomNerd01"},"content":"        if (by.isEmpty()) throw new MeowException(\"A deadline must have a \u0027/by\u0027 time.\");","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RandomNerd01"},"content":"        Task t \u003d Task.createDeadline(desc, by);","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RandomNerd01"},"content":"        tasks.add(t);","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"  \" + t);","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RandomNerd01"},"content":"    }","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RandomNerd01"},"content":"    private static void handleEvent(String line, ArrayList\u003cTask\u003e tasks) throws MeowException {","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RandomNerd01"},"content":"        int fromIndex \u003d indexOfIgnoreCase(line, \"/from\");","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RandomNerd01"},"content":"        int toIndex \u003d indexOfIgnoreCase(line, \"/to\");","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RandomNerd01"},"content":"        if (line.length() \u003c\u003d 5 || fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1) throw new MeowException(\"The event command requires \u0027/from\u0027 and \u0027/to\u0027.\");","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RandomNerd01"},"content":"        String desc \u003d line.substring(5, fromIndex).trim();","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RandomNerd01"},"content":"        String from \u003d line.substring(fromIndex + 5, toIndex).trim();","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RandomNerd01"},"content":"        String to \u003d line.substring(toIndex + 3).trim();","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"RandomNerd01"},"content":"        if (desc.isEmpty()) throw new MeowException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"RandomNerd01"},"content":"        if (from.isEmpty() || to.isEmpty()) throw new MeowException(\"An event must have both \u0027/from\u0027 and \u0027/to\u0027 values.\");","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"RandomNerd01"},"content":"        Task t \u003d Task.createEvent(desc, from, to);","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"RandomNerd01"},"content":"        tasks.add(t);","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"  \" + t);","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"RandomNerd01"},"content":"    }","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"RandomNerd01"},"content":"    private static void handleMark(String line, ArrayList\u003cTask\u003e tasks) throws MeowException {","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"RandomNerd01"},"content":"        try {","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"RandomNerd01"},"content":"            int idx \u003d Integer.parseInt(line.substring(5).trim()) - 1;","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"RandomNerd01"},"content":"            if (idx \u003c 0 || idx \u003e\u003d tasks.size()) throw new MeowException(\"This number does not align with the tasks you have\");","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"RandomNerd01"},"content":"            tasks.get(idx).markDone();","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"RandomNerd01"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"RandomNerd01"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"RandomNerd01"},"content":"            System.out.println(\"  \" + tasks.get(idx));","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"RandomNerd01"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"RandomNerd01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"RandomNerd01"},"content":"            throw new MeowException(\"Please provide a valid task number after \u0027mark\u0027.\");","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"RandomNerd01"},"content":"        }","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"RandomNerd01"},"content":"    }","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"RandomNerd01"},"content":"    private static void handleUnmark(String line, ArrayList\u003cTask\u003e tasks) throws MeowException {","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"RandomNerd01"},"content":"        try {","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"RandomNerd01"},"content":"            int idx \u003d Integer.parseInt(line.substring(7).trim()) - 1;","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"RandomNerd01"},"content":"            if (idx \u003c 0 || idx \u003e\u003d tasks.size()) throw new MeowException(\"This number does not align with the tasks you have\");","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"RandomNerd01"},"content":"            tasks.get(idx).markUndone();","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"RandomNerd01"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"RandomNerd01"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"RandomNerd01"},"content":"            System.out.println(\"  \" + tasks.get(idx));","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"RandomNerd01"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"RandomNerd01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"RandomNerd01"},"content":"            throw new MeowException(\"Please provide a valid task number after \u0027unmark\u0027.\");","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"RandomNerd01"},"content":"        }","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"RandomNerd01"},"content":"    }","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"RandomNerd01"},"content":"    private static void printList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-19T14:39:26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"RandomNerd01"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"RandomNerd01"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"RandomNerd01"},"content":"        } else {","lastModifiedDate":"2025-08-19T14:39:26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"RandomNerd01"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"RandomNerd01"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"RandomNerd01"},"content":"                System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"RandomNerd01"},"content":"            }","lastModifiedDate":"2025-08-19T14:39:26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"RandomNerd01"},"content":"        }","lastModifiedDate":"2025-08-19T14:39:26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-19T14:39:26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"RandomNerd01"},"content":"    }","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"RandomNerd01"},"content":"    private static void printGoodbye() {","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-19T10:09:12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"RandomNerd01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-19T10:09:12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"RandomNerd01"},"content":"    }","lastModifiedDate":"2025-08-19T10:09:12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"RandomNerd01"},"content":"    private static int indexOfIgnoreCase(String s, String sub) {","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"RandomNerd01"},"content":"        return s.toLowerCase().indexOf(sub.toLowerCase());","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"RandomNerd01"},"content":"    }","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"RandomNerd01"},"content":"}","lastModifiedDate":"2025-08-19T10:09:12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-19T10:09:12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"RandomNerd01"},"content":"class MeowException extends Exception {","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"RandomNerd01"},"content":"    public MeowException(String msg) { super(msg); }","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"RandomNerd01"},"content":"}","lastModifiedDate":"2025-08-21T10:46:10","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"RandomNerd01"},"content":"enum TaskType {","lastModifiedDate":"2025-08-22T10:26:45","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"RandomNerd01"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2025-08-22T10:26:45","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"RandomNerd01"},"content":"}","lastModifiedDate":"2025-08-22T10:26:45","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-22T10:26:45","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"RandomNerd01"},"content":"class Task {","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"RandomNerd01"},"content":"    private TaskType type;","lastModifiedDate":"2025-08-22T10:26:45","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"RandomNerd01"},"content":"    private String description;","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"RandomNerd01"},"content":"    private boolean isDone;","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"RandomNerd01"},"content":"    private String by;","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"RandomNerd01"},"content":"    private String from;","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"RandomNerd01"},"content":"    private String to;","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"RandomNerd01"},"content":"    private Task(TaskType type, String desc) {","lastModifiedDate":"2025-08-22T10:26:45","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"RandomNerd01"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-08-22T10:26:45","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"RandomNerd01"},"content":"        this.description \u003d desc;","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"RandomNerd01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"RandomNerd01"},"content":"    }","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"RandomNerd01"},"content":"    public static Task createToDo(String desc) { return new Task(TaskType.TODO, desc); }","lastModifiedDate":"2025-08-22T10:26:45","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"RandomNerd01"},"content":"    public static Task createDeadline(String desc, String by) {","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"RandomNerd01"},"content":"        Task t \u003d new Task(TaskType.DEADLINE, desc);","lastModifiedDate":"2025-08-22T10:26:45","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"RandomNerd01"},"content":"        t.by \u003d by;","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"RandomNerd01"},"content":"        return t;","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"RandomNerd01"},"content":"    }","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"RandomNerd01"},"content":"    public static Task createEvent(String desc, String from, String to) {","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"RandomNerd01"},"content":"        Task t \u003d new Task(TaskType.EVENT, desc);","lastModifiedDate":"2025-08-22T10:26:45","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"RandomNerd01"},"content":"        t.from \u003d from;","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"RandomNerd01"},"content":"        t.to \u003d to;","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"RandomNerd01"},"content":"        return t;","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"RandomNerd01"},"content":"    }","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"RandomNerd01"},"content":"    public void markDone() { isDone \u003d true; }","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"RandomNerd01"},"content":"    public void markUndone() { isDone \u003d false; }","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"RandomNerd01"},"content":"    public boolean isDone() { return isDone; }","lastModifiedDate":"2025-08-22T10:26:45","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"RandomNerd01"},"content":"    private String status() { return isDone ? \"[X]\" : \"[ ]\"; }","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"RandomNerd01"},"content":"","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"RandomNerd01"},"content":"    @Override","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"RandomNerd01"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"RandomNerd01"},"content":"        if (type \u003d\u003d TaskType.DEADLINE) {","lastModifiedDate":"2025-08-22T10:26:45","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"RandomNerd01"},"content":"            return \"[D]\" + status() + \" \" + description + \" (by: \" + by + \")\";","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"RandomNerd01"},"content":"        } else if (type \u003d\u003d TaskType.EVENT) {","lastModifiedDate":"2025-08-22T10:26:45","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"RandomNerd01"},"content":"            return \"[E]\" + status() + \" \" + description + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"RandomNerd01"},"content":"        } else {","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"RandomNerd01"},"content":"            return \"[T]\" + status() + \" \" + description;","lastModifiedDate":"2025-08-19T16:19:19","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"RandomNerd01"},"content":"        }","lastModifiedDate":"2025-08-18T14:31:10","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"RandomNerd01"},"content":"    }","lastModifiedDate":"2025-08-18T14:31:10","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"RandomNerd01"},"content":"}","lastModifiedDate":"2025-08-20T14:36:25","isFullCredit":false}],"authorContributionMap":{"RandomNerd01":218}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RandomNerd01"},"content":"todo borrow book","lastModifiedDate":"2025-08-20T14:38:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RandomNerd01"},"content":"todo read book","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RandomNerd01"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-20T14:38:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RandomNerd01"},"content":"list","lastModifiedDate":"2025-08-20T14:38:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RandomNerd01"},"content":"delete 2","lastModifiedDate":"2025-08-21T11:28:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RandomNerd01"},"content":"list","lastModifiedDate":"2025-08-20T14:38:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RandomNerd01"},"content":"bye","lastModifiedDate":"2025-08-20T14:38:40","isFullCredit":false}],"authorContributionMap":{"RandomNerd01":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RandomNerd01"},"content":"java -classpath ..\\bin MeowTheCat \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-20T14:38:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"-":20,"RandomNerd01":1}}]
