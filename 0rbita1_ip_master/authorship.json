[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"# Keeka project template","lastModifiedDate":"2025-08-19T13:10:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"0rbita1"},"content":"1. After that, locate the `src/main/java/Keeka.java` file, right-click it, and choose `Run Keeka.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-08-19T13:10:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"0rbita1":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-08-28T23:32:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"0rbita1"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"0rbita1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"0rbita1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"0rbita1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"0rbita1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"0rbita1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"0rbita1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"0rbita1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"0rbita1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"0rbita1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"0rbita1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"0rbita1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"0rbita1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"0rbita1"},"content":"checkstyle {","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"0rbita1"},"content":"    toolVersion \u003d \u002711.0.1\u0027","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"0rbita1"},"content":"}","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"0rbita1"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"0rbita1"},"content":"    archiveBaseName \u003d \"keeka\"","lastModifiedDate":"2025-08-29T00:29:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"0rbita1":20,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"# Keeka User Guide","lastModifiedDate":"2025-08-19T13:10:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"0rbita1":1,"-":29}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"0rbita1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"0rbita1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"0rbita1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"0rbita1"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"0rbita1"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"0rbita1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"0rbita1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"0rbita1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"0rbita1"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"0rbita1"},"content":"/**","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"0rbita1"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"0rbita1"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"0rbita1"},"content":" */","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"0rbita1"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"0rbita1"},"content":"    @FXML","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"0rbita1"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"0rbita1"},"content":"    @FXML","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"0rbita1"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"0rbita1"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"0rbita1"},"content":"        try {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"0rbita1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"0rbita1"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"0rbita1"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"0rbita1"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"0rbita1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"0rbita1"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"0rbita1"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"0rbita1"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"0rbita1"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"0rbita1"},"content":"    private void flip() {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"0rbita1"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"0rbita1"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"0rbita1"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"0rbita1"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"0rbita1"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"0rbita1"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"0rbita1"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"0rbita1"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"0rbita1"},"content":"        db.flip();","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"0rbita1"},"content":"        return db;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"0rbita1"},"content":"}","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false}],"authorContributionMap":{"0rbita1":58}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"/**","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"0rbita1"},"content":" */","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"0rbita1"},"content":"public class Launcher {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"0rbita1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"0rbita1"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"0rbita1"},"content":"}","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false}],"authorContributionMap":{"0rbita1":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"0rbita1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"0rbita1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"0rbita1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"0rbita1"},"content":"import keeka.Keeka;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"0rbita1"},"content":"/**","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"0rbita1"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"0rbita1"},"content":" */","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"0rbita1"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"0rbita1"},"content":"    private Keeka keeka \u003d new Keeka();","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"0rbita1"},"content":"    @Override","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"0rbita1"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"0rbita1"},"content":"        try {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"0rbita1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"0rbita1"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"0rbita1"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"0rbita1"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"0rbita1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setKeeka(keeka);  // inject the Duke instance","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"0rbita1"},"content":"            stage.show();","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"0rbita1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"0rbita1"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"0rbita1"},"content":"}","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false}],"authorContributionMap":{"0rbita1":30}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"0rbita1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"0rbita1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"0rbita1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"0rbita1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"0rbita1"},"content":"import keeka.Interpreter;","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"0rbita1"},"content":"import keeka.Keeka;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"0rbita1"},"content":"import keeka.Storage;","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"0rbita1"},"content":"import keeka.Ui;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"0rbita1"},"content":"import tasks.Task;","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"0rbita1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"0rbita1"},"content":"import java.util.Objects;","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"0rbita1"},"content":"/**","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"0rbita1"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"0rbita1"},"content":" */","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"0rbita1"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"0rbita1"},"content":"    @FXML","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"0rbita1"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"0rbita1"},"content":"    @FXML","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"0rbita1"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"0rbita1"},"content":"    @FXML","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"0rbita1"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"0rbita1"},"content":"    @FXML","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"0rbita1"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"0rbita1"},"content":"    private Keeka keeka;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"0rbita1"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"0rbita1"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"0rbita1"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"0rbita1"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"0rbita1"},"content":"    @FXML","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"0rbita1"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"0rbita1"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"0rbita1"},"content":"        Storage.loadSaveContents(tasks);","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"0rbita1"},"content":"        Ui.printGreeting();","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"0rbita1"},"content":"        String greeting \u003d Ui.retrieveMessage();","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"0rbita1"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"0rbita1"},"content":"                DialogBox.getDukeDialog(greeting, dukeImage)","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"0rbita1"},"content":"        );","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"0rbita1"},"content":"    public void setKeeka(Keeka d) {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"0rbita1"},"content":"        keeka \u003d d;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"0rbita1"},"content":"    @FXML","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"0rbita1"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"0rbita1"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"0rbita1"},"content":"        if (Objects.equals(input, \"bye\")) {","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"0rbita1"},"content":"            Platform.exit();","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"0rbita1"},"content":"        Interpreter.interpretInputs(tasks, input);","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"0rbita1"},"content":"        String response \u003d Ui.retrieveMessage();","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"0rbita1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"0rbita1"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"0rbita1"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"0rbita1"},"content":"        );","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"0rbita1"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"0rbita1"},"content":"}","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false}],"authorContributionMap":{"0rbita1":68}},{"path":"src/main/java/exceptions/InvalidMarkingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"package exceptions;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"public class InvalidMarkingException extends RuntimeException {","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"    public InvalidMarkingException(String message) {","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"0rbita1"},"content":"        super(message);","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"0rbita1"},"content":"}","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false}],"authorContributionMap":{"0rbita1":7}},{"path":"src/main/java/exceptions/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"package exceptions;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"public class InvalidTaskException extends RuntimeException {","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"    public InvalidTaskException(String message) {","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"0rbita1"},"content":"        super(message);","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"0rbita1"},"content":"}","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false}],"authorContributionMap":{"0rbita1":7}},{"path":"src/main/java/keeka/Interpreter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"package keeka;","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"import exceptions.InvalidMarkingException;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"import exceptions.InvalidTaskException;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"0rbita1"},"content":"import tasks.Task;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"0rbita1"},"content":"import java.util.Objects;","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"0rbita1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"0rbita1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"0rbita1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"0rbita1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"0rbita1"},"content":"public class Interpreter {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"0rbita1"},"content":"     * Reads and interprets user commands from the console until the \"bye\" command is received.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"0rbita1"},"content":"     * The method continuously reads a line of input from the user. It first checks for the \"list\" command to display","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"0rbita1"},"content":"     * the current tasks.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"0rbita1"},"content":"     * For all other commands, it attempts to parse the input to determine the command type","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"0rbita1"},"content":"     * (e.g., todo, deadline, event, mark, unmark, delete, find).","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"0rbita1"},"content":"     * It then calls the appropriate helper method to process the command. If the command is not recognized, it throws","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"0rbita1"},"content":"     * an Exception which is caught and a relevant error message is printed.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"0rbita1"},"content":"     * @param tasks The ArrayList of Task objects that the commands will operate on.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"0rbita1"},"content":"    public static void interpretInputs(ArrayList\u003cTask\u003e tasks, String input) {","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"0rbita1"},"content":"        if (Objects.equals(input, \"bye\")) {","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"0rbita1"},"content":"            Ui.printBye();","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"0rbita1"},"content":"        } else if (Objects.equals(input, \"list\")) {","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"0rbita1"},"content":"            Ui.printList(tasks);","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"0rbita1"},"content":"        } else {","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"0rbita1"},"content":"            try {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"0rbita1"},"content":"                String[] parsedInput \u003d input.split(\" \", 2);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"0rbita1"},"content":"                String firstWord \u003d parsedInput[0];","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"0rbita1"},"content":"                if (Objects.equals(firstWord, \"todo\") || (Objects.equals(firstWord, \"deadline\"))","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"0rbita1"},"content":"                        || (Objects.equals(firstWord, \"event\"))) {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"0rbita1"},"content":"                    interpretTask(input, tasks);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"0rbita1"},"content":"                } else if (Objects.equals(firstWord, \"mark\") || (Objects.equals(firstWord, \"unmark\"))) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"0rbita1"},"content":"                    interpretMark(input, tasks);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"0rbita1"},"content":"                } else if (Objects.equals(firstWord, \"delete\")) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"0rbita1"},"content":"                    interpretDelete(input, tasks);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"0rbita1"},"content":"                } else if (Objects.equals(firstWord, \"find\")) {","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"0rbita1"},"content":"                    interpretFind(input, tasks);","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"0rbita1"},"content":"                } else if (Objects.equals(firstWord, \"update\")) {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"0rbita1"},"content":"                    Parser.parseUpdate(parsedInput[1], tasks);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"0rbita1"},"content":"                } else {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"0rbita1"},"content":"                    throw new Exception(\"Invalid command!\");","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"0rbita1"},"content":"                }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"0rbita1"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"0rbita1"},"content":"                Ui.addMessageToBuffer(e.getMessage());","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"0rbita1"},"content":"            }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"0rbita1"},"content":"    private static void interpretTask(String userInput, ArrayList\u003cTask\u003e tasks) throws InvalidTaskException {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"0rbita1"},"content":"        try {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"0rbita1"},"content":"            String[] parsedInput \u003d userInput.split(\" \", 2);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"0rbita1"},"content":"            String taskType \u003d parsedInput[0];","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"0rbita1"},"content":"            String remainingContent \u003d parsedInput[1];","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"0rbita1"},"content":"            switch (taskType) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"0rbita1"},"content":"            case \"todo\" -\u003e {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"0rbita1"},"content":"                TaskList.addToDo(remainingContent, false, tasks);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"0rbita1"},"content":"                Ui.printSuccessfulTaskAddition(tasks);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"0rbita1"},"content":"            }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"0rbita1"},"content":"            case \"deadline\" -\u003e {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"0rbita1"},"content":"                Parser.parseDeadlineInput(remainingContent, tasks);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"0rbita1"},"content":"                Ui.printSuccessfulTaskAddition(tasks);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"0rbita1"},"content":"            }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"0rbita1"},"content":"            case \"event\" -\u003e {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"0rbita1"},"content":"                Parser.parseEventInput(remainingContent, tasks);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"0rbita1"},"content":"                Ui.printSuccessfulTaskAddition(tasks);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"0rbita1"},"content":"            }","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"0rbita1"},"content":"            default -\u003e {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"0rbita1"},"content":"            }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"0rbita1"},"content":"            }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"0rbita1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"0rbita1"},"content":"            Ui.addMessageToBuffer(\"Invalid task invocation! \" + e);","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"0rbita1"},"content":"            throw new InvalidTaskException(\"Invalid task invocation! \" + e);","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"0rbita1"},"content":"     * Interprets the save content and calls the appropriate loadDeadline method depending on the format of the dateTime","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"0rbita1"},"content":"     * The method parses a string taskContent to extract the description and the deadline date/time.","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"0rbita1"},"content":"     * It supports two date formats: YYYY-MM-DD for a date only, and YYYY-MM-DDTHH:MM:SS for date with time","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"0rbita1"},"content":"     * If the parsing is successful, it calls Storage.loadDeadline to create and add the task.","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"0rbita1"},"content":"     * If the date string is in an invalid format, a DateTimeParseException is caught, and an error message is printed","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"0rbita1"},"content":"     * to the console.","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"0rbita1"},"content":"     * @param taskContent The string content of the task, expected to be in the format \"description (by: date)\".","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"0rbita1"},"content":"     * @param isDone      A boolean indicating whether the task is marked as done.","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"0rbita1"},"content":"     * @param tasks       The ArrayList to which the loaded task will be added.","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"0rbita1"},"content":"    public static void interpretAndLoadDeadlineSave(String taskContent, Boolean isDone, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"0rbita1"},"content":"        String[] descriptionDateSplit \u003d taskContent.split(\" \\\\(by: \", 2);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"0rbita1"},"content":"        String description \u003d descriptionDateSplit[0];","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"0rbita1"},"content":"        String dateString \u003d descriptionDateSplit[1].substring(0, descriptionDateSplit[1].length() - 1);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"0rbita1"},"content":"        try {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"0rbita1"},"content":"            if (dateString.contains(\"T\")) {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"0rbita1"},"content":"                LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(dateString);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"0rbita1"},"content":"                Storage.loadDeadline(description, isDone, deadlineDateTime, tasks);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"0rbita1"},"content":"            } else {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"0rbita1"},"content":"                LocalDate deadlineDate \u003d LocalDate.parse(dateString);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"0rbita1"},"content":"                Storage.loadDeadline(description, isDone, deadlineDate, tasks);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"0rbita1"},"content":"            }","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"0rbita1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"0rbita1"},"content":"            System.out.println(\"Invalid date format for deadline input! \" + e + \"\\n\" + \"Event deadline format as \"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"0rbita1"},"content":"                    + \"follows:\"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"0rbita1"},"content":"                    + \" YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS\");","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"0rbita1"},"content":"            Ui.addMessageToBuffer(\"Invalid date format for deadline input! \" + e + \"\\n\" + \"Event deadline format as \"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"0rbita1"},"content":"                    + \"follows:\"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"0rbita1"},"content":"                    + \" YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS\");","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"0rbita1"},"content":"     * Interprets the save content and calls the appropriate loadEvent method depending on the format of the dateTime","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"0rbita1"},"content":"     * This method parses the taskContent string to extract the task description and the event\u0027s start and end dates or","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"0rbita1"},"content":"     * times.","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"0rbita1"},"content":"     * It handles two distinct date/time formats: YYYY-MM-DD for date-only events and YYYY-MM-DDTHH:MM:SS for events","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"0rbita1"},"content":"     * with specific times.","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"0rbita1"},"content":"     * If the parsing is successful, it calls Storage.loadEvent to create and add the task.","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"0rbita1"},"content":"     * If the date string is in an invalid format, a DateTimeParseException is caught, and an error message is printed","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"0rbita1"},"content":"     * to the console.","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"0rbita1"},"content":"     * @param taskContent The string content of the event, expected to be in the format \"description (from: start_date","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"0rbita1"},"content":"     *                    to: end_date)\".","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"0rbita1"},"content":"     * @param isDone      A boolean indicating whether the task is marked as done.","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"0rbita1"},"content":"     * @param tasks       The ArrayList to which the loaded task will be added.","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"0rbita1"},"content":"    public static void interpretAndLoadEventSave(String taskContent, Boolean isDone, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"0rbita1"},"content":"        String[] descriptionDurationSplit \u003d taskContent.split(\" \\\\(from: \", 2);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"0rbita1"},"content":"        String description \u003d descriptionDurationSplit[0];","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"0rbita1"},"content":"        String[] durationSplit \u003d descriptionDurationSplit[1].split(\" to: \", 2);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"0rbita1"},"content":"        String eventStartString \u003d durationSplit[0];","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"0rbita1"},"content":"        String eventEndString \u003d durationSplit[1].substring(0, durationSplit[1].length() - 1);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"0rbita1"},"content":"        try {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"0rbita1"},"content":"            if (eventStartString.contains(\"T\") \u0026\u0026 eventEndString.contains(\"T\")) {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"0rbita1"},"content":"                LocalDateTime eventStart \u003d LocalDateTime.parse(eventStartString);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"0rbita1"},"content":"                LocalDateTime eventEnd \u003d LocalDateTime.parse(eventEndString);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"0rbita1"},"content":"                Storage.loadEvent(description, isDone, eventStart, eventEnd, tasks);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"0rbita1"},"content":"            } else if (!eventStartString.contains(\"T\") \u0026\u0026 !eventEndString.contains(\"T\")) {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"0rbita1"},"content":"                LocalDate eventStart \u003d LocalDate.parse(eventStartString);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"0rbita1"},"content":"                LocalDate eventEnd \u003d LocalDate.parse(eventEndString);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"0rbita1"},"content":"                Storage.loadEvent(description, isDone, eventStart, eventEnd, tasks);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"0rbita1"},"content":"            }","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"0rbita1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"0rbita1"},"content":"            System.out.println(\"Invalid date format for event input! \" + e + \"\\n\" + \"Event date format as follows:\"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"0rbita1"},"content":"                    + \" YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS\");","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"0rbita1"},"content":"            Ui.addMessageToBuffer(\"Invalid date format for event input! \" + e + \"\\n\" + \"Event date format as follows:\"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"0rbita1"},"content":"                    + \" YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS\");","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"0rbita1"},"content":"    private static void interpretMark(String input, ArrayList\u003cTask\u003e tasks) throws InvalidMarkingException {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"0rbita1"},"content":"        try {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"0rbita1"},"content":"            String[] markingArray \u003d input.split(\" \");","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"0rbita1"},"content":"            String isMarkString \u003d markingArray[0];","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"0rbita1"},"content":"            int indexNumber \u003d Integer.parseInt(markingArray[1]);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"0rbita1"},"content":"            switch (isMarkString) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"0rbita1"},"content":"            case \"mark\" -\u003e TaskList.markTask(tasks, indexNumber);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"0rbita1"},"content":"            case \"unmark\" -\u003e TaskList.unmarkTask(tasks, indexNumber);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"0rbita1"},"content":"            }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"0rbita1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"0rbita1"},"content":"            Ui.addMessageToBuffer(\"Invalid marking invocation! \" + e + \"\\n\");","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"0rbita1"},"content":"            throw new InvalidMarkingException(\"Invalid marking invocation! \" + e + \"\\n\");","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"0rbita1"},"content":"    private static void interpretDelete(String input, ArrayList\u003cTask\u003e tasks) throws Exception {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"0rbita1"},"content":"        try {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"0rbita1"},"content":"            String[] deletionArray \u003d input.split(\" \");","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"0rbita1"},"content":"            int indexNumber \u003d Integer.parseInt(deletionArray[1]);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"0rbita1"},"content":"            TaskList.deleteTask(tasks, indexNumber);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"0rbita1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"0rbita1"},"content":"            Ui.addMessageToBuffer(\"Invalid deletion invocation! \" + e + \"\\n\");","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"0rbita1"},"content":"            throw new Exception(\"Invalid deletion invocation! \" + e + \"\\n\");","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"0rbita1"},"content":"    private static void interpretFind(String input, ArrayList\u003cTask\u003e tasks) throws Exception {","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"0rbita1"},"content":"        try {","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"0rbita1"},"content":"            String[] findQuerySplit \u003d input.split(\" \");","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"0rbita1"},"content":"            String query \u003d findQuerySplit[1];","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"0rbita1"},"content":"            ArrayList\u003cTask\u003e queryResult \u003d TaskList.findQuery(query, tasks);","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"0rbita1"},"content":"            Ui.printQueryList(queryResult);","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"0rbita1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"0rbita1"},"content":"            Ui.addMessageToBuffer(\"Invalid find invocation! \" + e + \"\\n\");","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"0rbita1"},"content":"            throw new Exception(\"Invalid find invocation! \" + e + \"\\n\");","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"0rbita1"},"content":"}","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false}],"authorContributionMap":{"0rbita1":206}},{"path":"src/main/java/keeka/Keeka.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"package keeka;","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"import tasks.Task;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"0rbita1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"0rbita1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"0rbita1"},"content":"public class Keeka {","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"0rbita1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"0rbita1"},"content":"}","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false}],"authorContributionMap":{"0rbita1":15}},{"path":"src/main/java/keeka/List.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"1. [D] [ ]   something new (by: 2025-08-08T00:00)","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"2. [E] [ ]   something else old (from: 2025-08-08 to: 2025-08-08)","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"3. [T] [ ]   blah blah","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"4. [D] [ ]   return book (by: 2025-09-04)","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"0rbita1"},"content":"5. [D] [ ]   Submit quarterly tax returns (by: 2025-03-15)","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"0rbita1"},"content":"6. [D] [ ]   Submit presentation slides (by: 2025-09-06T14:30)","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"0rbita1"},"content":"7. [T] [ ]   ","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"0rbita1"},"content":"8. [T] [ ] new update to description","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false}],"authorContributionMap":{"0rbita1":8}},{"path":"src/main/java/keeka/ParsedSaveContent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"package keeka;","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"public class ParsedSaveContent {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"    private char taskCode;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"0rbita1"},"content":"    private boolean isDone;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"0rbita1"},"content":"    private String taskContent;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"0rbita1"},"content":"    public ParsedSaveContent(char taskCode, char markedStatus, String taskContent) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"0rbita1"},"content":"        this.taskCode \u003d taskCode;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"0rbita1"},"content":"        this.isDone \u003d markedStatus \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"0rbita1"},"content":"        this.taskContent \u003d taskContent;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"0rbita1"},"content":"    public char getTaskCode() {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"0rbita1"},"content":"        return this.taskCode;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"0rbita1"},"content":"    public boolean getMarkedStatus() {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"0rbita1"},"content":"        return this.isDone;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"0rbita1"},"content":"    public String getTaskContent() {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"0rbita1"},"content":"        return this.taskContent;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"0rbita1"},"content":"}","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false}],"authorContributionMap":{"0rbita1":25}},{"path":"src/main/java/keeka/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"package keeka;","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"0rbita1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"0rbita1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"0rbita1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"0rbita1"},"content":"import java.util.Objects;","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"0rbita1"},"content":"import tasks.Deadline;","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"0rbita1"},"content":"import tasks.Event;","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"0rbita1"},"content":"import tasks.Task;","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"0rbita1"},"content":"import tasks.ToDo;","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"0rbita1"},"content":"import static keeka.Ui.addMessageToBuffer;","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"0rbita1"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"0rbita1"},"content":"    static final int TASK_CODE_INDEX \u003d 1;","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"0rbita1"},"content":"    static final int MARKED_STATUS_INDEX \u003d 4;","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"0rbita1"},"content":"    static final int SUBSTRING_START_INDEX \u003d 7;","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"0rbita1"},"content":"    public Parser() {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"0rbita1"},"content":"     * Parses a single line of a saved task from a file and extracts its key components.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"0rbita1"},"content":"     * This static method is responsible for dissecting a string from the save file,","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"0rbita1"},"content":"     * which is expected to be in the format `\"[index]. [taskCode][markedStatus] [taskContent]\"`.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"0rbita1"},"content":"     * It splits the string to isolate the task code, the completion status, and the","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"0rbita1"},"content":"     * task\u0027s description/details. The extracted information is then encapsulated","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"0rbita1"},"content":"     * within a `ParsedSaveContent` object for easy access.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"0rbita1"},"content":"     * @param saveContent The single-line string content of a saved task.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"0rbita1"},"content":"     * @return A `ParsedSaveContent` object containing the task\u0027s code, marked status, and content.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"0rbita1"},"content":"    public static ParsedSaveContent parseSaveContent(String saveContent) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"0rbita1"},"content":"        String[] indexTaskPair \u003d saveContent.split(\". \", 2);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"0rbita1"},"content":"        char taskCode \u003d indexTaskPair[1].charAt(TASK_CODE_INDEX);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"0rbita1"},"content":"        char markedStatus \u003d indexTaskPair[1].charAt(MARKED_STATUS_INDEX);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"0rbita1"},"content":"        String taskContent \u003d indexTaskPair[1].substring(SUBSTRING_START_INDEX);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"0rbita1"},"content":"        return new ParsedSaveContent(taskCode, markedStatus, taskContent);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"0rbita1"},"content":"     * Parses user input for a new deadline task and adds it to the task list.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"0rbita1"},"content":"     * The method expects a string in the format `\"[description] /by [date/time]\"`.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"0rbita1"},"content":"     * It splits the input to separate the description from the deadline date/time.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"0rbita1"},"content":"     * It supports both a date-only format (`YYYY-MM-DD`) and a date-with-time format","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"0rbita1"},"content":"     * (`YYYY-MM-DDTHH:MM:SS`). The parsed information is then used to create","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"0rbita1"},"content":"     * and add a new `Deadline` task to the provided `ArrayList`.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"0rbita1"},"content":"     * Catches `DateTimeParseException` to handle invalid date formats, printing an error message.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"0rbita1"},"content":"     * @param remainingContent The string containing the task description and deadline date.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"0rbita1"},"content":"     * @param tasks            The `ArrayList` to which the new deadline task will be added.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"0rbita1"},"content":"     * @throws DateTimeParseException If the date/time string is not in a valid format.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"0rbita1"},"content":"    public static void parseDeadlineInput(String remainingContent, ArrayList\u003cTask\u003e tasks) throws","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"0rbita1"},"content":"            DateTimeParseException {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"0rbita1"},"content":"        String[] parsedDescription \u003d remainingContent.split(\" /by \");","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"0rbita1"},"content":"        String deadlineDescription \u003d parsedDescription[0];","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"0rbita1"},"content":"        String deadlineDateString \u003d parsedDescription[1];","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"0rbita1"},"content":"        try {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"0rbita1"},"content":"            if (deadlineDateString.contains(\"T\")) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"0rbita1"},"content":"                LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(deadlineDateString);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"0rbita1"},"content":"                TaskList.addDeadline(deadlineDescription, false, deadlineDateTime, tasks);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"0rbita1"},"content":"            } else {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"0rbita1"},"content":"                LocalDate deadlineDate \u003d LocalDate.parse(deadlineDateString);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"0rbita1"},"content":"                TaskList.addDeadline(deadlineDescription, false, deadlineDate, tasks);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"0rbita1"},"content":"            }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"0rbita1"},"content":"        } catch (DateTimeParseException | IOException e) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"0rbita1"},"content":"            System.out.println(\"Invalid date format for deadline input! \" + e);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"0rbita1"},"content":"            System.out.println(\"Deadline date format as follows: YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS\");","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"0rbita1"},"content":"            addMessageToBuffer(\"Invalid date format for deadline input! \" + e + \"Deadline date format as follows: \"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"0rbita1"},"content":"                    + \"YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS\");","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"0rbita1"},"content":"     * Parses user input for a new event task and adds it to the task list.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"0rbita1"},"content":"     * This method takes a string input and parses it to extract the event\u0027s","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"0rbita1"},"content":"     * description, start date/time, and end date/time. The expected format is","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"0rbita1"},"content":"     * `\"[description] /from [start_date] /to [end_date]\"`. It can handle","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"0rbita1"},"content":"     * events with dates only (`YYYY-MM-DD`) or full date and time","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"0rbita1"},"content":"     * (`YYYY-MM-DDTHH:MM:SS`). The method then creates a new `Event` task and adds","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"0rbita1"},"content":"     * it to the provided `ArrayList`. It includes error handling for invalid date formats.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"0rbita1"},"content":"     * @param remainingContent The string containing the event description and duration.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"0rbita1"},"content":"     * @param tasks            The `ArrayList` to which the new event task will be added.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"0rbita1"},"content":"     * @throws DateTimeParseException If the date/time strings are not in a valid format.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"0rbita1"},"content":"    public static void parseEventInput(String remainingContent, ArrayList\u003cTask\u003e tasks) throws DateTimeParseException {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"0rbita1"},"content":"        String[] parsedDescription \u003d remainingContent.split(\" /from \");","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"0rbita1"},"content":"        String eventDescription \u003d parsedDescription[0];","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"0rbita1"},"content":"        String[] parsedDuration \u003d parsedDescription[1].split(\" /to \");","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"0rbita1"},"content":"        String eventStartString \u003d parsedDuration[0];","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"0rbita1"},"content":"        String eventEndString \u003d parsedDuration[1];","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"0rbita1"},"content":"        try {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"0rbita1"},"content":"            if (eventStartString.contains(\"T\") \u0026\u0026 eventEndString.contains(\"T\")) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"0rbita1"},"content":"                LocalDateTime eventStart \u003d LocalDateTime.parse(eventStartString);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"0rbita1"},"content":"                LocalDateTime eventEnd \u003d LocalDateTime.parse(eventEndString);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"0rbita1"},"content":"                TaskList.addEvent(eventDescription, false, eventStart, eventEnd, tasks);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"0rbita1"},"content":"            } else if (!eventStartString.contains(\"T\") \u0026\u0026 !eventEndString.contains(\"T\")) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"0rbita1"},"content":"                LocalDate eventStart \u003d LocalDate.parse(eventStartString);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"0rbita1"},"content":"                LocalDate eventEnd \u003d LocalDate.parse(eventEndString);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"0rbita1"},"content":"                TaskList.addEvent(eventDescription, false, eventStart, eventEnd, tasks);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"0rbita1"},"content":"            }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"0rbita1"},"content":"        } catch (DateTimeParseException | IOException e) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"0rbita1"},"content":"            System.out.println(\"Invalid date format for event input! \" + e + \"\\n\");","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"0rbita1"},"content":"            System.out.println(\"Event date format as follows: YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS\");","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"0rbita1"},"content":"            addMessageToBuffer(\"Invalid date format for event input! \" + e + \"\\n\" + \"Event date format as follows: \"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"0rbita1"},"content":"                    + \"YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS\");","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"0rbita1"},"content":"    public static ParsedSaveContent parseUpdate(String input, ArrayList\u003cTask\u003e tasks) throws Exception {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"0rbita1"},"content":"        try {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"0rbita1"},"content":"            String[] indexRemainingInputSplit \u003d input.split(\" \", 2);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"0rbita1"},"content":"            int indexNumber \u003d Integer.parseInt(indexRemainingInputSplit[0]) - 1;","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"0rbita1"},"content":"            Task updateTask \u003d tasks.get(indexNumber);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"0rbita1"},"content":"            ParsedSaveContent parsedTask \u003d parseSaveContent(\"1. \" + updateTask.toString());","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"0rbita1"},"content":"            char taskCode \u003d parsedTask.getTaskCode();","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"0rbita1"},"content":"            boolean isMarked \u003d parsedTask.getMarkedStatus();","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"0rbita1"},"content":"            String remainingInput \u003d indexRemainingInputSplit[1];","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"0rbita1"},"content":"            String[] fieldTypeNewValueSplit \u003d remainingInput.split(\" \", 2);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"0rbita1"},"content":"            String fieldType \u003d fieldTypeNewValueSplit[0];","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"0rbita1"},"content":"            String newValue \u003d fieldTypeNewValueSplit[1];","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"0rbita1"},"content":"            switch (taskCode) {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"0rbita1"},"content":"            case \u0027T\u0027 -\u003e parseToDoUpdate(indexNumber, fieldType, newValue, isMarked, tasks);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"0rbita1"},"content":"            case \u0027D\u0027 -\u003e parseDeadlineUpdate(indexNumber, fieldType, newValue, isMarked, tasks);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"0rbita1"},"content":"            case \u0027E\u0027 -\u003e parseEventUpdate(indexNumber, fieldType, newValue, isMarked, tasks);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"0rbita1"},"content":"            default -\u003e throw new RuntimeException();","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"0rbita1"},"content":"            }","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"0rbita1"},"content":"            return parsedTask;","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"0rbita1"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"0rbita1"},"content":"            addMessageToBuffer(\"Unable to parse update command! \" + e);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"0rbita1"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"0rbita1"},"content":"    public static void parseToDoUpdate(int indexNumber, String fieldType, String newValue, boolean isMarked,","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"0rbita1"},"content":"                                       ArrayList\u003cTask\u003e tasks) throws Exception {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"0rbita1"},"content":"        try {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"0rbita1"},"content":"            if (Objects.equals(fieldType, \"description\")) {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"0rbita1"},"content":"                tasks.remove(indexNumber);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"0rbita1"},"content":"                ToDo toDo \u003d new ToDo(newValue, isMarked);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"0rbita1"},"content":"                tasks.add(toDo);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"0rbita1"},"content":"                Storage.updateTaskInSave(tasks);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"0rbita1"},"content":"            } else {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"0rbita1"},"content":"                addMessageToBuffer(\"Only field which can be modified for ToDo task is \\\"description\\\"\");","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"0rbita1"},"content":"                throw new RuntimeException(\"Only field which can be modified for ToDo task is \\\"description\\\"\");","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"0rbita1"},"content":"            }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"0rbita1"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"0rbita1"},"content":"            addMessageToBuffer(\"Unable to parse update ToDo command! \" + e);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"0rbita1"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"0rbita1"},"content":"    public static void parseDeadlineUpdate(int indexNumber, String fieldType, String newValue, boolean isMarked,","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"0rbita1"},"content":"                                           ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"0rbita1"},"content":"        try {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"0rbita1"},"content":"            Deadline currentDeadline \u003d (Deadline) tasks.get(indexNumber);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"0rbita1"},"content":"            if (Objects.equals(fieldType, \"description\")) {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"0rbita1"},"content":"                if (currentDeadline.getDateTime() \u003d\u003d null) {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"0rbita1"},"content":"                    Deadline newDeadline \u003d new Deadline(newValue, isMarked, currentDeadline.getDate());","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"0rbita1"},"content":"                    tasks.add(newDeadline);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"0rbita1"},"content":"                    tasks.remove(indexNumber);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"0rbita1"},"content":"                } else if (currentDeadline.getDate() \u003d\u003d null) {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"0rbita1"},"content":"                    Deadline newDeadline \u003d new Deadline(newValue, isMarked, currentDeadline.getDateTime());","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"0rbita1"},"content":"                    tasks.add(newDeadline);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"0rbita1"},"content":"                    tasks.remove(indexNumber);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"0rbita1"},"content":"                } else {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"0rbita1"},"content":"                    throw new RuntimeException();","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"0rbita1"},"content":"                }","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"0rbita1"},"content":"            } else if (Objects.equals(fieldType, \"date\")) {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"0rbita1"},"content":"                if (newValue.contains(\"T\")) {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"0rbita1"},"content":"                    LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(newValue);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"0rbita1"},"content":"                    Deadline newDeadline \u003d new Deadline(currentDeadline.getDescription(), isMarked, deadlineDateTime);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"0rbita1"},"content":"                    tasks.add(newDeadline);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"0rbita1"},"content":"                    tasks.remove(indexNumber);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"0rbita1"},"content":"                } else {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"0rbita1"},"content":"                    LocalDate deadlineDate \u003d LocalDate.parse(newValue);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"0rbita1"},"content":"                    Deadline newDeadline \u003d new Deadline(currentDeadline.getDescription(), isMarked, deadlineDate);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"0rbita1"},"content":"                    tasks.add(newDeadline);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"0rbita1"},"content":"                    tasks.remove(indexNumber);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"0rbita1"},"content":"                }","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"0rbita1"},"content":"            }","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"0rbita1"},"content":"            Storage.updateTaskInSave(tasks);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"0rbita1"},"content":"        } catch (RuntimeException | IOException e) {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"0rbita1"},"content":"            addMessageToBuffer(\"Unable to parse update Deadline command! \" + e);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"0rbita1"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"0rbita1"},"content":"    public static void parseEventUpdate(int indexNumber, String fieldType, String newValue, boolean isMarked,","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"0rbita1"},"content":"                                        ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"0rbita1"},"content":"        try {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"0rbita1"},"content":"            Event currentEvent \u003d (Event) tasks.get(indexNumber);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"0rbita1"},"content":"            if (Objects.equals(fieldType, \"description\")) {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"0rbita1"},"content":"                if (currentEvent.getStartDateTime() \u003d\u003d null) {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"0rbita1"},"content":"                    Event newEvent \u003d new Event(newValue, isMarked, currentEvent.getStartDate(),","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"0rbita1"},"content":"                            currentEvent.getEndDate());","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"0rbita1"},"content":"                    tasks.add(newEvent);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"0rbita1"},"content":"                    tasks.remove(indexNumber);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"0rbita1"},"content":"                } else if (currentEvent.getStartDate() \u003d\u003d null) {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"0rbita1"},"content":"                    Event newEvent \u003d new Event(newValue, isMarked, currentEvent.getStartDateTime(),","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"0rbita1"},"content":"                            currentEvent.getEndDateTime());","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"0rbita1"},"content":"                    tasks.add(newEvent);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"0rbita1"},"content":"                    tasks.remove(indexNumber);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"0rbita1"},"content":"                }","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"0rbita1"},"content":"            } else if (Objects.equals(fieldType, \"startDate\")) {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"0rbita1"},"content":"                if (newValue.contains(\"T\")) {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"0rbita1"},"content":"                    LocalDateTime eventDateTime \u003d LocalDateTime.parse(newValue);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"0rbita1"},"content":"                    Event newEvent \u003d new Event(currentEvent.getDescription(), isMarked, eventDateTime,","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"0rbita1"},"content":"                            currentEvent.getEndDateTime());","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"0rbita1"},"content":"                    tasks.add(newEvent);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"0rbita1"},"content":"                    tasks.remove(indexNumber);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"0rbita1"},"content":"                } else {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"0rbita1"},"content":"                    LocalDate eventDate \u003d LocalDate.parse(newValue);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"0rbita1"},"content":"                    Event newEvent \u003d new Event(currentEvent.getDescription(), isMarked, eventDate,","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"0rbita1"},"content":"                            currentEvent.getEndDate());","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"0rbita1"},"content":"                    tasks.add(newEvent);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"0rbita1"},"content":"                    tasks.remove(indexNumber);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"0rbita1"},"content":"                }","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"0rbita1"},"content":"            } else if (Objects.equals(fieldType, \"endDate\")) {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"0rbita1"},"content":"                if (newValue.contains(\"T\")) {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"0rbita1"},"content":"                    LocalDateTime eventDateTime \u003d LocalDateTime.parse(newValue);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"0rbita1"},"content":"                    Event newEvent \u003d new Event(currentEvent.getDescription(), isMarked, currentEvent.getStartDateTime(),","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"0rbita1"},"content":"                            eventDateTime);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"0rbita1"},"content":"                    tasks.add(newEvent);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"0rbita1"},"content":"                    tasks.remove(indexNumber);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"0rbita1"},"content":"                } else {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"0rbita1"},"content":"                    LocalDate eventDate \u003d LocalDate.parse(newValue);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"0rbita1"},"content":"                    Event newEvent \u003d new Event(currentEvent.getDescription(), isMarked, currentEvent.getStartDate(),","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"0rbita1"},"content":"                            eventDate);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"0rbita1"},"content":"                    tasks.add(newEvent);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"0rbita1"},"content":"                    tasks.remove(indexNumber);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"0rbita1"},"content":"                }","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"0rbita1"},"content":"            }","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"0rbita1"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"0rbita1"},"content":"            addMessageToBuffer(\"Unable to parse update Event command! \" + e);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"0rbita1"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"0rbita1"},"content":"}","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false}],"authorContributionMap":{"0rbita1":263}},{"path":"src/main/java/keeka/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"package keeka;","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"import exceptions.InvalidTaskException;","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"import tasks.Deadline;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"0rbita1"},"content":"import tasks.Event;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"0rbita1"},"content":"import tasks.Task;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"0rbita1"},"content":"import tasks.ToDo;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"0rbita1"},"content":"import java.io.File;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"0rbita1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"0rbita1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"0rbita1"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"0rbita1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"0rbita1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"0rbita1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"0rbita1"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"0rbita1"},"content":"import static keeka.Ui.addMessageToBuffer;","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"0rbita1"},"content":"public class Storage {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"0rbita1"},"content":"    static final String SAVE_FILE_PATH \u003d \"src/main/java/keeka/List.txt\";","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"0rbita1"},"content":"    private static File saveFile;","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"0rbita1"},"content":"    public Storage() {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"0rbita1"},"content":"        saveFile \u003d new File(SAVE_FILE_PATH);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"0rbita1"},"content":"    public static void loadSaveContents(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"0rbita1"},"content":"        try {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"0rbita1"},"content":"            ArrayList\u003cString\u003e saveContents \u003d retrieveSaveContents();","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"0rbita1"},"content":"            for (int i \u003d 0; i \u003c saveContents.size(); i++) {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"0rbita1"},"content":"                String saveContent \u003d saveContents.get(i);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"0rbita1"},"content":"                ParsedSaveContent parsedSaveContent \u003d Parser.parseSaveContent(saveContent);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"0rbita1"},"content":"                char taskCode \u003d parsedSaveContent.getTaskCode();","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"0rbita1"},"content":"                boolean isDone \u003d parsedSaveContent.getMarkedStatus();","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"0rbita1"},"content":"                String taskContent \u003d parsedSaveContent.getTaskContent();","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"0rbita1"},"content":"                switch (taskCode) {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"0rbita1"},"content":"                case \u0027T\u0027 -\u003e loadToDo(taskContent, isDone, tasks);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"0rbita1"},"content":"                case \u0027D\u0027 -\u003e Interpreter.interpretAndLoadDeadlineSave(taskContent, isDone, tasks);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"0rbita1"},"content":"                case \u0027E\u0027 -\u003e Interpreter.interpretAndLoadEventSave(taskContent, isDone, tasks);","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"0rbita1"},"content":"                }","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"0rbita1"},"content":"            }","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"0rbita1"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"0rbita1"},"content":"            System.out.println(\"File not found! \" + e + \"\\n\");","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"0rbita1"},"content":"            addMessageToBuffer(\"File not found! \" + e + \"\\n\");","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"0rbita1"},"content":"     * Retrieves the contents of the save file and returns them as a list of strings.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"0rbita1"},"content":"     * This method reads each line from the file located at `SAVE_FILE_PATH` using a `Scanner`.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"0rbita1"},"content":"     * Each line, representing a saved task, is added to an `ArrayList\u003cString\u003e`.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"0rbita1"},"content":"     * The process continues until the end of the file is reached, after which the populated list is returned.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"0rbita1"},"content":"     * @return An `ArrayList` of strings, where each string is a line from the save file.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"0rbita1"},"content":"     * @throws FileNotFoundException If the save file does not exist at the specified path.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"0rbita1"},"content":"    public static ArrayList\u003cString\u003e retrieveSaveContents() throws FileNotFoundException {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"0rbita1"},"content":"        saveFile \u003d new File(SAVE_FILE_PATH);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"0rbita1"},"content":"        Scanner saveFileScanner \u003d new Scanner(saveFile);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"0rbita1"},"content":"        ArrayList\u003cString\u003e saveContents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"0rbita1"},"content":"        while (saveFileScanner.hasNext()) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"0rbita1"},"content":"            String currentLine \u003d saveFileScanner.nextLine();","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"0rbita1"},"content":"            saveContents.add(currentLine);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"0rbita1"},"content":"        return saveContents;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"0rbita1"},"content":"     * Loads a ToDo task and adds it to the task list.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"0rbita1"},"content":"     * This method creates a new `ToDo` object with the given description and completion status.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"0rbita1"},"content":"     * It then adds this newly created `ToDo` task to the provided `ArrayList` of tasks.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"0rbita1"},"content":"     * @param description The textual description of the ToDo task.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"0rbita1"},"content":"     * @param isDone      A boolean indicating whether the task is marked as done.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"0rbita1"},"content":"     * @param tasks       The `ArrayList` to which the new ToDo task will be added.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"0rbita1"},"content":"    public static void loadToDo(String description, Boolean isDone, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"0rbita1"},"content":"        ToDo newToDo \u003d new ToDo(description, isDone);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"0rbita1"},"content":"        tasks.add(newToDo);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"0rbita1"},"content":"     * Loads a deadline task with a `LocalDateTime` and adds it to the task list.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"0rbita1"},"content":"     * This method is an overloaded version of `loadDeadline`. It creates a new `Deadline` object","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"0rbita1"},"content":"     * using a specific description, completion status, and a `LocalDateTime` object representing the deadline date and","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"0rbita1"},"content":"     * time.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"0rbita1"},"content":"     * The created task is then added to the provided `ArrayList`.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"0rbita1"},"content":"     * @param description The textual description of the deadline task.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"0rbita1"},"content":"     * @param isDone      A boolean indicating whether the task is marked as done.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"0rbita1"},"content":"     * @param date        The `LocalDateTime` object representing the deadline.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"0rbita1"},"content":"     * @param tasks       The `ArrayList` to which the new deadline task will be added.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"0rbita1"},"content":"    public static void loadDeadline(String description, Boolean isDone, LocalDateTime date, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"0rbita1"},"content":"        Deadline newDeadline \u003d new Deadline(description, isDone, date);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"0rbita1"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"0rbita1"},"content":"     * Loads a deadline task with a `LocalDate` and adds it to the task list.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"0rbita1"},"content":"     * This method is an overloaded version of `loadDeadline`. It creates a new `Deadline` object","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"0rbita1"},"content":"     * using a specific description, completion status, and a `LocalDate` object representing the deadline date.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"0rbita1"},"content":"     * The created task is then added to the provided `ArrayList`.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"0rbita1"},"content":"     * @param description The textual description of the deadline task.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"0rbita1"},"content":"     * @param isDone      A boolean indicating whether the task is marked as done.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"0rbita1"},"content":"     * @param date        The `LocalDate` object representing the deadline.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"0rbita1"},"content":"     * @param tasks       The `ArrayList` to which the new deadline task will be added.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"0rbita1"},"content":"    public static void loadDeadline(String description, Boolean isDone, LocalDate date, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"0rbita1"},"content":"        Deadline newDeadline \u003d new Deadline(description, isDone, date);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"0rbita1"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"0rbita1"},"content":"     * Loads an event task with `LocalDateTime` objects and adds it to the task list.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"0rbita1"},"content":"     * This method is an overloaded version of `loadEvent`. It creates a new `Event` object","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"0rbita1"},"content":"     * with the given description, completion status, and start and end times as `LocalDateTime` objects.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"0rbita1"},"content":"     * The created event task is then added to the provided `ArrayList`.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"0rbita1"},"content":"     * @param description The textual description of the event.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"0rbita1"},"content":"     * @param isDone      A boolean indicating whether the task is marked as done.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"0rbita1"},"content":"     * @param start       The `LocalDateTime` object representing the event\u0027s start time.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"0rbita1"},"content":"     * @param end         The `LocalDateTime` object representing the event\u0027s end time.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"0rbita1"},"content":"     * @param tasks       The `ArrayList` to which the new event task will be added.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"0rbita1"},"content":"    public static void loadEvent(String description, Boolean isDone, LocalDateTime start, LocalDateTime end,","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"0rbita1"},"content":"                                  ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"0rbita1"},"content":"        Event newEvent \u003d new Event(description, isDone, start, end);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"0rbita1"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"0rbita1"},"content":"     * Loads an event task with `LocalDate` objects and adds it to the task list.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"0rbita1"},"content":"     * This method is an overloaded version of `loadEvent`. It creates a new `Event` object","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"0rbita1"},"content":"     * with the given description, completion status, and start and end dates as `LocalDate` objects.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"0rbita1"},"content":"     * The created event task is then added to the provided `ArrayList`.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"0rbita1"},"content":"     * @param description The textual description of the event.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"0rbita1"},"content":"     * @param isDone      A boolean indicating whether the task is marked as done.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"0rbita1"},"content":"     * @param start       The `LocalDate` object representing the event\u0027s start date.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"0rbita1"},"content":"     * @param end         The `LocalDate` object representing the event\u0027s end date.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"0rbita1"},"content":"     * @param tasks       The `ArrayList` to which the new event task will be added.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"0rbita1"},"content":"    public static void loadEvent(String description, Boolean isDone, LocalDate start, LocalDate end,","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"0rbita1"},"content":"                                  ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"0rbita1"},"content":"        Event newEvent \u003d new Event(description, isDone, start, end);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"0rbita1"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"0rbita1"},"content":"     * Appends a ToDo task to the save file.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"0rbita1"},"content":"     * This method formats the ToDo task into a save-friendly string representation.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"0rbita1"},"content":"     * It uses a `FileWriter` in append mode to write this string to the save file","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"0rbita1"},"content":"     * located at `SAVE_FILE_PATH`, ensuring that new content is added to the end.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"0rbita1"},"content":"     * @param task The `ToDo` object to be saved.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"0rbita1"},"content":"     * @param tasks The `ArrayList` of tasks used to determine the correct index for saving.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"0rbita1"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"0rbita1"},"content":"    public static void addToDoToSave(ToDo task, ArrayList\u003cTask\u003e tasks ) throws IOException {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"0rbita1"},"content":"        String saveText \u003d tasks.size() + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"0rbita1"},"content":"        FileWriter fw \u003d new FileWriter(SAVE_FILE_PATH, true);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"0rbita1"},"content":"        fw.write(saveText);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"0rbita1"},"content":"        fw.close();","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"0rbita1"},"content":"     * Appends a Deadline task to the save file.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"0rbita1"},"content":"     * This method formats the Deadline task\u0027s ISO string representation and appends it to the save file.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"0rbita1"},"content":"     * It uses a `FileWriter` in append mode to write the task\u0027s details to `SAVE_FILE_PATH`.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"0rbita1"},"content":"     * @param deadline The `Deadline` object to be saved.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"0rbita1"},"content":"     * @param tasks    The `ArrayList` of tasks used to determine the correct index for saving.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"0rbita1"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"0rbita1"},"content":"    public static void addDeadlineToSave(Deadline deadline, ArrayList\u003cTask\u003e tasks ) throws IOException {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"0rbita1"},"content":"        String saveText \u003d tasks.size() + \". \" + deadline.toString() + \"\\n\";","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"0rbita1"},"content":"        FileWriter fw \u003d new FileWriter(SAVE_FILE_PATH, true);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"0rbita1"},"content":"        fw.write(saveText);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"0rbita1"},"content":"        fw.close();","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"0rbita1"},"content":"     * Appends an Event task to the save file.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"0rbita1"},"content":"     * This method formats the Event task\u0027s ISO string representation and appends it to the save file.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"0rbita1"},"content":"     * It uses a `FileWriter` in append mode to write the task\u0027s details to `SAVE_FILE_PATH`.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"0rbita1"},"content":"     * @param event The `Event` object to be saved.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"0rbita1"},"content":"     * @param tasks The `ArrayList` of tasks used to determine the correct index for saving.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"0rbita1"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"0rbita1"},"content":"    public static void addEventToSave(Event event, ArrayList\u003cTask\u003e tasks ) throws IOException {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"0rbita1"},"content":"        String saveText \u003d tasks.size() + \". \" + event.toString() + \"\\n\";","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"0rbita1"},"content":"        FileWriter fw \u003d new FileWriter(SAVE_FILE_PATH, true);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"0rbita1"},"content":"        fw.write(saveText);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"0rbita1"},"content":"        fw.close();","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"0rbita1"},"content":"     * Rewrites the entire save file with the current contents of the task list.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"0rbita1"},"content":"     * This method is used to synchronize the save file with any changes made to the task list,","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"0rbita1"},"content":"     * such as marking a task as done or deleting one. It uses a `FileWriter` in overwrite mode (`false`)","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"0rbita1"},"content":"     * to clear the existing file content before writing the updated list of tasks.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"0rbita1"},"content":"     * Each task in the provided `ArrayList` is formatted into a string and written to the file.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"0rbita1"},"content":"     * @param tasks The `ArrayList` of `Task` objects containing the current state of the tasks.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"0rbita1"},"content":"     * @throws IOException If an I/O error occurs during the file writing process.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"0rbita1"},"content":"    public static void updateTaskInSave(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"0rbita1"},"content":"        FileWriter fw \u003d new FileWriter(SAVE_FILE_PATH, false);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"0rbita1"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"0rbita1"},"content":"            String saveText \u003d (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"0rbita1"},"content":"            fw.write(saveText);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"0rbita1"},"content":"        fw.close();","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"0rbita1"},"content":"}","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false}],"authorContributionMap":{"0rbita1":241}},{"path":"src/main/java/keeka/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"package keeka;","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"import tasks.Deadline;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"import tasks.Event;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"0rbita1"},"content":"import tasks.Task;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"0rbita1"},"content":"import tasks.ToDo;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"0rbita1"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"0rbita1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"0rbita1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"0rbita1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"0rbita1"},"content":"public class TaskList {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"0rbita1"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"0rbita1"},"content":"     * Creates and adds a new `ToDo` task to the task list and saves it to a file.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"0rbita1"},"content":"     * This method instantiates a new `ToDo` object with the provided description and completion status.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"0rbita1"},"content":"     * It then adds the new task to the `ArrayList` and subsequently calls a method in the `Storage` class","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"0rbita1"},"content":"     * to persist the task in the save file.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"0rbita1"},"content":"     * @param description The textual description of the to-do task.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"0rbita1"},"content":"     * @param isDone      A boolean indicating whether the task is initially marked as done.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"0rbita1"},"content":"     * @param tasks       The `ArrayList` of tasks to which the new to-do task will be added.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"0rbita1"},"content":"     * @throws IOException If an I/O error occurs while saving the task to the file.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"0rbita1"},"content":"    public static void addToDo(String description, Boolean isDone, ArrayList\u003cTask\u003e tasks)","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"0rbita1"},"content":"            throws IOException {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"0rbita1"},"content":"        ToDo newToDo \u003d new ToDo(description, isDone);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"0rbita1"},"content":"        tasks.add(newToDo);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"0rbita1"},"content":"        Storage.addToDoToSave(newToDo, tasks);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"0rbita1"},"content":"     * Creates and adds a new `Deadline` task with a `LocalDateTime` to the task list and saves it.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"0rbita1"},"content":"     * This is an overloaded method that creates a new `Deadline` object with a description, completion status, and a","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"0rbita1"},"content":"     * `LocalDateTime` for the deadline. The new task is added to the `ArrayList` and then saved to the file via a call","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"0rbita1"},"content":"     * to `Storage.addDeadlineToSave`.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"0rbita1"},"content":"     * @param description The textual description of the deadline task.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"0rbita1"},"content":"     * @param isDone      A boolean indicating whether the task is initially marked as done.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"0rbita1"},"content":"     * @param date        The `LocalDateTime` object representing the deadline date and time.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"0rbita1"},"content":"     * @param tasks       The `ArrayList` of tasks to which the new deadline task will be added.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"0rbita1"},"content":"     * @throws IOException If an I/O error occurs while saving the task to the file.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"0rbita1"},"content":"    public static void addDeadline(String description, Boolean isDone, LocalDateTime date, ArrayList\u003cTask\u003e tasks)","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"0rbita1"},"content":"            throws IOException {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"0rbita1"},"content":"        Deadline newDeadline \u003d new Deadline(description, isDone, date);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"0rbita1"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"0rbita1"},"content":"        Storage.addDeadlineToSave(newDeadline, tasks);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"0rbita1"},"content":"     * Creates and adds a new `Deadline` task with a `LocalDate` to the task list and saves it.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"0rbita1"},"content":"     * This is an overloaded method that creates a new `Deadline` object with a description, completion status, and a","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"0rbita1"},"content":"     * `LocalDate` for the deadline. The new task is added to the `ArrayList` and then saved to the file via a call to","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"0rbita1"},"content":"     * `Storage.addDeadlineToSave`.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"0rbita1"},"content":"     * @param description The textual description of the deadline task.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"0rbita1"},"content":"     * @param isDone      A boolean indicating whether the task is initially marked as done.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"0rbita1"},"content":"     * @param date        The `LocalDate` object representing the deadline date.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"0rbita1"},"content":"     * @param tasks       The `ArrayList` of tasks to which the new deadline task will be added.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"0rbita1"},"content":"     * @throws IOException If an I/O error occurs while saving the task to the file.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"0rbita1"},"content":"    public static void addDeadline(String description, Boolean isDone, LocalDate date, ArrayList\u003cTask\u003e tasks)","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"0rbita1"},"content":"            throws IOException {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"0rbita1"},"content":"        Deadline newDeadline \u003d new Deadline(description, isDone, date);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"0rbita1"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"0rbita1"},"content":"        Storage.addDeadlineToSave(newDeadline, tasks);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"0rbita1"},"content":"     * Creates and adds a new `Event` task with `LocalDateTime` objects to the task list and saves it.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"0rbita1"},"content":"     * This overloaded method creates an `Event` object with a description, completion status, and start and end times","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"0rbita1"},"content":"     * as `LocalDateTime` objects. The task is then added to the provided `ArrayList` and saved to the file using","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"0rbita1"},"content":"     * `Storage.addEventToSave`.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"0rbita1"},"content":"     * @param description The textual description of the event.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"0rbita1"},"content":"     * @param isDone      A boolean indicating whether the task is initially marked as done.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"0rbita1"},"content":"     * @param start       The `LocalDateTime` object for the event\u0027s start time.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"0rbita1"},"content":"     * @param end         The `LocalDateTime` object for the event\u0027s end time.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"0rbita1"},"content":"     * @param tasks       The `ArrayList` of tasks to which the new event task will be added.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"0rbita1"},"content":"     * @throws IOException If an I/O error occurs while saving the task to the file.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"0rbita1"},"content":"    public static void addEvent(String description, Boolean isDone, LocalDateTime start, LocalDateTime end,","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"0rbita1"},"content":"                                 ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"0rbita1"},"content":"        Event newEvent \u003d new Event(description, isDone, start, end);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"0rbita1"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"0rbita1"},"content":"        Storage.addEventToSave(newEvent, tasks);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"0rbita1"},"content":"     * Creates and adds a new `Event` task with `LocalDate` objects to the task list and saves it.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"0rbita1"},"content":"     * This overloaded method creates an `Event` object with a description, completion status, and start and end dates","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"0rbita1"},"content":"     * as `LocalDate` objects. The task is then added to the provided `ArrayList` and saved to the file using","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"0rbita1"},"content":"     * `Storage.addEventToSave`.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"0rbita1"},"content":"     * @param description The textual description of the event.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"0rbita1"},"content":"     * @param isDone      A boolean indicating whether the task is initially marked as done.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"0rbita1"},"content":"     * @param start       The `LocalDate` object for the event\u0027s start date.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"0rbita1"},"content":"     * @param end         The `LocalDate` object for the event\u0027s end date.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"0rbita1"},"content":"     * @param tasks       The `ArrayList` of tasks to which the new event task will be added.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"0rbita1"},"content":"     * @throws IOException If an I/O error occurs while saving the task to the file.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"0rbita1"},"content":"    public static void addEvent(String description, Boolean isDone, LocalDate start, LocalDate end,","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"0rbita1"},"content":"                                 ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"0rbita1"},"content":"        Event newEvent \u003d new Event(description, isDone, start, end);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"0rbita1"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"0rbita1"},"content":"        Storage.addEventToSave(newEvent, tasks);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"0rbita1"},"content":"     * Marks a specific task in the task list as done and updates the save file.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"0rbita1"},"content":"     * This method validates the provided index to ensure it is within the bounds of the task list.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"0rbita1"},"content":"     * If the index is valid, it retrieves the corresponding task, marks it as done using `setDone()`,","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"0rbita1"},"content":"     * updates the task in the list, and prints a confirmation message. Finally, it calls a `Storage` method to rewrite","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"0rbita1"},"content":"     * the entire save file to reflect the change.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"0rbita1"},"content":"     * @param tasks The `ArrayList` of tasks to be modified.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"0rbita1"},"content":"     * @param index The 1-based index of the task to be marked.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"0rbita1"},"content":"     * @throws IOException If an I/O error occurs while updating the save file.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"0rbita1"},"content":"    public static void markTask(ArrayList\u003cTask\u003e tasks, int index) throws IOException {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"0rbita1"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"0rbita1"},"content":"            Ui.addMessageToBuffer(\"Invalid index number! Use an integer within the range of the size of the list\");","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"0rbita1"},"content":"            return;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"0rbita1"},"content":"        Task desiredTask \u003d tasks.get(index - 1);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"0rbita1"},"content":"        desiredTask.setDone();","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"0rbita1"},"content":"        tasks.set(index - 1, desiredTask);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"0rbita1"},"content":"        Ui.addMessageToBuffer(\"Task successfully marked as done:\\n\" + desiredTask);","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"0rbita1"},"content":"        Storage.updateTaskInSave(tasks);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"0rbita1"},"content":"     * Marks a specific task in the task list as not done and updates the save file.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"0rbita1"},"content":"     * This method validates the provided index to ensure it is within the bounds of the task list.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"0rbita1"},"content":"     * If the index is valid, it retrieves the corresponding task, marks it as not done using `setNotDone()`,","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"0rbita1"},"content":"     * updates the task in the list, and prints a confirmation message. Finally, it calls a `Storage` method to rewrite","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"0rbita1"},"content":"     * the entire save file to reflect the change.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"0rbita1"},"content":"     * @param tasks The `ArrayList` of tasks to be modified.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"0rbita1"},"content":"     * @param index The 1-based index of the task to be unmarked.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"0rbita1"},"content":"     * @throws IOException If an I/O error occurs while updating the save file.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"0rbita1"},"content":"    public static void unmarkTask(ArrayList\u003cTask\u003e tasks, int index) throws IOException {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"0rbita1"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"0rbita1"},"content":"            Ui.addMessageToBuffer(\"Invalid index number! Use an integer within the range of the size of the list\");","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"0rbita1"},"content":"            return;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"0rbita1"},"content":"        Task desiredTask \u003d tasks.get(index - 1);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"0rbita1"},"content":"        desiredTask.setNotDone();","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"0rbita1"},"content":"        tasks.set(index - 1, desiredTask);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"0rbita1"},"content":"        Ui.addMessageToBuffer(\"Task successfully marked as NOT done:\\n\" + desiredTask);","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"0rbita1"},"content":"        Storage.updateTaskInSave(tasks);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"0rbita1"},"content":"     * Deletes a specific task from the task list and updates the save file.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"0rbita1"},"content":"     * This method validates the provided index to ensure it is within the bounds of the task list.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"0rbita1"},"content":"     * If the index is valid, it removes the task from the `ArrayList`, prints a confirmation message,","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"0rbita1"},"content":"     * and then calls a `Storage` method to rewrite the entire save file to reflect the deletion.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"0rbita1"},"content":"     * @param tasks The `ArrayList` of tasks from which a task will be deleted.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"0rbita1"},"content":"     * @param index The 1-based index of the task to be deleted.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"0rbita1"},"content":"     * @throws IOException If an I/O error occurs while updating the save file.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"0rbita1"},"content":"    public static void deleteTask(ArrayList\u003cTask\u003e tasks, int index) throws IOException {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"0rbita1"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"0rbita1"},"content":"            Ui.addMessageToBuffer(\"Invalid index number! Use an integer within the range of the size of the list\");","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"0rbita1"},"content":"            return;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"0rbita1"},"content":"        Task desiredTask \u003d tasks.get(index - 1);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"0rbita1"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"0rbita1"},"content":"        Ui.addMessageToBuffer(\"Task successfully deleted:\\n\" + desiredTask + \"\\n\" + \"Task counter: \" + tasks.size());","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"0rbita1"},"content":"        Storage.updateTaskInSave(tasks);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"0rbita1"},"content":"     * Searches for tasks containing a specific keyword in their description.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"0rbita1"},"content":"     * This method iterates through the provided `ArrayList` of tasks. For each task, it checks if its description","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"0rbita1"},"content":"     * contains the specified `query` string. All matching tasks are added to a new `ArrayList`, which is then returned.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"0rbita1"},"content":"     * The search is case-sensitive.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"0rbita1"},"content":"     * @param query The keyword or phrase to search for within task descriptions.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"0rbita1"},"content":"     * @param tasks The `ArrayList` of tasks to be searched.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"0rbita1"},"content":"     * @return An `ArrayList` of `Task` objects that contain the search query.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"0rbita1"},"content":"    public static ArrayList\u003cTask\u003e findQuery(String query, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"0rbita1"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"0rbita1"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"0rbita1"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"0rbita1"},"content":"            String description \u003d task.getDescription();","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"0rbita1"},"content":"            if (description.contains(query)) {","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"0rbita1"},"content":"                result.add(task);","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"0rbita1"},"content":"            }","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"0rbita1"},"content":"        return result;","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"0rbita1"},"content":"}","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false}],"authorContributionMap":{"0rbita1":218}},{"path":"src/main/java/keeka/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"package keeka;","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"import tasks.Task;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"0rbita1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"0rbita1"},"content":"public class Ui {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"0rbita1"},"content":"    private static ArrayList\u003cString\u003e stringBuffer;","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"0rbita1"},"content":"    public Ui() {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"0rbita1"},"content":"        stringBuffer \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"0rbita1"},"content":"    public static void printSuccessfulTaskAddition(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"0rbita1"},"content":"        addMessageToBuffer(\"Task successfully added:\\n\" + taskList.get(taskList.size() - 1) + \"\\n\" + \"Task counter: \"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"0rbita1"},"content":"                + taskList.size());","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"0rbita1"},"content":"    public static void printList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"0rbita1"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"0rbita1"},"content":"            addMessageToBuffer(\"List is empty! Add tasks to display\");","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"0rbita1"},"content":"            return;","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"0rbita1"},"content":"        String listText \u003d \"Displaying list items\\n\";","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"0rbita1"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"0rbita1"},"content":"            Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"0rbita1"},"content":"            listText \u003d listText.concat((i + 1) + \". \" + currentTask.toString() + \"\\n\");","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"0rbita1"},"content":"        addMessageToBuffer(listText);","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"0rbita1"},"content":"    public static void printQueryList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"0rbita1"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"0rbita1"},"content":"            addMessageToBuffer(\"Unable to find any matches for your query!\");","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"0rbita1"},"content":"            return;","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"0rbita1"},"content":"        String listText \u003d \"Displaying items that match your query\\n\";","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"0rbita1"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"0rbita1"},"content":"            Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"0rbita1"},"content":"            listText \u003d listText.concat((i + 1) + \". \" + currentTask.toString() + \"\\n\");","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"0rbita1"},"content":"        addMessageToBuffer(listText);","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:57:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"0rbita1"},"content":"    public static void printGreeting() {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"0rbita1"},"content":"        addMessageToBuffer(\"Hello! I\u0027m Keeka\\nWhat can I do for you?\");","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"0rbita1"},"content":"    public static void printBye() {","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"0rbita1"},"content":"        addMessageToBuffer(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"0rbita1"},"content":"    public static void addMessageToBuffer(String message) {","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"0rbita1"},"content":"        stringBuffer.add(message);","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"0rbita1"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"0rbita1"},"content":"        System.out.println(message);","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"0rbita1"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"0rbita1"},"content":"    public static String retrieveMessage() {","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"0rbita1"},"content":"        return stringBuffer.get(stringBuffer.size() - 1);","lastModifiedDate":"2025-09-05T14:48:55","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"0rbita1"},"content":"}","lastModifiedDate":"2025-08-28T16:36:19","isFullCredit":false}],"authorContributionMap":{"0rbita1":69}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"package tasks;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"0rbita1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"0rbita1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"0rbita1"},"content":"    LocalDate date;","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"0rbita1"},"content":"    LocalDateTime dateTime;","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"0rbita1"},"content":"    public Deadline(String description, boolean isDone, LocalDate date) {","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"0rbita1"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"0rbita1"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"0rbita1"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime dateTime) {","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"0rbita1"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"0rbita1"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"0rbita1"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"0rbita1"},"content":"        return this.date;","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"0rbita1"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"0rbita1"},"content":"        return this.dateTime;","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"0rbita1"},"content":"    /**","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"0rbita1"},"content":"     * Returns a string representation of the Deadline task in ISO format.","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"0rbita1"},"content":"     * This method constructs a string containing the object\u0027s superclass string representation,","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"0rbita1"},"content":"     *","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"0rbita1"},"content":"     * @return A string in the format \"[D] [superclass string] (by: [date/datetime string])\".","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"0rbita1"},"content":"     */","lastModifiedDate":"2025-08-29T11:11:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"0rbita1"},"content":"    @Override","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"0rbita1"},"content":"    public String toString() {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"0rbita1"},"content":"        String by;","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"0rbita1"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"0rbita1"},"content":"            by \u003d date.toString();","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"0rbita1"},"content":"        } else {","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"0rbita1"},"content":"            by \u003d dateTime.toString();","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"0rbita1"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"0rbita1"},"content":"}","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false}],"authorContributionMap":{"0rbita1":52}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"package tasks;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"0rbita1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"0rbita1"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"0rbita1"},"content":"    LocalDate startDate;","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"0rbita1"},"content":"    LocalDate endDate;","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"0rbita1"},"content":"    LocalDateTime startDateTime;","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"0rbita1"},"content":"    LocalDateTime endDateTime;","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"0rbita1"},"content":"    public Event(String description, boolean isDone, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"0rbita1"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"0rbita1"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"0rbita1"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"0rbita1"},"content":"    public Event(String description, boolean isDone, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"0rbita1"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"0rbita1"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"0rbita1"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"0rbita1"},"content":"    public LocalDate getStartDate() {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"0rbita1"},"content":"        return startDate;","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"0rbita1"},"content":"    public LocalDateTime getStartDateTime() {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"0rbita1"},"content":"        return startDateTime;","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"0rbita1"},"content":"    public LocalDate getEndDate() {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"0rbita1"},"content":"        return endDate;","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"0rbita1"},"content":"    public LocalDateTime getEndDateTime() {","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"0rbita1"},"content":"        return endDateTime;","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"0rbita1"},"content":"    @Override","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"0rbita1"},"content":"    public String toString() {","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"0rbita1"},"content":"        String from;","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"0rbita1"},"content":"        String to;","lastModifiedDate":"2025-09-12T10:19:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"0rbita1"},"content":"        if (startDate !\u003d null \u0026\u0026 endDate !\u003d null) {","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"0rbita1"},"content":"            from \u003d startDate.toString();","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"0rbita1"},"content":"            to \u003d endDate.toString();","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"0rbita1"},"content":"        } else {","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"0rbita1"},"content":"            from \u003d startDateTime.toString();","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"0rbita1"},"content":"            to \u003d endDateTime.toString();","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"0rbita1"},"content":"        }","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"0rbita1"},"content":"        return \"[E] \" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-08-28T06:55:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"0rbita1"},"content":"}","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false}],"authorContributionMap":{"0rbita1":56}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"package tasks;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"public class Task {","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"    private String description;","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"0rbita1"},"content":"    private boolean isDone;","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"0rbita1"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"0rbita1"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"0rbita1"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"0rbita1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"0rbita1"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"0rbita1"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"0rbita1"},"content":"        return this.description;","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"0rbita1"},"content":"    public void setDone() {","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"0rbita1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"0rbita1"},"content":"    public void setNotDone() {","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"0rbita1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"0rbita1"},"content":"    @Override","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"0rbita1"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"0rbita1"},"content":"        return \"[\" + this.getStatusIcon() + \"] \"  + this.description;","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"0rbita1"},"content":"}","lastModifiedDate":"2025-08-19T16:19:14","isFullCredit":false}],"authorContributionMap":{"0rbita1":32}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"package tasks;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-28T17:02:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"0rbita1"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"0rbita1"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"0rbita1"},"content":"    @Override","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"0rbita1"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"0rbita1"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"0rbita1"},"content":"}","lastModifiedDate":"2025-08-20T00:35:03","isFullCredit":false}],"authorContributionMap":{"0rbita1":13}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"0rbita1"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"0rbita1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"0rbita1"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"0rbita1"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"0rbita1"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"0rbita1"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"0rbita1"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"0rbita1"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"0rbita1"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"0rbita1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"0rbita1"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"0rbita1"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"0rbita1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"0rbita1"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"0rbita1"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"0rbita1"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"0rbita1"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false}],"authorContributionMap":{"0rbita1":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"0rbita1"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"0rbita1"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"0rbita1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"0rbita1"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"0rbita1"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"0rbita1"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"0rbita1"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"0rbita1"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"0rbita1"},"content":"            fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"0rbita1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"0rbita1"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"0rbita1"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"0rbita1"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"0rbita1"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"0rbita1"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"0rbita1"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"0rbita1"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"0rbita1"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"0rbita1"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"0rbita1"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"0rbita1"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"0rbita1"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"0rbita1"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"0rbita1"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"0rbita1"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"0rbita1"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"0rbita1"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"0rbita1"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"0rbita1"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"0rbita1"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"0rbita1"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"0rbita1"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"0rbita1"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"0rbita1"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"0rbita1"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"0rbita1"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"0rbita1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"0rbita1"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false}],"authorContributionMap":{"0rbita1":44}},{"path":"src/test/java/keeka/InterpreterTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"package keeka;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"0rbita1"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"0rbita1"},"content":"import tasks.Task;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"0rbita1"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"0rbita1"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"0rbita1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"0rbita1"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"0rbita1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"0rbita1"},"content":"public class InterpreterTest {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"0rbita1"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"0rbita1"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"0rbita1"},"content":"    private PrintStream originalOut;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"0rbita1"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"0rbita1"},"content":"    public void setUp() {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"0rbita1"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"0rbita1"},"content":"        // Capture System.out for testing print statements","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"0rbita1"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"0rbita1"},"content":"        originalOut \u003d System.out;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"0rbita1"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"0rbita1"},"content":"    @AfterEach","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"0rbita1"},"content":"    public void tearDown() {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"0rbita1"},"content":"        // Restore System.out","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"0rbita1"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"0rbita1"},"content":"    @Test","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"0rbita1"},"content":"    public void testInterpretAndLoadDeadlineSave_WithLocalDate() {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"0rbita1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"0rbita1"},"content":"        String taskContent \u003d \"Submit assignment (by: 2024-12-31)\";","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"0rbita1"},"content":"        Boolean isDone \u003d false;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"0rbita1"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"0rbita1"},"content":"            Interpreter.interpretAndLoadDeadlineSave(taskContent, isDone, tasks);","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"0rbita1"},"content":"        });","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"0rbita1"},"content":"    @Test","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"0rbita1"},"content":"    public void testInterpretAndLoadDeadlineSave_WithLocalDateTime() {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"0rbita1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"0rbita1"},"content":"        String taskContent \u003d \"Submit assignment (by: 2024-12-31T23:59:59)\";","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"0rbita1"},"content":"        Boolean isDone \u003d true;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"0rbita1"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"0rbita1"},"content":"            Interpreter.interpretAndLoadDeadlineSave(taskContent, isDone, tasks);","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"0rbita1"},"content":"        });","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"0rbita1"},"content":"    @Test","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"0rbita1"},"content":"    public void testInterpretAndLoadDeadlineSave_InvalidDateFormat() {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"0rbita1"},"content":"        // Test with invalid date format","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"0rbita1"},"content":"        String taskContent \u003d \"Submit assignment (by: invalid-date)\";","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"0rbita1"},"content":"        Boolean isDone \u003d false;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"0rbita1"},"content":"        Interpreter.interpretAndLoadDeadlineSave(taskContent, isDone, tasks);","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"0rbita1"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"0rbita1"},"content":"        assertTrue(output.contains(\"Invalid date format for deadline input!\"));","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"0rbita1"},"content":"        assertTrue(output.contains(\"Deadline date format as follows: YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS\"));","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"0rbita1"},"content":"    @Test","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"0rbita1"},"content":"    public void testInterpretAndLoadEventSave_WithLocalDate() {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"0rbita1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"0rbita1"},"content":"        String taskContent \u003d \"Team meeting (from: 2024-12-25 to: 2024-12-26)\";","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"0rbita1"},"content":"        Boolean isDone \u003d false;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"0rbita1"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"0rbita1"},"content":"            Interpreter.interpretAndLoadEventSave(taskContent, isDone, tasks);","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"0rbita1"},"content":"        });","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"0rbita1"},"content":"    @Test","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"0rbita1"},"content":"    public void testInterpretAndLoadEventSave_WithLocalDateTime() {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"0rbita1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"0rbita1"},"content":"        String taskContent \u003d \"Conference (from: 2024-12-25T09:00:00 to: 2024-12-25T17:00:00)\";","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"0rbita1"},"content":"        Boolean isDone \u003d true;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"0rbita1"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"0rbita1"},"content":"            Interpreter.interpretAndLoadEventSave(taskContent, isDone, tasks);","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"0rbita1"},"content":"        });","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"0rbita1"},"content":"    @Test","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"0rbita1"},"content":"    public void testInterpretAndLoadEventSave_InvalidDateFormat() {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"0rbita1"},"content":"        String taskContent \u003d \"Invalid event (from: bad-date to: another-bad-date)\";","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"0rbita1"},"content":"        Boolean isDone \u003d false;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"0rbita1"},"content":"        Interpreter.interpretAndLoadEventSave(taskContent, isDone, tasks);","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"0rbita1"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"0rbita1"},"content":"        assertTrue(output.contains(\"Invalid date format for event input!\"));","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"0rbita1"},"content":"        assertTrue(output.contains(\"Event date format as follows: YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS\"));","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"0rbita1"},"content":"}","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false}],"authorContributionMap":{"0rbita1":104}},{"path":"src/test/java/keeka/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"package keeka;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"0rbita1"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"0rbita1"},"content":"import tasks.Task;","lastModifiedDate":"2025-09-04T15:52:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"0rbita1"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"0rbita1"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"0rbita1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"0rbita1"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"0rbita1"},"content":"public class ParserTest {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"0rbita1"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"0rbita1"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"0rbita1"},"content":"    private PrintStream originalOut;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"0rbita1"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"0rbita1"},"content":"    public void setUp() {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"0rbita1"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"0rbita1"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"0rbita1"},"content":"        originalOut \u003d System.out;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"0rbita1"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"0rbita1"},"content":"    @AfterEach","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"0rbita1"},"content":"    public void tearDown() {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"0rbita1"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"0rbita1"},"content":"    @Test","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"0rbita1"},"content":"    public void testParseSaveContent_TodoTask() {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"0rbita1"},"content":"        String saveContent \u003d \"1. [T][ ] Buy groceries\";","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"0rbita1"},"content":"        ParsedSaveContent result \u003d Parser.parseSaveContent(saveContent);","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"0rbita1"},"content":"        assertEquals(\u0027T\u0027, result.getTaskCode());","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"0rbita1"},"content":"        assertEquals(false, result.getMarkedStatus());","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"0rbita1"},"content":"        assertEquals(\"Buy groceries\", result.getTaskContent());","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"0rbita1"},"content":"    @Test","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"0rbita1"},"content":"    public void testParseSaveContent_MarkedDeadlineTask() {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"0rbita1"},"content":"        String saveContent \u003d \"2. [D][X] Submit assignment (by: 2024-12-31)\";","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"0rbita1"},"content":"        ParsedSaveContent result \u003d Parser.parseSaveContent(saveContent);","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"0rbita1"},"content":"        assertEquals(\u0027D\u0027, result.getTaskCode());","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"0rbita1"},"content":"        assertEquals(true, result.getMarkedStatus());","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"0rbita1"},"content":"        assertEquals(\"Submit assignment (by: 2024-12-31)\", result.getTaskContent());","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"0rbita1"},"content":"    @Test","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"0rbita1"},"content":"    public void testParseSaveContent_UnmarkedEventTask() {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"0rbita1"},"content":"        String saveContent \u003d \"3. [E][ ] Team meeting (from: 2024-12-25 to: 2024-12-26)\";","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"0rbita1"},"content":"        ParsedSaveContent result \u003d Parser.parseSaveContent(saveContent);","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"0rbita1"},"content":"        assertEquals(\u0027E\u0027, result.getTaskCode());","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"0rbita1"},"content":"        assertEquals(false, result.getMarkedStatus());","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"0rbita1"},"content":"        assertEquals(\"Team meeting (from: 2024-12-25 to: 2024-12-26)\", result.getTaskContent());","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"0rbita1"},"content":"    @Test","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"0rbita1"},"content":"    public void testParseSaveContent_EmptyDescription() {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"0rbita1"},"content":"        String saveContent \u003d \"1. [T][ ] \";","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"0rbita1"},"content":"        ParsedSaveContent result \u003d Parser.parseSaveContent(saveContent);","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"0rbita1"},"content":"        assertEquals(\u0027T\u0027, result.getTaskCode());","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"0rbita1"},"content":"        assertEquals(false, result.getMarkedStatus());","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"0rbita1"},"content":"        assertEquals(\"\", result.getTaskContent());","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"0rbita1"},"content":"    @Test","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"0rbita1"},"content":"    public void testParseSaveContent_LongDescription() {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"0rbita1"},"content":"        String saveContent \u003d \"4. [D][X] Complete the very long and detailed project assignment with multiple requirements\";","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"0rbita1"},"content":"        ParsedSaveContent result \u003d Parser.parseSaveContent(saveContent);","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"0rbita1"},"content":"        assertEquals(\u0027D\u0027, result.getTaskCode());","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"0rbita1"},"content":"        assertEquals(true, result.getMarkedStatus());","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"0rbita1"},"content":"        assertEquals(\"Complete the very long and detailed project assignment with multiple requirements\", result.getTaskContent());","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"0rbita1"},"content":"    @Test","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"0rbita1"},"content":"    public void testParseDeadlineInput_ValidLocalDate() {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"0rbita1"},"content":"        String remainingContent \u003d \"Submit assignment /by 2024-12-31\";","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"0rbita1"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"0rbita1"},"content":"            Parser.parseDeadlineInput(remainingContent, tasks);","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"0rbita1"},"content":"        });","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"0rbita1"},"content":"        // Verify no error messages were printed","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"0rbita1"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"0rbita1"},"content":"        assertFalse(output.contains(\"Invalid date format\"));","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"0rbita1"},"content":"    @Test","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"0rbita1"},"content":"    public void testParseDeadlineInput_ValidLocalDateTime() {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"0rbita1"},"content":"        String remainingContent \u003d \"Submit assignment /by 2024-12-31T23:59:59\";","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"0rbita1"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"0rbita1"},"content":"            Parser.parseDeadlineInput(remainingContent, tasks);","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"0rbita1"},"content":"        });","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"0rbita1"},"content":"        // Verify no error messages were printed","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"0rbita1"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"0rbita1"},"content":"        assertFalse(output.contains(\"Invalid date format\"));","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"0rbita1"},"content":"    @Test","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"0rbita1"},"content":"    public void testParseDeadlineInput_InvalidDateFormat() {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"0rbita1"},"content":"        String remainingContent \u003d \"Submit assignment /by invalid-date\";","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"0rbita1"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"0rbita1"},"content":"            Parser.parseDeadlineInput(remainingContent, tasks);","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"0rbita1"},"content":"        });","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"0rbita1"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"0rbita1"},"content":"        assertTrue(output.contains(\"Invalid date format for deadline input!\"));","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"0rbita1"},"content":"        assertTrue(output.contains(\"Deadline date format as follows: YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS\"));","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"0rbita1"},"content":"    }","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"0rbita1"},"content":"}","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false}],"authorContributionMap":{"0rbita1":127}},{"path":"src/test/java/keeka/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"package keeka;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"public class StorageTest {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"}","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false}],"authorContributionMap":{"0rbita1":4}},{"path":"src/test/java/keeka/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"package keeka;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"public class TaskListTest {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"}","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false}],"authorContributionMap":{"0rbita1":4}},{"path":"src/test/java/keeka/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"package keeka;","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"public class UiTest {","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"}","lastModifiedDate":"2025-08-29T00:20:38","isFullCredit":false}],"authorContributionMap":{"0rbita1":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"0rbita1"},"content":"todo","lastModifiedDate":"2025-08-26T14:28:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"0rbita1"},"content":"event","lastModifiedDate":"2025-08-26T14:28:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"0rbita1"},"content":"deadline","lastModifiedDate":"2025-08-26T14:28:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"0rbita1"},"content":"todo borrow book","lastModifiedDate":"2025-08-26T14:28:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"0rbita1"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-26T14:28:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"0rbita1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-26T14:28:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"0rbita1"},"content":"list","lastModifiedDate":"2025-08-26T14:28:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"0rbita1"},"content":"mark 1","lastModifiedDate":"2025-08-26T14:28:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"0rbita1"},"content":"mark 2","lastModifiedDate":"2025-08-26T14:28:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"0rbita1"},"content":"unmark 1","lastModifiedDate":"2025-08-26T14:28:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"0rbita1"},"content":"unmark 2","lastModifiedDate":"2025-08-26T14:28:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"0rbita1"},"content":"list","lastModifiedDate":"2025-08-26T14:28:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"0rbita1"},"content":"delete 1","lastModifiedDate":"2025-08-26T14:28:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"0rbita1"},"content":"bye","lastModifiedDate":"2025-08-26T14:28:47","isFullCredit":false}],"authorContributionMap":{"0rbita1":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"0rbita1"},"content":"java -classpath ..\\bin Keeka \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-19T13:10:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"0rbita1":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"0rbita1"},"content":"java -classpath ../bin Keeka \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-22T15:43:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"0rbita1":1,"-":37}}]
