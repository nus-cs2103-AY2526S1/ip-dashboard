[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"reven0n"},"content":"# Som project template","lastModifiedDate":"2025-08-19T15:18:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"reven0n"},"content":"1. After that, locate the `src/main/java/Som.java` file, right-click it, and choose `Run Som.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-08-19T15:18:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"reven0n":2,"-":24}},{"path":"data/som.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"reven0n"},"content":"T | 1 | read book","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"reven0n"},"content":"D | 0 | return book | 2025-06-11 1900","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"reven0n"},"content":"E | 0 | project meeting | 2025-08-11 1100 | 2025-08-11 1100","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"reven0n"},"content":"T | 1 | join sports club","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"reven0n"},"content":"D | 0 | borrow book | 2025-09-01 1800","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"reven0n"},"content":"D | 0 | go gym | 2025-06-11 1100","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false}],"authorContributionMap":{"reven0n":6}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"reven0n"},"content":"# Som User Guide","lastModifiedDate":"2025-08-19T15:18:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"reven0n":1,"-":29}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"reven0n"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"reven0n"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"reven0n"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"reven0n"},"content":"/**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"reven0n"},"content":" * Represents a deadline task with a due date/time.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"reven0n"},"content":" */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"reven0n"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-19T17:20:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"reven0n"},"content":"    private LocalDateTime by;","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"reven0n"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"reven0n"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\");","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-19T17:20:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"reven0n"},"content":"     * Constructs a new Deadline task.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"reven0n"},"content":"     *","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"reven0n"},"content":"     * @param description the task description","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"reven0n"},"content":"     * @param strBy the deadline date/time","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"reven0n"},"content":"    public Deadline(String description, String strBy) throws SomException {","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"reven0n"},"content":"        super(description);","lastModifiedDate":"2025-08-19T17:20:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"reven0n"},"content":"        try {","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"reven0n"},"content":"            this.by \u003d LocalDateTime.parse(strBy, INPUT_FORMAT);","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"reven0n"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"reven0n"},"content":"            throw new SomException(\"Invalid date format! Use: yyyy-MM-dd HHmm (e.g., 2019-12-02 1800)\");","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"reven0n"},"content":"        }","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-19T17:20:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-19T17:20:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"reven0n"},"content":"     * Returns the start date and time of the Deadline","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"reven0n"},"content":"     *","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"reven0n"},"content":"     * @return the LocalDateTime representing when the task is due","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"reven0n"},"content":"    public LocalDateTime getby() {","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"reven0n"},"content":"        return this.by;","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-28T00:45:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"reven0n"},"content":"     * Encodes a task into a line like: D | 1 | read book | 16 Aug","lastModifiedDate":"2025-08-28T00:45:31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"reven0n"},"content":"     *","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"reven0n"},"content":"     * @return encodes a task into a line like: D | 1 | read book | 16 Aug","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-28T00:45:31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"reven0n"},"content":"    @Override","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"reven0n"},"content":"    public String encode() {","lastModifiedDate":"2025-08-28T00:45:31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"reven0n"},"content":"        return(\"D | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description + \" | \" + this.by.format(INPUT_FORMAT));","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-28T00:45:31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-28T00:45:31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"reven0n"},"content":"     * Returns string representation of the Deadline task.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"reven0n"},"content":"     *","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"reven0n"},"content":"     * @return the formatted task string","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"reven0n"},"content":"    @Override","lastModifiedDate":"2025-08-19T17:20:25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"reven0n"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T17:20:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"reven0n"},"content":"        return \" [D] \" + super.toString() + \" (by: \" + this.by.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-19T17:20:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"reven0n"},"content":"}","lastModifiedDate":"2025-08-19T17:20:25","isFullCredit":false}],"authorContributionMap":{"reven0n":56}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"reven0n"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"reven0n"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"reven0n"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"reven0n"},"content":"/**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"reven0n"},"content":" * Represents an event task with start and end times.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"reven0n"},"content":" */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"reven0n"},"content":"public class Event extends Task{","lastModifiedDate":"2025-08-19T17:27:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"reven0n"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"reven0n"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"reven0n"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"reven0n"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\");","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-19T17:27:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"reven0n"},"content":"     * Constructs a new Event task.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"reven0n"},"content":"     *","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"reven0n"},"content":"     * @param description the task description","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"reven0n"},"content":"     * @param strFrom the start time","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"reven0n"},"content":"     * @param strTo the end time","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"reven0n"},"content":"    public Event(String description, String strFrom, String strTo) throws SomException {","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"reven0n"},"content":"        super(description);","lastModifiedDate":"2025-08-19T17:27:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"reven0n"},"content":"        try {","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"reven0n"},"content":"            this.from \u003d LocalDateTime.parse(strFrom, INPUT_FORMAT);","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"reven0n"},"content":"            this.to \u003d LocalDateTime.parse(strTo, INPUT_FORMAT);","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"reven0n"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"reven0n"},"content":"            throw new SomException(\"Invalid date format! Use: yyyy-MM-dd HHmm (e.g., 2019-12-02 1800)\");","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"reven0n"},"content":"        }","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"reven0n"},"content":"        if (from.isAfter(to)) {","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"reven0n"},"content":"            throw new SomException(\"Start time cannot be after end time.\");","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"reven0n"},"content":"        }","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-19T17:27:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-19T17:27:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"reven0n"},"content":"     * Returns the start date and time of the Event","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"reven0n"},"content":"     *","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"reven0n"},"content":"     * @return the LocalDateTime representing when the event starts","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"reven0n"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"reven0n"},"content":"        return this.from;","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-28T00:45:31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"reven0n"},"content":"     * Encodes a task into a line like: E | 1 | read book | 10am | 10pm","lastModifiedDate":"2025-08-28T00:45:31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"reven0n"},"content":"     *","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"reven0n"},"content":"     * @return Encodes a task into a line like: E | 1 | read book | 10am | 10pm","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-28T00:45:31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"reven0n"},"content":"    @Override","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"reven0n"},"content":"    public String encode() {","lastModifiedDate":"2025-08-28T00:45:31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"reven0n"},"content":"        return(\"E | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description","lastModifiedDate":"2025-08-28T00:45:31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"reven0n"},"content":"                + \" | \" + this.from.format(INPUT_FORMAT) + \" | \" + this.to.format(INPUT_FORMAT));","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-28T00:45:31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-28T00:45:31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"reven0n"},"content":"     * Returns string representation of the Event task.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"reven0n"},"content":"     *","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"reven0n"},"content":"     * @return formatted task string","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"reven0n"},"content":"    @Override","lastModifiedDate":"2025-08-19T17:27:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"reven0n"},"content":"    public String toString(){","lastModifiedDate":"2025-08-19T17:27:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"reven0n"},"content":"        return \" [E] \" + super.toString() + \" (from: \"","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"reven0n"},"content":"                + this.from.format(OUTPUT_FORMAT) + \" to: \" + this.to.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-19T17:27:16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"reven0n"},"content":"}","lastModifiedDate":"2025-08-19T17:27:16","isFullCredit":false}],"authorContributionMap":{"reven0n":64}},{"path":"src/main/java/Som.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"reven0n"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"reven0n"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"reven0n"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"reven0n"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-19T14:24:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"reven0n"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-19T15:18:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"reven0n"},"content":"import java.util.List;","lastModifiedDate":"2025-08-19T15:18:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-19T14:24:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"reven0n"},"content":"/**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"reven0n"},"content":" * The main chatbot class that handles user interaction, task management, and persistence.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"reven0n"},"content":" * This class reads user input, parses commands, manages a list of tasks.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"reven0n"},"content":" *","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"reven0n"},"content":" * @author Darien Tan","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"reven0n"},"content":" */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"reven0n"},"content":"public class Som {","lastModifiedDate":"2025-08-19T14:24:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"reven0n"},"content":"    private List\u003cTask\u003e list;","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"reven0n"},"content":"    private Scanner sc;","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"reven0n"},"content":"    private final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"reven0n"},"content":"        new Som().run();","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"reven0n"},"content":"     * Creates a new Som Chatbot.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"reven0n"},"content":"    public Som() {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"reven0n"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"reven0n"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"reven0n"},"content":"        // Load tasks on startup","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"reven0n"},"content":"        try {","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"reven0n"},"content":"            this.list \u003d Storage.load();","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"reven0n"},"content":"            System.out.println(\"Loaded \" + list.size() + \" tasks.\");","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"reven0n"},"content":"        } catch (SomException e) {","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"reven0n"},"content":"            System.out.println(\"Error loading: \" + e.getMessage());","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"reven0n"},"content":"            System.out.println(\"Starting with empty task list.\");","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"reven0n"},"content":"        }","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"reven0n"},"content":"     * Starts the main interaction loop of the chatbot.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"reven0n"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"reven0n"},"content":"     * Reads user input line by line, processes commands, and responds accordingly.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"reven0n"},"content":"     * The loop continues until the user types {@code bye}.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"reven0n"},"content":"     * All exceptions are caught and displayed in a user-friendly format.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"reven0n"},"content":"    public void run() {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"reven0n"},"content":"        //starting code","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"reven0n"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"reven0n"},"content":"        System.out.println(\" Hello! I\u0027m Som\\n What can I do for you?\");","lastModifiedDate":"2025-08-19T13:52:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"reven0n"},"content":"        System.out.println(\" Type \u0027help\u0027 for a list of commands.\");","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"reven0n"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"reven0n"},"content":"        while (true) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"reven0n"},"content":"            try {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"reven0n"},"content":"                String input \u003d sc.nextLine().trim();","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"reven0n"},"content":"                if (input.isEmpty()) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"reven0n"},"content":"                    continue;","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"reven0n"},"content":"                }","lastModifiedDate":"2025-08-19T15:18:50","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-19T16:52:36","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"reven0n"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"reven0n"},"content":"                    sc.close(); // Close scanner","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"reven0n"},"content":"                    System.out.println(LINE + \"\\n Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"reven0n"},"content":"                    System.out.println(LINE);","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"reven0n"},"content":"                    break;","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"reven0n"},"content":"                } else if (input.equals(\"help\")) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"reven0n"},"content":"                    showHelp();","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"reven0n"},"content":"                }","lastModifiedDate":"2025-08-19T15:18:50","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-19T16:52:36","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"reven0n"},"content":"                else if (input.equals(\"list\")) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"reven0n"},"content":"                    handleList(list);","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"reven0n"},"content":"                } else if (input.startsWith(\"mark\") || input.startsWith(\"unmark\")) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"reven0n"},"content":"                    handleMarking(input);","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"reven0n"},"content":"                } else if (input.startsWith(\"todo\") || input.startsWith(\"deadline\") || input.startsWith(\"event\")) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"reven0n"},"content":"                    Task t \u003d getTask(input);","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"reven0n"},"content":"                    list.add(t);","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"reven0n"},"content":"                    System.out.println(LINE + \"\\nGot it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"reven0n"},"content":"                    System.out.println(t.toString());","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"reven0n"},"content":"                    System.out.println(\"Now you have \" + list.size() + \" tasks in the list\\n\" + LINE);","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"reven0n"},"content":"                } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"reven0n"},"content":"                    handleDelete(input);","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"reven0n"},"content":"                } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"reven0n"},"content":"                    handleFind(input);","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"reven0n"},"content":"                } else {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"reven0n"},"content":"                    throw new SomException(\"I don\u0027t know what \u0027\" + input + \"\u0027 means. Type \u0027help\u0027 to see what I can do.\");","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"reven0n"},"content":"                }","lastModifiedDate":"2025-08-19T16:52:36","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"reven0n"},"content":"                Storage.save(list); // tasks are updated after every action","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-19T16:52:36","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"reven0n"},"content":"            } catch (SomException e) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"reven0n"},"content":"                System.out.println(LINE);","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"reven0n"},"content":"                System.out.println(\" \" + e.getMessage());","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"reven0n"},"content":"                System.out.println(LINE);","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"reven0n"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"reven0n"},"content":"                System.out.println(\"Something went wrong :/ \\nError: \" + e.getMessage());","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"reven0n"},"content":"                System.out.println(LINE);","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"reven0n"},"content":"            }","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"reven0n"},"content":"        }","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"reven0n"},"content":"     * Handles deleting a task from the list.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"reven0n"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"reven0n"},"content":"     * Parses the task number from input like {@code delete 1}.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"reven0n"},"content":"     * Validates input and removes the task. Throws {@link SomException}","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"reven0n"},"content":"     * for invalid input or out-of-bounds indices.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"reven0n"},"content":"     *","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"reven0n"},"content":"     * @param   input the full user input (e.g., \"delete 1\")","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"reven0n"},"content":"     * @throws  SomException if input is invalid or task number is out of range","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"reven0n"},"content":"    private void handleDelete(String input) throws SomException {","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"reven0n"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"reven0n"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"reven0n"},"content":"            throw new SomException(\"Please enter a task number: \");","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"reven0n"},"content":"        }","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"reven0n"},"content":"        try {","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"reven0n"},"content":"            System.out.println(LINE);","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"reven0n"},"content":"            int taskNo \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"reven0n"},"content":"            Task task \u003d list.get(taskNo);","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"reven0n"},"content":"            list.remove(taskNo);","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"reven0n"},"content":"            System.out.println(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"reven0n"},"content":"            System.out.println(\"  \" + task.toString());","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"reven0n"},"content":"            System.out.println(\" Now you have \" + list.size() + \" tasks in the list\");","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"reven0n"},"content":"            System.out.println(LINE);","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"reven0n"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"reven0n"},"content":"            throw new SomException(\"No tasks found with that number.\");","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"reven0n"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"reven0n"},"content":"            throw new SomException(\"Task number must be a valid number.\");","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"reven0n"},"content":"        }","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-19T14:24:47","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-19T14:24:47","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"reven0n"},"content":"     * Displays all tasks in the current list with their index and status.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"reven0n"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"reven0n"},"content":"     * If the list is empty, a message is shown indicating no tasks exist.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"reven0n"},"content":"     * Each task is printed with its ID (1-based) and string representation.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"reven0n"},"content":"     *","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"reven0n"},"content":"     * @param list the list of tasks to display","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"reven0n"},"content":"    private void handleList(List\u003cTask\u003e list) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"reven0n"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"reven0n"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"reven0n"},"content":"            System.out.println(\"Oops! Your task list is empty!\");","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"reven0n"},"content":"        } else {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"reven0n"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"reven0n"},"content":"                System.out.println(i+1 + \". \" + list.get(i).toString());","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"reven0n"},"content":"            }","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"reven0n"},"content":"        }","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"reven0n"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"reven0n"},"content":"     * Handles marking a task as done or undone based on user input.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"reven0n"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"reven0n"},"content":"     * Parses the task number from input like {@code mark 1} or {@code unmark 2}.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"reven0n"},"content":"     * Validates input and updates the task status. Throws {@link SomException}","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"reven0n"},"content":"     * for invalid input or out-of-bounds indices.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"reven0n"},"content":"     *","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"reven0n"},"content":"     * @param   input the full user input (e.g., \"mark 1\")","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"reven0n"},"content":"     * @throws  SomException if input is invalid or task number is out of range","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"reven0n"},"content":"    private void handleMarking(String input) throws SomException {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"reven0n"},"content":"        String[] noParts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"reven0n"},"content":"        if (noParts.length \u003c 2 ) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"reven0n"},"content":"            throw new SomException(\"Please specify a task number. Example: mark 1 / unmark 1\");","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"reven0n"},"content":"        }","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"reven0n"},"content":"        try {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"reven0n"},"content":"            int index \u003d Integer.parseInt(noParts[1]) - 1;","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"reven0n"},"content":"            Task task \u003d list.get(index);","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"reven0n"},"content":"            if (input.startsWith(\"mark\")) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"reven0n"},"content":"                task.markAsDone();","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"reven0n"},"content":"                System.out.println(LINE + \"\\n Nice! I\u0027ve marked this task as done:\\n\"+ task.toString());","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"reven0n"},"content":"            }  else if  (input.startsWith(\"unmark\")) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"reven0n"},"content":"                task.markAsUndone();","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"reven0n"},"content":"                System.out.println(LINE + \"\\n OK, I\u0027ve marked this task as not done yet:\\n\" + task.toString());","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"reven0n"},"content":"            }","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"reven0n"},"content":"            System.out.println(LINE);","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"reven0n"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"reven0n"},"content":"            throw new SomException(\"Please specify a task number. Example: \" + noParts[0] + \" 1\");","lastModifiedDate":"2025-08-21T14:56:21","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"reven0n"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"reven0n"},"content":"            throw new SomException(\"No tasks found with that number.\");","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"reven0n"},"content":"        }","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"reven0n"},"content":"     * Finds and displays all tasks (deadlines and events) that occur on a specified date.","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"reven0n"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"reven0n"},"content":"     * The user provides a date in the format {@code dd-MM-yyyy} (e.g., 11-03-2025).","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"reven0n"},"content":"     * The method parses the input and searches through the task list for: Deadline and Event only.","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"reven0n"},"content":"     * Matching tasks are printed in a formatted list. If no tasks are found,","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"reven0n"},"content":"     * a friendly message is shown instead.","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"reven0n"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"reven0n"},"content":"     * Example usage: find 11-03-2025","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"reven0n"},"content":"     *","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"reven0n"},"content":"     * @param input the full user command (must start with \"find\" followed by a date)","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"reven0n"},"content":"     * @throws SomException if the date string is invalid or in wrong format","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"reven0n"},"content":"    private void handleFind(String input) throws SomException {","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"reven0n"},"content":"        String dateStr \u003d input.substring(5).trim();","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"reven0n"},"content":"        try {","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"reven0n"},"content":"            LocalDate targetDate \u003d LocalDate.parse(dateStr, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"reven0n"},"content":"            List\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"reven0n"},"content":"            for (Task t : list) {","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"reven0n"},"content":"                if (t instanceof Deadline) {","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"reven0n"},"content":"                    if (((Deadline) t).getby().toLocalDate().isEqual(targetDate)) {","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"reven0n"},"content":"                        matches.add(t);","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"reven0n"},"content":"                    }","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"reven0n"},"content":"                } else if (t instanceof Event) {","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"reven0n"},"content":"                    if (((Event) t).getFrom().toLocalDate().isEqual(targetDate)) {","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"reven0n"},"content":"                        matches.add(t);","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"reven0n"},"content":"                    }","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"reven0n"},"content":"                }","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"reven0n"},"content":"            }","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"reven0n"},"content":"            System.out.println(LINE);","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"reven0n"},"content":"            if (matches.isEmpty()) {","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"reven0n"},"content":"                System.out.println(\" No tasks found on \" + targetDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"reven0n"},"content":"            } else {","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"reven0n"},"content":"                System.out.println(\" Tasks on \" + targetDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \":\");","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"reven0n"},"content":"                for  (Task t : matches) {","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"reven0n"},"content":"                    System.out.println(t.toString());","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"reven0n"},"content":"                }","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"reven0n"},"content":"            }","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"reven0n"},"content":"            System.out.println(LINE);","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"reven0n"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"reven0n"},"content":"            throw new SomException(\"Please enter a valid date. Format: yyyy-MM-dd (e.g., 2025-03-11)\");","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"reven0n"},"content":"        }","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-29T21:59:22","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"reven0n"},"content":"     * This method returns a Task based on the user input","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"reven0n"},"content":"     *","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"reven0n"},"content":"     * @param   input the original user input","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"reven0n"},"content":"     * @return the correct Task type requested by the user","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"reven0n"},"content":"     * @throws  SomException if input is invalid or missing required parts","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"reven0n"},"content":"    private Task getTask(String input) throws SomException {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"reven0n"},"content":"        if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"reven0n"},"content":"            throw new SomException(\"Oops! Input cannot be empty.\");","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"reven0n"},"content":"        }","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"reven0n"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"reven0n"},"content":"        String task \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"reven0n"},"content":"        String fullDesc \u003d parts.length \u003e 1 ? parts[1].trim() : \"\";","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"reven0n"},"content":"        switch (task) {","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"reven0n"},"content":"            case \"todo\" -\u003e { // case 1: todo","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"reven0n"},"content":"                if (fullDesc.isEmpty()) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"reven0n"},"content":"                    throw new SomException(\"Oops! A todo needs a description. Try: todo \u003cdescription\u003e\");","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"reven0n"},"content":"                }","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"reven0n"},"content":"                return new Todo(fullDesc);","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"reven0n"},"content":"            }","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"reven0n"},"content":"            case \"deadline\" -\u003e { // case 2: deadline","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"reven0n"},"content":"                int byIndex \u003d fullDesc.indexOf(\"/by \");","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"reven0n"},"content":"                if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"reven0n"},"content":"                    throw new SomException(\"Oops! A deadline task must include a task and \u0027/by\u0027. Example: deadline return book \" +","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"reven0n"},"content":"                            \"/by 2025-03-10 1300\");","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"reven0n"},"content":"                }","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"reven0n"},"content":"                String desc \u003d fullDesc.substring(0, byIndex).trim();","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"reven0n"},"content":"                String deadline \u003d fullDesc.substring(byIndex + 4).trim(); // +4 to skip \"/by \"","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"reven0n"},"content":"                if (desc.isEmpty()) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"reven0n"},"content":"                    throw new SomException(\"Oops! The description of a deadline cannot be empty.\");","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"reven0n"},"content":"                }","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"reven0n"},"content":"                if (deadline.isEmpty()) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"reven0n"},"content":"                    throw new SomException(\"Oops! The \u0027/by\u0027 part cannot be empty. Please specify when it\u0027s due.\");","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"reven0n"},"content":"                }","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"reven0n"},"content":"                return new Deadline(desc, deadline);","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"reven0n"},"content":"            }","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"reven0n"},"content":"            case \"event\" -\u003e { // case 3: event","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"reven0n"},"content":"                int fromIndex \u003d fullDesc.indexOf(\"/from \");","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"reven0n"},"content":"                int toIndex \u003d fullDesc.indexOf(\"/to \");","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"reven0n"},"content":"                if (fromIndex \u003d\u003d -1) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"reven0n"},"content":"                    throw new SomException(\"Oops! An event must include \u0027/from\u0027 to specify start time \\n and \u0027/to\u0027 to specify end time\" +","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"reven0n"},"content":"                            \"\\nExample: event birthday /from 2025-03-11 0000 /to 2025-03-11 2359\");","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"reven0n"},"content":"                }","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"reven0n"},"content":"                if (toIndex \u003d\u003d -1) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"reven0n"},"content":"                    throw new SomException(\"Oops! An event must include \u0027/to\u0027 to specify end time.\");","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"reven0n"},"content":"                }","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"reven0n"},"content":"                if (fromIndex \u003e\u003d toIndex) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"reven0n"},"content":"                    throw new SomException(\"Oops! \u0027/from\u0027 must come before \u0027/to\u0027 in the input.\");","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"reven0n"},"content":"                }","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"reven0n"},"content":"                String from \u003d fullDesc.substring(fromIndex + 6, toIndex).trim(); // +6 to skip \"/from \"","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"reven0n"},"content":"                String to \u003d fullDesc.substring(toIndex + 4).trim(); // +6 to skip \"/to \"","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"reven0n"},"content":"                String desc \u003d fullDesc.substring(0, fromIndex).trim();","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"reven0n"},"content":"                if (desc.isEmpty()) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"reven0n"},"content":"                    throw new SomException(\"Oops! The description of an event cannot be empty.\");","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"reven0n"},"content":"                }","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"reven0n"},"content":"                if (from.isEmpty()) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"reven0n"},"content":"                    throw new SomException(\"Oops! The \u0027/from\u0027 part cannot be empty. Please specify a start time.\");","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"reven0n"},"content":"                }","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"reven0n"},"content":"                if (to.isEmpty()) {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"reven0n"},"content":"                    throw new SomException(\"Oops! The \u0027/to\u0027 part cannot be empty. Please specify an end time.\");","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"reven0n"},"content":"                }","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"reven0n"},"content":"                return new Event(desc, from, to);","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"reven0n"},"content":"            }","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"reven0n"},"content":"            default -\u003e { // unknown task is given","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"reven0n"},"content":"                throw new SomException(\"Unknown command: \" + task);","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"reven0n"},"content":"            }","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"reven0n"},"content":"        }","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"reven0n"},"content":"     * Displays a formatted list of all available commands to the user.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"reven0n"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"reven0n"},"content":"     * This method prints a help menu that explains the syntax and purpose","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"reven0n"},"content":"    private void showHelp() {","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"reven0n"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"reven0n"},"content":"        System.out.println(\" Available commands:\");","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"reven0n"},"content":"        System.out.println(\"  todo \u003cdesc\u003e                  – Add a todo\");","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"reven0n"},"content":"        System.out.println(\"  deadline \u003cdesc\u003e /by \u003ctime\u003e   – Add a deadline\");","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"reven0n"},"content":"        System.out.println(\"  event \u003cdesc\u003e /from \u003cstart\u003e   – Add an event\\n  /to \u003cend\u003e\");","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"reven0n"},"content":"        System.out.println(\"  list                         – Show all tasks\");","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"reven0n"},"content":"        System.out.println(\"  mark \u003cindex\u003e                 – Mark task as done\");","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"reven0n"},"content":"        System.out.println(\"  unmark \u003cindex\u003e               – Mark task as not done\");","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"reven0n"},"content":"        System.out.println(\"  help                         – Show this message\");","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"reven0n"},"content":"        System.out.println(\"  bye                          – Exit\");","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"reven0n"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-20T03:23:46","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-20T13:50:47","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false}],"authorContributionMap":{"reven0n":315,"-":3}},{"path":"src/main/java/SomException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"reven0n"},"content":"/**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"reven0n"},"content":" * Custom exception class for user-facing errors in the Som chatbot.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"reven0n"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"reven0n"},"content":" * Used to wrap and report invalid inputs, file errors, and other","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"reven0n"},"content":" * recoverable issues in a consistent way.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"reven0n"},"content":" */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"reven0n"},"content":"public class SomException extends Exception {","lastModifiedDate":"2025-08-20T13:32:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"reven0n"},"content":"     * Constructs a new SomException with the specified message.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"reven0n"},"content":"     *","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"reven0n"},"content":"     * @param message the error message","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"reven0n"},"content":"    public SomException(String message) {","lastModifiedDate":"2025-08-20T13:32:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"reven0n"},"content":"        super(message);","lastModifiedDate":"2025-08-20T13:32:50","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-20T13:32:50","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"reven0n"},"content":"}","lastModifiedDate":"2025-08-20T13:32:50","isFullCredit":false}],"authorContributionMap":{"reven0n":16}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"reven0n"},"content":"import java.io.File;","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"reven0n"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"reven0n"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"reven0n"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"reven0n"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"reven0n"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"reven0n"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"reven0n"},"content":"import java.util.List;","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"reven0n"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"reven0n"},"content":"/**","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"reven0n"},"content":" * Manages persistent storage of tasks to and from a file on disk.","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"reven0n"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"reven0n"},"content":" * This class handles saving the current task list to a file and loading it back","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"reven0n"},"content":" * when the application starts.","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"reven0n"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"reven0n"},"content":" * The data file is stored at ./data/som.txt (relative to the project root).","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"reven0n"},"content":" * Corrupted lines in the file are skipped with a warning message.","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"reven0n"},"content":" * All file operations use OS-independent paths via {@link java.nio.file.Paths}.","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"reven0n"},"content":" *","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"reven0n"},"content":" * @author Darien Tan","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"reven0n"},"content":" */","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"reven0n"},"content":"public class Storage {","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"reven0n"},"content":"    private static final String APP_DIR \u003d \"data\";","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"reven0n"},"content":"    private static final String FILE_NAME \u003d \"som.txt\";","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"reven0n"},"content":"    private static final Path FILE_PATH \u003d Paths.get(APP_DIR, FILE_NAME);","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"reven0n"},"content":"     * Constructs a Storage instance.","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"reven0n"},"content":"    public Storage() {","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"reven0n"},"content":"     * Loads the list of tasks from the data file.","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"reven0n"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"reven0n"},"content":"     * If the file does not exist, throws SomException with \"File not found!\".","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"reven0n"},"content":"     * Corrupted lines are skipped, and a warning is printed to the console.","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"reven0n"},"content":"     * Requires all tasks to be of a fixed pre-determined input.","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"reven0n"},"content":"     *","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"reven0n"},"content":"     * @return a list of loaded tasks","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"reven0n"},"content":"     * @throws SomException if the file exists but cannot be found during scanning","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"reven0n"},"content":"    public static List\u003cTask\u003e load() throws SomException {","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"reven0n"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"reven0n"},"content":"        File file \u003d FILE_PATH.toFile();","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"reven0n"},"content":"        try {","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"reven0n"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"reven0n"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"reven0n"},"content":"                String line \u003d \"\";","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"reven0n"},"content":"                try {","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"reven0n"},"content":"                    line \u003d sc.nextLine().trim();","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"reven0n"},"content":"                    tasks.add(parseTask(line));","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"reven0n"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"reven0n"},"content":"                    System.out.println(\"Skipping corrupt task: \" + line + \"\\nError: \" + e.getMessage());","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"reven0n"},"content":"                }","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"reven0n"},"content":"            }","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"reven0n"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"reven0n"},"content":"            throw new SomException(\"File not found!\");","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"reven0n"},"content":"        }","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"reven0n"},"content":"        return tasks;","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"reven0n"},"content":"     * Parses a single line into a Task.","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"reven0n"},"content":"     * Format: TYPE | DONE | ARGS...","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"reven0n"},"content":"     * Example: T | 1 | read book","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"reven0n"},"content":"     *","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"reven0n"},"content":"     * @param line the raw line from the file to parse","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"reven0n"},"content":"     * @return the parsed Task object","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"reven0n"},"content":"     * @throws SomException if the line is malformed or contains invalid data","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"reven0n"},"content":"    private static Task parseTask(String line) throws SomException {","lastModifiedDate":"2025-08-28T01:49:16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"reven0n"},"content":"        String[] parts \u003d line.split(\" \\\\| \", -1); // Keep trailing empty strings","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"reven0n"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"reven0n"},"content":"            throw new IllegalArgumentException(\"Too few parts\");","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"reven0n"},"content":"        }","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"reven0n"},"content":"        String type \u003d parts[0].trim();","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"reven0n"},"content":"        boolean isDone \u003d \"1\".equals(parts[1].trim());","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"reven0n"},"content":"        return switch (type) {","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"reven0n"},"content":"            case \"T\":","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"reven0n"},"content":"                if (parts.length \u003c 3 || parts[2].isEmpty()) {","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"reven0n"},"content":"                    throw new IllegalArgumentException(\"Missing Description\");","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"reven0n"},"content":"                }","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"reven0n"},"content":"                Task t \u003d new Todo(parts[2]);","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"reven0n"},"content":"                if (isDone) {","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"reven0n"},"content":"                    t.markAsDone();","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"reven0n"},"content":"                }","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"reven0n"},"content":"                yield t;","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"reven0n"},"content":"            case \"D\":","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"reven0n"},"content":"                if (parts.length \u003c 4 || parts[2].isEmpty()) {","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"reven0n"},"content":"                    throw new IllegalArgumentException(\"Missing Description\");","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"reven0n"},"content":"                }","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"reven0n"},"content":"                if (parts.length \u003c 4 || parts[3].isEmpty()) {","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"reven0n"},"content":"                    throw new IllegalArgumentException(\"Missing /by\");","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"reven0n"},"content":"                }","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"reven0n"},"content":"                Task d \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"reven0n"},"content":"                if (isDone) {","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"reven0n"},"content":"                    d.markAsDone();","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"reven0n"},"content":"                }","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"reven0n"},"content":"                yield d;","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"reven0n"},"content":"            case \"E\":","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"reven0n"},"content":"                if (parts.length \u003c 5 || parts[2].isEmpty())","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"reven0n"},"content":"                    throw new IllegalArgumentException(\"Missing description\");","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"reven0n"},"content":"                if (parts.length \u003c 5 || parts[3].isEmpty())","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"reven0n"},"content":"                    throw new IllegalArgumentException(\"Missing /from\");","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"reven0n"},"content":"                if (parts.length \u003c 5 || parts[4].isEmpty())","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"reven0n"},"content":"                    throw new IllegalArgumentException(\"Missing /to\");","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"reven0n"},"content":"                Event e \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"reven0n"},"content":"                if (isDone) {","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"reven0n"},"content":"                    e.markAsDone();","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"reven0n"},"content":"                }","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"reven0n"},"content":"                yield e;","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"reven0n"},"content":"            default:","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"reven0n"},"content":"                throw new IllegalArgumentException(\"Unknown task type\");","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"reven0n"},"content":"        };","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"reven0n"},"content":"     * Saves the current list of tasks to the data file.","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"reven0n"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"reven0n"},"content":"     * The file is overwritten completely to reflect the current state of the task list.","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"reven0n"},"content":"     * This ensures that deleted or updated tasks are not left in stale form.","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"reven0n"},"content":"     *","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"reven0n"},"content":"     * @param tasks the list of tasks to save","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"reven0n"},"content":"     * @throws SomException if an I/O error occurs during writing","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"reven0n"},"content":"    public static void save(List\u003cTask\u003e tasks) throws SomException {","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"reven0n"},"content":"        try {","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"reven0n"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH.toFile());","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"reven0n"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"reven0n"},"content":"                fw.write(task.encode());","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"reven0n"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"reven0n"},"content":"            }","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"reven0n"},"content":"            fw.close();","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"reven0n"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"reven0n"},"content":"            throw new SomException(\"Error saving task: \" + e.getMessage());","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"reven0n"},"content":"        }","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"reven0n"},"content":"}","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false}],"authorContributionMap":{"reven0n":144}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"reven0n"},"content":"/**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"reven0n"},"content":" * Represents a generic bask.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"reven0n"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"reven0n"},"content":" * All tasks have a description, a completion status, and an ID.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"reven0n"},"content":" */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"reven0n"},"content":"public abstract class Task {","lastModifiedDate":"2025-08-28T00:45:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"reven0n"},"content":"    protected String description;","lastModifiedDate":"2025-08-19T17:03:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"reven0n"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-19T17:03:50","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-20T03:22:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"reven0n"},"content":"     * Constructs a new Task with the given description.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"reven0n"},"content":"     *","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"reven0n"},"content":"     * @param description the task description","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"reven0n"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-19T17:03:50","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"reven0n"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-19T17:03:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"reven0n"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-19T17:03:50","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-19T17:03:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-19T17:03:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"reven0n"},"content":"     * Returns the status icon: \"X\" if done, \" \" otherwise.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"reven0n"},"content":"     *","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"reven0n"},"content":"     * @return \"X\" or \" \"","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"reven0n"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-19T17:03:50","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"reven0n"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-08-19T17:03:50","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-19T17:03:50","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-19T17:03:50","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"reven0n"},"content":"     * Marks the task as done","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"reven0n"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-19T17:03:50","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"reven0n"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-08-19T17:03:50","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-19T17:03:50","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-19T17:03:50","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"reven0n"},"content":"     * Marks the task as not done","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"reven0n"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-08-19T17:03:50","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"reven0n"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-08-19T17:03:50","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-19T17:03:50","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-19T17:03:50","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"reven0n"},"content":"    public abstract String encode();","lastModifiedDate":"2025-08-28T00:45:31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-28T00:45:31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"reven0n"},"content":"     * Returns string representation of the task.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"reven0n"},"content":"     *","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"reven0n"},"content":"     * @return formatted task string","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"reven0n"},"content":"    @Override","lastModifiedDate":"2025-08-19T17:03:50","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"reven0n"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T17:03:50","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"reven0n"},"content":"        return \" [\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-08-19T17:03:50","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-19T17:03:50","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"reven0n"},"content":"}","lastModifiedDate":"2025-08-19T16:52:36","isFullCredit":false}],"authorContributionMap":{"reven0n":54}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"reven0n"},"content":"/**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"reven0n"},"content":" * * Represents a todo task with no time constraints.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"reven0n"},"content":" */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"reven0n"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-19T17:14:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"reven0n"},"content":"     * Constructs a new Todo task.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"reven0n"},"content":"     *","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"reven0n"},"content":"     * @param description the task description","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"reven0n"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-19T17:14:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"reven0n"},"content":"        super(description);","lastModifiedDate":"2025-08-19T17:14:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-19T17:14:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-19T17:14:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-28T00:45:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"reven0n"},"content":"     * Encodes a task into a line like: T | 1 | read book","lastModifiedDate":"2025-08-28T00:45:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-28T00:45:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"reven0n"},"content":"    @Override","lastModifiedDate":"2025-08-28T01:01:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"reven0n"},"content":"    public String encode() {","lastModifiedDate":"2025-08-28T00:45:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"reven0n"},"content":"        return(\"T | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description);","lastModifiedDate":"2025-08-28T00:45:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-28T00:45:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"reven0n"},"content":"","lastModifiedDate":"2025-08-28T00:45:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"reven0n"},"content":"    /**","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"reven0n"},"content":"     * Returns string representation of the Todo task.","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"reven0n"},"content":"     *","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"reven0n"},"content":"     * @return formatted task string","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"reven0n"},"content":"     */","lastModifiedDate":"2025-08-27T11:19:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"reven0n"},"content":"    @Override","lastModifiedDate":"2025-08-19T17:14:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"reven0n"},"content":"    public String toString(){","lastModifiedDate":"2025-08-19T17:14:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"reven0n"},"content":"        return \" [T] \" + super.toString();","lastModifiedDate":"2025-08-19T17:14:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"reven0n"},"content":"    }","lastModifiedDate":"2025-08-19T17:14:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"reven0n"},"content":"}","lastModifiedDate":"2025-08-19T17:14:06","isFullCredit":false}],"authorContributionMap":{"reven0n":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"reven0n"},"content":"help","lastModifiedDate":"2025-08-21T14:30:36","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"reven0n"},"content":"todo read book","lastModifiedDate":"2025-08-21T14:30:36","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"reven0n"},"content":"deadline return book","lastModifiedDate":"2025-08-21T14:30:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"reven0n"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-21T14:30:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"reven0n"},"content":"event project meeting /from Mon 2pm","lastModifiedDate":"2025-08-21T14:30:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"reven0n"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-21T14:30:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"reven0n"},"content":"list","lastModifiedDate":"2025-08-21T14:30:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"reven0n"},"content":"mark","lastModifiedDate":"2025-08-21T14:30:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"reven0n"},"content":"mark 1","lastModifiedDate":"2025-08-21T14:30:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"reven0n"},"content":"mark 999","lastModifiedDate":"2025-08-21T14:30:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"reven0n"},"content":"unmark abc","lastModifiedDate":"2025-08-21T14:30:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"reven0n"},"content":"todo","lastModifiedDate":"2025-08-21T14:30:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"reven0n"},"content":"list","lastModifiedDate":"2025-08-21T14:30:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"reven0n"},"content":"bye","lastModifiedDate":"2025-08-21T14:30:36","isFullCredit":false}],"authorContributionMap":{"reven0n":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"reven0n"},"content":"java -classpath ..\\bin Som \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-19T15:18:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"reven0n":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"reven0n"},"content":"java -classpath ../bin Som \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-21T14:30:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"reven0n"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2025-08-21T14:30:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"reven0n":2,"-":32}}]
