[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"rongkangw"},"content":"# TheCoolerDuke project template","lastModifiedDate":"2025-08-17T23:18:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rongkangw"},"content":"1. After that, locate the `src/main/java/TheCoolerDuke.java` file, right-click it, and choose `Run TheCoolerDuke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-08-17T23:18:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"rongkangw":2,"-":24}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"rongkangw"},"content":"# TheCoolerDuke User Guide","lastModifiedDate":"2025-08-17T23:18:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"rongkangw":1,"-":29}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rongkangw"},"content":"public enum Command {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rongkangw"},"content":"    LIST_TASK(\"list\") {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rongkangw"},"content":"        @Override","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rongkangw"},"content":"        public String execute(String[] modifier, TaskManager tm) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rongkangw"},"content":"            return tm.viewList();","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rongkangw"},"content":"        }","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rongkangw"},"content":"    },","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rongkangw"},"content":"    ADD_TODO_TASK(\"todo\") {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rongkangw"},"content":"        @Override","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rongkangw"},"content":"        public String execute(String[] modifier, TaskManager tm) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rongkangw"},"content":"            try {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rongkangw"},"content":"                String[] result \u003d validateAndFormatModifier(modifier[0], new String[]{});","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rongkangw"},"content":"                return tm.addTodoTask(result[0]);","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rongkangw"},"content":"            } catch (InvalidFormatException e) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rongkangw"},"content":"                return e.getMessage();","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rongkangw"},"content":"            }","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rongkangw"},"content":"        }","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rongkangw"},"content":"    },","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rongkangw"},"content":"    ADD_DEADLINE_TASK(\"deadline\") {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rongkangw"},"content":"        @Override","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rongkangw"},"content":"        public String execute(String[] modifier, TaskManager tm) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rongkangw"},"content":"            try {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rongkangw"},"content":"                String[] result \u003d validateAndFormatModifier(modifier[0], new String[]{\"/by\"});","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rongkangw"},"content":"                return tm.addDeadlineTask(result[0], result[1]);","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rongkangw"},"content":"            } catch (InvalidFormatException e) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rongkangw"},"content":"                return e.getMessage();","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rongkangw"},"content":"            }","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rongkangw"},"content":"        }","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rongkangw"},"content":"    },","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rongkangw"},"content":"    ADD_EVENT_TASK(\"event\") {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rongkangw"},"content":"        @Override","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rongkangw"},"content":"        public String execute(String[] modifier, TaskManager tm) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rongkangw"},"content":"            try {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rongkangw"},"content":"                String[] result \u003d validateAndFormatModifier(modifier[0], new String[]{\"/from\", \"/to\"});","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rongkangw"},"content":"                return tm.addEventTask(result[0], result[1], result[2]);","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rongkangw"},"content":"            } catch (InvalidFormatException e) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rongkangw"},"content":"                return e.getMessage();","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rongkangw"},"content":"            }","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rongkangw"},"content":"        }","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rongkangw"},"content":"    },","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rongkangw"},"content":"    DELETE_TASK(\"delete\") {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rongkangw"},"content":"        @Override","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rongkangw"},"content":"        public String execute(String[] modifier, TaskManager tm) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rongkangw"},"content":"            try {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rongkangw"},"content":"                String[] result \u003d validateAndFormatModifier(modifier[0], new String[]{});","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rongkangw"},"content":"                int idx \u003d Integer.parseInt(result[0]);","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rongkangw"},"content":"                return tm.deleteTask(idx);","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rongkangw"},"content":"            } catch (InvalidFormatException e) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rongkangw"},"content":"                return e.getMessage();","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rongkangw"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rongkangw"},"content":"                return \"that command isn\u0027t right: only numbers are allowed!\";","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rongkangw"},"content":"            }","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rongkangw"},"content":"        }","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rongkangw"},"content":"    },","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rongkangw"},"content":"    MARK_TASK(\"mark\") {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rongkangw"},"content":"        @Override","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rongkangw"},"content":"        public String execute(String[] modifier, TaskManager tm) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rongkangw"},"content":"            try {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rongkangw"},"content":"                String[] result \u003d validateAndFormatModifier(modifier[0], new String[]{});","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rongkangw"},"content":"                int idx \u003d Integer.parseInt(result[0]);","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rongkangw"},"content":"                return tm.markTaskAsDone(idx);","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rongkangw"},"content":"            } catch (InvalidFormatException e) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rongkangw"},"content":"                return e.getMessage();","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rongkangw"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rongkangw"},"content":"                return \"that command isn\u0027t right: only numbers are allowed!\";","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rongkangw"},"content":"            }","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rongkangw"},"content":"        }","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rongkangw"},"content":"    },","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rongkangw"},"content":"    UNMARK_TASK(\"unmark\") {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rongkangw"},"content":"        @Override","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rongkangw"},"content":"        public String execute(String[] modifier, TaskManager tm) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rongkangw"},"content":"            try {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rongkangw"},"content":"                String[] result \u003d validateAndFormatModifier(modifier[0], new String[]{});","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rongkangw"},"content":"                int idx \u003d Integer.parseInt(result[0]);","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rongkangw"},"content":"                return tm.unmarkTaskAsDone(idx);","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rongkangw"},"content":"            } catch (InvalidFormatException e) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rongkangw"},"content":"                return e.getMessage();","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rongkangw"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rongkangw"},"content":"                return \"that command isn\u0027t right: only numbers are allowed!\";","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rongkangw"},"content":"            }","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rongkangw"},"content":"        }","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rongkangw"},"content":"    };","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rongkangw"},"content":"    private final String keyword;","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rongkangw"},"content":"    Command(String keyword) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rongkangw"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rongkangw"},"content":"    public abstract String execute(String[] modifier, TaskManager tm);","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rongkangw"},"content":"    /**","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rongkangw"},"content":"     * Compares user input with current valid commands and returns corresponding Command object if valid.","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rongkangw"},"content":"     * If invalid command, returns null.","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rongkangw"},"content":"     *","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rongkangw"},"content":"     * @param input User input as a String","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rongkangw"},"content":"     * @return Command object","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rongkangw"},"content":"     */","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rongkangw"},"content":"    public static Command validateCommand(String input) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rongkangw"},"content":"        for (Command c : values()) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rongkangw"},"content":"            if (c.keyword.equals(input)) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rongkangw"},"content":"                return c;","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rongkangw"},"content":"            }","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rongkangw"},"content":"        }","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rongkangw"},"content":"        return null;","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rongkangw"},"content":"    //checks modifier is of correct format based on provided acceptedModifiers","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rongkangw"},"content":"    //returns the separated String[] version of the modifier if valid","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rongkangw"},"content":"    private static String[] validateAndFormatModifier(String modifier, String[] acceptedModifiers) throws InvalidFormatException {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rongkangw"},"content":"        //check that modifier contains the accepted modifiers provided","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rongkangw"},"content":"        StringBuilder missing \u003d new StringBuilder();","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rongkangw"},"content":"        for (String accepted: acceptedModifiers) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rongkangw"},"content":"            if (!modifier.contains(accepted)) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rongkangw"},"content":"                missing.append(\" \").append(accepted);","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rongkangw"},"content":"            }","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rongkangw"},"content":"        }","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rongkangw"},"content":"        //throw if any missing modifiers","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rongkangw"},"content":"        if (!missing.isEmpty()) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rongkangw"},"content":"            throw new InvalidFormatException(String.format(\"missing the modifier(s):%s!\", missing));","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rongkangw"},"content":"        }","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rongkangw"},"content":"        //format the modifier into its parameters based on the accepted modifiers","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rongkangw"},"content":"        String regex \u003d String.join(\"|\", acceptedModifiers);","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rongkangw"},"content":"        String[] params \u003d modifier.split(regex, acceptedModifiers.length + 1);","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"rongkangw"},"content":"        //ensure that none of the parameters are empty, otherwise trim leading and trailing whitespaces as well","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"rongkangw"},"content":"        for (int i \u003d 0; i\u003c params.length; i++) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"rongkangw"},"content":"            if (params[i].isEmpty()) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"rongkangw"},"content":"                throw new InvalidFormatException(\"one of the parameters is missing!\");","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"rongkangw"},"content":"            } else {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"rongkangw"},"content":"                params[i] \u003d params[i].trim();","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"rongkangw"},"content":"            }","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"rongkangw"},"content":"        }","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"rongkangw"},"content":"        return params;","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"rongkangw"},"content":"}","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false}],"authorContributionMap":{"rongkangw":146}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rongkangw"},"content":"/**","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rongkangw"},"content":" * Subclass of Task with additional completion time field.","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rongkangw"},"content":" */","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rongkangw"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rongkangw"},"content":"    private final String completeBy;","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rongkangw"},"content":"    public Deadline(String name, String completeBy) {","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rongkangw"},"content":"        super(name);","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rongkangw"},"content":"        this.completeBy \u003d completeBy;","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rongkangw"},"content":"    @Override","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rongkangw"},"content":"    public String showTask() {","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rongkangw"},"content":"        return String.format(\"[D]%s (by: %s)\", super.showTask(), this.completeBy);","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rongkangw"},"content":"}","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false}],"authorContributionMap":{"rongkangw":16}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rongkangw"},"content":"/**","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rongkangw"},"content":" * Subclass of Task with additional start and end date/time field.","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rongkangw"},"content":" */","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rongkangw"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rongkangw"},"content":"    private final String start;","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rongkangw"},"content":"    private final String end;","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rongkangw"},"content":"    public Event(String name, String start, String end) {","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rongkangw"},"content":"        super(name);","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rongkangw"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rongkangw"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rongkangw"},"content":"    @Override","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rongkangw"},"content":"    public String showTask() {","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rongkangw"},"content":"        return String.format(\"[E]%s (from: %s, to: %s)\", super.showTask(), this.start, this.end);","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rongkangw"},"content":"}","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false}],"authorContributionMap":{"rongkangw":18}},{"path":"src/main/java/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rongkangw"},"content":"public class InvalidFormatException extends Exception {","lastModifiedDate":"2025-08-19T20:27:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rongkangw"},"content":"    public InvalidFormatException(String message) {","lastModifiedDate":"2025-08-19T20:27:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rongkangw"},"content":"        super(message);","lastModifiedDate":"2025-08-19T20:27:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-19T20:27:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-19T20:27:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rongkangw"},"content":"    @Override","lastModifiedDate":"2025-08-19T20:27:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rongkangw"},"content":"    public String getMessage() {","lastModifiedDate":"2025-08-19T20:27:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rongkangw"},"content":"        return String.format(\"that command isn\u0027t right: %s\", super.getMessage());","lastModifiedDate":"2025-08-19T20:27:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-19T20:27:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rongkangw"},"content":"}","lastModifiedDate":"2025-08-19T20:27:20","isFullCredit":false}],"authorContributionMap":{"rongkangw":10}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rongkangw"},"content":"/**","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rongkangw"},"content":" * Represents a task with a name and a editable completion flag of isDone.","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rongkangw"},"content":" */","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rongkangw"},"content":"public class Task {","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rongkangw"},"content":"    private final String name;","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rongkangw"},"content":"    private boolean isDone;","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rongkangw"},"content":"    public Task(String name) {","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rongkangw"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rongkangw"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rongkangw"},"content":"    /**","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rongkangw"},"content":"     * Marks task as done.","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rongkangw"},"content":"     *","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rongkangw"},"content":"     */","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rongkangw"},"content":"    public void markDone() {","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rongkangw"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rongkangw"},"content":"    /**","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rongkangw"},"content":"     * Unmarks task as done.","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rongkangw"},"content":"     *","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rongkangw"},"content":"     */","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rongkangw"},"content":"    public void unmarkDone() {","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rongkangw"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rongkangw"},"content":"    public String showTask() {","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rongkangw"},"content":"        String doneIcon \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rongkangw"},"content":"        return String.format(\"[%s] %s\", doneIcon, name);","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rongkangw"},"content":"}","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false}],"authorContributionMap":{"rongkangw":33}},{"path":"src/main/java/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rongkangw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rongkangw"},"content":"/**","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rongkangw"},"content":" * Acts as a list-based task manager, with ability to add, view, mark/unmark, and delete tasks","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rongkangw"},"content":" */","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rongkangw"},"content":"public class TaskManager {","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rongkangw"},"content":"    private final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rongkangw"},"content":"    ","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rongkangw"},"content":"    //returns a single task as \"X. taskName\"","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rongkangw"},"content":"    private String viewTask(int taskIdx) {","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rongkangw"},"content":"        return String.format(\"%d. %s\", taskIdx + 1, taskList.get(taskIdx).showTask());","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rongkangw"},"content":"    //returns size of list","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rongkangw"},"content":"    private int getListSize() {","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rongkangw"},"content":"        return taskList.size();","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rongkangw"},"content":"    /**","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rongkangw"},"content":"     * Creates a new ToDo task and adds to the task list.","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rongkangw"},"content":"     *","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rongkangw"},"content":"     * @param task Name of the task","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rongkangw"},"content":"     * @return Output string for display","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rongkangw"},"content":"     */","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rongkangw"},"content":"    public String addTodoTask(String task) {","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rongkangw"},"content":"        ToDo newTask \u003d new ToDo(task);","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rongkangw"},"content":"        taskList.add(newTask);","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rongkangw"},"content":"        return String.format(","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rongkangw"},"content":"                \"Alright, I have added a new todo:\\n\\t%s\\nYou now have %d tasks in the list.\",","lastModifiedDate":"2025-08-19T17:48:50","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rongkangw"},"content":"                viewTask(taskList.indexOf(newTask)),","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rongkangw"},"content":"                getListSize()","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rongkangw"},"content":"        );","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rongkangw"},"content":"    /**","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rongkangw"},"content":"     * Creates a new Deadline task and adds to the task list.","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rongkangw"},"content":"     *","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rongkangw"},"content":"     * @param task Name of the task","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rongkangw"},"content":"     * @param completeBy Completion date/time of the task as String","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rongkangw"},"content":"     * @return Output string for display","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rongkangw"},"content":"     */","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rongkangw"},"content":"    public String addDeadlineTask(String task, String completeBy) {","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rongkangw"},"content":"        Deadline newTask \u003d new Deadline(task, completeBy);","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rongkangw"},"content":"        taskList.add(newTask);","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rongkangw"},"content":"        return String.format(","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rongkangw"},"content":"                \"Alright, I have added a new deadline:\\n\\t%s\\nYou now have %d tasks in the list.\",","lastModifiedDate":"2025-08-19T17:48:50","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rongkangw"},"content":"                viewTask(taskList.indexOf(newTask)),","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rongkangw"},"content":"                getListSize()","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rongkangw"},"content":"        );","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rongkangw"},"content":"    /**","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rongkangw"},"content":"     * Creates a new Event task and adds to the task list.","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rongkangw"},"content":"     *","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rongkangw"},"content":"     * @param task Name of the task","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rongkangw"},"content":"     * @param start Start date/time of the task as String","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rongkangw"},"content":"     * @param end End date/time of the task as String","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rongkangw"},"content":"     * @return Output string for display","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rongkangw"},"content":"     */","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rongkangw"},"content":"    public String addEventTask(String task, String start, String end) {","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rongkangw"},"content":"        Event newTask \u003d new Event(task, start, end);","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rongkangw"},"content":"        taskList.add(newTask);","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rongkangw"},"content":"        return String.format(","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rongkangw"},"content":"                \"Alright, I have added a new event:\\n\\t%s\\nYou now have %d tasks in the list.\",","lastModifiedDate":"2025-08-19T17:48:50","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rongkangw"},"content":"                viewTask(taskList.indexOf(newTask)),","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rongkangw"},"content":"                getListSize()","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rongkangw"},"content":"        );","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-19T20:40:36","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rongkangw"},"content":"    /**","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rongkangw"},"content":"     * Deletes a task at the specified index from the task list.","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rongkangw"},"content":"     * Checks for invalid index and returns appropriate String response.","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rongkangw"},"content":"     *","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rongkangw"},"content":"     * @param taskIdx The index of the task to be deleted","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rongkangw"},"content":"     * @return Output string for display","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rongkangw"},"content":"     */","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rongkangw"},"content":"    public String deleteTask(int taskIdx) {","lastModifiedDate":"2025-08-19T20:40:36","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rongkangw"},"content":"        try {","lastModifiedDate":"2025-08-19T20:40:36","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rongkangw"},"content":"            int actualIdx \u003d taskIdx - 1; //account for display vs actual index","lastModifiedDate":"2025-08-19T20:40:36","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rongkangw"},"content":"            String deleted \u003d viewTask(taskIdx - 1);","lastModifiedDate":"2025-08-19T20:40:36","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rongkangw"},"content":"            taskList.remove(actualIdx);","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-19T20:40:36","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rongkangw"},"content":"            return String.format(","lastModifiedDate":"2025-08-19T20:40:36","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rongkangw"},"content":"                    \"Alright, I\u0027ve have removed this task:\\n\\t%s\\nYou now have %d tasks in the list.\",","lastModifiedDate":"2025-08-19T20:40:36","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rongkangw"},"content":"                    deleted,","lastModifiedDate":"2025-08-19T20:40:36","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rongkangw"},"content":"                    getListSize()","lastModifiedDate":"2025-08-19T20:40:36","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rongkangw"},"content":"            );","lastModifiedDate":"2025-08-19T20:40:36","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rongkangw"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-19T20:40:36","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rongkangw"},"content":"            return \"The task at this index does not exist!\";","lastModifiedDate":"2025-08-19T20:40:36","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rongkangw"},"content":"        }","lastModifiedDate":"2025-08-19T20:40:36","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-19T20:40:36","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-19T20:40:36","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rongkangw"},"content":"    /**","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rongkangw"},"content":"     * Marks a task as done at the specified index from the task list.","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rongkangw"},"content":"     * Checks for invalid index and returns appropriate String response.","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rongkangw"},"content":"     *","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rongkangw"},"content":"     * @param taskIdx The index of the task to be marked","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rongkangw"},"content":"     * @return Output string for display","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rongkangw"},"content":"     */","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rongkangw"},"content":"    public String markTaskAsDone(int taskIdx) {","lastModifiedDate":"2025-08-19T20:29:39","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rongkangw"},"content":"        try {","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rongkangw"},"content":"            int actualIdx \u003d taskIdx - 1; //account for display vs actual index","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rongkangw"},"content":"            taskList.get(actualIdx).markDone();","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rongkangw"},"content":"            return String.format(\"Ok! I\u0027ve marked this task as done:\\n%s\", viewTask(actualIdx));","lastModifiedDate":"2025-08-19T17:48:50","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rongkangw"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rongkangw"},"content":"            return \"The task at this index does not exist!\";","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rongkangw"},"content":"        }","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rongkangw"},"content":"    /**","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rongkangw"},"content":"     * Unmarks a task as done at the specified index from the task list.","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rongkangw"},"content":"     * Checks for invalid index and returns appropriate String response.","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rongkangw"},"content":"     *","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rongkangw"},"content":"     * @param taskIdx The index of the task to be unmarked","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rongkangw"},"content":"     * @return Output string for display","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rongkangw"},"content":"     */","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rongkangw"},"content":"    public String unmarkTaskAsDone(int taskIdx) {","lastModifiedDate":"2025-08-19T20:29:39","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rongkangw"},"content":"        try {","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rongkangw"},"content":"            int actualIdx \u003d taskIdx - 1; //account for display vs actual index","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rongkangw"},"content":"            taskList.get(actualIdx).unmarkDone();","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rongkangw"},"content":"            return String.format(\"Ok! I\u0027ve removed the mark from this task:\\n%s\", viewTask(actualIdx));","lastModifiedDate":"2025-08-19T17:48:50","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rongkangw"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rongkangw"},"content":"            return \"The task at this index does not exist!\";","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rongkangw"},"content":"        }","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rongkangw"},"content":"    //returns a list of tasks as \"X. taskName\" per row","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rongkangw"},"content":"    /**","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rongkangw"},"content":"     * Displays the list of tasks in the task list.","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rongkangw"},"content":"     * Checks for empty list and returns appropriate String response.","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"rongkangw"},"content":"     *","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"rongkangw"},"content":"     * @return Output string for display","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"rongkangw"},"content":"     */","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"rongkangw"},"content":"    public String viewList() {","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"rongkangw"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"rongkangw"},"content":"            //Account for empty taskList","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"rongkangw"},"content":"            return \"The list is empty!\";","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"rongkangw"},"content":"        } else {","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"rongkangw"},"content":"            StringBuilder msg \u003d new StringBuilder();","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"rongkangw"},"content":"            msg.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-08-19T17:48:50","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"rongkangw"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"rongkangw"},"content":"                msg.append(viewTask(i)).append(\"\\n\");","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"rongkangw"},"content":"            }","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"rongkangw"},"content":"            //Remove last \"\\n\" for formatting purposes","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"rongkangw"},"content":"            return msg.substring(0, msg.length() - 1);","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"rongkangw"},"content":"        }","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"rongkangw"},"content":"}","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false}],"authorContributionMap":{"rongkangw":152}},{"path":"src/main/java/TheCoolerDuke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rongkangw"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-18T15:14:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-18T15:14:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rongkangw"},"content":"public class TheCoolerDuke {","lastModifiedDate":"2025-08-17T23:18:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rongkangw"},"content":"    private static final String lineBreak \u003d \"_\".repeat(72);","lastModifiedDate":"2025-08-18T15:14:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rongkangw"},"content":"    private static String[] inputHandler(Scanner scanner) {","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rongkangw"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rongkangw"},"content":"        System.out.print(\"User \u003e\u003e\u003e\\n\");","lastModifiedDate":"2025-08-19T17:48:50","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rongkangw"},"content":"        //Split all inputs into [command, modifier]","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rongkangw"},"content":"        return scanner.nextLine().trim().split(\" \",2);","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rongkangw"},"content":"    private static void outputHandler(String msg) {","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rongkangw"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rongkangw"},"content":"        System.out.println(\"Bot \u003e\u003e\u003e\\n\" + msg);","lastModifiedDate":"2025-08-19T17:48:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-18T15:14:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rongkangw"},"content":"    /**","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rongkangw"},"content":"     * Provides the Task Manager feature for the chatbot.","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rongkangw"},"content":"     *","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rongkangw"},"content":"     * @param scanner Scanner object passed for user inputs","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rongkangw"},"content":"     */","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rongkangw"},"content":"    public static void taskManagerFeature(Scanner scanner) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rongkangw"},"content":"        TaskManager tm \u003d new TaskManager();","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rongkangw"},"content":"        String outputMessage;","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rongkangw"},"content":"        //Split input into command and modifier","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rongkangw"},"content":"        String[] input \u003d inputHandler(scanner);","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rongkangw"},"content":"        String command \u003d input[0];","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rongkangw"},"content":"        String modifier \u003d input.length \u003e 1 ? input[1] : \"\";","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-18T15:14:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rongkangw"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rongkangw"},"content":"            Command result \u003d Command.validateCommand(command);","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rongkangw"},"content":"            if (result \u003d\u003d null) {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rongkangw"},"content":"                //command not recognised","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rongkangw"},"content":"                outputMessage \u003d \"What do you mean? Please try again...\";","lastModifiedDate":"2025-08-19T20:27:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rongkangw"},"content":"            } else {","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rongkangw"},"content":"                //valid command, execute","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rongkangw"},"content":"                outputMessage \u003d result.execute(new String[]{modifier}, tm);","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rongkangw"},"content":"            }","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rongkangw"},"content":"            //display the output and gather new input","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rongkangw"},"content":"            outputHandler(outputMessage);","lastModifiedDate":"2025-08-18T17:48:34","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rongkangw"},"content":"            input \u003d inputHandler(scanner);","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rongkangw"},"content":"            command \u003d input[0];","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rongkangw"},"content":"            modifier \u003d input.length \u003e 1 ? input[1] : \"\";","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rongkangw"},"content":"        }","lastModifiedDate":"2025-08-18T15:14:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-18T15:14:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-18T15:14:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rongkangw"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-17T23:18:20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rongkangw"},"content":"        //Initialise scanner for input","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rongkangw"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rongkangw"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2025-08-17T23:18:20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rongkangw"},"content":"        System.out.println(\"Hello! I\u0027m TheCoolerDuke\");","lastModifiedDate":"2025-08-17T23:18:20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rongkangw"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-18T15:14:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rongkangw"},"content":"        taskManagerFeature(scanner);","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-18T15:14:02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rongkangw"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rongkangw"},"content":"        System.out.println(\"Alright, I guess you\u0027re done :(\\nGoodbye!\");","lastModifiedDate":"2025-08-18T16:52:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-17T23:18:20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rongkangw"},"content":"}","lastModifiedDate":"2025-08-17T23:18:20","isFullCredit":false}],"authorContributionMap":{"rongkangw":65}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rongkangw"},"content":"/**","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rongkangw"},"content":" * Subclass of Task for clarity in naming.","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rongkangw"},"content":" * Does not have additional functionality on top of the identifier when displaying task.","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rongkangw"},"content":" */","lastModifiedDate":"2025-08-20T00:26:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rongkangw"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rongkangw"},"content":"    public ToDo(String name) {","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rongkangw"},"content":"        super(name);","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rongkangw"},"content":"","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rongkangw"},"content":"    @Override","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rongkangw"},"content":"    public String showTask() {","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rongkangw"},"content":"        return String.format(\"[T]%s\", super.showTask());","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rongkangw"},"content":"    }","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rongkangw"},"content":"}","lastModifiedDate":"2025-08-19T17:22:08","isFullCredit":false}],"authorContributionMap":{"rongkangw":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rongkangw"},"content":"list","lastModifiedDate":"2025-08-19T17:48:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rongkangw"},"content":"todo buy groceries","lastModifiedDate":"2025-08-19T17:48:50","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rongkangw"},"content":"deadline return book /by Sunday 2pm","lastModifiedDate":"2025-08-19T17:48:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rongkangw"},"content":"event RUNNUS 2025 /from 25 Sep, 6am /to 25 Sep, 10am","lastModifiedDate":"2025-08-19T17:48:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rongkangw"},"content":"list","lastModifiedDate":"2025-08-19T17:48:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rongkangw"},"content":"mark 1","lastModifiedDate":"2025-08-19T17:48:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rongkangw"},"content":"list","lastModifiedDate":"2025-08-19T17:48:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rongkangw"},"content":"delete 2","lastModifiedDate":"2025-08-19T20:40:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rongkangw"},"content":"hello","lastModifiedDate":"2025-08-19T20:27:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rongkangw"},"content":"todo","lastModifiedDate":"2025-08-19T20:27:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rongkangw"},"content":"deadline return book /by","lastModifiedDate":"2025-08-19T20:27:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rongkangw"},"content":"event /from 4pm /to 5pm","lastModifiedDate":"2025-08-19T20:27:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rongkangw"},"content":"deadline get food","lastModifiedDate":"2025-08-19T20:27:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rongkangw"},"content":"delete 0","lastModifiedDate":"2025-08-19T20:40:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rongkangw"},"content":"delete RUNNUS","lastModifiedDate":"2025-08-19T20:40:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rongkangw"},"content":"bye","lastModifiedDate":"2025-08-19T17:48:50","isFullCredit":false}],"authorContributionMap":{"rongkangw":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rongkangw"},"content":"java -classpath ..\\bin TheCoolerDuke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-17T23:18:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"rongkangw":1,"-":20}}]
