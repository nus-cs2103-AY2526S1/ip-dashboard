[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanz03"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-01T12:57:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanz03"},"content":"checkstyle {","lastModifiedDate":"2025-09-01T12:57:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanz03"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-09-01T12:57:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanz03"},"content":"}","lastModifiedDate":"2025-09-01T12:57:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-01T12:57:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanz03"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-02T13:21:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T13:21:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanz03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-02T13:21:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanz03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-02T13:21:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanz03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-02T13:21:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanz03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-02T13:21:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanz03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-02T13:21:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanz03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-02T13:21:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanz03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-02T13:21:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanz03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-02T13:21:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanz03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-02T13:21:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanz03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-02T13:21:14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanz03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-02T13:21:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanz03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-02T13:21:14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T13:21:14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuanz03"},"content":"    mainClass.set(\"shadowbuddy.gui.Launcher\")","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yuanz03"},"content":"    archiveBaseName \u003d \"Shadow\"","lastModifiedDate":"2025-08-26T16:41:10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yuanz03"},"content":"    archiveFileName \u003d \"Shadow.jar\"","lastModifiedDate":"2025-08-26T16:41:10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yuanz03"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-09-08T18:44:53","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"yuanz03":24,"-":39}},{"path":"src/main/java/shadowbuddy/app/Shadow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanz03"},"content":"package shadowbuddy.app;","lastModifiedDate":"2025-08-18T19:16:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T16:23:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanz03"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-17T21:41:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanz03"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanz03"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-09-03T01:08:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanz03"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanz03"},"content":"import shadowbuddy.services.ShadowException;","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanz03"},"content":"import shadowbuddy.storage.ShadowStorage;","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanz03"},"content":"/**","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanz03"},"content":" * Coordinates the Shadow chatbot\u0027s UI, controller, command parser and storage.","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanz03"},"content":" * The Shadow class is composed of the ShadowUi, ShadowController, ShadowParser, and ShadowStorage components.","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanz03"},"content":" * It also provides methods to integrate with the GUI, manage the database, and handle UI interactions.","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanz03"},"content":" */","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanz03"},"content":"public class Shadow {","lastModifiedDate":"2025-08-17T17:33:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanz03"},"content":"    private static final int GOODBYE_DELAY \u003d 1000;","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanz03"},"content":"    private static final String EXIT_COMMAND \u003d \"bye\";","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanz03"},"content":"    private static final String ERROR_COMMAND \u003d \"UNKNOWN\";","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanz03"},"content":"    private final ShadowUi chatbotUi;","lastModifiedDate":"2025-08-24T23:04:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanz03"},"content":"    private final ShadowController chatbotController;","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanz03"},"content":"    private final ShadowStorage taskStorage;","lastModifiedDate":"2025-09-02T20:31:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanz03"},"content":"    private String commandType;","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-23T21:10:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanz03"},"content":"     * Initializes a Shadow instance with the given file path.","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanz03"},"content":"     * The constructor also initializes the storage, controller, and UI.","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanz03"},"content":"     * @param filePath The file path to the task list database file.","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanz03"},"content":"    public Shadow(String filePath) {","lastModifiedDate":"2025-08-24T23:04:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanz03"},"content":"        taskStorage \u003d new ShadowStorage(filePath);","lastModifiedDate":"2025-09-02T20:31:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanz03"},"content":"        chatbotController \u003d new ShadowController(taskStorage);","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanz03"},"content":"        chatbotUi \u003d new ShadowUi();","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-02T20:31:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T20:31:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanz03"},"content":"     * Starts a chatbot session by greeting the user and displaying the existing tasks stored in the storage.","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanz03"},"content":"     * Delegates database setup and retrieval of tasks to a helper method.","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuanz03"},"content":"     * @return The greeting message combined with the output of the database.","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuanz03"},"content":"    public String startShadowSession() {","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuanz03"},"content":"        String greeting \u003d chatbotUi.greetUser();","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-08-23T21:10:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuanz03"},"content":"            String databaseOutput \u003d prepareDatabaseOutput();","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuanz03"},"content":"            return greeting + \"\\n\" + databaseOutput;","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuanz03"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuanz03"},"content":"            return \"Oops! Something went wrong when starting the chatbot session: \" + exception.getMessage();","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-23T21:10:07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T23:04:53","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T23:04:53","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yuanz03"},"content":"     * Processes user input and returns the Shadow chatbot\u0027s response.","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yuanz03"},"content":"     * If the user inputs \"bye\", the chatbot schedules a short delay before terminating the","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yuanz03"},"content":"     * JavaFX application. This ensures the chatbot has time to display its goodbye message.","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yuanz03"},"content":"     * Each recognized command is handled and executed by the controller.","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yuanz03"},"content":"     * The resulting output is both displayed to the user and saved to storage.","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yuanz03"},"content":"     * @param userInput The raw input string provided by the user for processing.","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yuanz03"},"content":"     * @return The chatbot\u0027s textual response, generated from executing the user\u0027s command.","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yuanz03"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2025-09-02T19:45:39","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yuanz03"},"content":"        // Solution below adapted from a ChatGPT example on how to delay exiting from a JavaFx application","lastModifiedDate":"2025-09-14T14:53:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yuanz03"},"content":"        // Initial thread-based approach was replaced to ensure thread safety as per code quality standards","lastModifiedDate":"2025-09-14T14:53:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yuanz03"},"content":"        if (userInput.equalsIgnoreCase(EXIT_COMMAND)) {","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yuanz03"},"content":"            commandType \u003d userInput; // reset to default dialog styling when exit command is passed","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yuanz03"},"content":"            PauseTransition exitDelay \u003d new PauseTransition(Duration.millis(GOODBYE_DELAY));","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yuanz03"},"content":"            exitDelay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yuanz03"},"content":"            exitDelay.play();","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yuanz03"},"content":"            return chatbotUi.sayGoodbye();","lastModifiedDate":"2025-09-02T19:45:39","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-18T15:41:58","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yuanz03"},"content":"            ShadowCommand userCommand \u003d chatbotController.handleInput(userInput);","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yuanz03"},"content":"            commandType \u003d userCommand.convertCommandTypeToString(); // store command type for appropriate dialog styling","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yuanz03"},"content":"            String chatbotOutput \u003d chatbotController.executeCommand(userCommand, chatbotUi);","lastModifiedDate":"2025-09-02T19:45:39","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yuanz03"},"content":"            chatbotController.writeToDatabase();","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yuanz03"},"content":"            return chatbotOutput;","lastModifiedDate":"2025-09-02T19:45:39","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yuanz03"},"content":"        } catch (ShadowException | IOException exception) {","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yuanz03"},"content":"            commandType \u003d ERROR_COMMAND; // set to error dialog styling when exceptions are thrown","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yuanz03"},"content":"            return exception.getMessage();","lastModifiedDate":"2025-09-02T19:45:39","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-17T17:33:59","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-02T18:51:43","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yuanz03"},"content":"    public String getCommandType() {","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yuanz03"},"content":"        return this.commandType;","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yuanz03"},"content":"     * Prepares and returns the tasks stored in the database.","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yuanz03"},"content":"     * This helper function sets up the task database (creating it if needed),","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yuanz03"},"content":"     * loads it into the TaskList, and then outputs it.","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yuanz03"},"content":"     * @return The confirmation message combined with the existing tasks in the database.","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yuanz03"},"content":"     * @throws IOException If the database file cannot be created, found or read.","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yuanz03"},"content":"    private String prepareDatabaseOutput() throws IOException {","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yuanz03"},"content":"        String confirmationMessage \u003d taskStorage.createDatabase();","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yuanz03"},"content":"        chatbotController.loadDatabase();","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yuanz03"},"content":"        return confirmationMessage + \"\\n\" + taskStorage.outputDatabase();","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yuanz03"},"content":"}","lastModifiedDate":"2025-08-17T17:33:59","isFullCredit":false}],"authorContributionMap":{"yuanz03":103}},{"path":"src/main/java/shadowbuddy/app/ShadowCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanz03"},"content":"package shadowbuddy.app;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanz03"},"content":"/**","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanz03"},"content":" * Encapsulates a parsed user command and all related task information.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanz03"},"content":" * The ShadowCommand class models a user command and its associated task data, enabling consistent","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanz03"},"content":" * handling of task operations, such as listing, marking, creating, or deleting tasks.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanz03"},"content":" */","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanz03"},"content":"public class ShadowCommand {","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanz03"},"content":"     * Defines the supported command types recognized by ShadowParser.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanz03"},"content":"     * The CommandType enum lists commands for creating and updating tasks,","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanz03"},"content":"     * with UNKNOWN serving as a fallback for unrecognized input.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanz03"},"content":"    // Statement below inspired from a ChatGPT example on how to use enum types as commands","lastModifiedDate":"2025-09-14T14:53:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanz03"},"content":"    public enum CommandType { LIST, MARK, UNMARK, DELETE, FIND, TODO, DEADLINE, EVENT, UNKNOWN }","lastModifiedDate":"2025-09-14T14:53:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanz03"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanz03"},"content":"    private static final int NO_INDEX \u003d -1;","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanz03"},"content":"    protected final CommandType commandType;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanz03"},"content":"    protected final String taskDescription;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanz03"},"content":"    protected final String dueDate;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanz03"},"content":"    protected final String startDate;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanz03"},"content":"    protected final String endDate;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanz03"},"content":"    protected final int taskIndex;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanz03"},"content":"     * Initializes a ShadowCommand instance with the given command type.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanz03"},"content":"     * Overloaded constructor for LIST and UNKNOWN command types.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanz03"},"content":"    public ShadowCommand(CommandType commandType) {","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanz03"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanz03"},"content":"        this.taskDescription \u003d EMPTY_STRING;","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanz03"},"content":"        this.dueDate \u003d EMPTY_STRING;","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanz03"},"content":"        this.startDate \u003d EMPTY_STRING;","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanz03"},"content":"        this.endDate \u003d EMPTY_STRING;","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanz03"},"content":"        this.taskIndex \u003d NO_INDEX;","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuanz03"},"content":"     * Initializes a ShadowCommand instance with the given command type and task index.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuanz03"},"content":"     * Overloaded constructor for MARK, UNMARK, and DELETE command types.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuanz03"},"content":"    public ShadowCommand(CommandType commandType, int taskIndex) {","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuanz03"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuanz03"},"content":"        this.taskDescription \u003d EMPTY_STRING;","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuanz03"},"content":"        this.dueDate \u003d EMPTY_STRING;","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuanz03"},"content":"        this.startDate \u003d EMPTY_STRING;","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuanz03"},"content":"        this.endDate \u003d EMPTY_STRING;","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuanz03"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yuanz03"},"content":"     * Initializes a ShadowCommand instance with the given command type and task description.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yuanz03"},"content":"     * Overloaded constructor for TODO and FIND command types.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yuanz03"},"content":"    public ShadowCommand(CommandType commandType, String taskDescription) {","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yuanz03"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yuanz03"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yuanz03"},"content":"        this.dueDate \u003d EMPTY_STRING;","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yuanz03"},"content":"        this.startDate \u003d EMPTY_STRING;","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yuanz03"},"content":"        this.endDate \u003d EMPTY_STRING;","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yuanz03"},"content":"        this.taskIndex \u003d NO_INDEX;","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yuanz03"},"content":"     * Initializes a ShadowCommand instance with the given command type, task description, and due date.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yuanz03"},"content":"     * Overloaded constructor for the DEADLINE command type.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yuanz03"},"content":"    public ShadowCommand(CommandType commandType, String taskDescription, String dueDate) {","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yuanz03"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yuanz03"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yuanz03"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yuanz03"},"content":"        this.startDate \u003d EMPTY_STRING;","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yuanz03"},"content":"        this.endDate \u003d EMPTY_STRING;","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yuanz03"},"content":"        this.taskIndex \u003d NO_INDEX;","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yuanz03"},"content":"     * Initializes a ShadowCommand instance with the given command type, task description, start date, and end date.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yuanz03"},"content":"     * Overloaded constructor for the EVENT command type.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yuanz03"},"content":"    public ShadowCommand(CommandType commandType, String taskDescription, String startDate, String endDate) {","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yuanz03"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yuanz03"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yuanz03"},"content":"        this.dueDate \u003d EMPTY_STRING;","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yuanz03"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yuanz03"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yuanz03"},"content":"        this.taskIndex \u003d NO_INDEX;","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yuanz03"},"content":"     * Returns the String representation of the current command type.","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yuanz03"},"content":"    public String convertCommandTypeToString() {","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yuanz03"},"content":"        return this.commandType.toString();","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yuanz03"},"content":"}","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false}],"authorContributionMap":{"yuanz03":98}},{"path":"src/main/java/shadowbuddy/app/ShadowController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanz03"},"content":"package shadowbuddy.app;","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanz03"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-27T18:22:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanz03"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T18:22:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-27T18:22:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanz03"},"content":"import shadowbuddy.services.ShadowException;","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanz03"},"content":"import shadowbuddy.storage.ShadowStorage;","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanz03"},"content":"import shadowbuddy.taskmodels.Deadline;","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanz03"},"content":"import shadowbuddy.taskmodels.Event;","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanz03"},"content":"import shadowbuddy.taskmodels.Task;","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanz03"},"content":"import shadowbuddy.taskmodels.TaskList;","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanz03"},"content":"import shadowbuddy.taskmodels.Todo;","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanz03"},"content":"/**","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanz03"},"content":" * Manages command parsing, task list mutations and storage persistence for Shadow chatbot.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanz03"},"content":" * The ShadowController class receives parsed ShadowCommand objects, modifies the TaskList,","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanz03"},"content":" * delegates UI messages to ShadowUi, and uses ShadowStorage to save and load tasks.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanz03"},"content":" */","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanz03"},"content":"public class ShadowController {","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanz03"},"content":"    protected TaskList taskList;","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanz03"},"content":"    protected final ShadowStorage storage;","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanz03"},"content":"     * Initializes a ShadowController instance with the given ShadowStorage instance.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanz03"},"content":"     * The constructor initializes an empty TaskList and references the given ShadowStorage to save and load tasks.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanz03"},"content":"     * @param storage The ShadowStorage instance used for loading and saving tasks.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanz03"},"content":"    public ShadowController(ShadowStorage storage) {","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanz03"},"content":"        assert storage !\u003d null : \"storage should not be null\";","lastModifiedDate":"2025-09-08T18:44:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanz03"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanz03"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanz03"},"content":"     * Loads tasks from the internal storage into the controller\u0027s task list.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanz03"},"content":"     * Relies on ShadowStorage to populate the internal TaskList with saved tasks.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanz03"},"content":"     * @throws FileNotFoundException If the database file cannot be found or read.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuanz03"},"content":"    public void loadDatabase() throws FileNotFoundException {","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuanz03"},"content":"        this.storage.loadDatabase(this.taskList);","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuanz03"},"content":"     * Writes the controller\u0027s current TaskList to the internal storage.","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuanz03"},"content":"     * Relies on ShadowStorage to save the internal TaskList contents to the database file.","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuanz03"},"content":"     * @throws IOException If the database file cannot be written to.","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuanz03"},"content":"    public void writeToDatabase() throws IOException {","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yuanz03"},"content":"        this.storage.writeToDatabase(this.taskList);","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yuanz03"},"content":"     * Returns a ShadowCommand instance parsed from the given raw input String by ShadowParser.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yuanz03"},"content":"     * @param input The raw user input String to parse.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yuanz03"},"content":"     * @return The ShadowCommand instance parsed by delegating to ShadowParser.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yuanz03"},"content":"     * @throws ShadowException If the user input is syntactically invalid.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yuanz03"},"content":"    public ShadowCommand handleInput(String input) throws ShadowException {","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yuanz03"},"content":"        assert input !\u003d null : \"user input should not be null\";","lastModifiedDate":"2025-09-08T18:44:53","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yuanz03"},"content":"        return ShadowParser.parse(input);","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yuanz03"},"content":"     * Executes the given ShadowCommand instance, modifies the internal TaskList, and triggers UI updates.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yuanz03"},"content":"     * Handles all supported user command types defined in ShadowCommand, updates the internal TaskList,","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yuanz03"},"content":"     * and outputs confirmation messages through the given ShadowUi instance.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yuanz03"},"content":"     * @param userCommand The parsed ShadowCommand instance to execute.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yuanz03"},"content":"     * @param ui The ShadowUi instance used to display confirmation messages and TaskList output.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yuanz03"},"content":"     * @return A String representing the UI confirmation message.","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yuanz03"},"content":"     * @throws ShadowException If the command type is unknown or the task index is invalid.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yuanz03"},"content":"    public String executeCommand(ShadowCommand userCommand, ShadowUi ui) throws ShadowException {","lastModifiedDate":"2025-09-02T19:45:39","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yuanz03"},"content":"        assert userCommand !\u003d null : \"userCommand should not be null\";","lastModifiedDate":"2025-09-08T18:44:53","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yuanz03"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2025-09-08T18:44:53","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yuanz03"},"content":"        String taskDescription \u003d userCommand.taskDescription.trim();","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yuanz03"},"content":"        // Solution below inspired from a ChatGPT example on how to use a switch structure to toggle between commands","lastModifiedDate":"2025-09-14T14:53:12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yuanz03"},"content":"        switch (userCommand.commandType) {","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yuanz03"},"content":"        case LIST:","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yuanz03"},"content":"            return ui.showTaskList(this.taskList);","lastModifiedDate":"2025-09-02T19:45:39","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yuanz03"},"content":"        case MARK:","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yuanz03"},"content":"            int markIndex \u003d userCommand.taskIndex;","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yuanz03"},"content":"            validateTaskIndex(markIndex, this.taskList.getLength());","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yuanz03"},"content":"            validateTaskDoneStatus(this.taskList.getTask(markIndex), userCommand.convertCommandTypeToString());","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yuanz03"},"content":"            this.taskList.markTask(markIndex);","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yuanz03"},"content":"            return ui.showMarkConfirmationMessage(this.taskList.getTask(markIndex));","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yuanz03"},"content":"        case UNMARK:","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yuanz03"},"content":"            int unmarkIndex \u003d userCommand.taskIndex;","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yuanz03"},"content":"            validateTaskIndex(unmarkIndex, this.taskList.getLength());","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yuanz03"},"content":"            validateTaskDoneStatus(this.taskList.getTask(unmarkIndex), userCommand.convertCommandTypeToString());","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yuanz03"},"content":"            this.taskList.unmarkTask(unmarkIndex);","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yuanz03"},"content":"            return ui.showUnmarkConfirmationMessage(this.taskList.getTask(unmarkIndex));","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yuanz03"},"content":"        case DELETE:","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yuanz03"},"content":"            int deleteIndex \u003d userCommand.taskIndex;","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yuanz03"},"content":"            validateTaskIndex(deleteIndex, this.taskList.getLength());","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yuanz03"},"content":"            Task deletedTask \u003d this.taskList.deleteTask(deleteIndex);","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yuanz03"},"content":"            return ui.showDeleteConfirmationMessage(deletedTask, this.taskList.getLength());","lastModifiedDate":"2025-09-02T19:45:39","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yuanz03"},"content":"        case FIND:","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yuanz03"},"content":"            TaskList matchingTasks \u003d this.taskList.getMatchingTasks(this.taskList, taskDescription);","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yuanz03"},"content":"            return ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2025-09-02T19:45:39","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yuanz03"},"content":"        case TODO:","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yuanz03"},"content":"            validateUniqueTaskDescription(taskDescription);","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yuanz03"},"content":"            Task todo \u003d new Todo(taskDescription);","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yuanz03"},"content":"            this.taskList.addTask(todo);","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yuanz03"},"content":"            return ui.showTaskCreationMessage(todo, this.taskList.getLength());","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yuanz03"},"content":"        case DEADLINE:","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yuanz03"},"content":"            validateUniqueTaskDescription(taskDescription);","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yuanz03"},"content":"            Task deadline \u003d new Deadline(taskDescription, userCommand.dueDate);","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yuanz03"},"content":"            this.taskList.addTask(deadline);","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yuanz03"},"content":"            return ui.showTaskCreationMessage(deadline, this.taskList.getLength());","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yuanz03"},"content":"        case EVENT:","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yuanz03"},"content":"            validateUniqueTaskDescription(taskDescription);","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yuanz03"},"content":"            Task event \u003d new Event(taskDescription, userCommand.startDate, userCommand.endDate);","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yuanz03"},"content":"            this.taskList.addTask(event);","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yuanz03"},"content":"            return ui.showTaskCreationMessage(event, this.taskList.getLength());","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yuanz03"},"content":"        case UNKNOWN:","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yuanz03"},"content":"            // Fallthrough","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yuanz03"},"content":"        default:","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yuanz03"},"content":"            throw new ShadowException(\"Unknown request! Try one of these commands: list, mark, unmark, todo, \"","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yuanz03"},"content":"                    + \"delete, event, or deadline, and I\u0027ll handle it for you.\\n\");","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yuanz03"},"content":"     * Returns the controller\u0027s internal TaskList.","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yuanz03"},"content":"     * This protected getter is solely provided to facilitate unit testing of the ShadowController class.","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yuanz03"},"content":"    protected TaskList getTaskList() {","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yuanz03"},"content":"        return this.taskList;","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yuanz03"},"content":"     * Validates that the given 1-based task index is within the current bounds of the TaskList.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yuanz03"},"content":"     * This helper function validates task indices used for mark, unmark, and delete commands.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yuanz03"},"content":"     * @param taskIndex The 1-based index of the task to validate.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yuanz03"},"content":"     * @param taskCount The current number of tasks in the TaskList.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yuanz03"},"content":"     * @throws ShadowException If the TaskList is empty or the index is out of range.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yuanz03"},"content":"    private void validateTaskIndex(int taskIndex, int taskCount) throws ShadowException {","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yuanz03"},"content":"        assert taskCount \u003e\u003d 0 : \"taskCount should not be negative\";","lastModifiedDate":"2025-09-08T18:44:53","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yuanz03"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yuanz03"},"content":"            throw new ShadowException(\"ERROR! Your task list is empty!\\n\");","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yuanz03"},"content":"        if (taskIndex \u003c 1 || taskIndex \u003e taskCount) {","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yuanz03"},"content":"            throw new ShadowException(\"Invalid task index! Please enter a number between 1 and \" + taskCount + \".\\n\");","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yuanz03"},"content":"     * Validates whether the given task can be marked as done or not done.","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yuanz03"},"content":"     * This helper function validates task done status for mark and unmark commands.","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yuanz03"},"content":"     * @param task The task in the Tasklist to validate.","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yuanz03"},"content":"     * @param commandType The type of the user command, either MARK or UNMARK.","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yuanz03"},"content":"     * @throws ShadowException If the task status already matches the requested command.","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yuanz03"},"content":"    private void validateTaskDoneStatus(Task task, String commandType) throws ShadowException {","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"yuanz03"},"content":"        boolean isTaskDone \u003d (task.getStatusIcon().equalsIgnoreCase(\"X\"));","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yuanz03"},"content":"        if (isTaskDone \u0026\u0026 commandType.equalsIgnoreCase(\"MARK\")) {","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"yuanz03"},"content":"            throw new ShadowException(\"ERROR! The task indicated is already marked as done!\\n\");","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"yuanz03"},"content":"        if (!isTaskDone \u0026\u0026 commandType.equalsIgnoreCase(\"UNMARK\")) {","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"yuanz03"},"content":"            throw new ShadowException(\"ERROR! The task indicated is already marked as not done!\\n\");","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"yuanz03"},"content":"     * Validates that the given task description is unique within the TaskList.","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"yuanz03"},"content":"     * This helper function validates task descriptions used for todo, deadline, and event commands.","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"yuanz03"},"content":"     * @param taskDescription The description of the task to validate.","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"yuanz03"},"content":"     * @throws ShadowException If duplicate task descriptions are detected.","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"yuanz03"},"content":"    private void validateUniqueTaskDescription(String taskDescription) throws ShadowException {","lastModifiedDate":"2025-09-15T20:43:36","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"yuanz03"},"content":"        if (this.taskList.containsDuplicate(taskDescription)) {","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"yuanz03"},"content":"            throw new ShadowException(\"Invalid request! A task with this description already exists!\\n\");","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"yuanz03"},"content":"}","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false}],"authorContributionMap":{"yuanz03":186}},{"path":"src/main/java/shadowbuddy/app/ShadowParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanz03"},"content":"package shadowbuddy.app;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanz03"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanz03"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanz03"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanz03"},"content":"import shadowbuddy.services.ShadowException;","lastModifiedDate":"2025-08-27T18:22:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-27T18:22:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanz03"},"content":"/**","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanz03"},"content":" * Parses raw user input into ShadowCommand objects used by the controller.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanz03"},"content":" * The ShadowParser class interprets user commands defined in ShadowCommand, validates input,","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanz03"},"content":" * and converts raw timestamps into a standardized format.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanz03"},"content":" */","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanz03"},"content":"public class ShadowParser {","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanz03"},"content":"    // Statement below adapted from a ChatGPT example on how to define a strict date format for user input","lastModifiedDate":"2025-09-14T14:53:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanz03"},"content":"    private static final String INPUT_DATE_PATTERN \u003d \"d/M/yyyy HHmm\";","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanz03"},"content":"    private static final String OUTPUT_DATE_PATTERN \u003d \"MMM d yyyy HH:mm\";","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanz03"},"content":"    private static final String DEADLINE_FORMAT \u003d \"Please use: deadline DESCRIPTION /by d/M/yyyy HHmm.\\n\";","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanz03"},"content":"    private static final String EVENT_FORMAT \u003d \"Please use: event DESCRIPTION /from d/M/yyyy HHmm /to d/M/yyyy HHmm.\\n\";","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanz03"},"content":"     * Parses raw user input String into a ShadowCommand instance.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanz03"},"content":"     * The user input is analyzed to identify the command type, before returning the corresponding","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanz03"},"content":"     * ShadowCommand instance. Parsing of deadline and event commands is delegated to specialized parsers.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanz03"},"content":"     * @param input The raw user input String to parse.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanz03"},"content":"     * @return A ShadowCommand instance representing the parsed input.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanz03"},"content":"     * @throws ShadowException If the user input is syntactically invalid.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanz03"},"content":"    public static ShadowCommand parse(String input) throws ShadowException {","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanz03"},"content":"        assert input !\u003d null : \"user input should not be null\";","lastModifiedDate":"2025-09-08T18:44:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanz03"},"content":"        String userInput \u003d input.trim();","lastModifiedDate":"2025-09-15T22:35:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanz03"},"content":"        if (userInput.isEmpty()) {","lastModifiedDate":"2025-09-15T22:35:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanz03"},"content":"            throw new ShadowException(\"Empty request! Try one of these commands: list, mark, unmark, todo, \"","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanz03"},"content":"                    + \"delete, event, or deadline, and I\u0027ll handle it for you.\\n\");","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-09T02:15:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanz03"},"content":"        String[] inputDetails \u003d userInput.split(\" \");","lastModifiedDate":"2025-09-15T22:35:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanz03"},"content":"        String requestType \u003d inputDetails[0].toLowerCase();","lastModifiedDate":"2025-08-27T17:50:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuanz03"},"content":"        String requestDetails \u003d inputDetails.length \u003e 1 ? userInput.substring(requestType.length() + 1) : \"\";","lastModifiedDate":"2025-09-15T22:35:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuanz03"},"content":"        // Solution below inspired from a ChatGPT example on how to use a switch structure with return statements","lastModifiedDate":"2025-09-14T14:53:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuanz03"},"content":"        switch (requestType) {","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuanz03"},"content":"        case \"list\":","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuanz03"},"content":"            return new ShadowCommand(ShadowCommand.CommandType.LIST);","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuanz03"},"content":"        case \"mark\":","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuanz03"},"content":"            int markIndex \u003d convertStringToIndex(requestDetails);","lastModifiedDate":"2025-08-27T17:34:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuanz03"},"content":"            return new ShadowCommand(ShadowCommand.CommandType.MARK, markIndex);","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuanz03"},"content":"        case \"unmark\":","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuanz03"},"content":"            int unmarkIndex \u003d convertStringToIndex(requestDetails);","lastModifiedDate":"2025-08-27T17:34:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuanz03"},"content":"            return new ShadowCommand(ShadowCommand.CommandType.UNMARK, unmarkIndex);","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuanz03"},"content":"        case \"delete\":","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yuanz03"},"content":"            int deleteIndex \u003d convertStringToIndex(requestDetails);","lastModifiedDate":"2025-08-27T17:34:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yuanz03"},"content":"            return new ShadowCommand(ShadowCommand.CommandType.DELETE, deleteIndex);","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yuanz03"},"content":"        case \"find\":","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yuanz03"},"content":"            validateSingleKeyword(inputDetails.length - 1, requestDetails);","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yuanz03"},"content":"            return new ShadowCommand(ShadowCommand.CommandType.FIND, requestDetails);","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yuanz03"},"content":"        case \"todo\":","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yuanz03"},"content":"            validateNonEmptyRequest(requestDetails, \"todo\");","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yuanz03"},"content":"            return new ShadowCommand(ShadowCommand.CommandType.TODO, requestDetails);","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yuanz03"},"content":"        case \"deadline\":","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yuanz03"},"content":"            return parseDeadline(requestDetails);","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yuanz03"},"content":"        case \"event\":","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yuanz03"},"content":"            return parseEvent(requestDetails);","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yuanz03"},"content":"        default:","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yuanz03"},"content":"            return new ShadowCommand(ShadowCommand.CommandType.UNKNOWN);","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yuanz03"},"content":"     * Parses Deadline command details and returns the corresponding ShadowCommand instance.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yuanz03"},"content":"     * Expects the command details to include a task description, the \"/by\" keyword,","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yuanz03"},"content":"     * and a due date in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yuanz03"},"content":"     * @param requestDetails The trailing input after the deadline keyword.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yuanz03"},"content":"     * @return A ShadowCommand instance representing the Deadline details.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yuanz03"},"content":"     * @throws ShadowException If the requestDetails is syntactically invalid.","lastModifiedDate":"2025-09-15T21:40:41","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yuanz03"},"content":"    private static ShadowCommand parseDeadline(String requestDetails) throws ShadowException {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yuanz03"},"content":"        assert requestDetails !\u003d null : \"deadline requestDetails should not be null\";","lastModifiedDate":"2025-09-08T18:44:53","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yuanz03"},"content":"        validateNonEmptyRequest(requestDetails, \"deadline\");","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yuanz03"},"content":"        validateUniqueMarkerPresence(requestDetails, \"/by\", DEADLINE_FORMAT);","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-15T21:40:41","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yuanz03"},"content":"        String[] deadlineDetails \u003d requestDetails.split(\"/by\");","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yuanz03"},"content":"        validateNonEmptyDate(deadlineDetails, 1, \"due\", DEADLINE_FORMAT);","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yuanz03"},"content":"            String formattedDueDate \u003d validateAndFormatDateRange(deadlineDetails[1].trim())[0];","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yuanz03"},"content":"            return new ShadowCommand(ShadowCommand.CommandType.DEADLINE, deadlineDetails[0].trim(), formattedDueDate);","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yuanz03"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yuanz03"},"content":"            throw new ShadowException(\"Invalid due date! \" + DEADLINE_FORMAT);","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yuanz03"},"content":"     * Parses Event command details and returns the corresponding ShadowCommand instance.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yuanz03"},"content":"     * Expects the command details to include a task description, the \"/from\" and \"/to\" keywords,","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yuanz03"},"content":"     * a start date in the format \"d/M/yyyy HHmm\", and an end date in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yuanz03"},"content":"     * @param requestDetails The trailing input after the event keyword.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yuanz03"},"content":"     * @return A ShadowCommand instance representing the Event details.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yuanz03"},"content":"     * @throws ShadowException If the requestDetails is syntactically invalid.","lastModifiedDate":"2025-09-15T21:40:41","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yuanz03"},"content":"    private static ShadowCommand parseEvent(String requestDetails) throws ShadowException {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yuanz03"},"content":"        assert requestDetails !\u003d null : \"event requestDetails should not be null\";","lastModifiedDate":"2025-09-08T18:44:53","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yuanz03"},"content":"        validateNonEmptyRequest(requestDetails, \"event\");","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yuanz03"},"content":"        validateUniqueMarkerPresence(requestDetails, \"/from\", EVENT_FORMAT);","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yuanz03"},"content":"        validateUniqueMarkerPresence(requestDetails, \"/to\", EVENT_FORMAT);","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-15T21:40:41","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yuanz03"},"content":"        String[] eventDetails \u003d requestDetails.split(\"/from\");","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yuanz03"},"content":"        String[] eventTimings \u003d eventDetails[1].split(\"/to\");","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yuanz03"},"content":"        validateNonEmptyDate(eventTimings, 0, \"start\", EVENT_FORMAT);","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yuanz03"},"content":"        validateNonEmptyDate(eventTimings, 1, \"end\", EVENT_FORMAT);","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yuanz03"},"content":"            String[] formattedDates \u003d validateAndFormatDateRange(eventTimings[0].trim(), eventTimings[1].trim());","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yuanz03"},"content":"            return new ShadowCommand(ShadowCommand.CommandType.EVENT, eventDetails[0].trim(), formattedDates[0],","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yuanz03"},"content":"                    formattedDates[1]);","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yuanz03"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yuanz03"},"content":"            throw new ShadowException(\"Invalid start or end date! \" + EVENT_FORMAT);","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-09-15T21:40:41","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-15T21:40:41","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yuanz03"},"content":"     * Validates that exactly one keyword has been supplied for the FIND command.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yuanz03"},"content":"     * @param keywordCount The number of keywords in the FIND command.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yuanz03"},"content":"     * @param details The trailing input after the find keyword.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yuanz03"},"content":"     * @throws ShadowException If the keyword is missing or if more than one keyword is provided.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yuanz03"},"content":"    private static void validateSingleKeyword(int keywordCount, String details) throws ShadowException {","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yuanz03"},"content":"        if (details.isEmpty()) {","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yuanz03"},"content":"            throw new ShadowException(\"Invalid request! Please provide a keyword for your find.\\n\");","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yuanz03"},"content":"        if (keywordCount \u003e 1) {","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yuanz03"},"content":"            throw new ShadowException(\"Invalid request! Please provide only ONE keyword for your find.\\n\");","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-15T21:40:41","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-15T21:40:41","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yuanz03"},"content":"     * Validates that a non-empty description exists for TODO, DEADLINE, and EVENT commands.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yuanz03"},"content":"     * @param details The trailing input after the todo, deadline, or event keyword.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yuanz03"},"content":"     * @param taskType The type of the task being validated.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yuanz03"},"content":"     * @throws ShadowException If the task description is empty.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yuanz03"},"content":"    private static void validateNonEmptyRequest(String details, String taskType) throws ShadowException {","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yuanz03"},"content":"        if (details.isEmpty()) {","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yuanz03"},"content":"            throw new ShadowException(\"Invalid request! Please provide a description for your \" + taskType + \".\\n\");","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-15T21:40:41","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-15T21:40:41","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yuanz03"},"content":"     * Validates that the given marker appears exactly once in the task details for DEADLINE and EVENT commands.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yuanz03"},"content":"     * @param details The trailing input after the deadline or event keyword.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yuanz03"},"content":"     * @param marker The date marker of the task (\"/by\", \"/from\", \"/to\").","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yuanz03"},"content":"     * @param msg The error message to include in the exception thrown when the marker is missing or duplicated.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yuanz03"},"content":"     * @throws ShadowException If the marker is not present or appears more than once.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yuanz03"},"content":"    private static void validateUniqueMarkerPresence(String details, String marker, String msg) throws ShadowException {","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yuanz03"},"content":"        if (!details.contains(marker)) {","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yuanz03"},"content":"            throw new ShadowException(\"Invalid format! \" + msg);","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"yuanz03"},"content":"        if (details.indexOf(marker) !\u003d details.lastIndexOf(marker)) {","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"yuanz03"},"content":"            throw new ShadowException(\"Duplicate \" + marker + \"found! \" + msg);","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"yuanz03"},"content":"     * Validates that the appropriate date exists for DEADLINE and EVENT commands.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"yuanz03"},"content":"     * @param data The parts of the task details separated by the date markers.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"yuanz03"},"content":"     * @param index The position in the array where the appropriate date should be found.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"yuanz03"},"content":"     * @param type The type of the date being validated.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"yuanz03"},"content":"     * @param msg The error message to include in the exception thrown when the date is missing.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"yuanz03"},"content":"     * @throws ShadowException If the expected date is missing.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"yuanz03"},"content":"    private static void validateNonEmptyDate(String[] data, int index, String type, String msg) throws ShadowException {","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"yuanz03"},"content":"        if (data.length \u003c\u003d index || data[index].trim().isEmpty()) {","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"yuanz03"},"content":"            throw new ShadowException(\"Missing \" + type + \" date! \" + msg);","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-09-15T22:23:43","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-15T22:23:43","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-15T22:23:43","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"yuanz03"},"content":"     * Returns a String array containing the formatted timestamp(s) for the given input timestamp(s).","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"yuanz03"},"content":"     * Array length is 1 for a single deadline due date, or 2 for an event start and end date.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"yuanz03"},"content":"     * If given two timestamps, validate that they form a valid chronological range.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"yuanz03"},"content":"     * This helper function converts the given timestamp using the DateTimeFormatter class.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"yuanz03"},"content":"     * @param timestamps One or two timestamps in \"d/M/yyyy HHmm\" format.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"yuanz03"},"content":"     * @return An array of formatted timestamps in \"MMM d yyyy HH:mm\" format.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"yuanz03"},"content":"     * @throws ShadowException If two timestamps are supplied and the end date is before the start date.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"yuanz03"},"content":"    // Solution below inspired from a ChatGPT example on how to use varargs and return a String array","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"yuanz03"},"content":"    private static String[] validateAndFormatDateRange(String... timestamps) throws ShadowException {","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"yuanz03"},"content":"        assert timestamps !\u003d null : \"timestamps should not be null\";","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"yuanz03"},"content":"        DateTimeFormatter taskInputFormatter \u003d DateTimeFormatter.ofPattern(INPUT_DATE_PATTERN);","lastModifiedDate":"2025-09-14T14:53:12","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"yuanz03"},"content":"        DateTimeFormatter taskOutputFormatter \u003d DateTimeFormatter.ofPattern(OUTPUT_DATE_PATTERN);","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"yuanz03"},"content":"        if (timestamps.length \u003d\u003d 1) {","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"yuanz03"},"content":"            LocalDateTime dueDate \u003d LocalDateTime.parse(timestamps[0], taskInputFormatter);","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"yuanz03"},"content":"            return new String[] { dueDate.format(taskOutputFormatter) };","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"yuanz03"},"content":"        } else if (timestamps.length \u003d\u003d 2) {","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"yuanz03"},"content":"            LocalDateTime startDate \u003d LocalDateTime.parse(timestamps[0], taskInputFormatter);","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"yuanz03"},"content":"            LocalDateTime endDate \u003d LocalDateTime.parse(timestamps[1], taskInputFormatter);","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"yuanz03"},"content":"            if (endDate.isBefore(startDate)) {","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"yuanz03"},"content":"                throw new ShadowException(\"Invalid event dates! Start date must be before end date!\\n\");","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"yuanz03"},"content":"            }","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"yuanz03"},"content":"            return new String[] { startDate.format(taskOutputFormatter), endDate.format(taskOutputFormatter) };","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"yuanz03"},"content":"        } else {","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"yuanz03"},"content":"            throw new IllegalArgumentException(\"validateAndFormatDateRange method expects only 1 or 2 timestamps!\\n\");","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-09-16T00:50:44","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"yuanz03"},"content":"     * Returns an integer corresponding to the given numeric String.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"yuanz03"},"content":"     * This helper function converts the given String into an integer used for TaskList indexing.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"yuanz03"},"content":"     * @param index The String representing a numeric index.","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"yuanz03"},"content":"     * @return The parsed integer index.","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"yuanz03"},"content":"     * @throws ShadowException If the given String is not a valid integer representation.","lastModifiedDate":"2025-09-16T01:58:54","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T16:04:41","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"yuanz03"},"content":"    private static int convertStringToIndex(String index) throws ShadowException {","lastModifiedDate":"2025-09-14T14:53:12","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"yuanz03"},"content":"        // Solution below inspired from a ChatGPT example on how to use parseInt to convert Strings to numbers","lastModifiedDate":"2025-09-14T14:53:12","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"yuanz03"},"content":"            return Integer.parseInt(index);","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"yuanz03"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"yuanz03"},"content":"            throw new ShadowException(\"Invalid task index! Please provide a numeric index for your request!\\n\");","lastModifiedDate":"2025-09-09T00:41:45","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"yuanz03"},"content":"}","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false}],"authorContributionMap":{"yuanz03":233}},{"path":"src/main/java/shadowbuddy/app/ShadowUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanz03"},"content":"package shadowbuddy.app;","lastModifiedDate":"2025-08-24T20:56:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T20:56:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanz03"},"content":"import shadowbuddy.taskmodels.Task;","lastModifiedDate":"2025-08-24T20:56:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanz03"},"content":"import shadowbuddy.taskmodels.TaskList;","lastModifiedDate":"2025-09-01T13:11:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T20:56:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanz03"},"content":"/**","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanz03"},"content":" * Provides simple messages for user interaction with the chatbot.","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanz03"},"content":" * The ShadowUi class encapsulates all messages displayed to the user, such as greetings, farewells,","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanz03"},"content":" * and task-related confirmations, providing a single platform for handling communication.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanz03"},"content":" */","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanz03"},"content":"public class ShadowUi {","lastModifiedDate":"2025-08-24T20:56:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanz03"},"content":"    public String greetUser() {","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanz03"},"content":"        return \"Hi, I\u0027m Shadow, your personal assistant!\\nWhat can I help you with today?\\n\";","lastModifiedDate":"2025-09-02T19:45:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T23:04:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T23:04:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanz03"},"content":"    public String sayGoodbye() {","lastModifiedDate":"2025-09-02T19:45:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanz03"},"content":"        return \"Goodbye! I\u0027ll be here if you need anything else!\";","lastModifiedDate":"2025-09-14T15:51:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T23:04:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T23:04:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanz03"},"content":"    public String showTaskList(TaskList taskList) {","lastModifiedDate":"2025-09-02T19:45:39","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanz03"},"content":"        return \"Here are the tasks in your list:\\n\" + taskList;","lastModifiedDate":"2025-09-14T15:51:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T20:56:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T20:56:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T16:51:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanz03"},"content":"     * Displays all matching tasks from the given TaskList that match the specified keyword.","lastModifiedDate":"2025-08-27T16:51:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T16:51:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanz03"},"content":"     * @param filteredTaskList The TaskList whose matching tasks will be displayed for the user.","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T16:51:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanz03"},"content":"    public String showMatchingTasks(TaskList filteredTaskList) {","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanz03"},"content":"        return \"Here are the matching tasks in your list:\\n\" + filteredTaskList;","lastModifiedDate":"2025-09-14T15:51:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanz03"},"content":"     * Returns a confirmation message that the given task has been marked as done.","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanz03"},"content":"     * The String representation of the completed task is also displayed.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanz03"},"content":"     * @param task The Task that was marked as done.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanz03"},"content":"    public String showMarkConfirmationMessage(Task task) {","lastModifiedDate":"2025-09-02T19:45:39","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuanz03"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \" + task + \"\\n\";","lastModifiedDate":"2025-09-14T15:51:57","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T20:56:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T20:56:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuanz03"},"content":"     * Returns a confirmation message that the given task has been marked as not done.","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuanz03"},"content":"     * The String representation of the incomplete task is also displayed.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuanz03"},"content":"     * @param task The Task that was marked as not done.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuanz03"},"content":"    public String showUnmarkConfirmationMessage(Task task) {","lastModifiedDate":"2025-09-02T19:45:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuanz03"},"content":"        return \"OK, I\u0027ve marked this task as not done:\\n  \" + task + \"\\n\";","lastModifiedDate":"2025-09-14T15:51:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T20:56:27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T20:56:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yuanz03"},"content":"     * Returns a confirmation message that the given task has been deleted.","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yuanz03"},"content":"     * The String representation of the deleted task and the remaining task count are also displayed.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yuanz03"},"content":"     * @param task The Task that was deleted.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yuanz03"},"content":"     * @param taskCount The number of tasks remaining in the task list.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yuanz03"},"content":"    public String showDeleteConfirmationMessage(Task task, int taskCount) {","lastModifiedDate":"2025-09-02T19:45:39","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yuanz03"},"content":"        return \"Noted. I\u0027ve removed this task:\\n  \" + task + \"\\nNow you have \" + taskCount + \" tasks in the list.\\n\";","lastModifiedDate":"2025-09-14T15:51:57","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T14:15:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yuanz03"},"content":"     * Returns a confirmation message that the given task has been created.","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yuanz03"},"content":"     * The String representation of the created task and the new task count are also displayed.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yuanz03"},"content":"     * @param task The Task that was created.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yuanz03"},"content":"     * @param taskCount The updated number of tasks in the task list.","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-26T23:29:17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yuanz03"},"content":"    public String showTaskCreationMessage(Task task, int taskCount) {","lastModifiedDate":"2025-09-02T19:45:39","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yuanz03"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + task + \"\\nNow you have \" + taskCount + \" tasks in the list.\\n\";","lastModifiedDate":"2025-09-14T15:51:57","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T20:56:27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yuanz03"},"content":"}","lastModifiedDate":"2025-08-24T20:56:27","isFullCredit":false}],"authorContributionMap":{"yuanz03":74}},{"path":"src/main/java/shadowbuddy/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanz03"},"content":"package shadowbuddy.gui;","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanz03"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanz03"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanz03"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-02T18:51:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanz03"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-02T18:51:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanz03"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanz03"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanz03"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanz03"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanz03"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanz03"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanz03"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanz03"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanz03"},"content":"/**","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanz03"},"content":" * Represents a dialog box consisting of the speaker\u0027s face and text label.","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanz03"},"content":" */","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanz03"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanz03"},"content":"    @FXML","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanz03"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanz03"},"content":"    @FXML","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanz03"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanz03"},"content":"     * Initializes a DialogBox instance with the given message text and avatar image.","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanz03"},"content":"     * @param message The content of the chatbot or user response.","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanz03"},"content":"     * @param avatar The profile image representing the chatbot or user.","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanz03"},"content":"    private DialogBox(String message, Image avatar) {","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanz03"},"content":"            FXMLLoader loader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanz03"},"content":"            loader.setController(this);","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanz03"},"content":"            loader.setRoot(this);","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanz03"},"content":"            loader.load();","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanz03"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanz03"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuanz03"},"content":"        dialog.setText(message);","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuanz03"},"content":"        displayPicture.setImage(avatar);","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T18:51:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-09-02T18:51:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuanz03"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-02T18:51:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-09-02T18:51:43","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuanz03"},"content":"    private void flip() {","lastModifiedDate":"2025-09-02T18:51:43","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuanz03"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-02T18:51:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuanz03"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yuanz03"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yuanz03"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yuanz03"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-09-14T15:49:54","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-02T18:51:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T18:51:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yuanz03"},"content":"     * Applies visual styling to the dialog box based on the given command type.","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yuanz03"},"content":"     * @param commandType The command type String used to determine the styling to apply.","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yuanz03"},"content":"    private void changeDialogStyle(String commandType) {","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yuanz03"},"content":"        // Solution below inspired from a ChatGPT example on how to use multiple labels in a single switch case","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yuanz03"},"content":"        switch (commandType) {","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yuanz03"},"content":"        case \"TODO\", \"DEADLINE\", \"EVENT\":","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yuanz03"},"content":"            dialog.getStyleClass().add(\"add-label\");","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yuanz03"},"content":"            break;","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yuanz03"},"content":"        case \"MARK\", \"UNMARK\":","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yuanz03"},"content":"            dialog.getStyleClass().add(\"marked-label\");","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yuanz03"},"content":"            break;","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yuanz03"},"content":"        case \"DELETE\":","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yuanz03"},"content":"            dialog.getStyleClass().add(\"delete-label\");","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yuanz03"},"content":"            break;","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yuanz03"},"content":"        case \"UNKNOWN\":","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yuanz03"},"content":"            dialog.getStyleClass().add(\"error-label\");","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yuanz03"},"content":"            break;","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yuanz03"},"content":"        default:","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yuanz03"},"content":"            // Do nothing","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yuanz03"},"content":"     * Creates a DialogBox instance that represents the user.","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yuanz03"},"content":"     * @param message The content of the user response.","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yuanz03"},"content":"     * @param avatar The profile image representing the user.","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yuanz03"},"content":"     * @return A DialogBox configured for the user displayed on the right.","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yuanz03"},"content":"    public static DialogBox getUserDialog(String message, Image avatar) {","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yuanz03"},"content":"        return new DialogBox(message, avatar);","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-02T18:51:43","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T18:51:43","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yuanz03"},"content":"     * Creates a DialogBox instance that represents the chatbot.","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yuanz03"},"content":"     * An overloaded factory method of DialogBox that takes a greeting message and chatbot image.","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yuanz03"},"content":"     * @param message The content of the chatbot response.","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yuanz03"},"content":"     * @param avatar The profile image representing the chatbot.","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yuanz03"},"content":"     * @return A DialogBox configured for the chatbot displayed on the left.","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yuanz03"},"content":"    public static DialogBox getShadowDialog(String message, Image avatar) {","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yuanz03"},"content":"        var shadowDialog \u003d new DialogBox(message, avatar);","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yuanz03"},"content":"        shadowDialog.flip();","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yuanz03"},"content":"        return shadowDialog;","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-02T18:51:43","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yuanz03"},"content":"     * Creates a DialogBox instance that represents the chatbot.","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yuanz03"},"content":"     * An overloaded factory method of DialogBox that takes a greeting message, chatbot image, and command type.","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yuanz03"},"content":"     * @param message The content of the chatbot response.","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yuanz03"},"content":"     * @param avatar The profile image representing the chatbot.","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yuanz03"},"content":"     * @param commandType The type of the user command to customize the dialog style.","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yuanz03"},"content":"     * @return A DialogBox configured for the chatbot displayed on the left.","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yuanz03"},"content":"    public static DialogBox getShadowDialog(String message, Image avatar, String commandType) {","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yuanz03"},"content":"        var shadowDialog \u003d new DialogBox(message, avatar);","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yuanz03"},"content":"        shadowDialog.flip();","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yuanz03"},"content":"        shadowDialog.changeDialogStyle(commandType);","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yuanz03"},"content":"        return shadowDialog;","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yuanz03"},"content":"}","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false}],"authorContributionMap":{"yuanz03":122}},{"path":"src/main/java/shadowbuddy/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanz03"},"content":"package shadowbuddy.gui;","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanz03"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanz03"},"content":"/**","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanz03"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanz03"},"content":" */","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanz03"},"content":"public class Launcher {","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanz03"},"content":"     * Provides the main entry point of the Shadow chatbot application.","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanz03"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanz03"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanz03"},"content":"}","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false}],"authorContributionMap":{"yuanz03":15}},{"path":"src/main/java/shadowbuddy/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanz03"},"content":"package shadowbuddy.gui;","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanz03"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanz03"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanz03"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanz03"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanz03"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanz03"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanz03"},"content":"import shadowbuddy.app.Shadow;","lastModifiedDate":"2025-09-02T18:51:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanz03"},"content":"/**","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanz03"},"content":" * Initializes the core application state and loads the main window UI.","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanz03"},"content":" */","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanz03"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanz03"},"content":"    /** Shadow instance initialized with a predefined storage file path */","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanz03"},"content":"    private final Shadow shadow \u003d new Shadow(\"./data/database.txt\");","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanz03"},"content":"     * Starts the JavaFX application by loading the main FXML and injecting the Shadow object into its controller.","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanz03"},"content":"     * @param stage The primary stage for this application, onto which the application scene can be set.","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanz03"},"content":"    @Override","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanz03"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanz03"},"content":"            FXMLLoader loader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanz03"},"content":"            AnchorPane root \u003d loader.load();","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanz03"},"content":"            Scene scene \u003d new Scene(root);","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanz03"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanz03"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-09-14T15:21:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanz03"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-09-14T15:21:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanz03"},"content":"            loader.\u003cMainWindow\u003egetController().setShadow(shadow);","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanz03"},"content":"            stage.show();","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanz03"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanz03"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanz03"},"content":"}","lastModifiedDate":"2025-09-02T18:26:33","isFullCredit":false}],"authorContributionMap":{"yuanz03":39}},{"path":"src/main/java/shadowbuddy/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanz03"},"content":"package shadowbuddy.gui;","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanz03"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanz03"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanz03"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanz03"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanz03"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanz03"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanz03"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanz03"},"content":"import shadowbuddy.app.Shadow;","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanz03"},"content":"/**","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanz03"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanz03"},"content":" */","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanz03"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanz03"},"content":"    @FXML","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanz03"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanz03"},"content":"    @FXML","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanz03"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanz03"},"content":"    @FXML","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanz03"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanz03"},"content":"    @FXML","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanz03"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanz03"},"content":"    /** Shadow chatbot instance used to generate responses */","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanz03"},"content":"    private Shadow shadow;","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanz03"},"content":"    /** Avatar profile image displayed for the user */","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanz03"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2025-09-15T19:22:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanz03"},"content":"    /** Avatar profile image displayed for the chatbot */","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanz03"},"content":"    private final Image chatbotImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Shadow.png\"));","lastModifiedDate":"2025-09-15T19:22:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanz03"},"content":"    @FXML","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanz03"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanz03"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanz03"},"content":"     * Injects the Shadow instance and displays the chatbot\u0027s greeting in a default dialog container.","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanz03"},"content":"     * Uses the overloaded DialogBox factory method that takes a greeting message and chatbot image.","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-09-03T00:34:50","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuanz03"},"content":"    public void setShadow(Shadow shadow) {","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuanz03"},"content":"        this.shadow \u003d shadow;","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuanz03"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-02T20:31:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuanz03"},"content":"                DialogBox.getShadowDialog(shadow.startShadowSession(), chatbotImage)","lastModifiedDate":"2025-09-08T23:15:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuanz03"},"content":"        );","lastModifiedDate":"2025-09-02T20:31:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuanz03"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Shadow\u0027s reply.","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuanz03"},"content":"     * Appends both dialog boxes to the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuanz03"},"content":"     * Uses the overloaded DialogBox factory method that takes a greeting message, chatbot image, and command type.","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yuanz03"},"content":"    @FXML","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yuanz03"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yuanz03"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yuanz03"},"content":"        String response \u003d shadow.getResponse(input);","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yuanz03"},"content":"        String commandType \u003d shadow.getCommandType();","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yuanz03"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yuanz03"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yuanz03"},"content":"                DialogBox.getShadowDialog(response, chatbotImage, commandType)","lastModifiedDate":"2025-09-15T18:40:30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yuanz03"},"content":"        );","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yuanz03"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yuanz03"},"content":"}","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false}],"authorContributionMap":{"yuanz03":64}},{"path":"src/main/java/shadowbuddy/services/ShadowException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanz03"},"content":"package shadowbuddy.services;","lastModifiedDate":"2025-08-19T13:36:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-19T13:36:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanz03"},"content":"/**","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanz03"},"content":" * Represents a Checked Exception for raising errors in Shadow chatbot.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanz03"},"content":" * The ShadowException class wraps an error message and is thrown when an error occurs in Shadow.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanz03"},"content":" */","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanz03"},"content":"public class ShadowException extends Exception {","lastModifiedDate":"2025-08-19T13:36:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanz03"},"content":"     * Initializes a ShadowException instance with the given String message.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanz03"},"content":"     * @param message The error message describing the encountered exception.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanz03"},"content":"    public ShadowException(String message) {","lastModifiedDate":"2025-08-19T13:36:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanz03"},"content":"        super(message);","lastModifiedDate":"2025-08-19T13:36:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-19T13:36:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanz03"},"content":"}","lastModifiedDate":"2025-08-19T13:36:58","isFullCredit":false}],"authorContributionMap":{"yuanz03":16}},{"path":"src/main/java/shadowbuddy/storage/ShadowStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanz03"},"content":"package shadowbuddy.storage;","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanz03"},"content":"import java.io.File;","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanz03"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanz03"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanz03"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanz03"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanz03"},"content":"import shadowbuddy.taskmodels.Deadline;","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanz03"},"content":"import shadowbuddy.taskmodels.Event;","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanz03"},"content":"import shadowbuddy.taskmodels.Task;","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanz03"},"content":"import shadowbuddy.taskmodels.TaskList;","lastModifiedDate":"2025-08-27T18:22:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanz03"},"content":"import shadowbuddy.taskmodels.Todo;","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanz03"},"content":"/**","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanz03"},"content":" * Manages saving, updating, and loading the chatbot\u0027s task list from a file.","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanz03"},"content":" * The ShadowStorage class wraps a file path and provides methods to create the database","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanz03"},"content":" * file, output its contents, write a TaskList to it, and load tasks from it.","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanz03"},"content":" */","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanz03"},"content":"public class ShadowStorage {","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanz03"},"content":"    protected final String filePath;","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanz03"},"content":"    protected final File databaseFile;","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanz03"},"content":"     * Initializes a ShadowStorage instance with the given file path.","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanz03"},"content":"     * Creates a ShadowStorage instance that initializes a File instance with the","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanz03"},"content":"     * specified file path and uses it to store, write, and retrieve tasks.","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanz03"},"content":"    public ShadowStorage(String filePath) {","lastModifiedDate":"2025-08-24T23:04:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanz03"},"content":"        assert filePath !\u003d null : \"filePath should not be null\";","lastModifiedDate":"2025-09-08T18:44:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanz03"},"content":"        assert !filePath.trim().isEmpty() : \"filePath should not be empty\";","lastModifiedDate":"2025-09-08T18:44:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanz03"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-24T23:04:53","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanz03"},"content":"        this.databaseFile \u003d new File(this.filePath);","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanz03"},"content":"     * Creates the database file and its parent directories if they do not already exist.","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanz03"},"content":"     * If any of the parent directories are missing, they will be created.","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanz03"},"content":"     * If the database file did not already exist, a new database file will be created.","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuanz03"},"content":"     * Otherwise, a message is displayed to indicate that the existing task list will be displayed.","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuanz03"},"content":"     * @return A String describing the file operation performed.","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuanz03"},"content":"     * @throws IOException If creating the database file fails.","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuanz03"},"content":"    public String createDatabase() throws IOException {","lastModifiedDate":"2025-09-02T19:45:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuanz03"},"content":"        File parentFile \u003d this.databaseFile.getParentFile();","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuanz03"},"content":"        // Statement below inspired from a ChatGPT example on creating a directory when it is missing","lastModifiedDate":"2025-09-14T14:53:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuanz03"},"content":"        boolean isFolderCreated \u003d parentFile !\u003d null \u0026\u0026 parentFile.mkdirs();","lastModifiedDate":"2025-09-14T14:53:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuanz03"},"content":"        if (this.databaseFile.createNewFile()) {","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuanz03"},"content":"            return isFolderCreated","lastModifiedDate":"2025-09-03T01:08:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yuanz03"},"content":"                    ? \"The relevant folder did not exist! The database has now been created for you.\\n\"","lastModifiedDate":"2025-09-03T01:08:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yuanz03"},"content":"                    : \"No task list found! A new one has been created for you.\\n\";","lastModifiedDate":"2025-09-03T01:08:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yuanz03"},"content":"        } else {","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yuanz03"},"content":"            return \"Here is your current task list: \";","lastModifiedDate":"2025-09-02T19:45:39","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yuanz03"},"content":"     * Returns the tasks stored in the database file to the screen.","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yuanz03"},"content":"     * A Scanner is used to read each line from the database file.","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yuanz03"},"content":"     * Each input line becomes a numbered entry in the returned String.","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yuanz03"},"content":"     * A trailing blank line is added after the file contents.","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yuanz03"},"content":"     * @return A String containing the entire task list read from the database file.","lastModifiedDate":"2025-09-02T23:22:34","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yuanz03"},"content":"     * @throws FileNotFoundException If the database file cannot be found or read.","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yuanz03"},"content":"    public String outputDatabase() throws FileNotFoundException {","lastModifiedDate":"2025-09-02T20:31:22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yuanz03"},"content":"        Scanner fileScanner \u003d new Scanner(this.databaseFile);","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yuanz03"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-02T20:31:22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yuanz03"},"content":"        int taskIndex \u003d 1;","lastModifiedDate":"2025-09-02T20:31:22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T20:31:22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yuanz03"},"content":"        while (fileScanner.hasNextLine()) {","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yuanz03"},"content":"            sb.append(taskIndex).append(\". \").append(fileScanner.nextLine()).append(\"\\n\");","lastModifiedDate":"2025-09-02T20:31:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yuanz03"},"content":"            taskIndex++;","lastModifiedDate":"2025-09-02T20:31:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yuanz03"},"content":"        fileScanner.close();","lastModifiedDate":"2025-09-09T01:38:24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yuanz03"},"content":"        sb.append(\"\\n\");","lastModifiedDate":"2025-09-02T20:31:22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yuanz03"},"content":"        return sb.toString();","lastModifiedDate":"2025-09-02T20:31:22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yuanz03"},"content":"     * Writes the given TaskList to the database file, overwriting any existing contents.","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yuanz03"},"content":"     * A FileWriter instance is created using the filePath field.","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yuanz03"},"content":"     * Each task in the TaskList is formatted with the private helper method formatTask,","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yuanz03"},"content":"     * and written to the database file on a separate line.","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yuanz03"},"content":"     * @param taskList The TaskList whose tasks will be saved to the database file.","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yuanz03"},"content":"     * @throws IOException If the database file cannot be written to.","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yuanz03"},"content":"    public void writeToDatabase(TaskList taskList) throws IOException {","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yuanz03"},"content":"        assert taskList !\u003d null : \"taskList should not be null\";","lastModifiedDate":"2025-09-08T18:44:53","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yuanz03"},"content":"        FileWriter taskWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yuanz03"},"content":"        for (int i \u003d 0; i \u003c taskList.getLength(); i++) {","lastModifiedDate":"2025-08-27T17:34:48","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yuanz03"},"content":"            Task task \u003d taskList.getTask(i + 1);","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yuanz03"},"content":"            taskWriter.write(formatTask(task) + \"\\n\");","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yuanz03"},"content":"        taskWriter.close();","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yuanz03"},"content":"     * Loads tasks from the database file into the given TaskList.","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yuanz03"},"content":"     * If the database file does not exist, the method will return early.","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yuanz03"},"content":"     * Each line from the database file is split at the \"|\" symbols, and each segment is","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yuanz03"},"content":"     * trimmed of whitespace. The resulting String data is then converted into a Task instance","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yuanz03"},"content":"     * using the private helper method createTask, and appended to the given task list.","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yuanz03"},"content":"     * @param taskList The TaskList to populate with tasks read from the database file.","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yuanz03"},"content":"     * @throws FileNotFoundException If the database file cannot be found or read.","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yuanz03"},"content":"    public void loadDatabase(TaskList taskList) throws FileNotFoundException {","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yuanz03"},"content":"        assert taskList !\u003d null : \"taskList should not be null\";","lastModifiedDate":"2025-09-08T18:44:53","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yuanz03"},"content":"        if (!this.databaseFile.exists()) {","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yuanz03"},"content":"            return;","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yuanz03"},"content":"        Scanner fileScanner \u003d new Scanner(this.databaseFile);","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yuanz03"},"content":"        while (fileScanner.hasNextLine()) {","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yuanz03"},"content":"            // Statement below inspired from a ChatGPT example on how to split strings on the \"|\" character","lastModifiedDate":"2025-09-14T14:53:12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yuanz03"},"content":"            String[] taskDetails \u003d fileScanner.nextLine().split(\"\\\\|\");","lastModifiedDate":"2025-09-14T14:53:12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-14T14:53:12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yuanz03"},"content":"            for (int i \u003d 0; i \u003c taskDetails.length; i++) {","lastModifiedDate":"2025-08-27T17:50:22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yuanz03"},"content":"                taskDetails[i] \u003d taskDetails[i].trim();","lastModifiedDate":"2025-08-27T17:50:22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yuanz03"},"content":"            }","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-27T19:18:08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yuanz03"},"content":"            Task currentTask \u003d createTask(taskDetails);","lastModifiedDate":"2025-08-27T19:18:08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yuanz03"},"content":"            taskList.addTask(currentTask);","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yuanz03"},"content":"        fileScanner.close();","lastModifiedDate":"2025-09-09T01:38:24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yuanz03"},"content":"     * Returns a Task created from the given String array of database task data.","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yuanz03"},"content":"     * @param taskDetails The String array of task information obtained from the database file.","lastModifiedDate":"2025-08-27T19:18:08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yuanz03"},"content":"     * @return A Task representing the given task data.","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yuanz03"},"content":"    private Task createTask(String[] taskDetails) {","lastModifiedDate":"2025-08-27T19:18:08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yuanz03"},"content":"        assert taskDetails !\u003d null : \"taskDetails should not be null\";","lastModifiedDate":"2025-09-08T18:44:53","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yuanz03"},"content":"        String taskType \u003d taskDetails[0];","lastModifiedDate":"2025-08-27T17:50:22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yuanz03"},"content":"        boolean isTaskDone \u003d taskDetails[1].equals(\"1\");","lastModifiedDate":"2025-08-27T17:50:22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yuanz03"},"content":"        String taskDescription \u003d taskDetails[2];","lastModifiedDate":"2025-08-27T17:50:22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yuanz03"},"content":"        Task currentTask;","lastModifiedDate":"2025-09-09T01:38:24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yuanz03"},"content":"        switch (taskType) {","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yuanz03"},"content":"        case \"T\":","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yuanz03"},"content":"            currentTask \u003d new Todo(taskDescription);","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yuanz03"},"content":"            break;","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yuanz03"},"content":"        case \"D\":","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yuanz03"},"content":"            currentTask \u003d new Deadline(taskDescription, taskDetails[3]);","lastModifiedDate":"2025-08-27T17:50:22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yuanz03"},"content":"            break;","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yuanz03"},"content":"        case \"E\":","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yuanz03"},"content":"            String[] eventTimings \u003d taskDetails[3].split(\"-\");","lastModifiedDate":"2025-08-27T17:50:22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yuanz03"},"content":"            currentTask \u003d new Event(taskDescription, eventTimings[0], eventTimings[1]);","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yuanz03"},"content":"            break;","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yuanz03"},"content":"        default:","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yuanz03"},"content":"            throw new IllegalArgumentException(\"Unknown task type: \" + taskType);","lastModifiedDate":"2025-09-09T01:38:24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yuanz03"},"content":"        if (isTaskDone) {","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yuanz03"},"content":"            currentTask.markAsDone();","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yuanz03"},"content":"        return currentTask;","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T13:15:29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"yuanz03"},"content":"     * Returns a formatted String representation of the given Task.","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"yuanz03"},"content":"     * The format of the returned String representation is:","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"yuanz03"},"content":"     * \"type | status | description | additional dates and timings (if present).\"","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yuanz03"},"content":"     * @param task The specified Task instance to be formatted for storage.","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"yuanz03"},"content":"     * @return A single-line String representing the given Task.","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-26T20:41:13","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"yuanz03"},"content":"    private String formatTask(Task task) {","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"yuanz03"},"content":"        assert task !\u003d null : \"task should not be null\";","lastModifiedDate":"2025-09-08T18:44:53","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"yuanz03"},"content":"        String taskStatus \u003d (task.getStatusIcon().equalsIgnoreCase(\"X\")) ? \"1\" : \"0\";","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"yuanz03"},"content":"        // Solution below inspired from a ChatGPT example on handling multiple object types in a single conditional","lastModifiedDate":"2025-09-14T14:53:12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"yuanz03"},"content":"        if (task instanceof Todo todo) {","lastModifiedDate":"2025-09-14T14:53:12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"yuanz03"},"content":"            return \"T | \" + taskStatus + \" | \" + todo.getDescription();","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"yuanz03"},"content":"        } else if (task instanceof Deadline deadline) {","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"yuanz03"},"content":"            return \"D | \" + taskStatus + \" | \" + deadline.getDescription() + \" | \" + deadline.getDueDate();","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"yuanz03"},"content":"        } else if (task instanceof Event event) {","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"yuanz03"},"content":"            return \"E | \" + taskStatus + \" | \" + event.getDescription() + \" | \" + event.getStartDate()","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"yuanz03"},"content":"                    + \"-\" + event.getEndDate();","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"yuanz03"},"content":"        } else {","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"yuanz03"},"content":"            throw new IllegalArgumentException(\"Unknown task: \" + task);","lastModifiedDate":"2025-09-09T01:38:24","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"yuanz03"},"content":"}","lastModifiedDate":"2025-08-24T00:41:38","isFullCredit":false}],"authorContributionMap":{"yuanz03":190}},{"path":"src/main/java/shadowbuddy/taskmodels/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanz03"},"content":"package shadowbuddy.taskmodels;","lastModifiedDate":"2025-08-18T21:47:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T21:47:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanz03"},"content":"/**","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanz03"},"content":" * Models a Deadline task with a description, completion state, and due date.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanz03"},"content":" * The Deadline class is a subclass of Task and inherits its functionality.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanz03"},"content":" */","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanz03"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-18T21:47:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanz03"},"content":"    protected String dueDate;","lastModifiedDate":"2025-08-18T21:47:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T21:47:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanz03"},"content":"     * Initializes a Deadline instance with the given description and due date.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanz03"},"content":"     * The new Deadline instance is initially not done.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanz03"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanz03"},"content":"     * @param dueDate The due date associated with the Deadline task.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanz03"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2025-08-18T21:47:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanz03"},"content":"        super(description);","lastModifiedDate":"2025-08-18T21:47:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanz03"},"content":"        assert dueDate !\u003d null : \"dueDate should not be null\";","lastModifiedDate":"2025-09-08T20:53:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanz03"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2025-08-18T21:47:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-18T21:47:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T21:47:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanz03"},"content":"    public String getDueDate() {","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanz03"},"content":"        return this.dueDate;","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanz03"},"content":"     * Returns a String representation of this Deadline.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanz03"},"content":"     * @return A formatted String representation of this Deadline task.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanz03"},"content":"    @Override","lastModifiedDate":"2025-08-18T21:47:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanz03"},"content":"    public String toString() {","lastModifiedDate":"2025-08-18T21:47:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanz03"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.dueDate + \")\";","lastModifiedDate":"2025-08-18T23:28:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-18T21:47:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanz03"},"content":"}","lastModifiedDate":"2025-08-18T21:47:33","isFullCredit":false}],"authorContributionMap":{"yuanz03":36}},{"path":"src/main/java/shadowbuddy/taskmodels/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanz03"},"content":"package shadowbuddy.taskmodels;","lastModifiedDate":"2025-08-18T23:28:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T23:28:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanz03"},"content":"/**","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanz03"},"content":" * Models an Event task with a description, completion state, start date, and end date.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanz03"},"content":" * The Event class is a subclass of Task and inherits its functionality.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanz03"},"content":" */","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanz03"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-18T23:28:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanz03"},"content":"    protected String startDate;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanz03"},"content":"    protected String endDate;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T23:28:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanz03"},"content":"     * Initializes an Event instance with the given description, start date, and end date.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanz03"},"content":"     * The new Event instance is initially not done.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanz03"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanz03"},"content":"     * @param startDate The start date associated with the Event task.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanz03"},"content":"     * @param endDate The end date associated with the Event task.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanz03"},"content":"    public Event(String description, String startDate, String endDate) {","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanz03"},"content":"        super(description);","lastModifiedDate":"2025-08-18T23:28:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanz03"},"content":"        assert startDate !\u003d null : \"startDate should not be null\";","lastModifiedDate":"2025-09-08T20:53:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanz03"},"content":"        assert endDate !\u003d null : \"endDate should not be null\";","lastModifiedDate":"2025-09-08T20:53:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanz03"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanz03"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-18T23:28:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T23:28:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanz03"},"content":"    public String getStartDate() {","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanz03"},"content":"        return this.startDate;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanz03"},"content":"    public String getEndDate() {","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanz03"},"content":"        return this.endDate;","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanz03"},"content":"     * Returns a String representation of this Event.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanz03"},"content":"     * @return A formatted String representation of this Event task.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuanz03"},"content":"    @Override","lastModifiedDate":"2025-08-18T23:28:31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuanz03"},"content":"    public String toString() {","lastModifiedDate":"2025-08-18T23:28:31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuanz03"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.startDate + \" to: \" + this.endDate + \")\";","lastModifiedDate":"2025-08-24T22:22:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-18T23:28:31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuanz03"},"content":"}","lastModifiedDate":"2025-08-18T23:28:31","isFullCredit":false}],"authorContributionMap":{"yuanz03":44}},{"path":"src/main/java/shadowbuddy/taskmodels/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanz03"},"content":"package shadowbuddy.taskmodels;","lastModifiedDate":"2025-08-18T19:16:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanz03"},"content":"/**","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanz03"},"content":" * Represents a generic task with a description and completion state.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanz03"},"content":" * The Task class serves as the base class for the different task types (Todo, Deadline, Event),","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanz03"},"content":" * providing common state handling and String representation.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanz03"},"content":" */","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanz03"},"content":"public class Task {","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanz03"},"content":"    protected String description;","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanz03"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanz03"},"content":"     * Initializes a Task instance with the given description and default not-done state.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanz03"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanz03"},"content":"        assert description !\u003d null : \"description should not be null\";","lastModifiedDate":"2025-09-08T20:53:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanz03"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanz03"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanz03"},"content":"     * Returns a String representation of the task\u0027s completion status.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanz03"},"content":"     * @return \"X\" if the task is completed, otherwise a blank space.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanz03"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanz03"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2025-08-18T23:28:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanz03"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanz03"},"content":"        return this.description;","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-24T11:55:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanz03"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanz03"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanz03"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanz03"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuanz03"},"content":"     * Returns a String representation of this task.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuanz03"},"content":"     * @return A String representation of the task\u0027s status icon and description.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuanz03"},"content":"    @Override","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuanz03"},"content":"    public String toString() {","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuanz03"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuanz03"},"content":"}","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false}],"authorContributionMap":{"yuanz03":51}},{"path":"src/main/java/shadowbuddy/taskmodels/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanz03"},"content":"package shadowbuddy.taskmodels;","lastModifiedDate":"2025-08-24T23:28:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T19:16:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanz03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanz03"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanz03"},"content":"/**","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanz03"},"content":" * Manages an ordered collection of Task instances.","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanz03"},"content":" * The TaskList class provides operations to add, remove, and toggle the completion status of tasks.","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanz03"},"content":" * All methods use 1-based indexing to match the TaskList numbering.","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanz03"},"content":" */","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanz03"},"content":"public class TaskList {","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanz03"},"content":"    protected final ArrayList\u003cTask\u003e storage;","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanz03"},"content":"    protected final HashSet\u003cString\u003e uniqueDescriptions;","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanz03"},"content":"     * Initializes an empty TaskList instance with a pre-allocated capacity of 100 elements.","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanz03"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanz03"},"content":"        this.storage \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanz03"},"content":"        this.uniqueDescriptions \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanz03"},"content":"     * Appends the given task to the end of the TaskList.","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanz03"},"content":"     * @param task The Task to add to the TaskList.","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanz03"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanz03"},"content":"        assert task !\u003d null : \"task should not be null\";","lastModifiedDate":"2025-09-08T20:53:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanz03"},"content":"        this.storage.add(task);","lastModifiedDate":"2025-08-18T21:47:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanz03"},"content":"        this.uniqueDescriptions.add(task.getDescription());","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanz03"},"content":"     * Removes the task at the given 1-based index and returns it.","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanz03"},"content":"     * @param index The 1-based index of the Task to remove.","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanz03"},"content":"     * @return The Task that was removed from the TaskList.","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuanz03"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2025-08-19T14:03:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuanz03"},"content":"        Task deletedTask \u003d this.storage.remove(index - 1);","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuanz03"},"content":"        this.uniqueDescriptions.remove(deletedTask.getDescription());","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuanz03"},"content":"        return deletedTask;","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-19T14:03:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-19T14:03:04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuanz03"},"content":"     * Marks the task at the given 1-based index as done.","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuanz03"},"content":"     * @param index The 1-based index of the Task to mark.","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuanz03"},"content":"    public void markTask(int index) {","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yuanz03"},"content":"        this.storage.get(index - 1).markAsDone();","lastModifiedDate":"2025-08-18T21:47:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yuanz03"},"content":"     * Marks the task at the given 1-based index as not done.","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yuanz03"},"content":"     * @param index The 1-based index of the Task to unmark.","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yuanz03"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yuanz03"},"content":"        this.storage.get(index - 1).markAsNotDone();","lastModifiedDate":"2025-08-18T21:47:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T16:51:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yuanz03"},"content":"     * Returns a TaskList containing only tasks whose descriptions match the given keyword.","lastModifiedDate":"2025-08-27T16:51:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yuanz03"},"content":"     * Iterates through the given TaskList, comparing each task\u0027s description against the","lastModifiedDate":"2025-08-27T16:51:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yuanz03"},"content":"     * given keyword, and stores all matching tasks in a new Tasklist.","lastModifiedDate":"2025-08-27T16:51:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T16:51:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yuanz03"},"content":"     * @param taskList The TaskList to traverse through.","lastModifiedDate":"2025-08-27T16:51:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yuanz03"},"content":"     * @param keyword The keyword to match against task descriptions.","lastModifiedDate":"2025-08-27T16:51:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yuanz03"},"content":"     * @return A new TaskList containing all the matching tasks.","lastModifiedDate":"2025-08-27T16:51:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T16:51:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yuanz03"},"content":"    public TaskList getMatchingTasks(TaskList taskList, String keyword) {","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yuanz03"},"content":"        assert taskList !\u003d null : \"taskList should not be null\";","lastModifiedDate":"2025-09-08T20:53:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yuanz03"},"content":"        assert keyword !\u003d null : \"keyword should not be null\";","lastModifiedDate":"2025-09-08T20:53:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yuanz03"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yuanz03"},"content":"        for (int i \u003d 0; i \u003c taskList.getLength(); i++) {","lastModifiedDate":"2025-08-27T19:18:08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yuanz03"},"content":"            Task task \u003d taskList.getTask(i + 1);","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yuanz03"},"content":"            if (containsKeyword(task.getDescription(), keyword)) {","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yuanz03"},"content":"                matchingTasks.addTask(task);","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yuanz03"},"content":"            }","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yuanz03"},"content":"        return matchingTasks;","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yuanz03"},"content":"     * Returns true when the given task description already exists in the TaskList.","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yuanz03"},"content":"     * @param taskDescription The task description being checked.","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yuanz03"},"content":"     * @return True if a task with the same description already exists; False otherwise.","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yuanz03"},"content":"    public boolean containsDuplicate(String taskDescription) {","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yuanz03"},"content":"        assert taskDescription !\u003d null : \"taskDescription should not be null\";","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yuanz03"},"content":"        return this.uniqueDescriptions.contains(taskDescription);","lastModifiedDate":"2025-09-09T13:52:31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yuanz03"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yuanz03"},"content":"        return this.storage.get(index - 1);","lastModifiedDate":"2025-08-18T21:47:33","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-18T21:47:33","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T21:47:33","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yuanz03"},"content":"    public int getLength() {","lastModifiedDate":"2025-08-27T17:34:48","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yuanz03"},"content":"        return this.storage.size();","lastModifiedDate":"2025-08-18T21:47:33","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T16:51:52","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yuanz03"},"content":"     * Returns true when the given task description contains the specified keyword.","lastModifiedDate":"2025-08-27T16:51:52","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yuanz03"},"content":"     * Partial matches of the keyword are not considered, and comparisons are case-insensitive.","lastModifiedDate":"2025-08-27T16:51:52","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T16:51:52","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yuanz03"},"content":"     * @param description The task description to search through.","lastModifiedDate":"2025-08-27T16:51:52","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yuanz03"},"content":"     * @param keyword The keyword to match against task descriptions.","lastModifiedDate":"2025-08-27T16:51:52","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yuanz03"},"content":"     * @return True if the keyword appears in the description; False otherwise.","lastModifiedDate":"2025-08-27T16:51:52","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T16:51:52","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yuanz03"},"content":"    private boolean containsKeyword(String description, String keyword) {","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yuanz03"},"content":"        assert description !\u003d null : \"description should not be null\";","lastModifiedDate":"2025-09-08T20:53:22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yuanz03"},"content":"        assert keyword !\u003d null : \"keyword should not be null\";","lastModifiedDate":"2025-09-08T20:53:22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yuanz03"},"content":"        String[] descriptionDetails \u003d description.split(\" \");","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yuanz03"},"content":"        //noinspection ForLoopReplaceableByForEach","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yuanz03"},"content":"        for (int i \u003d 0; i \u003c descriptionDetails.length; i++) {","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yuanz03"},"content":"            if (descriptionDetails[i].equalsIgnoreCase(keyword)) {","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yuanz03"},"content":"                return true;","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yuanz03"},"content":"            }","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yuanz03"},"content":"        return false;","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T22:11:46","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yuanz03"},"content":"     * Returns this TaskList as a numbered, formatted String.","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yuanz03"},"content":"     * Each task is rendered on a separate line, prefixed with a 1-based index.","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yuanz03"},"content":"     * @return The String representation of the TaskList.","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T01:45:52","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yuanz03"},"content":"    @Override","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yuanz03"},"content":"    public String toString() {","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yuanz03"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yuanz03"},"content":"        // Solution below inspired from a ChatGPT example on how to use StringBuilder with multiple appends","lastModifiedDate":"2025-09-14T14:53:12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yuanz03"},"content":"        for (int i \u003d 0; i \u003c this.storage.size(); i++) {","lastModifiedDate":"2025-09-14T14:53:12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yuanz03"},"content":"            sb.append(i + 1).append(\". \").append(this.storage.get(i)).append(\"\\n\");","lastModifiedDate":"2025-08-18T23:28:31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yuanz03"},"content":"        return sb.toString();","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yuanz03"},"content":"}","lastModifiedDate":"2025-08-18T19:13:08","isFullCredit":false}],"authorContributionMap":{"yuanz03":141}},{"path":"src/main/java/shadowbuddy/taskmodels/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanz03"},"content":"package shadowbuddy.taskmodels;","lastModifiedDate":"2025-08-18T22:03:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T22:03:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanz03"},"content":"/**","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanz03"},"content":" * Models a Todo task with a description and completion state.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanz03"},"content":" * The Todo class is a subclass of Task and inherits its functionality.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanz03"},"content":" */","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanz03"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-18T22:03:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanz03"},"content":"     * Initializes a Todo instance with the given description.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanz03"},"content":"     * The new Todo instance is initially not done.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanz03"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanz03"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-18T22:03:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanz03"},"content":"        super(description);","lastModifiedDate":"2025-08-18T22:03:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-18T22:03:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-18T22:03:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanz03"},"content":"    /**","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanz03"},"content":"     * Returns a String representation of this Todo.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanz03"},"content":"     *","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanz03"},"content":"     * @return A formatted String representation of this Todo task.","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanz03"},"content":"     */","lastModifiedDate":"2025-08-27T00:44:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanz03"},"content":"    @Override","lastModifiedDate":"2025-08-18T22:03:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanz03"},"content":"    public String toString() {","lastModifiedDate":"2025-08-18T22:03:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanz03"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-18T22:03:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-18T22:03:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanz03"},"content":"}","lastModifiedDate":"2025-08-18T22:03:23","isFullCredit":false}],"authorContributionMap":{"yuanz03":27}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yuanz03"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanz03"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanz03"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanz03"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanz03"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanz03"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanz03"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanz03"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanz03"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanz03"},"content":"         stylesheets\u003d\"@../css/dialog-box.css\"","lastModifiedDate":"2025-09-14T15:49:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanz03"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanz03"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanz03"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanz03"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanz03"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanz03"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanz03"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanz03"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanz03"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanz03"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanz03"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false}],"authorContributionMap":{"yuanz03":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yuanz03"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanz03"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanz03"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanz03"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanz03"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanz03"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanz03"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanz03"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanz03"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanz03"},"content":"            stylesheets\u003d\"@../css/main.css\"","lastModifiedDate":"2025-09-14T15:49:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanz03"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanz03"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanz03"},"content":"            fx:controller\u003d\"shadowbuddy.gui.MainWindow\"\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanz03"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanz03"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanz03"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanz03"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanz03"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanz03"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanz03"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2025-09-14T15:21:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanz03"},"content":"                   AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-14T15:21:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanz03"},"content":"                   AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-09-14T15:21:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanz03"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanz03"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanz03"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanz03"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanz03"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanz03"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanz03"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanz03"},"content":"                text\u003d\"Send\"","lastModifiedDate":"2025-09-14T15:21:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanz03"},"content":"                AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2025-09-14T15:21:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanz03"},"content":"                AnchorPane.rightAnchor\u003d\"0.0\"/\u003e","lastModifiedDate":"2025-09-14T15:21:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanz03"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanz03"},"content":"                    fitToWidth\u003d\"true\"","lastModifiedDate":"2025-09-14T15:21:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanz03"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanz03"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanz03"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuanz03"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuanz03"},"content":"                    vvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-14T15:21:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuanz03"},"content":"                    AnchorPane.bottomAnchor\u003d\"43.0\"","lastModifiedDate":"2025-09-14T15:21:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuanz03"},"content":"                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-14T15:21:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuanz03"},"content":"                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-14T15:21:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuanz03"},"content":"                    AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-09-14T15:21:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuanz03"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuanz03"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuanz03"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuanz03"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuanz03"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuanz03"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yuanz03"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yuanz03"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-02T19:00:47","isFullCredit":false}],"authorContributionMap":{"yuanz03":53}},{"path":"src/test/java/shadowbuddy/app/ShadowControllerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanz03"},"content":"package shadowbuddy.app;","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanz03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanz03"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanz03"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanz03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanz03"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanz03"},"content":"import shadowbuddy.services.ShadowException;","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanz03"},"content":"import shadowbuddy.storage.ShadowStorage;","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanz03"},"content":"public class ShadowControllerTest {","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanz03"},"content":"    private static final ShadowCommand MARK_COMMAND \u003d new ShadowCommand(ShadowCommand.CommandType.MARK, 1);","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanz03"},"content":"    private static final ShadowCommand UNMARK_COMMAND \u003d new ShadowCommand(ShadowCommand.CommandType.UNMARK, 1);","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanz03"},"content":"    private static final ShadowCommand DELETE_COMMAND \u003d new ShadowCommand(ShadowCommand.CommandType.DELETE, 1);","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanz03"},"content":"    private static final ShadowCommand TODO_COMMAND \u003d new ShadowCommand(ShadowCommand.CommandType.TODO,","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanz03"},"content":"            \"borrow book\");","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanz03"},"content":"    private static final ShadowCommand DEADLINE_COMMAND \u003d new ShadowCommand(ShadowCommand.CommandType.DEADLINE,","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanz03"},"content":"            \"return book\", \"Dec 2 2025 18:00\");","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanz03"},"content":"    private static final ShadowCommand EVENT_COMMAND \u003d new ShadowCommand(ShadowCommand.CommandType.EVENT,","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanz03"},"content":"            \"project meeting\", \"Jul 4 2025 16:00\", \"Jul 5 2025 20:00\");","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanz03"},"content":"    private static final ShadowCommand UNKNOWN_COMMAND \u003d new ShadowCommand(ShadowCommand.CommandType.UNKNOWN);","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanz03"},"content":"    // Solution below adapted from a ChatGPT example on how to use @TempDir to create a temporary file for testing","lastModifiedDate":"2025-09-14T14:53:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanz03"},"content":"    public void execute_todoTaskCreation(@TempDir Path tempDir) throws ShadowException {","lastModifiedDate":"2025-09-14T14:53:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanz03"},"content":"        Path tempFile \u003d tempDir.resolve(\"dummy.txt\");","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanz03"},"content":"        ShadowStorage dummyStorage \u003d new ShadowStorage(tempFile.toString());","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanz03"},"content":"        ShadowController dummyController \u003d new ShadowController(dummyStorage);","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanz03"},"content":"        ShadowUi dummyUi \u003d new ShadowUi();","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanz03"},"content":"        dummyController.executeCommand(TODO_COMMAND, dummyUi);","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanz03"},"content":"        assertEquals(\"[T][ ] borrow book\", dummyController.getTaskList().getTask(1).toString());","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanz03"},"content":"    public void execute_deadlineTaskCreation(@TempDir Path tempDir) throws ShadowException {","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuanz03"},"content":"        Path tempFile \u003d tempDir.resolve(\"dummy.txt\");","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuanz03"},"content":"        ShadowStorage dummyStorage \u003d new ShadowStorage(tempFile.toString());","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuanz03"},"content":"        ShadowController dummyController \u003d new ShadowController(dummyStorage);","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuanz03"},"content":"        ShadowUi dummyUi \u003d new ShadowUi();","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuanz03"},"content":"        dummyController.executeCommand(DEADLINE_COMMAND, dummyUi);","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuanz03"},"content":"        assertEquals(\"[D][ ] return book (by: Dec 2 2025 18:00)\",","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuanz03"},"content":"                dummyController.getTaskList().getTask(1).toString());","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuanz03"},"content":"    public void execute_eventTaskCreation(@TempDir Path tempDir) throws ShadowException {","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yuanz03"},"content":"        Path tempFile \u003d tempDir.resolve(\"dummy.txt\");","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yuanz03"},"content":"        ShadowStorage dummyStorage \u003d new ShadowStorage(tempFile.toString());","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yuanz03"},"content":"        ShadowController dummyController \u003d new ShadowController(dummyStorage);","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yuanz03"},"content":"        ShadowUi dummyUi \u003d new ShadowUi();","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yuanz03"},"content":"        dummyController.executeCommand(EVENT_COMMAND, dummyUi);","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yuanz03"},"content":"        assertEquals(\"[E][ ] project meeting (from: Jul 4 2025 16:00 to: Jul 5 2025 20:00)\",","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yuanz03"},"content":"                dummyController.getTaskList().getTask(1).toString());","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yuanz03"},"content":"    public void execute_markTask(@TempDir Path tempDir) throws ShadowException {","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yuanz03"},"content":"        Path tempFile \u003d tempDir.resolve(\"dummy.txt\");","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yuanz03"},"content":"        ShadowStorage dummyStorage \u003d new ShadowStorage(tempFile.toString());","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yuanz03"},"content":"        ShadowController dummyController \u003d new ShadowController(dummyStorage);","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yuanz03"},"content":"        ShadowUi dummyUi \u003d new ShadowUi();","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yuanz03"},"content":"        dummyController.executeCommand(TODO_COMMAND, dummyUi);","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yuanz03"},"content":"        dummyController.executeCommand(MARK_COMMAND, dummyUi);","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yuanz03"},"content":"        assertEquals(\"[T][X] borrow book\", dummyController.getTaskList().getTask(1).toString());","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yuanz03"},"content":"    public void execute_unmarkTask(@TempDir Path tempDir) throws ShadowException {","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yuanz03"},"content":"        Path tempFile \u003d tempDir.resolve(\"dummy.txt\");","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yuanz03"},"content":"        ShadowStorage dummyStorage \u003d new ShadowStorage(tempFile.toString());","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yuanz03"},"content":"        ShadowController dummyController \u003d new ShadowController(dummyStorage);","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yuanz03"},"content":"        ShadowUi dummyUi \u003d new ShadowUi();","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yuanz03"},"content":"        dummyController.executeCommand(TODO_COMMAND, dummyUi);","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yuanz03"},"content":"        dummyController.executeCommand(MARK_COMMAND, dummyUi);","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yuanz03"},"content":"        dummyController.executeCommand(UNMARK_COMMAND, dummyUi);","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yuanz03"},"content":"        assertEquals(\"[T][ ] borrow book\", dummyController.getTaskList().getTask(1).toString());","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yuanz03"},"content":"    public void execute_deleteTask(@TempDir Path tempDir) throws ShadowException {","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yuanz03"},"content":"        Path tempFile \u003d tempDir.resolve(\"dummy.txt\");","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yuanz03"},"content":"        ShadowStorage dummyStorage \u003d new ShadowStorage(tempFile.toString());","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yuanz03"},"content":"        ShadowController dummyController \u003d new ShadowController(dummyStorage);","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yuanz03"},"content":"        ShadowUi dummyUi \u003d new ShadowUi();","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yuanz03"},"content":"        dummyController.executeCommand(TODO_COMMAND, dummyUi);","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yuanz03"},"content":"        dummyController.executeCommand(DELETE_COMMAND, dummyUi);","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yuanz03"},"content":"        assertEquals(0, dummyController.getTaskList().getLength());","lastModifiedDate":"2025-08-27T17:34:48","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yuanz03"},"content":"    public void execute_emptyTaskList_exceptionThrown(@TempDir Path tempDir) {","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yuanz03"},"content":"        Path tempFile \u003d tempDir.resolve(\"dummy.txt\");","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yuanz03"},"content":"        ShadowStorage dummyStorage \u003d new ShadowStorage(tempFile.toString());","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yuanz03"},"content":"        ShadowController dummyController \u003d new ShadowController(dummyStorage);","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yuanz03"},"content":"        ShadowUi dummyUi \u003d new ShadowUi();","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yuanz03"},"content":"            dummyController.executeCommand(MARK_COMMAND, dummyUi);","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yuanz03"},"content":"            fail();","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yuanz03"},"content":"        } catch (ShadowException exception) {","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yuanz03"},"content":"            assertEquals(\"ERROR! Your task list is empty!\\n\", exception.getMessage());","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yuanz03"},"content":"            dummyController.executeCommand(UNMARK_COMMAND, dummyUi);","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yuanz03"},"content":"            fail();","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yuanz03"},"content":"        } catch (ShadowException exception) {","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yuanz03"},"content":"            assertEquals(\"ERROR! Your task list is empty!\\n\", exception.getMessage());","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yuanz03"},"content":"            dummyController.executeCommand(DELETE_COMMAND, dummyUi);","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yuanz03"},"content":"            fail();","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yuanz03"},"content":"        } catch (ShadowException exception) {","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yuanz03"},"content":"            assertEquals(\"ERROR! Your task list is empty!\\n\", exception.getMessage());","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yuanz03"},"content":"    public void execute_invalidTaskIndex_exceptionThrown(@TempDir Path tempDir) {","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yuanz03"},"content":"        Path tempFile \u003d tempDir.resolve(\"dummy.txt\");","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yuanz03"},"content":"        ShadowStorage dummyStorage \u003d new ShadowStorage(tempFile.toString());","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yuanz03"},"content":"        ShadowController dummyController \u003d new ShadowController(dummyStorage);","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yuanz03"},"content":"        ShadowUi dummyUi \u003d new ShadowUi();","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yuanz03"},"content":"        ShadowCommand invalidMarkCommand \u003d new ShadowCommand(ShadowCommand.CommandType.MARK, 2);","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yuanz03"},"content":"        ShadowCommand invalidUnmarkCommand \u003d new ShadowCommand(ShadowCommand.CommandType.UNMARK, 3);","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yuanz03"},"content":"        ShadowCommand invalidDeleteCommand \u003d new ShadowCommand(ShadowCommand.CommandType.DELETE, 4);","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yuanz03"},"content":"            dummyController.executeCommand(TODO_COMMAND, dummyUi);","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yuanz03"},"content":"            dummyController.executeCommand(invalidMarkCommand, dummyUi);","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yuanz03"},"content":"            fail();","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yuanz03"},"content":"        } catch (ShadowException exception) {","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yuanz03"},"content":"            assertEquals(\"Invalid task index! Please enter a number between 1 and \"","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yuanz03"},"content":"                    + dummyController.getTaskList().getLength() + \".\\n\", exception.getMessage());","lastModifiedDate":"2025-08-27T17:34:48","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yuanz03"},"content":"            dummyController.executeCommand(DEADLINE_COMMAND, dummyUi);","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yuanz03"},"content":"            dummyController.executeCommand(invalidUnmarkCommand, dummyUi);","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yuanz03"},"content":"            fail();","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yuanz03"},"content":"        } catch (ShadowException exception) {","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yuanz03"},"content":"            assertEquals(\"Invalid task index! Please enter a number between 1 and \"","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yuanz03"},"content":"                    + dummyController.getTaskList().getLength() + \".\\n\", exception.getMessage());","lastModifiedDate":"2025-08-27T17:34:48","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yuanz03"},"content":"            dummyController.executeCommand(EVENT_COMMAND, dummyUi);","lastModifiedDate":"2025-09-09T13:18:05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yuanz03"},"content":"            dummyController.executeCommand(invalidDeleteCommand, dummyUi);","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yuanz03"},"content":"            fail();","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yuanz03"},"content":"        } catch (ShadowException exception) {","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yuanz03"},"content":"            assertEquals(\"Invalid task index! Please enter a number between 1 and \"","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yuanz03"},"content":"                    + dummyController.getTaskList().getLength() + \".\\n\", exception.getMessage());","lastModifiedDate":"2025-08-27T17:34:48","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"yuanz03"},"content":"    public void execute_unknownCommand_exceptionThrown(@TempDir Path tempDir) {","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"yuanz03"},"content":"        Path tempFile \u003d tempDir.resolve(\"dummy.txt\");","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"yuanz03"},"content":"        ShadowStorage dummyStorage \u003d new ShadowStorage(tempFile.toString());","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yuanz03"},"content":"        ShadowController dummyController \u003d new ShadowController(dummyStorage);","lastModifiedDate":"2025-09-08T20:39:54","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"yuanz03"},"content":"        ShadowUi dummyUi \u003d new ShadowUi();","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"yuanz03"},"content":"            dummyController.executeCommand(UNKNOWN_COMMAND, dummyUi);","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"yuanz03"},"content":"            fail();","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"yuanz03"},"content":"        } catch (ShadowException exception) {","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"yuanz03"},"content":"            assertEquals(\"Unknown request! Try one of these commands: list, mark, unmark, todo, \"","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"yuanz03"},"content":"                    + \"delete, event, or deadline, and I\u0027ll handle it for you.\\n\", exception.getMessage());","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T16:07:56","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"yuanz03"},"content":"}","lastModifiedDate":"2025-08-26T14:56:00","isFullCredit":false}],"authorContributionMap":{"yuanz03":182}},{"path":"src/test/java/shadowbuddy/app/ShadowParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanz03"},"content":"package shadowbuddy.app;","lastModifiedDate":"2025-08-25T20:23:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-25T20:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanz03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanz03"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanz03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-25T20:23:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-25T20:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanz03"},"content":"import shadowbuddy.services.ShadowException;","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-25T20:23:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanz03"},"content":"public class ShadowParserTest {","lastModifiedDate":"2025-08-25T20:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-25T20:23:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanz03"},"content":"    public void parse_validListCommand() throws ShadowException {","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanz03"},"content":"        ShadowCommand userCommand \u003d ShadowParser.parse(\"list\");","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanz03"},"content":"        assertEquals(ShadowCommand.CommandType.LIST, userCommand.commandType);","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanz03"},"content":"    public void parse_validMarkCommand() throws ShadowException {","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanz03"},"content":"        ShadowCommand userCommand \u003d ShadowParser.parse(\"mark 3\");","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanz03"},"content":"        assertEquals(ShadowCommand.CommandType.MARK, userCommand.commandType);","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanz03"},"content":"        assertEquals(3, userCommand.taskIndex);","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanz03"},"content":"    public void parse_validUnmarkCommand() throws ShadowException {","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanz03"},"content":"        ShadowCommand userCommand \u003d ShadowParser.parse(\"unmark 4\");","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanz03"},"content":"        assertEquals(ShadowCommand.CommandType.UNMARK, userCommand.commandType);","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanz03"},"content":"        assertEquals(4, userCommand.taskIndex);","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanz03"},"content":"    public void parse_validDeleteCommand() throws ShadowException {","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanz03"},"content":"        ShadowCommand userCommand \u003d ShadowParser.parse(\"delete 2\");","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanz03"},"content":"        assertEquals(ShadowCommand.CommandType.DELETE, userCommand.commandType);","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanz03"},"content":"        assertEquals(2, userCommand.taskIndex);","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanz03"},"content":"    public void parse_validTodoCommand() throws ShadowException {","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuanz03"},"content":"        ShadowCommand userCommand \u003d ShadowParser.parse(\"todo return book\");","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuanz03"},"content":"        assertEquals(ShadowCommand.CommandType.TODO, userCommand.commandType);","lastModifiedDate":"2025-08-25T20:23:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuanz03"},"content":"        assertEquals(\"return book\", userCommand.taskDescription);","lastModifiedDate":"2025-08-25T20:23:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-25T20:23:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuanz03"},"content":"    public void parse_emptyTodo_exceptionThrown() {","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuanz03"},"content":"            assertEquals(ShadowCommand.CommandType.TODO, ShadowParser.parse(\"todo\").commandType);","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuanz03"},"content":"            fail();","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuanz03"},"content":"        } catch (ShadowException exception) {","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuanz03"},"content":"            assertEquals(\"Invalid request! Please provide a description for your todo.\\n\",","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yuanz03"},"content":"                    exception.getMessage());","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yuanz03"},"content":"    public void parse_validDeadlineCommand() throws ShadowException {","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yuanz03"},"content":"        ShadowCommand userCommand \u003d ShadowParser.parse(\"deadline buy book /by 2/12/2025 1800\");","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yuanz03"},"content":"        assertEquals(ShadowCommand.CommandType.DEADLINE, userCommand.commandType);","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yuanz03"},"content":"        assertEquals(\"buy book\", userCommand.taskDescription);","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yuanz03"},"content":"        assertEquals(\"Dec 2 2025 18:00\", userCommand.dueDate);","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yuanz03"},"content":"    public void parse_emptyDeadline_exceptionThrown() {","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yuanz03"},"content":"            assertEquals(ShadowCommand.CommandType.DEADLINE, ShadowParser.parse(\"deadline\").commandType);","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yuanz03"},"content":"            fail();","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yuanz03"},"content":"        } catch (ShadowException exception) {","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yuanz03"},"content":"            assertEquals(\"Invalid request! Please provide a description for your deadline.\\n\",","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yuanz03"},"content":"                    exception.getMessage());","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yuanz03"},"content":"    public void parse_invalidDeadlineFormat_exceptionThrown() {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yuanz03"},"content":"            assertEquals(ShadowCommand.CommandType.DEADLINE,","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yuanz03"},"content":"                    ShadowParser.parse(\"deadline buy book by 2/12/2025 1800\").commandType);","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yuanz03"},"content":"            fail();","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yuanz03"},"content":"        } catch (ShadowException exception) {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yuanz03"},"content":"            assertEquals(\"Invalid format! Please use: deadline DESCRIPTION /by d/M/yyyy HHmm.\\n\",","lastModifiedDate":"2025-08-26T16:17:01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yuanz03"},"content":"                    exception.getMessage());","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yuanz03"},"content":"    public void parse_missingDeadlineDueDate_exceptionThrown() {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yuanz03"},"content":"            assertEquals(ShadowCommand.CommandType.DEADLINE,","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yuanz03"},"content":"                    ShadowParser.parse(\"deadline buy book /by\").commandType);","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yuanz03"},"content":"            fail();","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yuanz03"},"content":"        } catch (ShadowException exception) {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yuanz03"},"content":"            assertEquals(\"Missing due date! Please use: deadline DESCRIPTION /by d/M/yyyy HHmm.\\n\",","lastModifiedDate":"2025-08-26T16:17:01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yuanz03"},"content":"                    exception.getMessage());","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yuanz03"},"content":"    public void parse_invalidDeadlineDueDate_exceptionThrown() {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yuanz03"},"content":"            assertEquals(ShadowCommand.CommandType.DEADLINE,","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yuanz03"},"content":"                    ShadowParser.parse(\"deadline buy book /by 2/12/2025 6pm\").commandType);","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yuanz03"},"content":"            fail();","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yuanz03"},"content":"        } catch (ShadowException exception) {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yuanz03"},"content":"            assertEquals(\"Invalid due date! Please use: deadline DESCRIPTION /by d/M/yyyy HHmm.\\n\",","lastModifiedDate":"2025-08-26T16:17:01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yuanz03"},"content":"                    exception.getMessage());","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yuanz03"},"content":"    public void parse_validEventCommand() throws ShadowException {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yuanz03"},"content":"        ShadowCommand userCommand \u003d ShadowParser.parse(\"event meeting /from 4/7/2025 1600 /to 5/7/2025 2100\");","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yuanz03"},"content":"        assertEquals(ShadowCommand.CommandType.EVENT, userCommand.commandType);","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yuanz03"},"content":"        assertEquals(\"meeting\", userCommand.taskDescription);","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yuanz03"},"content":"        assertEquals(\"Jul 4 2025 16:00\", userCommand.startDate);","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yuanz03"},"content":"        assertEquals(\"Jul 5 2025 21:00\", userCommand.endDate);","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yuanz03"},"content":"    public void parse_emptyEvent_exceptionThrown() {","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yuanz03"},"content":"            assertEquals(ShadowCommand.CommandType.EVENT, ShadowParser.parse(\"event\").commandType);","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yuanz03"},"content":"            fail();","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yuanz03"},"content":"        } catch (ShadowException exception) {","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yuanz03"},"content":"            assertEquals(\"Invalid request! Please provide a description for your event.\\n\",","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yuanz03"},"content":"                    exception.getMessage());","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yuanz03"},"content":"    public void parse_invalidEventFormat_exceptionThrown() {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yuanz03"},"content":"            assertEquals(ShadowCommand.CommandType.EVENT,","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yuanz03"},"content":"                    ShadowParser.parse(\"event meeting from 4/7/2025 1600 to 5/7/2025 2100\").commandType);","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yuanz03"},"content":"            fail();","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yuanz03"},"content":"        } catch (ShadowException exception) {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yuanz03"},"content":"            assertEquals(\"Invalid format! \"","lastModifiedDate":"2025-08-26T16:17:01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yuanz03"},"content":"                    + \"Please use: event DESCRIPTION /from d/M/yyyy HHmm /to d/M/yyyy HHmm.\\n\", exception.getMessage());","lastModifiedDate":"2025-08-26T16:17:01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yuanz03"},"content":"    public void parse_missingEventStartDate_exceptionThrown() {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yuanz03"},"content":"            assertEquals(ShadowCommand.CommandType.EVENT,","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yuanz03"},"content":"                    ShadowParser.parse(\"event meeting /from /to 5/7/2025 2100\").commandType);","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yuanz03"},"content":"            fail();","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yuanz03"},"content":"        } catch (ShadowException exception) {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yuanz03"},"content":"            assertEquals(\"Missing start date! \"","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yuanz03"},"content":"                    + \"Please use: event DESCRIPTION /from d/M/yyyy HHmm /to d/M/yyyy HHmm.\\n\", exception.getMessage());","lastModifiedDate":"2025-08-26T16:17:01","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yuanz03"},"content":"    public void parse_missingEventEndDate_exceptionThrown() {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yuanz03"},"content":"            assertEquals(ShadowCommand.CommandType.EVENT,","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yuanz03"},"content":"                    ShadowParser.parse(\"event meeting /from 4/7/2025 1600 /to\").commandType);","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yuanz03"},"content":"            fail();","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yuanz03"},"content":"        } catch (ShadowException exception) {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yuanz03"},"content":"            assertEquals(\"Missing end date! \"","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yuanz03"},"content":"                    + \"Please use: event DESCRIPTION /from d/M/yyyy HHmm /to d/M/yyyy HHmm.\\n\", exception.getMessage());","lastModifiedDate":"2025-08-26T16:17:01","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"yuanz03"},"content":"    public void parse_invalidEventDates_exceptionThrown() {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"yuanz03"},"content":"        try {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"yuanz03"},"content":"            assertEquals(ShadowCommand.CommandType.EVENT,","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yuanz03"},"content":"                    ShadowParser.parse(\"event meeting /from 4/7/2025 4pm /to 7 July 2025 2100\").commandType);","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"yuanz03"},"content":"            fail();","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"yuanz03"},"content":"        } catch (ShadowException exception) {","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"yuanz03"},"content":"            assertEquals(\"Invalid start or end date! \"","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"yuanz03"},"content":"                    + \"Please use: event DESCRIPTION /from d/M/yyyy HHmm /to d/M/yyyy HHmm.\\n\", exception.getMessage());","lastModifiedDate":"2025-08-26T16:17:01","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"yuanz03"},"content":"        }","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"yuanz03"},"content":"","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"yuanz03"},"content":"    @Test","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"yuanz03"},"content":"    public void parse_invalidCommandType() throws ShadowException {","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"yuanz03"},"content":"        ShadowCommand userCommand \u003d ShadowParser.parse(\"plan\");","lastModifiedDate":"2025-08-26T00:03:36","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"yuanz03"},"content":"        assertEquals(ShadowCommand.CommandType.UNKNOWN, userCommand.commandType);","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"yuanz03"},"content":"    }","lastModifiedDate":"2025-08-25T21:35:55","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"yuanz03"},"content":"}","lastModifiedDate":"2025-08-25T20:23:26","isFullCredit":false}],"authorContributionMap":{"yuanz03":184}}]
