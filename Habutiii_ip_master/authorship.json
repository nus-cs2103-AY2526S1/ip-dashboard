[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Habutiii"},"content":"# HaBot User Guide","lastModifiedDate":"2025-08-18T19:42:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"Habutiii":1,"-":29}},{"path":"src/main/java/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Habutiii"},"content":"/**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Habutiii"},"content":" * Represents the types of commands supported by HaBot.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Habutiii"},"content":" */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Habutiii"},"content":"public enum CommandType {","lastModifiedDate":"2025-08-19T00:50:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Habutiii"},"content":"    BYE, LIST, MARK, UNMARK, DELETE, TODO, DEADLINE, EVENT, UNKNOWN;","lastModifiedDate":"2025-08-19T00:50:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-19T00:50:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Habutiii"},"content":"     * Parses the user input and returns the corresponding CommandType.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Habutiii"},"content":"     *","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Habutiii"},"content":"     * @param input The user input string.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Habutiii"},"content":"     * @return The matching CommandType, or UNKNOWN if no match is found.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Habutiii"},"content":"    public static CommandType fromInput(String input) {","lastModifiedDate":"2025-08-19T00:50:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Habutiii"},"content":"        if (input.equalsIgnoreCase(\"bye\")){","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Habutiii"},"content":"            return BYE;","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Habutiii"},"content":"        } else if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Habutiii"},"content":"            return LIST;","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Habutiii"},"content":"        } else if (input.startsWith(\"mark \")) {","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Habutiii"},"content":"            return MARK;","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Habutiii"},"content":"        } else if (input.startsWith(\"unmark \")) {","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Habutiii"},"content":"            return UNMARK;","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Habutiii"},"content":"        } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Habutiii"},"content":"            return DELETE;","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Habutiii"},"content":"        } else if (input.startsWith(\"todo \")) {","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Habutiii"},"content":"            return TODO;","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Habutiii"},"content":"        } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Habutiii"},"content":"            return DEADLINE;","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Habutiii"},"content":"        } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Habutiii"},"content":"            return EVENT;","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Habutiii"},"content":"        } else {","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Habutiii"},"content":"            return UNKNOWN;","lastModifiedDate":"2025-08-19T00:50:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-19T00:50:36","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-19T00:50:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Habutiii"},"content":"}","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false}],"authorContributionMap":{"Habutiii":34}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Habutiii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Habutiii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Habutiii"},"content":"/**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Habutiii"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Habutiii"},"content":" * Extends the Task class and adds a deadline date/time.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Habutiii"},"content":" */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Habutiii"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Habutiii"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Habutiii"},"content":"    protected static final DateTimeFormatter parseFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Habutiii"},"content":"    protected static final DateTimeFormatter printFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Habutiii"},"content":"     * Constructs a Deadline task with a description and deadline date/time.","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Habutiii"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Habutiii"},"content":"     * @param by The deadline date/time for the task in LocalDateTime format.","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Habutiii"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Habutiii"},"content":"        super(description);","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Habutiii"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Habutiii"},"content":"     * Constructs a Deadline task with a description and deadline.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Habutiii"},"content":"     *","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Habutiii"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Habutiii"},"content":"     * @param by The deadline date/time for the task in String format.","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Habutiii"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Habutiii"},"content":"        this(description, LocalDateTime.parse(by, parseFormatter));","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Habutiii"},"content":"    @Override","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Habutiii"},"content":"    public String toString() {","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Habutiii"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Habutiii"},"content":"                + \" (By: \" + by.format(printFormatter) + \")\";","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Habutiii"},"content":"    @Override","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Habutiii"},"content":"    public String toStoreFormat() {","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Habutiii"},"content":"        String escapedDescription \u003d description.replace(\"|\", \"\\\\|\");","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Habutiii"},"content":"        return \"D|\" + getMarkStatusIcon()","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Habutiii"},"content":"                + \"|\" + escapedDescription","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Habutiii"},"content":"                + \"|\" + by.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Habutiii"},"content":"    public static Deadline fromStoreFormat(String text) {","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Habutiii"},"content":"        String[] parts \u003d text.split(\"\\\\|\", -1);","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Habutiii"},"content":"        if (parts.length \u003c 4) {","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Habutiii"},"content":"            throw new IllegalArgumentException(\"Invalid Deadline format: \" + text);","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Habutiii"},"content":"        boolean isDone \u003d parts[1].equals(\"X\");","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Habutiii"},"content":"        String description \u003d parts[2].replace(\"\\\\|\", \"|\");","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Habutiii"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(parts[3]);","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Habutiii"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Habutiii"},"content":"        if (isDone) {","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Habutiii"},"content":"            deadline.markAsDone();","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Habutiii"},"content":"        return deadline;","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Habutiii"},"content":"}","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false}],"authorContributionMap":{"Habutiii":63}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Habutiii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Habutiii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Habutiii"},"content":"/**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Habutiii"},"content":" * Represents an event task with a start and end time.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Habutiii"},"content":" * Extends the Task class and adds \u0027from\u0027 and \u0027to\u0027 fields.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Habutiii"},"content":" */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Habutiii"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Habutiii"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Habutiii"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Habutiii"},"content":"    protected static final DateTimeFormatter parseFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Habutiii"},"content":"    protected static final DateTimeFormatter printFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Habutiii"},"content":"     * Constructs an Event task with a description, start time, and end time.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Habutiii"},"content":"     *","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Habutiii"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Habutiii"},"content":"     * @param from The start time of the event in LocalDateTime format.","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Habutiii"},"content":"     * @param to The end time of the event in LocalDateTime format.","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Habutiii"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Habutiii"},"content":"        super(description);","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Habutiii"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Habutiii"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Habutiii"},"content":"     * Constructs an Event task with a description, start time, and end time.","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Habutiii"},"content":"     *","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Habutiii"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Habutiii"},"content":"     * @param from The start time of the event in String format.","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Habutiii"},"content":"     * @param to The end time of the event in String format.","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Habutiii"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Habutiii"},"content":"        this(description,","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Habutiii"},"content":"                LocalDateTime.parse(from, parseFormatter),","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Habutiii"},"content":"                LocalDateTime.parse(to, parseFormatter));","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Habutiii"},"content":"    @Override","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Habutiii"},"content":"    public String toString() {","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Habutiii"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Habutiii"},"content":"                + \" (From: \" + from.format(printFormatter)","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Habutiii"},"content":"                + \" To: \" + to.format(printFormatter) + \")\";","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Habutiii"},"content":"    @Override","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Habutiii"},"content":"    public String toStoreFormat() {","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Habutiii"},"content":"        String escapedDescription \u003d description.replace(\"|\", \"\\\\|\");","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Habutiii"},"content":"        return \"E|\" + getMarkStatusIcon()","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Habutiii"},"content":"                + \"|\" + escapedDescription","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Habutiii"},"content":"                + \"|\" + from.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME)","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Habutiii"},"content":"                + \"|\" + to.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Habutiii"},"content":"    public static Event fromStoreFormat(String text) {","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Habutiii"},"content":"        String[] parts \u003d text.split(\"\\\\|\", -1);","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Habutiii"},"content":"        if (parts.length \u003c 5) {","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Habutiii"},"content":"            throw new IllegalArgumentException(\"Invalid Event format: \" + text);","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Habutiii"},"content":"        boolean isDone \u003d parts[1].equals(\"X\");","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Habutiii"},"content":"        String description \u003d parts[2].replace(\"\\\\|\", \"|\");","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Habutiii"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(parts[3]);","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Habutiii"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(parts[4]);","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Habutiii"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Habutiii"},"content":"        if (isDone) {","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Habutiii"},"content":"            event.markAsDone();","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Habutiii"},"content":"        return event;","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Habutiii"},"content":"}","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false}],"authorContributionMap":{"Habutiii":73}},{"path":"src/main/java/HaBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Habutiii"},"content":"/**","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Habutiii"},"content":" * Main class for the HaBot task manager application.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Habutiii"},"content":" * Handles user interaction, command parsing, and delegates task management to TaskManager.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Habutiii"},"content":" */","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Habutiii"},"content":"public class HaBot {","lastModifiedDate":"2025-08-18T19:42:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Habutiii"},"content":"    private final Ui ui;","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Habutiii"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-08-22T23:48:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T19:42:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Habutiii"},"content":"    public HaBot(String filePath) {","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Habutiii"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Habutiii"},"content":"        this.taskList \u003d new TaskList(filePath);","lastModifiedDate":"2025-08-22T23:48:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T20:41:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-18T19:42:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T19:42:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Habutiii"},"content":"    // Scanner for reading user input","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Habutiii"},"content":"    private static final java.util.Scanner SCANNER \u003d new java.util.Scanner(System.in);","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T19:42:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Habutiii"},"content":"     * Reads a line of input from the user.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Habutiii"},"content":"     * @return The user\u0027s input as a String.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Habutiii"},"content":"    private static String readInput() {","lastModifiedDate":"2025-08-18T20:21:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Habutiii"},"content":"        System.out.print(\"\u003e \");","lastModifiedDate":"2025-08-18T20:21:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Habutiii"},"content":"        return SCANNER.nextLine();","lastModifiedDate":"2025-08-18T20:21:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-18T20:21:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T20:21:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Habutiii"},"content":"     * Converts a string input to an integer, or throws a HaBotException with a hint if invalid.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Habutiii"},"content":"     * @param input The string to convert.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Habutiii"},"content":"     * @param hint The error message to use if conversion fails.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Habutiii"},"content":"     * @return The parsed integer value.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Habutiii"},"content":"     * @throws HaBotException If the input is not a valid integer.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Habutiii"},"content":"    private Integer deriveInteger(String input, String hint) throws HaBotException {","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Habutiii"},"content":"        try {","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Habutiii"},"content":"            return Integer.parseInt(input.trim());","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Habutiii"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Habutiii"},"content":"            throw new HaBotException(hint);","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-19T00:13:04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-18T20:41:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T21:05:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Habutiii"},"content":"     * Marks or unmarks a task as done or not done.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Habutiii"},"content":"     * @param indexStr The index of the task as a String (1-based).","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Habutiii"},"content":"     * @param isDone True to mark as done, false to unmark.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Habutiii"},"content":"     * @throws HaBotException For invalid input or index.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Habutiii"},"content":"    private void markTask(String indexStr, Boolean isDone) throws HaBotException {","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Habutiii"},"content":"        int taskIndex \u003d deriveInteger(","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Habutiii"},"content":"                indexStr,","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Habutiii"},"content":"                \"Invalid input format. Please use \u0027\"","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Habutiii"},"content":"                        + (isDone ? \"mark\" : \"unmark\") + \" \u003ctask number\u003e\u0027.\")","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Habutiii"},"content":"                - 1; // Convert to 0-based index","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Habutiii"},"content":"        Task markedTask \u003d taskList.mark(taskIndex, isDone);","lastModifiedDate":"2025-08-22T23:48:13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Habutiii"},"content":"        ui.send(","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Habutiii"},"content":"                (isDone ? \"OK! Done done done! ᕙ(`▽´)ᕗ\" : \"Awww, still need do (º﹃º)ᕗ\")","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Habutiii"},"content":"                + \"\\n  \" + markedTask);","lastModifiedDate":"2025-08-22T19:34:06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-18T20:41:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T20:21:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Habutiii"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Habutiii"},"content":"     * @param indexStr The index of the task as a String (1-based).","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Habutiii"},"content":"     * @throws HaBotException For invalid input or index.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Habutiii"},"content":"    private void deleteTask(String indexStr) throws HaBotException {","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Habutiii"},"content":"        int taskIndex \u003d deriveInteger(","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Habutiii"},"content":"                indexStr,","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Habutiii"},"content":"                \"Invalid input format. Please use \u0027delete \u003ctask number\u003e\u0027.\")","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Habutiii"},"content":"                - 1; // Convert to 0-based index","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-19T00:33:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Habutiii"},"content":"        Task removedTask \u003d taskList.remove(taskIndex);","lastModifiedDate":"2025-08-22T23:48:13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Habutiii"},"content":"        ui.send(\"OK! Removed task! (`▽´)/ o()xxxx[{::::::::::::::::::\u003e \\n  \"","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Habutiii"},"content":"                + removedTask + \"\\n\"","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Habutiii"},"content":"                + ui.taskLeftHint(taskList.size()));","lastModifiedDate":"2025-08-22T23:48:13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-19T00:33:26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-19T00:33:26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Habutiii"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Habutiii"},"content":"     * @param task The task to add.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Habutiii"},"content":"    private void addTask(Task task) {","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Habutiii"},"content":"        taskList.add(task);","lastModifiedDate":"2025-08-22T23:48:13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Habutiii"},"content":"        ui.send(\"Sure! New task \\\\( ﾟヮﾟ)/\\n  \" + task + \"\\n\"","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Habutiii"},"content":"                + ui.taskLeftHint(taskList.size()));","lastModifiedDate":"2025-08-22T23:48:13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-19T00:50:36","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T20:41:47","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Habutiii"},"content":"     * Adds a new Deadline task to the list.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Habutiii"},"content":"     * Parses the input for description and deadline date.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Habutiii"},"content":"     * @param input The full user input string for the deadline command.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Habutiii"},"content":"     * @throws HaBotException If the input format is invalid.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Habutiii"},"content":"    private void addDeadLine(String input) throws HaBotException {","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Habutiii"},"content":"        String hint \u003d \"Please provide a valid description and deadline in the format: \"","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Habutiii"},"content":"                + \"\u0027deadline \u003cdescription\u003e /by \u003cdatetime\u003e\u0027 (e.g., \u00272/12/2019 1800\u0027).\";","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Habutiii"},"content":"        String[] parts \u003d getArg(input, \"deadline\").split(\"/by\", 2);","lastModifiedDate":"2025-08-19T00:50:36","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Habutiii"},"content":"        // the /by argument is mandatory","lastModifiedDate":"2025-08-19T00:50:36","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Habutiii"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Habutiii"},"content":"            throw new HaBotException(hint);","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Habutiii"},"content":"        try {","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Habutiii"},"content":"            // Create a new Deadline task with the description and deadline","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Habutiii"},"content":"            addTask(new Deadline(parts[0].trim(), parts[1].trim()));","lastModifiedDate":"2025-08-19T00:50:36","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Habutiii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Habutiii"},"content":"            throw new HaBotException(e.getMessage() + \"\\n\" + hint);","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Habutiii"},"content":"     * Adds a new Event task to the list.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Habutiii"},"content":"     * Parses the input for description, start, and end times.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Habutiii"},"content":"     * @param input The full user input string for the event command.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Habutiii"},"content":"     * @throws HaBotException If the input format is invalid.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Habutiii"},"content":"    private void addEvent(String input) throws HaBotException {","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Habutiii"},"content":"        String hint \u003d \"Please provide a valid description, start time, and end time in the format: \"","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Habutiii"},"content":"                + \"\u0027event \u003cdescription\u003e /from \u003cdatetime\u003e /to \u003cdatetime\u003e\u0027 (e.g., \u00272/12/2019 1800\u0027).\";","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Habutiii"},"content":"        // the /from and /to arguments are mandatory","lastModifiedDate":"2025-08-19T00:50:36","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Habutiii"},"content":"        String[] firstSplit \u003d getArg(input, \"event\").split(\"/from\", 2);","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Habutiii"},"content":"        if (firstSplit.length \u003c 2) {","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Habutiii"},"content":"            throw new HaBotException(hint);","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Habutiii"},"content":"        // the /to argument is mandatory","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Habutiii"},"content":"        String[] secondSplit \u003d firstSplit[1].split(\"/to\", 2);","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Habutiii"},"content":"        if (secondSplit.length \u003c 2) {","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Habutiii"},"content":"            throw new HaBotException(hint);","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Habutiii"},"content":"        try {","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Habutiii"},"content":"            addTask(new Event(firstSplit[0].trim(), secondSplit[0].trim(), secondSplit[1].trim()));","lastModifiedDate":"2025-08-19T00:50:36","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Habutiii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Habutiii"},"content":"            throw new HaBotException(e.getMessage() + \"\\n\" + hint);","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Habutiii"},"content":"     * Extracts the argument after the command keyword from the input string.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Habutiii"},"content":"     * @param input The full user input string.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Habutiii"},"content":"     * @param command The command keyword to remove.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Habutiii"},"content":"     * @return The argument string after the command keyword.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Habutiii"},"content":"    private String getArg(String input, String command) {","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Habutiii"},"content":"        return input.substring(command.length()).trim();","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Habutiii"},"content":"     * Handles the user\u0027s command input and dispatches to the appropriate method.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Habutiii"},"content":"     * @param input The full user input string.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Habutiii"},"content":"     * @throws HaBotException If the command is not recognized or input is invalid.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Habutiii"},"content":"    private void handleCommand(String input) throws HaBotException {","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Habutiii"},"content":"        CommandType command \u003d CommandType.fromInput(input);","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Habutiii"},"content":"        switch (command) {","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Habutiii"},"content":"            case LIST -\u003e this.ui.listTasks(taskList.list());","lastModifiedDate":"2025-08-22T23:48:13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Habutiii"},"content":"            case MARK -\u003e markTask(getArg(input, \"mark\"), true);","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Habutiii"},"content":"            case UNMARK -\u003e markTask(getArg(input, \"unmark\"), false);","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Habutiii"},"content":"            case DELETE -\u003e deleteTask(getArg(input, \"delete\"));","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Habutiii"},"content":"            case TODO -\u003e addTask(new ToDo(getArg(input, \"todo\")));","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Habutiii"},"content":"            case DEADLINE -\u003e addDeadLine(input);","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Habutiii"},"content":"            case EVENT -\u003e addEvent(input);","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Habutiii"},"content":"            // If the command is not recognized, throw an exception","lastModifiedDate":"2025-08-19T00:50:36","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Habutiii"},"content":"            default -\u003e throw new HaBotException(","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Habutiii"},"content":"                    \"Sorry, What are you trying to say? (｡•́︿•̀｡)???\\n\"","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Habutiii"},"content":"                    + \"I don\u0027t understand that command.\");","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Habutiii"},"content":"     * Runs the main loop of the HaBot application.","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Habutiii"},"content":"    public void run() {","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Habutiii"},"content":"        ui.greet(); // Print the greeting message","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Habutiii"},"content":"        while (true) {","lastModifiedDate":"2025-08-19T00:50:36","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Habutiii"},"content":"            try {","lastModifiedDate":"2025-08-19T00:50:36","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Habutiii"},"content":"                String input \u003d readInput();","lastModifiedDate":"2025-08-19T00:50:36","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Habutiii"},"content":"                if (CommandType.fromInput(input) \u003d\u003d CommandType.BYE) {","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Habutiii"},"content":"                    break;","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Habutiii"},"content":"                }","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Habutiii"},"content":"                handleCommand(input);","lastModifiedDate":"2025-08-19T00:50:36","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Habutiii"},"content":"                // Catch any intended HaBotExceptions thrown by handleCommand","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Habutiii"},"content":"            } catch (HaBotException e) {","lastModifiedDate":"2025-08-19T00:13:04","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Habutiii"},"content":"                ui.send(\"Error (ノ•`_´•)ノ︵┻━┻ \" + e.getMessage());","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Habutiii"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Habutiii"},"content":"                ui.send(\"Unexpected Error (ノ•`o´•)ノ︵┻━┻ \" + e.getMessage());","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Habutiii"},"content":"            }","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-18T20:21:32","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Habutiii"},"content":"        ui.bye();  // Print the goodbye message","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Habutiii"},"content":"     * The main entry point of the program.","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Habutiii"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Habutiii"},"content":"        new HaBot(\"tasks.txt\").run();","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-18T19:42:11","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Habutiii"},"content":"}","lastModifiedDate":"2025-08-18T19:42:11","isFullCredit":false}],"authorContributionMap":{"Habutiii":204}},{"path":"src/main/java/HaBotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Habutiii"},"content":"public class HaBotException extends RuntimeException {","lastModifiedDate":"2025-08-19T00:13:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Habutiii"},"content":"    public HaBotException(String message) {","lastModifiedDate":"2025-08-19T00:13:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Habutiii"},"content":"        super(message);","lastModifiedDate":"2025-08-19T00:13:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-19T00:13:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Habutiii"},"content":"}","lastModifiedDate":"2025-08-19T00:13:04","isFullCredit":false}],"authorContributionMap":{"Habutiii":5}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Habutiii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Habutiii"},"content":"import java.util.List;","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Habutiii"},"content":"public class Storage {","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Habutiii"},"content":"    private final java.io.File file;","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Habutiii"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Habutiii"},"content":"     *","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Habutiii"},"content":"     * @param filePath The path to the file where tasks will be stored.","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Habutiii"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Habutiii"},"content":"        this.file \u003d new java.io.File(filePath);","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Habutiii"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Habutiii"},"content":"            try {","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Habutiii"},"content":"                // Create the file if it does not exist","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Habutiii"},"content":"                file.createNewFile();","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Habutiii"},"content":"            } catch (java.io.IOException e) {","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Habutiii"},"content":"                throw new RuntimeException(\"Failed to create storage file: \" + e.getMessage());","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Habutiii"},"content":"            }","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Habutiii"},"content":"    public ArrayList\u003cString\u003e load() throws HaBotException {","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Habutiii"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Habutiii"},"content":"        // Check if the file exists before attempting to load","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Habutiii"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Habutiii"},"content":"            // No saved tasks found. Starting with an empty task list.","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Habutiii"},"content":"            return lines;","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Habutiii"},"content":"        // Load the tasks from plain text format","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Habutiii"},"content":"        try (java.io.BufferedReader reader \u003d new java.io.BufferedReader(new java.io.FileReader(file))) {","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Habutiii"},"content":"            String line;","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Habutiii"},"content":"            // read all lines and store them in a String list","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Habutiii"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Habutiii"},"content":"                lines.add(line);","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Habutiii"},"content":"            }","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Habutiii"},"content":"            return lines;","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Habutiii"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Habutiii"},"content":"            throw new HaBotException(\"Error reading from file: \" + e.getMessage());","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Habutiii"},"content":"    public void save(List\u003cString\u003e lines) throws HaBotException {","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Habutiii"},"content":"        // Save the tasks to plain text format","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Habutiii"},"content":"        try (java.io.PrintWriter writer \u003d new java.io.PrintWriter(new java.io.FileWriter(file))) {","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Habutiii"},"content":"            for (String line : lines) {","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Habutiii"},"content":"                // Write each line to the file","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Habutiii"},"content":"                writer.println(line);","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Habutiii"},"content":"            }","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Habutiii"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Habutiii"},"content":"            throw new HaBotException(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Habutiii"},"content":"}","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false}],"authorContributionMap":{"Habutiii":56}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Habutiii"},"content":"/**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Habutiii"},"content":" * Represents a generic task with a description and completion status.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Habutiii"},"content":" */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Habutiii"},"content":"public class Task {","lastModifiedDate":"2025-08-18T21:05:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Habutiii"},"content":"    //The description of the task.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Habutiii"},"content":"    protected String description;","lastModifiedDate":"2025-08-18T21:05:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Habutiii"},"content":"    // Indicates whether the task is completed.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Habutiii"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-18T21:05:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T21:05:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Habutiii"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Habutiii"},"content":"     * The task is initially not done.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Habutiii"},"content":"     *","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Habutiii"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Habutiii"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-18T21:05:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Habutiii"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-18T21:05:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Habutiii"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-18T21:05:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-18T21:05:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T21:05:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Habutiii"},"content":"     * Returns the status icon representing whether the task is done.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Habutiii"},"content":"     *","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Habutiii"},"content":"     * @return \"X\" if done, otherwise a space.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Habutiii"},"content":"    public String getMarkStatusIcon() {","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T21:05:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Habutiii"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-18T21:05:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T21:05:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Habutiii"},"content":"     * Returns the string representation of the task, including status and description.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Habutiii"},"content":"     *","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Habutiii"},"content":"     * @return String representation of the task.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Habutiii"},"content":"    public String toString() {","lastModifiedDate":"2025-08-18T21:05:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Habutiii"},"content":"        return \"[\" + this.getMarkStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-18T21:05:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T21:05:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Habutiii"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Habutiii"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-18T21:05:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Habutiii"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-18T21:05:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T21:05:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Habutiii"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Habutiii"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-08-18T21:05:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Habutiii"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-18T21:05:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Habutiii"},"content":"     * Converts the task to a plain text format for saving.","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Habutiii"},"content":"     * Escapes the \u0027|\u0027 character in the description to avoid conflicts.","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Habutiii"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Habutiii"},"content":"    public String toStoreFormat() {","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Habutiii"},"content":"        throw new HaBotException(\"toStoreFormat() not implemented for Task class. Use subclasses instead.\");","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Habutiii"},"content":"     * Creates a Task object from a plain text format.","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Habutiii"},"content":"     * Unescapes the \u0027|\u0027 character in the description.","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Habutiii"},"content":"     * @param text The plain text representation of the task.","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Habutiii"},"content":"     * @return A Task object.","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Habutiii"},"content":"    public static Task fromStoreFormat(String text) throws HaBotException {","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Habutiii"},"content":"        String[] parts \u003d text.split(\"\\\\|\", -1); // Split into all parts","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Habutiii"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Habutiii"},"content":"            throw new HaBotException(\"Invalid task format: \" + text);","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Habutiii"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Habutiii"},"content":"        return switch (type) {","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Habutiii"},"content":"        case \"T\" -\u003e ToDo.fromStoreFormat(text);","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Habutiii"},"content":"        case \"D\" -\u003e Deadline.fromStoreFormat(text);","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Habutiii"},"content":"        case \"E\" -\u003e Event.fromStoreFormat(text);","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Habutiii"},"content":"        default -\u003e throw new HaBotException(\"Unknown task type: \" + type);","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Habutiii"},"content":"        };","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Habutiii"},"content":"}","lastModifiedDate":"2025-08-18T21:05:52","isFullCredit":false}],"authorContributionMap":{"Habutiii":86}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Habutiii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Habutiii"},"content":"import java.util.List;","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Habutiii"},"content":"/**","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Habutiii"},"content":" * Manages a list of Task objects, providing methods to add, remove, retrieve, list, and mark tasks.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Habutiii"},"content":" */","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Habutiii"},"content":"public class TaskList {","lastModifiedDate":"2025-08-22T23:48:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Habutiii"},"content":"     * The list of tasks managed by this TaskManager.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Habutiii"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Habutiii"},"content":"    private final Storage storage;","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Habutiii"},"content":"     * Constructs a new TaskManager with an empty list of tasks.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Habutiii"},"content":"    public TaskList(String filePath) throws HaBotException {","lastModifiedDate":"2025-08-22T23:48:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Habutiii"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Habutiii"},"content":"        this.tasks \u003d this.load(); // Load tasks from file on initialization","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Habutiii"},"content":"    private ArrayList\u003cTask\u003e load() throws HaBotException {","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Habutiii"},"content":"        // Initialize an empty list to hold the tasks","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Habutiii"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Habutiii"},"content":"        // Load the tasks from plain text format","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Habutiii"},"content":"        ArrayList\u003cString\u003e lines \u003d storage.load();","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Habutiii"},"content":"        // Parse each line into a Task object and add it to the list","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Habutiii"},"content":"        for (String line : lines) {","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Habutiii"},"content":"            if (line.trim().isEmpty()) {","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Habutiii"},"content":"                continue; // skip empty line","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Habutiii"},"content":"            }","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Habutiii"},"content":"            try {","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Habutiii"},"content":"                Task task \u003d Task.fromStoreFormat(line);","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Habutiii"},"content":"                tasks.add(task);","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Habutiii"},"content":"            } catch (HaBotException e) {","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Habutiii"},"content":"                throw new HaBotException(\"Error loading task from file: \" + e.getMessage());","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Habutiii"},"content":"            }","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Habutiii"},"content":"        return tasks;","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Habutiii"},"content":"    private void save() throws HaBotException {","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Habutiii"},"content":"        // Save the tasks to plain text format","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Habutiii"},"content":"        List\u003cString\u003e lines \u003d tasks.stream()","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Habutiii"},"content":"                .map(Task::toStoreFormat)","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Habutiii"},"content":"                .toList();","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Habutiii"},"content":"        // Save the lines to storage","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Habutiii"},"content":"        storage.save(lines);","lastModifiedDate":"2025-08-23T00:31:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Habutiii"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Habutiii"},"content":"     * @return The size of the task list.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Habutiii"},"content":"    public int size() {","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Habutiii"},"content":"        return tasks.size();","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Habutiii"},"content":"     * Validates that the given index is within the bounds of the task list.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Habutiii"},"content":"     * @param index The index to validate.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Habutiii"},"content":"     * @throws HaBotException If the index is out of bounds.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Habutiii"},"content":"    private void validateIndex(int index) throws HaBotException {","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Habutiii"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Habutiii"},"content":"            throw new HaBotException(\"Invalid task index.\");","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Habutiii"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Habutiii"},"content":"     * @param task The task to add.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Habutiii"},"content":"    public void add(Task task) throws HaBotException {","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Habutiii"},"content":"        tasks.add(task);","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Habutiii"},"content":"        save();","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Habutiii"},"content":"     * Removes and returns the task at the specified index.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Habutiii"},"content":"     * @param index The index of the task to remove (0-based).","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Habutiii"},"content":"     * @return The removed Task.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Habutiii"},"content":"     * @throws HaBotException If the index is out of bounds.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Habutiii"},"content":"    public Task remove(int index) throws HaBotException {","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Habutiii"},"content":"        validateIndex(index);","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Habutiii"},"content":"        Task removedTask \u003d tasks.get(index);","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Habutiii"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Habutiii"},"content":"        save();","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Habutiii"},"content":"        return removedTask;","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Habutiii"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Habutiii"},"content":"     * @param index The index of the task to retrieve (0-based).","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Habutiii"},"content":"     * @return The Task at the given index.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Habutiii"},"content":"     * @throws HaBotException If the index is out of bounds.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Habutiii"},"content":"    public Task get(int index) throws HaBotException {","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Habutiii"},"content":"        validateIndex(index);","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Habutiii"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Habutiii"},"content":"     * Returns a formatted string listing all tasks.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Habutiii"},"content":"     * @return A string listing all tasks, each on a new line.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Habutiii"},"content":"     * @throws HaBotException If there are no tasks stored yet.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Habutiii"},"content":"    public String list() throws HaBotException{","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Habutiii"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Habutiii"},"content":"            throw new HaBotException(\"No task stored yet.\");","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Habutiii"},"content":"        StringBuilder out \u003d new StringBuilder();","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Habutiii"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Habutiii"},"content":"            out.append(i + 1).append(\".\").append(tasks.get(i));","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Habutiii"},"content":"            if (i \u003c tasks.size() - 1) {","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Habutiii"},"content":"                out.append(\"\\n\");","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Habutiii"},"content":"            }","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Habutiii"},"content":"        return out.toString();","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Habutiii"},"content":"     * Marks or unmarks the task at the specified index as done or not done.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Habutiii"},"content":"     * @param index The index of the task to mark (0-based).","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Habutiii"},"content":"     * @param isDone True to mark as done, false to unmark.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Habutiii"},"content":"     * @throws HaBotException If the index is out of bounds.","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Habutiii"},"content":"    public Task mark(int index, boolean isDone) throws HaBotException {","lastModifiedDate":"2025-08-22T19:34:06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Habutiii"},"content":"        validateIndex(index);","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Habutiii"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Habutiii"},"content":"        if (isDone) {","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Habutiii"},"content":"            task.markAsDone();","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Habutiii"},"content":"        } else {","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Habutiii"},"content":"            task.markAsNotDone();","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Habutiii"},"content":"        save();","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Habutiii"},"content":"        return task;","lastModifiedDate":"2025-08-22T19:34:06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Habutiii"},"content":"}","lastModifiedDate":"2025-08-22T17:27:44","isFullCredit":false}],"authorContributionMap":{"Habutiii":142}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Habutiii"},"content":"/**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Habutiii"},"content":" * Represents a to-do task that has no functional difference from the Task Class.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Habutiii"},"content":" */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Habutiii"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Habutiii"},"content":"     * Constructs a ToDo task with the specified description.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Habutiii"},"content":"     *","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Habutiii"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Habutiii"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T15:53:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Habutiii"},"content":"        super(description);","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Habutiii"},"content":"    @Override","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Habutiii"},"content":"    public String toString() {","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Habutiii"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Habutiii"},"content":"    @Override","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Habutiii"},"content":"    public String toStoreFormat() {","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Habutiii"},"content":"        String escapedDescription \u003d description.replace(\"|\", \"\\\\|\");","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Habutiii"},"content":"        return \"T|\" + getMarkStatusIcon() + \"|\" + escapedDescription;","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Habutiii"},"content":"    public static ToDo fromStoreFormat(String text) {","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Habutiii"},"content":"        String[] parts \u003d text.split(\"\\\\|\", -1);","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Habutiii"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Habutiii"},"content":"            throw new IllegalArgumentException(\"Invalid ToDo format: \" + text);","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Habutiii"},"content":"        boolean isDone \u003d parts[1].equals(\"X\");","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Habutiii"},"content":"        String description \u003d parts[2].replace(\"\\\\|\", \"|\");","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Habutiii"},"content":"        ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Habutiii"},"content":"        if (isDone) {","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Habutiii"},"content":"            todo.markAsDone();","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Habutiii"},"content":"        }","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Habutiii"},"content":"        return todo;","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T19:37:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Habutiii"},"content":"}","lastModifiedDate":"2025-08-18T22:38:54","isFullCredit":false}],"authorContributionMap":{"Habutiii":40}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Habutiii"},"content":"public class Ui {","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Habutiii"},"content":"    // Define the name of the bot","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Habutiii"},"content":"    private static final String NAME \u003d \"HaBot\";","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Habutiii"},"content":"    private static final String SEPARATOR \u003d \"-\".repeat(50);","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Habutiii"},"content":"     * Prints a formatted message in standardised format.","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Habutiii"},"content":"     * @param message The message to display.","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Habutiii"},"content":"    public void send(String message) {","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Habutiii"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Habutiii"},"content":"        System.out.println(\"\u003c|°_°|\u003e\");","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Habutiii"},"content":"        System.out.println(message);","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Habutiii"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Habutiii"},"content":"     * Prints the greeting message and bot logo.","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Habutiii"},"content":"    public void greet() {","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Habutiii"},"content":"        String logo \u003d \"\"\"","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Habutiii"},"content":"                 _     _           ____ \\s","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Habutiii"},"content":"                 |_____|  ____    |____]   ____  __|__  \\s","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Habutiii"},"content":"                 |     | |____|__ |_____] |____|   |__  \\s","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Habutiii"},"content":"                \"\"\";","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Habutiii"},"content":"        System.out.println(logo);","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Habutiii"},"content":"        send(\"Hello! I\u0027m \" + NAME + \"! (* v *)ノシ\\nWhat can I do for you?\");","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Habutiii"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Habutiii"},"content":"    public void bye() {","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Habutiii"},"content":"        send(\"Bye. Hope to see you again soon! (•̀ᴗ•́)و ✧\");","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Habutiii"},"content":"     * Returns a hint string showing the number of tasks left to do.","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Habutiii"},"content":"     * @return A formatted string with the number of tasks remaining.","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Habutiii"},"content":"    public String taskLeftHint(int taskCount) {","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Habutiii"},"content":"        return \"The number of tasks you have to do: ★ \" + taskCount + \" ★ ノ(゜-゜ノ)\";","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Habutiii"},"content":"    /**","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Habutiii"},"content":"     * Lists all stored tasks.","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Habutiii"},"content":"     * @throws HaBotException If no tasks are stored.","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Habutiii"},"content":"     */","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Habutiii"},"content":"    public void listTasks(String taskListStr) throws HaBotException {","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Habutiii"},"content":"        // Print the list of tasks","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Habutiii"},"content":"        String hint \u003d \"Here are the tasks in your list (๑•̀ㅂ•́)ง✧\\n\";","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Habutiii"},"content":"        send(hint + taskListStr);","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Habutiii"},"content":"    }","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Habutiii"},"content":"}","lastModifiedDate":"2025-08-22T23:47:36","isFullCredit":false}],"authorContributionMap":{"Habutiii":55}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Habutiii"},"content":"list","lastModifiedDate":"2025-08-18T23:36:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Habutiii"},"content":"todo borrow book","lastModifiedDate":"2025-08-18T23:36:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Habutiii"},"content":"deadline return book /by 22/09/2025 1300","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Habutiii"},"content":"event project meeting /from 22/08/2025 0800 /to 22/09/2025 1300","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Habutiii"},"content":"list","lastModifiedDate":"2025-08-18T23:36:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Habutiii"},"content":"mark 1","lastModifiedDate":"2025-08-18T23:36:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Habutiii"},"content":"mark 2","lastModifiedDate":"2025-08-18T23:36:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Habutiii"},"content":"list","lastModifiedDate":"2025-08-18T23:36:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Habutiii"},"content":"unmark 1","lastModifiedDate":"2025-08-18T23:36:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Habutiii"},"content":"unmark 3","lastModifiedDate":"2025-08-18T23:36:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Habutiii"},"content":"list","lastModifiedDate":"2025-08-18T23:36:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Habutiii"},"content":"delete 1","lastModifiedDate":"2025-08-19T00:33:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Habutiii"},"content":"list","lastModifiedDate":"2025-08-19T00:33:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Habutiii"},"content":"test error","lastModifiedDate":"2025-08-19T00:13:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Habutiii"},"content":"mark 10","lastModifiedDate":"2025-08-19T00:13:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Habutiii"},"content":"unmark 11","lastModifiedDate":"2025-08-19T00:13:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Habutiii"},"content":"mark 1 2","lastModifiedDate":"2025-08-19T00:13:04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Habutiii"},"content":"unmark 1 2","lastModifiedDate":"2025-08-19T00:33:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Habutiii"},"content":"delete 1 2","lastModifiedDate":"2025-08-19T00:33:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Habutiii"},"content":"delete 10","lastModifiedDate":"2025-08-19T00:33:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Habutiii"},"content":"delete -1","lastModifiedDate":"2025-08-19T00:33:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Habutiii"},"content":"deadline should have by","lastModifiedDate":"2025-08-19T00:13:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Habutiii"},"content":"deadline wrong date /by 29131902841904","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Habutiii"},"content":"event should have from to","lastModifiedDate":"2025-08-19T00:13:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Habutiii"},"content":"event should have from \\to 22/09/2025 1300","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Habutiii"},"content":"event should have to \\from 22/09/2025 1300","lastModifiedDate":"2025-08-22T21:04:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Habutiii"},"content":"bye","lastModifiedDate":"2025-08-18T23:36:44","isFullCredit":false}],"authorContributionMap":{"Habutiii":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Habutiii"},"content":"REM remove tasks.txt if it exists","lastModifiedDate":"2025-08-22T19:31:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Habutiii"},"content":"if exist tasks.txt del tasks.txt","lastModifiedDate":"2025-08-22T19:31:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T19:31:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Habutiii"},"content":"java -classpath ..\\bin HaBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-18T23:36:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"Habutiii":4,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Habutiii"},"content":"# remove tasks.txt if it exists","lastModifiedDate":"2025-08-22T19:31:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Habutiii"},"content":"if [ -e \"../src/main/java/tasks.txt\" ]","lastModifiedDate":"2025-08-22T19:31:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Habutiii"},"content":"then","lastModifiedDate":"2025-08-22T19:31:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Habutiii"},"content":"    rm ../src/main/java/tasks.txt","lastModifiedDate":"2025-08-22T19:31:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Habutiii"},"content":"fi","lastModifiedDate":"2025-08-22T19:31:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Habutiii"},"content":"","lastModifiedDate":"2025-08-22T19:31:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Habutiii"},"content":"java -classpath ../bin HaBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-18T23:36:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"Habutiii":7,"-":37}}]
