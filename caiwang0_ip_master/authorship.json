[{"path":"src/main/java/chip/Chip.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caiwang0"},"content":"package chip;","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caiwang0"},"content":"import chip.command.Parser;","lastModifiedDate":"2025-09-03T03:48:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caiwang0"},"content":"import chip.storage.Storage;","lastModifiedDate":"2025-09-03T03:48:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caiwang0"},"content":"import chip.task.TaskList;","lastModifiedDate":"2025-09-03T03:48:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caiwang0"},"content":"import chip.ui.Ui;","lastModifiedDate":"2025-09-03T03:48:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-08-22T10:50:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caiwang0"},"content":"/**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caiwang0"},"content":" * Main class for the Chip task management application.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caiwang0"},"content":" * Handles initialization and coordination between UI, storage, and task management components.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caiwang0"},"content":" */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caiwang0"},"content":"public class Chip { ","lastModifiedDate":"2025-08-22T10:43:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-08-22T00:32:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caiwang0"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caiwang0"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caiwang0"},"content":"    private Ui ui;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caiwang0"},"content":"     * Constructs a new Chip instance with the specified file path for data storage.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caiwang0"},"content":"     * Initializes UI, storage, and loads existing tasks from file.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caiwang0"},"content":"     * @param filePath the path to the file where tasks are stored","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caiwang0"},"content":"    public Chip(String filePath) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caiwang0"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caiwang0"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caiwang0"},"content":"        try {","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caiwang0"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caiwang0"},"content":"        } catch (ChipException e) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caiwang0"},"content":"            ui.showError(\"Data file not found. Starting with an empty task list.\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caiwang0"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caiwang0"},"content":"        }","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"caiwang0"},"content":"     * Starts the main application loop.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"caiwang0"},"content":"     * Displays welcome message and continuously processes user commands until exit.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"caiwang0"},"content":"    public void run() {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"caiwang0"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"caiwang0"},"content":"        while (true) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"caiwang0"},"content":"            try {","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"caiwang0"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"caiwang0"},"content":"                ui.showLine();","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"caiwang0"},"content":"                if (fullCommand.trim().equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"caiwang0"},"content":"                    ui.showGoodbye();","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"caiwang0"},"content":"                    ui.showLine();","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"caiwang0"},"content":"                    break;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"caiwang0"},"content":"                }","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"caiwang0"},"content":"                Parser.parse(fullCommand, tasks, ui, storage);","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"caiwang0"},"content":"            } catch (ChipException e) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"caiwang0"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"caiwang0"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"caiwang0"},"content":"                ui.showError(\"I\u0027m sorry, there is no such action.\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"caiwang0"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"caiwang0"},"content":"                ui.showError(\"An unexpected error occurred. Please check your command.\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"caiwang0"},"content":"            } finally {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"caiwang0"},"content":"                ui.showLine();","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"caiwang0"},"content":"            }","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"caiwang0"},"content":"        }","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"caiwang0"},"content":"     * Entry point for the Chip application.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"caiwang0"},"content":"     * Creates a new Chip instance and starts the application.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"caiwang0"},"content":"     * @param args command line arguments (not used)","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"caiwang0"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"caiwang0"},"content":"        new Chip(\"./data/chip.txt\").run();","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-08-22T00:32:27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"caiwang0"},"content":"}","lastModifiedDate":"2025-09-03T03:49:25","isFullCredit":false}],"authorContributionMap":{"caiwang0":76}},{"path":"src/main/java/chip/ChipException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caiwang0"},"content":"package chip;","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caiwang0"},"content":"/**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caiwang0"},"content":" * Custom exception class for the Chip application.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caiwang0"},"content":" * Used to handle application-specific errors and provide meaningful error messages to users.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caiwang0"},"content":" */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caiwang0"},"content":"public class ChipException extends Exception {","lastModifiedDate":"2025-08-22T13:04:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caiwang0"},"content":"     * Constructs a new ChipException with the specified error message.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caiwang0"},"content":"     * @param message the detail message explaining the cause of the exception","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caiwang0"},"content":"    public ChipException(String message) {","lastModifiedDate":"2025-08-22T13:04:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caiwang0"},"content":"        super(message);","lastModifiedDate":"2025-08-22T13:04:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-08-22T13:04:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caiwang0"},"content":"}","lastModifiedDate":"2025-08-22T13:04:03","isFullCredit":false}],"authorContributionMap":{"caiwang0":17}},{"path":"src/main/java/chip/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caiwang0"},"content":"package chip.command;","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caiwang0"},"content":"/**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caiwang0"},"content":" * Enumeration of all available commands in the Chip application.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caiwang0"},"content":" * Each enum value represents a specific action that users can perform.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caiwang0"},"content":" */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caiwang0"},"content":"public enum Command {","lastModifiedDate":"2025-08-22T13:33:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caiwang0"},"content":"    /** Add a simple todo task */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caiwang0"},"content":"    TODO,","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caiwang0"},"content":"    /** Add a task with a deadline */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caiwang0"},"content":"    DEADLINE,","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caiwang0"},"content":"    /** Add a task that occurs during a specific time period */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caiwang0"},"content":"    EVENT,","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caiwang0"},"content":"    /** Display all tasks in the list */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caiwang0"},"content":"    LIST,","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caiwang0"},"content":"    /** Mark a task as completed */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caiwang0"},"content":"    MARK,","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caiwang0"},"content":"    /** Mark a task as not completed */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caiwang0"},"content":"    UNMARK,","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caiwang0"},"content":"    /** Remove a task from the list */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caiwang0"},"content":"    DELETE,","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caiwang0"},"content":"    /** Find tasks containing a keyword */","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caiwang0"},"content":"    FIND,","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caiwang0"},"content":"    /** Exit the application */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caiwang0"},"content":"    BYE","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caiwang0"},"content":"}","lastModifiedDate":"2025-08-22T13:33:57","isFullCredit":false}],"authorContributionMap":{"caiwang0":26}},{"path":"src/main/java/chip/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caiwang0"},"content":"package chip.command;","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caiwang0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caiwang0"},"content":"import chip.ChipException;","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caiwang0"},"content":"import chip.storage.Storage;","lastModifiedDate":"2025-09-03T04:15:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caiwang0"},"content":"import chip.task.Deadline;","lastModifiedDate":"2025-09-03T04:15:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caiwang0"},"content":"import chip.task.Event;","lastModifiedDate":"2025-09-03T04:15:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caiwang0"},"content":"import chip.task.Task;","lastModifiedDate":"2025-09-03T04:15:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caiwang0"},"content":"import chip.task.TaskList;","lastModifiedDate":"2025-09-03T04:15:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caiwang0"},"content":"import chip.task.Todo;","lastModifiedDate":"2025-09-03T04:15:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caiwang0"},"content":"import chip.ui.Ui;","lastModifiedDate":"2025-09-03T04:15:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caiwang0"},"content":"/**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caiwang0"},"content":" * Handles parsing and execution of user commands.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caiwang0"},"content":" * Converts user input strings into appropriate actions on tasks, UI, and storage.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caiwang0"},"content":" */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caiwang0"},"content":"public class Parser {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caiwang0"},"content":"     * Parses a user command and executes the corresponding action.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caiwang0"},"content":"     * @param fullCommand the complete command string entered by the user","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caiwang0"},"content":"     * @param tasks the task list to operate on","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caiwang0"},"content":"     * @param ui the user interface for displaying messages","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caiwang0"},"content":"     * @param storage the storage component for saving tasks","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caiwang0"},"content":"     * @throws ChipException if the command is invalid or cannot be executed","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caiwang0"},"content":"    public static void parse(String fullCommand, TaskList tasks, Ui ui, Storage storage) throws ChipException {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caiwang0"},"content":"        String[] parts \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caiwang0"},"content":"        Command action \u003d Command.valueOf(parts[0].toUpperCase());","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"caiwang0"},"content":"        switch (action) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"caiwang0"},"content":"        case LIST:","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"caiwang0"},"content":"            showTaskList(tasks, ui);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"caiwang0"},"content":"            break;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"caiwang0"},"content":"        case MARK:","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"caiwang0"},"content":"            markTask(parts, tasks, ui, storage);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"caiwang0"},"content":"            break;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"caiwang0"},"content":"        case UNMARK:","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"caiwang0"},"content":"            unmarkTask(parts, tasks, ui, storage);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"caiwang0"},"content":"            break;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"caiwang0"},"content":"        case DELETE:","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"caiwang0"},"content":"            deleteTask(parts, tasks, ui, storage);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"caiwang0"},"content":"            break;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"caiwang0"},"content":"        case TODO:","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"caiwang0"},"content":"            addTodo(parts, tasks, ui, storage);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"caiwang0"},"content":"            break;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"caiwang0"},"content":"        case DEADLINE:","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"caiwang0"},"content":"            addDeadline(parts, tasks, ui, storage);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"caiwang0"},"content":"            break;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"caiwang0"},"content":"        case EVENT:","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"caiwang0"},"content":"            addEvent(parts, tasks, ui, storage);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"caiwang0"},"content":"            break;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"caiwang0"},"content":"        case FIND:","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"caiwang0"},"content":"            findTasks(parts, tasks, ui);","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"caiwang0"},"content":"            break;","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"caiwang0"},"content":"        }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"caiwang0"},"content":"     * Displays all tasks in the task list with their index numbers.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"caiwang0"},"content":"     * @param tasks the task list to display","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"caiwang0"},"content":"     * @param ui the user interface for showing messages","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"caiwang0"},"content":"    private static void showTaskList(TaskList tasks, Ui ui) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"caiwang0"},"content":"        ui.showMessage(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"caiwang0"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"caiwang0"},"content":"            ui.showMessage(\" \" + (i + 1) + \".\" + tasks.getTask(i));","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"caiwang0"},"content":"        }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"caiwang0"},"content":"     * Marks a specified task as completed.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"caiwang0"},"content":"     * @param parts command parts where parts[1] should contain the task number","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"caiwang0"},"content":"     * @param tasks the task list containing the task to mark","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"caiwang0"},"content":"     * @param ui the user interface for showing messages","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"caiwang0"},"content":"     * @param storage the storage component for saving changes","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"caiwang0"},"content":"     * @throws ChipException if task number is not specified or invalid","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"caiwang0"},"content":"    private static void markTask(String[] parts, TaskList tasks, Ui ui, Storage storage) throws ChipException {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"caiwang0"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"caiwang0"},"content":"            throw new ChipException(\"Please specify which task to mark.\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"caiwang0"},"content":"        }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"caiwang0"},"content":"        int taskNumber \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"caiwang0"},"content":"        Task task \u003d tasks.getTask(taskNumber);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"caiwang0"},"content":"        task.markAsDone();","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"caiwang0"},"content":"        ui.showMessage(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"caiwang0"},"content":"        ui.showMessage(\"   \" + task);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"caiwang0"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"caiwang0"},"content":"     * Marks a specified task as not completed.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"caiwang0"},"content":"     * @param parts command parts where parts[1] should contain the task number","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"caiwang0"},"content":"     * @param tasks the task list containing the task to unmark","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"caiwang0"},"content":"     * @param ui the user interface for showing messages","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"caiwang0"},"content":"     * @param storage the storage component for saving changes","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"caiwang0"},"content":"     * @throws ChipException if task number is not specified or invalid","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"caiwang0"},"content":"    private static void unmarkTask(String[] parts, TaskList tasks, Ui ui, Storage storage) throws ChipException {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"caiwang0"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"caiwang0"},"content":"            throw new ChipException(\"Please specify which task to unmark.\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"caiwang0"},"content":"        }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"caiwang0"},"content":"        int taskNumber \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"caiwang0"},"content":"        Task task \u003d tasks.getTask(taskNumber);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"caiwang0"},"content":"        task.markAsNotDone();","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"caiwang0"},"content":"        ui.showMessage(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"caiwang0"},"content":"        ui.showMessage(\"   \" + task);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"caiwang0"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"caiwang0"},"content":"     * Deletes a specified task from the task list.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"caiwang0"},"content":"     * @param parts command parts where parts[1] should contain the task number","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"caiwang0"},"content":"     * @param tasks the task list to delete from","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"caiwang0"},"content":"     * @param ui the user interface for showing messages","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"caiwang0"},"content":"     * @param storage the storage component for saving changes","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"caiwang0"},"content":"     * @throws ChipException if task number is not specified or invalid","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"caiwang0"},"content":"    private static void deleteTask(String[] parts, TaskList tasks, Ui ui, Storage storage) throws ChipException {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"caiwang0"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"caiwang0"},"content":"            throw new ChipException(\"Please specify which task to delete.\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"caiwang0"},"content":"        }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"caiwang0"},"content":"        int taskNumber \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"caiwang0"},"content":"        Task removedTask \u003d tasks.deleteTask(taskNumber);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"caiwang0"},"content":"        ui.showMessage(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"caiwang0"},"content":"        ui.showMessage(\"   \" + removedTask);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"caiwang0"},"content":"        ui.showMessage(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"caiwang0"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"caiwang0"},"content":"     * Adds a new todo task to the task list.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"caiwang0"},"content":"     * @param parts command parts where parts[1] should contain the task description","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"caiwang0"},"content":"     * @param tasks the task list to add to","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"caiwang0"},"content":"     * @param ui the user interface for showing messages","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"caiwang0"},"content":"     * @param storage the storage component for saving changes","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"caiwang0"},"content":"     * @throws ChipException if task description is empty","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"caiwang0"},"content":"    private static void addTodo(String[] parts, TaskList tasks, Ui ui, Storage storage) throws ChipException {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"caiwang0"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"caiwang0"},"content":"            throw new ChipException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"caiwang0"},"content":"        }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"caiwang0"},"content":"        Task newTodo \u003d new Todo(parts[1]);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"caiwang0"},"content":"        tasks.addTask(newTodo);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"caiwang0"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"caiwang0"},"content":"        ui.showMessage(\"   \" + newTodo);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"caiwang0"},"content":"        ui.showMessage(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"caiwang0"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"caiwang0"},"content":"     * Adds a new deadline task to the task list.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"caiwang0"},"content":"     * @param parts command parts containing description and deadline in format \"description /by deadline\"","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"caiwang0"},"content":"     * @param tasks the task list to add to","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"caiwang0"},"content":"     * @param ui the user interface for showing messages","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"caiwang0"},"content":"     * @param storage the storage component for saving changes","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"caiwang0"},"content":"     * @throws ChipException if description is empty or deadline format is invalid","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"caiwang0"},"content":"    private static void addDeadline(String[] parts, TaskList tasks, Ui ui, Storage storage) throws ChipException {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"caiwang0"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"caiwang0"},"content":"            throw new ChipException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"caiwang0"},"content":"        }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"caiwang0"},"content":"        String[] deadlineParts \u003d parts[1].split(\" /by \");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"caiwang0"},"content":"        if (deadlineParts.length \u003c 2) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"caiwang0"},"content":"            throw new ChipException(\"Please specify the deadline time using /by.\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"caiwang0"},"content":"        }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"caiwang0"},"content":"        Task newDeadline \u003d new Deadline(deadlineParts[0], deadlineParts[1]);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"caiwang0"},"content":"        tasks.addTask(newDeadline);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"caiwang0"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"caiwang0"},"content":"        ui.showMessage(\"   \" + newDeadline);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"caiwang0"},"content":"        ui.showMessage(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"caiwang0"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"caiwang0"},"content":"     * Adds a new event task to the task list.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"caiwang0"},"content":"     * @param parts command parts containing description and times in format \"description /from start /to end\"","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"caiwang0"},"content":"     * @param tasks the task list to add to","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"caiwang0"},"content":"     * @param ui the user interface for showing messages","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"caiwang0"},"content":"     * @param storage the storage component for saving changes","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"caiwang0"},"content":"     * @throws ChipException if description is empty or time format is invalid","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"caiwang0"},"content":"    private static void addEvent(String[] parts, TaskList tasks, Ui ui, Storage storage) throws ChipException {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"caiwang0"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"caiwang0"},"content":"            throw new ChipException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"caiwang0"},"content":"        }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"caiwang0"},"content":"        String[] eventParts \u003d parts[1].split(\" /from \");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"caiwang0"},"content":"        if (eventParts.length \u003c 2) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"caiwang0"},"content":"            throw new ChipException(\"Please specify the event start time using /from.\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"caiwang0"},"content":"        }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"caiwang0"},"content":"        String[] timeParts \u003d eventParts[1].split(\" /to \");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"caiwang0"},"content":"        if (timeParts.length \u003c 2) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"caiwang0"},"content":"            throw new ChipException(\"Please specify the event end time using /to.\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"caiwang0"},"content":"        }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"caiwang0"},"content":"        Task newEvent \u003d new Event(eventParts[0], timeParts[0], timeParts[1]);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"caiwang0"},"content":"        tasks.addTask(newEvent);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"caiwang0"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"caiwang0"},"content":"        ui.showMessage(\"   \" + newEvent);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"caiwang0"},"content":"        ui.showMessage(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"caiwang0"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"caiwang0"},"content":"     * Finds and displays tasks that contain the specified keyword.","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"caiwang0"},"content":"     * @param parts command parts where parts[1] should contain the search keyword","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"caiwang0"},"content":"     * @param tasks the task list to search in","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"caiwang0"},"content":"     * @param ui the user interface for showing messages","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"caiwang0"},"content":"     * @throws ChipException if no keyword is provided","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"caiwang0"},"content":"    private static void findTasks(String[] parts, TaskList tasks, Ui ui) throws ChipException {","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"caiwang0"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"caiwang0"},"content":"            throw new ChipException(\"Please specify a keyword to search for.\");","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"caiwang0"},"content":"        }","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"caiwang0"},"content":"        String keyword \u003d parts[1];","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"caiwang0"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"caiwang0"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"caiwang0"},"content":"            ui.showMessage(\"No matching tasks found.\");","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"caiwang0"},"content":"        } else {","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"caiwang0"},"content":"            ui.showMessage(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"caiwang0"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"caiwang0"},"content":"                ui.showMessage(\" \" + (i + 1) + \".\" + matchingTasks.get(i));","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"caiwang0"},"content":"            }","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"caiwang0"},"content":"        }","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"caiwang0"},"content":"}","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false}],"authorContributionMap":{"caiwang0":237}},{"path":"src/main/java/chip/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caiwang0"},"content":"package chip.storage;","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caiwang0"},"content":"import java.io.File;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caiwang0"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caiwang0"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caiwang0"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caiwang0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caiwang0"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caiwang0"},"content":"import chip.ChipException;","lastModifiedDate":"2025-09-03T04:15:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caiwang0"},"content":"import chip.task.Deadline;","lastModifiedDate":"2025-09-03T04:15:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caiwang0"},"content":"import chip.task.Event;","lastModifiedDate":"2025-09-03T04:15:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caiwang0"},"content":"import chip.task.Task;","lastModifiedDate":"2025-09-03T04:15:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caiwang0"},"content":"import chip.task.Todo;","lastModifiedDate":"2025-09-03T04:15:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-03T04:15:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caiwang0"},"content":"/**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caiwang0"},"content":" * Handles loading and saving of tasks to and from a file.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caiwang0"},"content":" * Manages file I/O operations and data persistence for the task management system.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caiwang0"},"content":" */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caiwang0"},"content":"public class Storage {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caiwang0"},"content":"    private final String filePath;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caiwang0"},"content":"     * Constructs a Storage instance with the specified file path.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caiwang0"},"content":"     * @param filePath the path to the file for storing task data","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caiwang0"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caiwang0"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"caiwang0"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"caiwang0"},"content":"     * Parses the file format and creates appropriate Task objects.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"caiwang0"},"content":"     * @return ArrayList of tasks loaded from the file, empty list if file doesn\u0027t exist","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"caiwang0"},"content":"     * @throws ChipException if file is corrupted or cannot be read","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"caiwang0"},"content":"    public ArrayList\u003cTask\u003e load() throws ChipException {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"caiwang0"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"caiwang0"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"caiwang0"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"caiwang0"},"content":"            return tasks;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"caiwang0"},"content":"        }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"caiwang0"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"caiwang0"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"caiwang0"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"caiwang0"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"caiwang0"},"content":"                Task task \u003d null;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"caiwang0"},"content":"                switch (parts[0]) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"caiwang0"},"content":"                case \"T\":","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"caiwang0"},"content":"                    task \u003d new Todo(parts[2]);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"caiwang0"},"content":"                    break;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"caiwang0"},"content":"                case \"D\":","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"caiwang0"},"content":"                    task \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"caiwang0"},"content":"                    break;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"caiwang0"},"content":"                case \"E\":","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"caiwang0"},"content":"                    task \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"caiwang0"},"content":"                    break;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"caiwang0"},"content":"                }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"caiwang0"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"caiwang0"},"content":"                    if (parts[1].equals(\"1\")) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"caiwang0"},"content":"                        task.markAsDone();","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"caiwang0"},"content":"                    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"caiwang0"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"caiwang0"},"content":"                }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"caiwang0"},"content":"            }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"caiwang0"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"caiwang0"},"content":"            throw new ChipException(\"Data file not found. Starting fresh.\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"caiwang0"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"caiwang0"},"content":"            throw new ChipException(\"Error loading tasks from file. The file might be corrupted.\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"caiwang0"},"content":"        }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"caiwang0"},"content":"        return tasks;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"caiwang0"},"content":"     * Saves the list of tasks to the storage file.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"caiwang0"},"content":"     * Creates the directory if it doesn\u0027t exist and writes tasks in the proper format.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"caiwang0"},"content":"     * @param tasks the list of tasks to save","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"caiwang0"},"content":"     * @throws ChipException if an I/O error occurs during saving","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"caiwang0"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws ChipException {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"caiwang0"},"content":"        try {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"caiwang0"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"caiwang0"},"content":"            File directory \u003d file.getParentFile();","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"caiwang0"},"content":"            if (directory !\u003d null \u0026\u0026 !directory.exists()) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"caiwang0"},"content":"                directory.mkdirs();","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"caiwang0"},"content":"            }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"caiwang0"},"content":"            try (FileWriter writer \u003d new FileWriter(file)) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"caiwang0"},"content":"                for (Task task : tasks) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"caiwang0"},"content":"                    writer.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"caiwang0"},"content":"                }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"caiwang0"},"content":"            }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"caiwang0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"caiwang0"},"content":"            throw new ChipException(\"An error occurred while saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"caiwang0"},"content":"        }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"caiwang0"},"content":"}","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false}],"authorContributionMap":{"caiwang0":103}},{"path":"src/main/java/chip/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caiwang0"},"content":"package chip.task;","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caiwang0"},"content":"import chip.ChipException;","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caiwang0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caiwang0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caiwang0"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caiwang0"},"content":"/**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caiwang0"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caiwang0"},"content":" * Extends the base Task class to include deadline functionality and formatting.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caiwang0"},"content":" */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caiwang0"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-22T12:19:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caiwang0"},"content":"    private LocalDateTime by;","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-08-22T12:19:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caiwang0"},"content":"     * Constructs a new Deadline task with the given description and deadline.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caiwang0"},"content":"     * @param description the description of the deadline task","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caiwang0"},"content":"     * @param by the deadline date/time in format \"yyyy-MM-dd HHmm\"","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caiwang0"},"content":"     * @throws ChipException if the date/time format is invalid","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caiwang0"},"content":"    public Deadline(String description, String by) throws ChipException {","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caiwang0"},"content":"        super(description);","lastModifiedDate":"2025-08-22T12:19:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caiwang0"},"content":"        try {","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caiwang0"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caiwang0"},"content":"            this.by \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caiwang0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caiwang0"},"content":"            throw new ChipException(\"Please use the date/time format yyyy-MM-dd HHmm.\");","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caiwang0"},"content":"        }","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-08-22T12:19:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-08-22T12:19:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"caiwang0"},"content":"     * Returns the file format string for this deadline task.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"caiwang0"},"content":"     * Format: \"D | status | description | deadline\"","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"caiwang0"},"content":"     * @return the file format string representation","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"caiwang0"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"caiwang0"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"caiwang0"},"content":"        String formattedDate \u003d this.by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"caiwang0"},"content":"        return \"D | \" + super.toFileString() + \" | \" + formattedDate;","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"caiwang0"},"content":"     * Returns the display format string for this deadline task.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"caiwang0"},"content":"     * Format: \"[D][status] description (by: formatted_date)\"","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"caiwang0"},"content":"     * @return the display format string representation","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"caiwang0"},"content":"    @Override","lastModifiedDate":"2025-08-22T12:19:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"caiwang0"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T12:19:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"caiwang0"},"content":"        String formattedDate \u003d this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\"));","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"caiwang0"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-08-22T12:19:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"caiwang0"},"content":"}","lastModifiedDate":"2025-08-22T12:19:12","isFullCredit":false}],"authorContributionMap":{"caiwang0":55}},{"path":"src/main/java/chip/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caiwang0"},"content":"package chip.task;","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caiwang0"},"content":"import chip.ChipException;","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caiwang0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caiwang0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caiwang0"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caiwang0"},"content":"/**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caiwang0"},"content":" * Represents a task that occurs during a specific time period.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caiwang0"},"content":" * Extends the base Task class to include start and end time functionality.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caiwang0"},"content":" */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caiwang0"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-22T12:19:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caiwang0"},"content":"    private LocalDateTime from;","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caiwang0"},"content":"    private LocalDateTime to;","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-08-22T12:19:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caiwang0"},"content":"     * Constructs a new Event task with the given description, start time, and end time.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caiwang0"},"content":"     * @param description the description of the event","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caiwang0"},"content":"     * @param from the start date/time in format \"yyyy-MM-dd HHmm\"","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caiwang0"},"content":"     * @param to the end date/time in format \"yyyy-MM-dd HHmm\"","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caiwang0"},"content":"     * @throws ChipException if the date/time format is invalid","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caiwang0"},"content":"    public Event(String description, String from, String to) throws ChipException {","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caiwang0"},"content":"        super(description);","lastModifiedDate":"2025-08-22T12:19:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caiwang0"},"content":"        try {","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caiwang0"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caiwang0"},"content":"            this.from \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caiwang0"},"content":"            this.to \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caiwang0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caiwang0"},"content":"            throw new ChipException(\"Oops! Please use the date/time format yyyy-MM-dd HHmm for from/to dates.\");","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caiwang0"},"content":"        }","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-08-22T12:19:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-08-22T12:19:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"caiwang0"},"content":"     * Returns the file format string for this event task.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"caiwang0"},"content":"     * Format: \"E | status | description | start_time | end_time\"","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"caiwang0"},"content":"     * @return the file format string representation","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"caiwang0"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"caiwang0"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"caiwang0"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"caiwang0"},"content":"        String formattedFrom \u003d this.from.format(formatter);","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"caiwang0"},"content":"        String formattedTo \u003d this.to.format(formatter);","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"caiwang0"},"content":"        return \"E | \" + super.toFileString() + \" | \" + formattedFrom + \" | \" + formattedTo;","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"caiwang0"},"content":"     * Returns the display format string for this event task.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"caiwang0"},"content":"     * Format: \"[E][status] description (from: formatted_start_date to: formatted_end_time)\"","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"caiwang0"},"content":"     * @return the display format string representation","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"caiwang0"},"content":"    @Override","lastModifiedDate":"2025-08-22T12:19:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"caiwang0"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T12:19:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"caiwang0"},"content":"        String formattedFrom \u003d this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\"));","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"caiwang0"},"content":"        String formattedTo \u003d this.to.format(DateTimeFormatter.ofPattern(\"h:mma\"));","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"caiwang0"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formattedFrom + \" to: \" + formattedTo + \")\";","lastModifiedDate":"2025-08-29T00:46:10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-08-22T12:19:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"caiwang0"},"content":"}","lastModifiedDate":"2025-08-22T12:19:12","isFullCredit":false}],"authorContributionMap":{"caiwang0":61}},{"path":"src/main/java/chip/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caiwang0"},"content":"package chip.task;","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caiwang0"},"content":"import chip.ChipException;","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caiwang0"},"content":"/**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caiwang0"},"content":" * Represents a generic task with a description and completion status.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caiwang0"},"content":" * This is the base class for all specific task types (Todo, Deadline, Event).","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caiwang0"},"content":" */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caiwang0"},"content":"public class Task {","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caiwang0"},"content":"    private String description;","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caiwang0"},"content":"    private boolean isDone;","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caiwang0"},"content":"     * Constructs a new Task with the given description.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caiwang0"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caiwang0"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caiwang0"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caiwang0"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caiwang0"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caiwang0"},"content":"     * Marks this task as completed.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caiwang0"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caiwang0"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caiwang0"},"content":"     * Marks this task as not completed.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"caiwang0"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"caiwang0"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"caiwang0"},"content":"     * Returns the status icon for this task.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"caiwang0"},"content":"     * @return \"X\" if task is done, \" \" (space) if not done","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"caiwang0"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"caiwang0"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"caiwang0"},"content":"     * Returns the string representation for saving to file.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"caiwang0"},"content":"     * Format: \"status | description\" where status is \"1\" for done, \"0\" for not done.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"caiwang0"},"content":"     * @return the file format string representation of this task","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"caiwang0"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"caiwang0"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"caiwang0"},"content":"     * Returns the string representation for display to user.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"caiwang0"},"content":"     * Format: \"[status] description\" where status is \"X\" for done, \" \" for not done.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"caiwang0"},"content":"     * @return the display format string representation of this task","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"caiwang0"},"content":"    @Override","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"caiwang0"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"caiwang0"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"caiwang0"},"content":"}","lastModifiedDate":"2025-08-22T11:32:59","isFullCredit":false}],"authorContributionMap":{"caiwang0":67}},{"path":"src/main/java/chip/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caiwang0"},"content":"package chip.task;","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caiwang0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caiwang0"},"content":"/**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caiwang0"},"content":" * Manages a list of tasks with operations to add, delete, and retrieve tasks.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caiwang0"},"content":" * Provides an abstraction over the underlying ArrayList for task management.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caiwang0"},"content":" */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caiwang0"},"content":"public class TaskList {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caiwang0"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caiwang0"},"content":"     * Constructs a TaskList with an existing list of tasks.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caiwang0"},"content":"     * @param tasks the existing list of tasks to manage","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caiwang0"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caiwang0"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caiwang0"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caiwang0"},"content":"    public TaskList() {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caiwang0"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caiwang0"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caiwang0"},"content":"     * @param task the task to add","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"caiwang0"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"caiwang0"},"content":"        tasks.add(task);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"caiwang0"},"content":"     * Removes and returns a task at the specified index.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"caiwang0"},"content":"     * @param index the index of the task to delete (0-based)","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"caiwang0"},"content":"     * @return the deleted task","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"caiwang0"},"content":"     * @throws IndexOutOfBoundsException if index is out of range","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"caiwang0"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"caiwang0"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"caiwang0"},"content":"     * Retrieves a task at the specified index.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"caiwang0"},"content":"     * @param index the index of the task to retrieve (0-based)","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"caiwang0"},"content":"     * @return the task at the specified index","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"caiwang0"},"content":"     * @throws IndexOutOfBoundsException if index is out of range","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"caiwang0"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"caiwang0"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"caiwang0"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"caiwang0"},"content":"     * @return the size of the task list","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"caiwang0"},"content":"    public int size() {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"caiwang0"},"content":"        return tasks.size();","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"caiwang0"},"content":"     * Returns the underlying ArrayList of tasks.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"caiwang0"},"content":"     * @return the ArrayList containing all tasks","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"caiwang0"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"caiwang0"},"content":"        return this.tasks;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"caiwang0"},"content":"     * Finds tasks that contain the specified keyword in their description.","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"caiwang0"},"content":"     * @param keyword the keyword to search for in task descriptions","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"caiwang0"},"content":"     * @return ArrayList of tasks that contain the keyword (case-insensitive)","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"caiwang0"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"caiwang0"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"caiwang0"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"caiwang0"},"content":"            if (task.toString().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"caiwang0"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"caiwang0"},"content":"            }","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"caiwang0"},"content":"        }","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"caiwang0"},"content":"        return matchingTasks;","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-03T04:27:03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"caiwang0"},"content":"}","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false}],"authorContributionMap":{"caiwang0":92}},{"path":"src/main/java/chip/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caiwang0"},"content":"package chip.task;","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caiwang0"},"content":"/**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caiwang0"},"content":" * Represents a simple todo task without any time constraints.","lastModifiedDate":"2025-09-03T03:57:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caiwang0"},"content":" * Extends the base Task class to provide todo-specific formatting.","lastModifiedDate":"2025-09-03T03:57:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caiwang0"},"content":" */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caiwang0"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-09-03T03:57:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-08-22T12:19:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caiwang0"},"content":"     * Constructs a new Todo task with the given description.","lastModifiedDate":"2025-09-03T03:57:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caiwang0"},"content":"     * @param description the description of the todo task","lastModifiedDate":"2025-09-03T03:57:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caiwang0"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-09-03T03:57:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caiwang0"},"content":"        super(description);","lastModifiedDate":"2025-09-03T03:57:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caiwang0"},"content":"     * Returns the file format string for this todo task.","lastModifiedDate":"2025-09-03T03:57:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caiwang0"},"content":"     * Format: \"T | status | description\"","lastModifiedDate":"2025-09-03T03:57:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caiwang0"},"content":"     * @return the file format string representation","lastModifiedDate":"2025-09-03T03:57:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caiwang0"},"content":"    @Override","lastModifiedDate":"2025-09-03T03:57:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caiwang0"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caiwang0"},"content":"        return \"T | \" + super.toFileString();","lastModifiedDate":"2025-09-03T03:57:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-08-29T00:30:17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caiwang0"},"content":"     * Returns the display format string for this todo task.","lastModifiedDate":"2025-09-03T03:57:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caiwang0"},"content":"     * Format: \"[T][status] description\"","lastModifiedDate":"2025-09-03T03:57:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"caiwang0"},"content":"     * @return the display format string representation","lastModifiedDate":"2025-09-03T03:57:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"caiwang0"},"content":"    @Override","lastModifiedDate":"2025-08-22T12:19:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"caiwang0"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T12:19:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"caiwang0"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-09-03T03:57:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-08-22T12:19:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"caiwang0"},"content":"}","lastModifiedDate":"2025-08-22T12:19:12","isFullCredit":false}],"authorContributionMap":{"caiwang0":39}},{"path":"src/main/java/chip/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caiwang0"},"content":"package chip.ui;","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-03T01:14:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caiwang0"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caiwang0"},"content":"/**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caiwang0"},"content":" * Handles all user interface operations for the Chip application.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caiwang0"},"content":" * Manages input reading and output display to provide a consistent user experience.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caiwang0"},"content":" */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caiwang0"},"content":"public class Ui {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caiwang0"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caiwang0"},"content":"     * Constructs a new Ui instance and initializes the input scanner.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caiwang0"},"content":"    public Ui() {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caiwang0"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caiwang0"},"content":"     * Displays the welcome message when the application starts.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caiwang0"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caiwang0"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caiwang0"},"content":"        System.out.println(\" Hello! I\u0027m Chip\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caiwang0"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caiwang0"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caiwang0"},"content":"     * Reads a command line from the user.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caiwang0"},"content":"     * @return the command string entered by the user","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"caiwang0"},"content":"    public String readCommand() {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"caiwang0"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"caiwang0"},"content":"     * Displays a horizontal line separator for visual formatting.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"caiwang0"},"content":"    public void showLine() {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"caiwang0"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"caiwang0"},"content":"     * Displays an error message with the \"OOPS!!!\" prefix.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"caiwang0"},"content":"     * @param message the error message to display","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"caiwang0"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"caiwang0"},"content":"        System.out.println(\"OOPS!!! \" + message);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"caiwang0"},"content":"     * Displays a regular message to the user.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"caiwang0"},"content":"     *","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"caiwang0"},"content":"     * @param message the message to display","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"caiwang0"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"caiwang0"},"content":"        System.out.println(message);","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"caiwang0"},"content":"","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"caiwang0"},"content":"    /**","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"caiwang0"},"content":"     * Displays the goodbye message when the application exits.","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"caiwang0"},"content":"     */","lastModifiedDate":"2025-09-03T03:23:47","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"caiwang0"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"caiwang0"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"caiwang0"},"content":"    }","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"caiwang0"},"content":"}","lastModifiedDate":"2025-09-02T19:01:44","isFullCredit":false}],"authorContributionMap":{"caiwang0":69}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"caiwang0"},"content":"todo read book","lastModifiedDate":"2025-08-22T12:20:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caiwang0"},"content":"deadline submit report /by Sunday","lastModifiedDate":"2025-08-22T12:20:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caiwang0"},"content":"list","lastModifiedDate":"2025-08-22T12:20:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caiwang0"},"content":"mark 1","lastModifiedDate":"2025-08-22T12:20:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caiwang0"},"content":"list","lastModifiedDate":"2025-08-22T12:20:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caiwang0"},"content":"bye","lastModifiedDate":"2025-08-22T12:20:26","isFullCredit":false}],"authorContributionMap":{"caiwang0":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caiwang0"},"content":"java -classpath ..\\bin Chip \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-22T12:20:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"caiwang0":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caiwang0"},"content":"java -classpath ../bin Chip \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-22T12:20:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"caiwang0":1,"-":37}}]
