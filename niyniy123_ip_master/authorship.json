[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"General coding: JetBrains Full Line Code Completion used to help write code","lastModifiedDate":"2025-09-16T01:02:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"A-JavaDoc: Junie used to help write JavaDoc (saved a lot of time)","lastModifiedDate":"2025-09-16T01:02:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"A-Assertions: Junie used to help write assertions","lastModifiedDate":"2025-09-16T01:02:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"C-DetectDuplicates: Junie used to help write code and test cases","lastModifiedDate":"2025-09-16T01:02:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"A-MoreErrorHandling: Junie used to help identify places where error handling is lacking","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"A-UserGuide: Junie used to help write user guide","lastModifiedDate":"2025-09-16T01:59:26","isFullCredit":false}],"authorContributionMap":{"niyniy123":6}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"# JibJab","lastModifiedDate":"2025-09-16T02:12:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"These are the project files for the JibJab chatbot. Given below are instructions on how to use it.","lastModifiedDate":"2025-09-16T02:12:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2025-09-16T02:12:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2025-09-16T02:12:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2025-09-16T02:12:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2025-09-16T02:12:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2025-09-16T02:12:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2025-09-16T02:12:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2025-09-16T02:12:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2025-09-16T02:12:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2025-09-16T02:12:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"1. After that, locate the `src/main/java/jibjab/JibJab.java` file, right-click it, and choose `Run JibJab.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-09-16T02:12:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2025-09-16T02:12:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"    Hello from JibJab","lastModifiedDate":"2025-09-16T02:12:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"    What can I do for you?","lastModifiedDate":"2025-09-16T02:12:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2025-09-16T02:12:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-09-16T02:12:12","isFullCredit":false}],"authorContributionMap":{"niyniy123":5,"-":17}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-08-31T20:23:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niyniy123"},"content":"    mainClass.set(\"jibjab.Launcher\")","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niyniy123"},"content":"    archiveBaseName \u003d \"jibjab\"","lastModifiedDate":"2025-08-26T22:32:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niyniy123"},"content":"    archiveFileName \u003d \u0027jibjab.jar\u0027","lastModifiedDate":"2025-08-28T21:00:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niyniy123"},"content":"checkstyle {","lastModifiedDate":"2025-08-31T20:23:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niyniy123"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-08-31T20:23:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-31T20:23:44","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-31T20:23:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"niyniy123":22,"-":39}},{"path":"data/jibjab.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"[D][ ] prepare for test (by: Jun 18 2077 18:00)","lastModifiedDate":"2025-09-16T01:59:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"[T][X] buy groceries","lastModifiedDate":"2025-09-16T02:28:58","isFullCredit":false}],"authorContributionMap":{"niyniy123":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"# JibJab User Guide","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"JibJab is a simple task‑tracking chatbot that lets you manage ToDos, Deadlines and Events via chat‑style commands. This guide explains how to set it up and use all important features.","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"---","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"## Using JibJab","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"- All commands are case‑sensitive and should be entered one per line.","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"- Dates/times are stored as plain text.","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"- Your tasks are saved automatically to `data/jibjab.txt` when you exit.","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"### Core commands","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"1) Add a ToDo","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"- Syntax: `todo DESCRIPTION`","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"- Example: `todo buy milk`","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"2) Add a Deadline","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"- Syntax: `deadline DESCRIPTION /by DATE_TIME`","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"- Example: `deadline CS2103T iP /by 2025-09-30 23:59`","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"3) Add an Event","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"- Syntax: `event DESCRIPTION /from START /to END`","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"- Example: `event team meeting /from 2025-09-20 14:00 /to 2025-09-20 15:30`","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"4) List tasks","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"- Syntax: `list`","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"- Shows all tasks with their index numbers and done status.","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"5) Find tasks","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niyniy123"},"content":"- Syntax: `find KEYWORD`","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niyniy123"},"content":"- Example: `find meeting`","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niyniy123"},"content":"- Shows tasks whose descriptions contain the keyword.","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niyniy123"},"content":"6) Mark a task as done","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niyniy123"},"content":"- Syntax: `mark INDEX`","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niyniy123"},"content":"- Example: `mark 2`","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niyniy123"},"content":"7) Unmark a task","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niyniy123"},"content":"- Syntax: `unmark INDEX`","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niyniy123"},"content":"- Example: `unmark 2`","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niyniy123"},"content":"8) Delete a task","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niyniy123"},"content":"- Syntax: `delete INDEX`","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niyniy123"},"content":"- Example: `delete 3`","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niyniy123"},"content":"9) Exit and save","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niyniy123"},"content":"- Syntax: `bye`","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niyniy123"},"content":"- Saves your tasks to disk and exits the app.","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niyniy123"},"content":"### Notes and tips","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niyniy123"},"content":"- Duplicate tasks cannot be added: JibJab will warn you if you try to add an identical task.","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niyniy123"},"content":"- If a command is incomplete or malformed (e.g., missing `/by` or `/from`/`/to`), JibJab will explain what’s missing.","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niyniy123"},"content":"- Indices in `mark`, `unmark`, and `delete` refer to the numbers shown by `list`.","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niyniy123"},"content":"## Graphical User Interface (GUI)","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niyniy123"},"content":"- Type commands into the input box at the bottom; press Enter to submit.","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niyniy123"},"content":"- Responses appear in the chat pane. The `bye` command will close the window.","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niyniy123"},"content":"![GUI](Ui.png)","lastModifiedDate":"2025-09-16T02:12:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niyniy123"},"content":"## Storage","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niyniy123"},"content":"- File location: `data/jibjab.txt` (created automatically on first run).","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niyniy123"},"content":"- You can back up or edit this text file manually if needed.","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niyniy123"},"content":"## Troubleshooting","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niyniy123"},"content":"- If you see \"I don\u0027t understand this command\", check the command spelling and required parts like `/by`, `/from`, `/to`.","lastModifiedDate":"2025-09-16T02:06:33","isFullCredit":false}],"authorContributionMap":{"niyniy123":54,"-":14}},{"path":"src/main/java/jibjab/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"import java.util.Objects;","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":" * Represents a task with a specific deadline by which it must be completed.","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":" * A Deadline extends the Task class and includes a due date and time","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":" * to indicate when the task should be finished.","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":" *","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":" * @author niyniy123","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"    private static final String INPUT_PATTERN \u003d \"[dd/MM/yyyy HH:mm][MMM dd yyyy HH:mm]\";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"    private static final String DISPLAY_PATTERN \u003d \"MMM dd yyyy HH:mm\";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"    private static final String TYPE_PREFIX \u003d \"[D]\";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"    private static final String BY_PREFIX \u003d \" (by: \";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"    private static final String CLOSING_PAREN \u003d \")\";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2025-09-06T12:00:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"     * Constructs a new Deadline task with the specified description and due date.","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"     * The constructor accepts flexible date-time formats for the deadline.","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"     * @param description the description of the task that needs to be completed","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"     * @param deadline the deadline date and time as a string. Accepted formats:","lastModifiedDate":"2025-09-06T11:55:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niyniy123"},"content":"     *           \"dd/MM/yyyy HH:mm\" or \"MMM dd yyyy HH:mm\"","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niyniy123"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2025-09-06T11:55:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niyniy123"},"content":"        super(description);","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niyniy123"},"content":"        if (deadline \u003d\u003d null || deadline.isBlank()) {","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niyniy123"},"content":"            throw new IllegalArgumentException(\"Deadline date/time must not be empty\");","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niyniy123"},"content":"        try {","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niyniy123"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(INPUT_PATTERN);","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niyniy123"},"content":"            this.deadline \u003d LocalDateTime.parse(deadline.trim(), formatter);","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niyniy123"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niyniy123"},"content":"            throw new IllegalArgumentException(\"Invalid date/time for deadline. \"","lastModifiedDate":"2025-09-16T02:15:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niyniy123"},"content":"                    + \"Use \u0027dd/MM/yyyy HH:mm\u0027 or \u0027MMM dd yyyy HH:mm\u0027\");","lastModifiedDate":"2025-09-16T02:15:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niyniy123"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niyniy123"},"content":"     * The format includes the deadline type [D], the task status and description","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niyniy123"},"content":"     * and the formatted deadline date and time.","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niyniy123"},"content":"     * @return a formatted string representation of the deadline task including its type,","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niyniy123"},"content":"     *         status, description, and deadline in \"MMM dd yyyy HH:mm\" format","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niyniy123"},"content":"    @Override","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niyniy123"},"content":"    public String toString() {","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niyniy123"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niyniy123"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline.format(formatter) + \")\";","lastModifiedDate":"2025-09-06T11:55:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niyniy123"},"content":"    @Override","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niyniy123"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niyniy123"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niyniy123"},"content":"            return false;","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niyniy123"},"content":"        Deadline d \u003d (Deadline) o;","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niyniy123"},"content":"        return Objects.equals(this.deadline, d.deadline);","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false}],"authorContributionMap":{"niyniy123":68}},{"path":"src/main/java/jibjab/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"    @FXML","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"    @FXML","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"        try {","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niyniy123"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niyniy123"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niyniy123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niyniy123"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niyniy123"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niyniy123"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niyniy123"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niyniy123"},"content":"    private void flip() {","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niyniy123"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niyniy123"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niyniy123"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niyniy123"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niyniy123"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niyniy123"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niyniy123"},"content":"    public static DialogBox getJibJabDialog(String text, Image img) {","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niyniy123"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niyniy123"},"content":"        db.flip();","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niyniy123"},"content":"        return db;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false}],"authorContributionMap":{"niyniy123":60}},{"path":"src/main/java/jibjab/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"import java.util.Objects;","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":" * Represents an event task with a specific duration defined by start and end times.","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":" *","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":" * @author niyniy123","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"    private static final String INPUT_PATTERN \u003d \"[dd/MM/yyyy HH:mm][MMM dd yyyy HH:mm]\";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"    private static final String DISPLAY_PATTERN \u003d \"MMM dd yyyy HH:mm\";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"    private static final String TYPE_PREFIX \u003d \"[E]\";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"    private static final String FROM_PREFIX \u003d \" (from: \";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"    private static final String TO_SEPARATOR \u003d \" to: \";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"    private static final String CLOSING_PAREN \u003d \")\";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"    private LocalDateTime fromDate;","lastModifiedDate":"2025-09-06T12:00:50","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"    private LocalDateTime toDate;","lastModifiedDate":"2025-09-06T12:00:50","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"     * Constructs a new Event with the given task description and time period.","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"     * @param description the description of the event task","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"     * @param from the starting date and time as a string. Accepted formats:","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"     *             \"dd/MM/yyyy HH:mm\" or \"MMM dd yyyy HH:mm\"","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"     * @param toDate the ending date and time as a string. Accepted formats:","lastModifiedDate":"2025-09-06T12:00:50","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niyniy123"},"content":"     *           \"dd/MM/yyyy HH:mm\" or \"MMM dd yyyy HH:mm\"","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"     * @throws java.time.format.DateTimeParseException if the from or to strings","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niyniy123"},"content":"     *         cannot be parsed using the specified formats","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niyniy123"},"content":"    public Event(String description, String from, String toDate) {","lastModifiedDate":"2025-09-06T12:00:50","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niyniy123"},"content":"        super(description);","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niyniy123"},"content":"        if (from \u003d\u003d null || from.isBlank()) {","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niyniy123"},"content":"            throw new IllegalArgumentException(\"Event start date/time must not be empty\");","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niyniy123"},"content":"        if (toDate \u003d\u003d null || toDate.isBlank()) {","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niyniy123"},"content":"            throw new IllegalArgumentException(\"Event end date/time must not be empty\");","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niyniy123"},"content":"        try {","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niyniy123"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(INPUT_PATTERN);","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niyniy123"},"content":"            this.fromDate \u003d LocalDateTime.parse(from.trim(), formatter);","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niyniy123"},"content":"            this.toDate \u003d LocalDateTime.parse(toDate.trim(), formatter);","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niyniy123"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niyniy123"},"content":"            throw new IllegalArgumentException(\"Invalid date/time for event. \"","lastModifiedDate":"2025-09-16T02:15:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niyniy123"},"content":"                    + \"Use \u0027dd/MM/yyyy HH:mm\u0027 or \u0027MMM dd yyyy HH:mm\u0027\");","lastModifiedDate":"2025-09-16T02:15:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niyniy123"},"content":"        if (!this.toDate.isAfter(this.fromDate)) {","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niyniy123"},"content":"            throw new IllegalArgumentException(\"Event end must be after start\");","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niyniy123"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niyniy123"},"content":"     * The format includes the event type marker [E], the task status and description","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niyniy123"},"content":"     * and the formatted from/to times.","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niyniy123"},"content":"     * Example output: \"[E][X] Team meeting (from: Dec 25 2024 14:30 to: Dec 25 2024 16:00)\"","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niyniy123"},"content":"     * @return a formatted string representation of the event including its type marker,","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niyniy123"},"content":"     *         status, description, and time period in \"MMM dd yyyy HH:mm\" format","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niyniy123"},"content":"    @Override","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niyniy123"},"content":"    public String toString() {","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niyniy123"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niyniy123"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2025-09-07T15:43:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niyniy123"},"content":"                + \" (from: \" + fromDate.format(formatter) + \" to: \" + toDate.format(formatter) + \")\";","lastModifiedDate":"2025-09-07T15:43:20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niyniy123"},"content":"    @Override","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niyniy123"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niyniy123"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niyniy123"},"content":"            return false;","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"niyniy123"},"content":"        Event e \u003d (Event) o;","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"niyniy123"},"content":"        return Objects.equals(this.fromDate, e.fromDate)","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"niyniy123"},"content":"                \u0026\u0026 Objects.equals(this.toDate, e.toDate);","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false}],"authorContributionMap":{"niyniy123":81}},{"path":"src/main/java/jibjab/JibJab.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":" * Entry point and main controller for the JibJab application.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":" * Wires together UI, storage and task list, and runs the command loop.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"public class JibJab {","lastModifiedDate":"2025-08-17T12:41:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"    private Ui ui;","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-24T12:54:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"     * Creates a JibJab instance using the given file path for persistence.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"     * Attempts to load existing tasks; if loading fails, starts with an empty list.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"     * @param filePath path to the data file used for saving/loading tasks","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"    public JibJab(String filePath) {","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"        try {","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"        } catch (JibJabException e) {","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"            System.out.println(ui.showLoadingError());","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-08-24T12:54:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-24T12:54:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-18T09:37:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niyniy123"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niyniy123"},"content":"        try {","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niyniy123"},"content":"            StringBuilder out \u003d new StringBuilder();","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niyniy123"},"content":"            String[] command \u003d Parser.parseCommand(input);","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niyniy123"},"content":"            switch (command[0]) {","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niyniy123"},"content":"            case \"bye\":","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niyniy123"},"content":"                storage.saveTasks(tasks);","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niyniy123"},"content":"                out.append(ui.showGoodbye());","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niyniy123"},"content":"                javafx.application.Platform.exit();","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niyniy123"},"content":"                break;","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niyniy123"},"content":"            case \"todo\":","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niyniy123"},"content":"                String taskDesc \u003d Parser.parseToDo(command);","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niyniy123"},"content":"                ToDo todo \u003d new ToDo(taskDesc);","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niyniy123"},"content":"                if (tasks.contains(todo)) {","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niyniy123"},"content":"                    throw new JibJabException(\"This task already exists in your list!\");","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niyniy123"},"content":"                }","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niyniy123"},"content":"                tasks.addTask(todo);","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niyniy123"},"content":"                storage.saveTasks(tasks);","lastModifiedDate":"2025-09-16T02:28:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niyniy123"},"content":"                out.append(ui.showTaskAdded(todo, tasks.getSize()));","lastModifiedDate":"2025-09-07T15:43:20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niyniy123"},"content":"                break;","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niyniy123"},"content":"            case \"deadline\":","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niyniy123"},"content":"                String[] deadlineDetails \u003d Parser.parseDeadline(command.length \u003e 1 ? command[1] : \"\");","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niyniy123"},"content":"                if (deadlineDetails.length \u003c 2) {","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niyniy123"},"content":"                    throw new JibJabException(\"Please provide a description and a /by date/time.\");","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niyniy123"},"content":"                }","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niyniy123"},"content":"                Deadline deadline \u003d new Deadline(deadlineDetails[0], deadlineDetails[1]);","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niyniy123"},"content":"                if (tasks.contains(deadline)) {","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niyniy123"},"content":"                    throw new JibJabException(\"This task already exists in your list!\");","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niyniy123"},"content":"                }","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niyniy123"},"content":"                tasks.addTask(deadline);","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niyniy123"},"content":"                storage.saveTasks(tasks);","lastModifiedDate":"2025-09-16T02:28:58","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niyniy123"},"content":"                out.append(ui.showTaskAdded(deadline, tasks.getSize()));","lastModifiedDate":"2025-09-07T15:43:20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niyniy123"},"content":"                break;","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niyniy123"},"content":"            case \"event\":","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niyniy123"},"content":"                String[] eventDetails \u003d Parser.parseEvent(command.length \u003e 1 ? command[1] : \"\");","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niyniy123"},"content":"                if (eventDetails.length \u003c 3) {","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niyniy123"},"content":"                    throw new JibJabException(\"Please provide a description, /from, and /to date/time.\");","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niyniy123"},"content":"                }","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niyniy123"},"content":"                Event event \u003d new Event(eventDetails[0], eventDetails[1], eventDetails[2]);","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niyniy123"},"content":"                if (tasks.contains(event)) {","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niyniy123"},"content":"                    throw new JibJabException(\"This task already exists in your list!\");","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niyniy123"},"content":"                }","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niyniy123"},"content":"                tasks.addTask(event);","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"niyniy123"},"content":"                storage.saveTasks(tasks);","lastModifiedDate":"2025-09-16T02:28:58","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"niyniy123"},"content":"                out.append(ui.showTaskAdded(event, tasks.getSize()));","lastModifiedDate":"2025-09-07T15:43:20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"niyniy123"},"content":"                break;","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"niyniy123"},"content":"            case \"list\":","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"niyniy123"},"content":"                out.append(tasks.toString());","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"niyniy123"},"content":"                break;","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"niyniy123"},"content":"            case \"find\":","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"niyniy123"},"content":"                if (command.length \u003c 2 || command[1].isBlank()) {","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"niyniy123"},"content":"                    throw new JibJabException(\"Please provide a keyword to find.\");","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"niyniy123"},"content":"                }","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"niyniy123"},"content":"                String keyword \u003d command[1].trim();","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"niyniy123"},"content":"                out.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"niyniy123"},"content":"                out.append(tasks.findTasks(keyword));","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"niyniy123"},"content":"                break;","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"niyniy123"},"content":"            case \"mark\":","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"niyniy123"},"content":"                Task marked \u003d tasks.markTaskAsDone(Parser.parseIndex(input, tasks.getSize()));","lastModifiedDate":"2025-09-07T15:43:20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"niyniy123"},"content":"                storage.saveTasks(tasks);","lastModifiedDate":"2025-09-16T02:28:58","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"niyniy123"},"content":"                out.append(ui.showTaskMarked(marked));","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"niyniy123"},"content":"                break;","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"niyniy123"},"content":"            case \"unmark\":","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"niyniy123"},"content":"                Task unmarked \u003d tasks.markTaskAsNotDone(Parser.parseIndex(input, tasks.getSize()));","lastModifiedDate":"2025-09-07T15:43:20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"niyniy123"},"content":"                storage.saveTasks(tasks);","lastModifiedDate":"2025-09-16T02:28:58","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"niyniy123"},"content":"                out.append(ui.showTaskUnmarked(unmarked));","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"niyniy123"},"content":"                break;","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"niyniy123"},"content":"            case \"delete\":","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"niyniy123"},"content":"                Task removed \u003d tasks.deleteTask(Parser.parseIndex(input, tasks.getSize()));","lastModifiedDate":"2025-09-07T15:43:20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"niyniy123"},"content":"                storage.saveTasks(tasks);","lastModifiedDate":"2025-09-16T02:28:58","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"niyniy123"},"content":"                out.append(ui.showTaskDeleted(removed, tasks.getSize()));","lastModifiedDate":"2025-09-07T15:43:20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"niyniy123"},"content":"                break;","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"niyniy123"},"content":"            default:","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"niyniy123"},"content":"                throw new JibJabException(\"I don\u0027t understand this command\");","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"niyniy123"},"content":"            }","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"niyniy123"},"content":"            return out.toString();","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"niyniy123"},"content":"        } catch (JibJabException e) {","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"niyniy123"},"content":"            return e.getMessage();","lastModifiedDate":"2025-09-06T15:40:06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"niyniy123"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"niyniy123"},"content":"            // Fallback for unexpected errors like invalid date formats","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"niyniy123"},"content":"            String msg \u003d e.getMessage();","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"niyniy123"},"content":"            return (msg \u003d\u003d null || msg.isBlank()) ? \"Something went wrong processing your command.\" : msg;","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-08-17T13:04:23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false}],"authorContributionMap":{"niyniy123":115,"-":2}},{"path":"src/main/java/jibjab/JibJabException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":" * Custom checked exception used by the JibJab application to signal user and IO errors.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"public class JibJabException extends Exception {","lastModifiedDate":"2025-08-19T17:39:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":"     * Creates a new JibJabException with the specified detail message.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"     * @param message explanation of the problem","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"    public JibJabException(String message) {","lastModifiedDate":"2025-08-19T17:39:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"        super(message);","lastModifiedDate":"2025-08-19T17:39:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-19T17:39:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-19T17:39:39","isFullCredit":false}],"authorContributionMap":{"niyniy123":15}},{"path":"src/main/java/jibjab/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":"public class Launcher {","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false}],"authorContributionMap":{"niyniy123":12}},{"path":"src/main/java/jibjab/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"    private JibJab jibjab \u003d new JibJab(\"data/jibjab.txt\");","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"    @Override","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"        try {","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"            stage.setTitle(\"JibJab\");","lastModifiedDate":"2025-09-16T01:59:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJibJab(jibjab);","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"            stage.show();","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false}],"authorContributionMap":{"niyniy123":32}},{"path":"src/main/java/jibjab/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"    @FXML","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"    @FXML","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"    @FXML","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"    @FXML","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"    private JibJab jibjab;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/man.png\"));","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"    private Image jibjabImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/ai.png\"));","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"     * Initializes the main GUI components.","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"     * This method performs the following:","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niyniy123"},"content":"     * 1. Binds the vertical scroll property of the scroll pane to the height","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niyniy123"},"content":"     *    property of the dialog container, ensuring the scroll bar automatically","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niyniy123"},"content":"     *    follows new messages.","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niyniy123"},"content":"     * 2. Displays a default welcome message in the dialog container.","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niyniy123"},"content":"    @FXML","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niyniy123"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niyniy123"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niyniy123"},"content":"        String welcomeMsg \u003d \"Hello from JibJab\\nWhat can I do for you?\";","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niyniy123"},"content":"        dialogContainer.getChildren().add(DialogBox.getJibJabDialog(welcomeMsg, jibjabImage));","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niyniy123"},"content":"    /** Injects the JibJab instance */","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niyniy123"},"content":"    public void setJibJab(JibJab j) {","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niyniy123"},"content":"        jibjab \u003d j;","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niyniy123"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niyniy123"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niyniy123"},"content":"    @FXML","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niyniy123"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niyniy123"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niyniy123"},"content":"        String response \u003d jibjab.getResponse(input);","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niyniy123"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niyniy123"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niyniy123"},"content":"                DialogBox.getJibJabDialog(response, jibjabImage)","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niyniy123"},"content":"        );","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niyniy123"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false}],"authorContributionMap":{"niyniy123":63}},{"path":"src/main/java/jibjab/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":" * Utility class for parsing user input commands in the JibJab application.","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":" * Provides static methods to parse different types of commands and extract","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":" * relevant information from user input strings.","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":" *","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":" * @author niyniy123","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"public class Parser {","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"    private static final String SPACE \u003d \" \";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"    private static final int SPLIT_LIMIT_TWO \u003d 2;","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"    private static final String DEADLINE_DELIMITER \u003d \" /by \";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"    private static final String EVENT_FROM_DELIMITER \u003d \" /from \";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"    private static final String EVENT_TO_DELIMITER \u003d \" /to \";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"    private static final int ONE_BASED_OFFSET \u003d 1;","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"    private static final String ERR_TODO_DESCRIPTION_REQUIRED \u003d \"You need to enter a task description\";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"     * Parses a command string by splitting it into command type and arguments.","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"     * The input is split at the first space, with the first part being the command","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"     * and the remainder being the arguments.","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"     * @param input the raw input string containing a command and its arguments","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"     * @return a String array where index 0 contains the command and index 1 contains","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"     *         the remaining arguments (if any).","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"    public static String[] parseCommand(String input) {","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"        String in \u003d (input \u003d\u003d null) ? \"\" : input.trim();","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niyniy123"},"content":"        if (in.isEmpty()) {","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"            return new String[]{\"\"};","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niyniy123"},"content":"        return in.split(SPACE, SPLIT_LIMIT_TWO);","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niyniy123"},"content":"     * Extracts the task description from a parsed command array for a todo task.","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niyniy123"},"content":"     * Expects the description to be at index 1 of the input array.","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niyniy123"},"content":"     * @param input the parsed command array where index 0 is the command and","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niyniy123"},"content":"     *              index 1 should contain the task description","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niyniy123"},"content":"     * @return the task description string","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niyniy123"},"content":"     * @throws JibJabException if no task description is provided (array has insufficient elements)","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niyniy123"},"content":"    public static String parseToDo(String[] input) throws JibJabException {","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niyniy123"},"content":"        if (input.length \u003c 2 || input[1].isBlank()) {","lastModifiedDate":"2025-09-06T15:57:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niyniy123"},"content":"            throw new JibJabException(ERR_TODO_DESCRIPTION_REQUIRED);","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niyniy123"},"content":"        return input[1];","lastModifiedDate":"2025-09-06T15:57:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niyniy123"},"content":"     * Parses a deadline task input string to separate the task description from the deadline.","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niyniy123"},"content":"     * The input format should be: \"task description /by deadline\"","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niyniy123"},"content":"     * @param input the deadline task string containing description and deadline separated by \" /by \"","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niyniy123"},"content":"     * @return a String array where index 0 contains the task description and","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niyniy123"},"content":"     *         index 1 contains the deadline","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niyniy123"},"content":"    public static String[] parseDeadline(String input) {","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niyniy123"},"content":"        String in \u003d (input \u003d\u003d null) ? \"\" : input.trim();","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niyniy123"},"content":"        // Allow flexible spaces around /by","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niyniy123"},"content":"        String[] parts \u003d in.split(\"\\\\s+/by\\\\s+\", SPLIT_LIMIT_TWO);","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niyniy123"},"content":"        return parts;","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niyniy123"},"content":"     * Parses an event task input string to extract the task description, start datetime, and end datetime.","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niyniy123"},"content":"     * The input format should be: \"task description /from start_datetime /to end_datetime\"","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niyniy123"},"content":"     * @param input the event task string containing description, start datetime, and end datetime","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niyniy123"},"content":"     * @return a String array with three elements:","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niyniy123"},"content":"     *         [0] - task description,","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niyniy123"},"content":"     *         [1] - start datetime,","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niyniy123"},"content":"     *         [2] - end datetime","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"niyniy123"},"content":"     * @throws ArrayIndexOutOfBoundsException if the input format is incorrect or missing required parts","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"niyniy123"},"content":"    public static String[] parseEvent(String input) {","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"niyniy123"},"content":"        String in \u003d (input \u003d\u003d null) ? \"\" : input.trim();","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"niyniy123"},"content":"        // Allow flexible spaces around /from and /to","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"niyniy123"},"content":"        String[] eventTask \u003d in.split(\"\\\\s+/from\\\\s+\", SPLIT_LIMIT_TWO);","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"niyniy123"},"content":"        if (eventTask.length \u003c 2) {","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"niyniy123"},"content":"            return new String[]{in};","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"niyniy123"},"content":"        String[] fromTo \u003d eventTask[1].split(\"\\\\s+/to\\\\s+\", SPLIT_LIMIT_TWO);","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"niyniy123"},"content":"        if (fromTo.length \u003c 2) {","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"niyniy123"},"content":"            return new String[]{eventTask[0], eventTask[1]};","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"niyniy123"},"content":"        return new String[]{eventTask[0], fromTo[0], fromTo[1]};","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"niyniy123"},"content":"     * Parses a user-provided index (1-based) and converts it to a 0-based array index.","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"niyniy123"},"content":"     * Used for tasklist operations","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"niyniy123"},"content":"     * @param input the string representation of a 1-based index","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"niyniy123"},"content":"     * @return the corresponding 0-based index for tasklist access","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"niyniy123"},"content":"     * @throws NumberFormatException if the input string cannot be parsed as an integer","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"niyniy123"},"content":"    public static int parseIndex(String input, int tasklistSize) throws JibJabException {","lastModifiedDate":"2025-09-07T15:43:20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"niyniy123"},"content":"        String in \u003d (input \u003d\u003d null) ? \"\" : input.trim();","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"niyniy123"},"content":"        String idxStr;","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"niyniy123"},"content":"        try {","lastModifiedDate":"2025-09-06T16:55:49","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"niyniy123"},"content":"            String[] tokens \u003d in.split(\"\\\\s+\");","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"niyniy123"},"content":"            // tokens[0] is command, tokens[1] should be the 1-based index","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"niyniy123"},"content":"            idxStr \u003d tokens[1];","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"niyniy123"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"niyniy123"},"content":"            throw new JibJabException(\"Please provide a task number.\");","lastModifiedDate":"2025-09-06T16:55:49","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-09-06T16:55:49","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"niyniy123"},"content":"        int parsedIndex;","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"niyniy123"},"content":"        try {","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"niyniy123"},"content":"            parsedIndex \u003d Integer.parseInt(idxStr) - ONE_BASED_OFFSET;","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"niyniy123"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"niyniy123"},"content":"            throw new JibJabException(\"Please provide a valid task number.\");","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"niyniy123"},"content":"        if (parsedIndex \u003c 0 || parsedIndex \u003e\u003d tasklistSize) {","lastModifiedDate":"2025-09-07T15:43:20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"niyniy123"},"content":"            throw new JibJabException(\"That task does not exist!\");","lastModifiedDate":"2025-09-07T15:43:20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-09-07T15:43:20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"niyniy123"},"content":"        return parsedIndex;","lastModifiedDate":"2025-09-07T15:43:20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false}],"authorContributionMap":{"niyniy123":121}},{"path":"src/main/java/jibjab/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"import java.io.File;","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":" * Handles persistence of tasks to and from a file on disk.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":" * The file format matches the output of TaskList#toString() and is parsed back into Task objects.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"public class Storage {","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"    private static final String UNKNOWN_TASK_TYPE_MSG \u003d \"Unknown task type: \";","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"    private final String filePath;","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"     * Creates a Storage bound to the given file path.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"     * @param filePath absolute or relative path to the tasklist data file","lastModifiedDate":"2025-09-07T15:43:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.isBlank() : \"Storage filePath must not be null/blank\";","lastModifiedDate":"2025-09-06T12:58:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"     * Saves all tasks to the configured file. If the list is empty, nothing is written.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"     * @param tasks the TaskList to persist","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niyniy123"},"content":"     * @throws JibJabException if writing fails, typically due to missing folders or IO errors","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niyniy123"},"content":"    public void saveTasks(TaskList tasks) throws JibJabException {","lastModifiedDate":"2025-08-28T21:02:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niyniy123"},"content":"        assert tasks !\u003d null : \"TaskList to save must not be null\";","lastModifiedDate":"2025-09-06T12:58:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niyniy123"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niyniy123"},"content":"        File parent \u003d file.getParentFile();","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niyniy123"},"content":"        if (parent !\u003d null \u0026\u0026 !parent.exists()) {","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niyniy123"},"content":"            if (!parent.mkdirs() \u0026\u0026 !parent.exists()) {","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niyniy123"},"content":"                throw new JibJabException(\"Failed to create parent directories for data file: \" + parent);","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niyniy123"},"content":"            }","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niyniy123"},"content":"        try (PrintWriter pw \u003d new PrintWriter(this.filePath)) {","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niyniy123"},"content":"            // Even if the task list is empty, we still write (nothing) to truncate the file","lastModifiedDate":"2025-09-16T02:28:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niyniy123"},"content":"            // so that deletions down to zero tasks are reflected on disk.","lastModifiedDate":"2025-09-16T02:28:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niyniy123"},"content":"            pw.print(tasks.isEmpty() ? \"\" : tasks.toString());","lastModifiedDate":"2025-09-16T02:28:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niyniy123"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niyniy123"},"content":"            throw new JibJabException(\"Data file not found: \" + file.getPath());","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niyniy123"},"content":"     * Loads tasks from the configured file if it exists.","lastModifiedDate":"2025-09-07T15:43:20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niyniy123"},"content":"     * Parses each line to reconstruct Task instances of the appropriate type.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niyniy123"},"content":"     * @return a list of tasks loaded from storage; empty if no file exists","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niyniy123"},"content":"     * @throws JibJabException if the file exists but cannot be read","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niyniy123"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws JibJabException {","lastModifiedDate":"2025-08-26T00:40:58","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niyniy123"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-07T15:43:20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niyniy123"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niyniy123"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-09-06T15:57:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niyniy123"},"content":"            return tasks;","lastModifiedDate":"2025-09-06T15:57:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-09-06T15:57:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niyniy123"},"content":"        try (Scanner sc \u003d new Scanner(file)) {","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niyniy123"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niyniy123"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niyniy123"},"content":"                if (line \u003d\u003d null || line.length() \u003c 7) {","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niyniy123"},"content":"                    continue; // skip malformed line","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niyniy123"},"content":"                }","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niyniy123"},"content":"                try {","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niyniy123"},"content":"                    String taskType \u003d Character.toString(line.charAt(1));","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niyniy123"},"content":"                    String taskStatus \u003d Character.toString(line.charAt(4));","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niyniy123"},"content":"                    String taskDesc \u003d line.substring(7);","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"niyniy123"},"content":"                    Task parsed \u003d parseTask(taskType, taskStatus, taskDesc);","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"niyniy123"},"content":"                    if (parsed !\u003d null) {","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"niyniy123"},"content":"                        tasks.add(parsed);","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"niyniy123"},"content":"                    }","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"niyniy123"},"content":"                } catch (Exception ex) {","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"niyniy123"},"content":"                    // skip malformed line","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"niyniy123"},"content":"                }","lastModifiedDate":"2025-09-16T01:38:42","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"niyniy123"},"content":"            }","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"niyniy123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"niyniy123"},"content":"            throw new JibJabException(\"Failed to load from file: \" + e.getMessage());","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"niyniy123"},"content":"        return tasks;","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"niyniy123"},"content":"    private Task parseTask(String taskType, String taskStatus, String taskDesc) {","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"niyniy123"},"content":"        Task task \u003d null;","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"niyniy123"},"content":"        switch (taskType) {","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"niyniy123"},"content":"        case \"T\":","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"niyniy123"},"content":"            task \u003d new ToDo(taskDesc);","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"niyniy123"},"content":"            break;","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"niyniy123"},"content":"        case \"D\":","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"niyniy123"},"content":"            String[] splitD \u003d taskDesc.split(\" \\\\(by: \");","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"niyniy123"},"content":"            assert splitD.length \u003d\u003d 2 : \"Stored deadline must contain \u0027 (by: \u0027\";","lastModifiedDate":"2025-09-07T15:43:20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"niyniy123"},"content":"            String taskBy \u003d splitD[1].substring(0, splitD[1].indexOf(\")\"));","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"niyniy123"},"content":"            task \u003d new Deadline(splitD[0], taskBy);","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"niyniy123"},"content":"            break;","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"niyniy123"},"content":"        case \"E\":","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"niyniy123"},"content":"            String[] splitE \u003d taskDesc.split(\" \\\\(from: \");","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"niyniy123"},"content":"            assert splitE.length \u003d\u003d 2 : \"Stored event must contain \u0027 (from: \u0027\";","lastModifiedDate":"2025-09-07T15:43:20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"niyniy123"},"content":"            String[] fromTo \u003d splitE[1].split(\" to: \");","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"niyniy123"},"content":"            assert fromTo.length \u003d\u003d 2 : \"Stored event must contain \u0027 to: \u0027\";","lastModifiedDate":"2025-09-06T12:58:52","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"niyniy123"},"content":"            String from \u003d fromTo[0];","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"niyniy123"},"content":"            String to \u003d fromTo[1].substring(0, fromTo[1].indexOf(\")\"));","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"niyniy123"},"content":"            task \u003d new Event(splitE[0], from, to);","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"niyniy123"},"content":"            break;","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"niyniy123"},"content":"        default:","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"niyniy123"},"content":"            System.err.println(UNKNOWN_TASK_TYPE_MSG + taskType);","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"niyniy123"},"content":"            break;","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"niyniy123"},"content":"        if (task !\u003d null \u0026\u0026 \"X\".equals(taskStatus)) {","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"niyniy123"},"content":"            task.setDone();","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"niyniy123"},"content":"        return task;","lastModifiedDate":"2025-09-06T16:50:15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false}],"authorContributionMap":{"niyniy123":120}},{"path":"src/main/java/jibjab/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"import java.util.Objects;","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":" * Represents a task in the JibJab application.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":" * This is the base class for all task types (ToDo, Deadline, Event) and provides","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":" * common functionality for task description and task completion.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":" *","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":" * @author niyniy123","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"public class Task {","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"    private static final String DONE_ICON \u003d \"X\";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"    private static final String NOT_DONE_ICON \u003d \" \";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"    private static final String LEFT_BRACKET \u003d \"[\";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"    private static final String RIGHT_BRACKET_SPACE \u003d \"] \";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"    private String description;","lastModifiedDate":"2025-09-06T12:00:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"    private boolean isDone;","lastModifiedDate":"2025-09-06T12:00:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"     * The task is initially marked as not done (incomplete).","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"     * @param description the description of the task to be created.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-18T08:42:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"        assert description !\u003d null : \"Task description must not be null\";","lastModifiedDate":"2025-09-06T12:59:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-18T08:42:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niyniy123"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niyniy123"},"content":"     * Marks the task as completed by setting its done status to true.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niyniy123"},"content":"    public void setDone() {","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niyniy123"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niyniy123"},"content":"     * Marks the task as not completed by setting its done status to false.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niyniy123"},"content":"     * This method can be used to revert a task back to incomplete status.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niyniy123"},"content":"    public void setNotDone() {","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niyniy123"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-17T14:06:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niyniy123"},"content":"     * Returns the status icon representing the task\u0027s completion state.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niyniy123"},"content":"     * @return \"X\" if the task is completed, a space \" \" if the task is not completed.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niyniy123"},"content":"     *         This icon is typically used in text-based displays of the task.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niyniy123"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-17T14:46:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niyniy123"},"content":"        return (isDone ? DONE_ICON : NOT_DONE_ICON); // mark done task with X","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-17T14:46:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-17T15:07:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niyniy123"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niyniy123"},"content":"     * The format includes the task\u0027s status icon in square brackets followed by","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niyniy123"},"content":"     * the task description.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niyniy123"},"content":"     * @return a formatted string containing the task\u0027s status icon and description","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niyniy123"},"content":"    @Override","lastModifiedDate":"2025-08-18T08:42:45","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niyniy123"},"content":"    public String toString() {","lastModifiedDate":"2025-08-17T15:07:46","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niyniy123"},"content":"        return LEFT_BRACKET + getStatusIcon() + RIGHT_BRACKET_SPACE + description;","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-17T15:07:46","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niyniy123"},"content":"     * Equality for tasks is based on the concrete class and the description only.","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niyniy123"},"content":"     * Completion status is intentionally ignored so that the same logical task","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niyniy123"},"content":"     * is considered a duplicate whether or not it has been marked done.","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niyniy123"},"content":"    @Override","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"niyniy123"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"niyniy123"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"niyniy123"},"content":"            return true;","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"niyniy123"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"niyniy123"},"content":"            return false;","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"niyniy123"},"content":"        Task task \u003d (Task) o;","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"niyniy123"},"content":"        return Objects.equals(this.description, task.description);","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false}],"authorContributionMap":{"niyniy123":86}},{"path":"src/main/java/jibjab/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":" * Manages a collection of tasks in the JibJab application.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":" * This class provides functionality to store, add, delete, and modify tasks,","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":" * as well as track their completion status.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":" *","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":" * @author niyniy123","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"public class TaskList {","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"    private static final String EMPTY_LIST_MESSAGE \u003d \"You have no tasks in the list\";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"    private static final String ITEM_NUMBER_SEPARATOR \u003d \".\";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"    private static final String NEWLINE \u003d \"\\n\";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"     * Initializes the internal task list with no tasks.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T23:07:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"     * Constructs a TaskList with an existing collection of tasks.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"     * This constructor can be used to initialize the TaskList with","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niyniy123"},"content":"     * pre-existing tasks, such as when loading from storage.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niyniy123"},"content":"     * @param tasks an ArrayList of Task objects to initialize the TaskList with.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niyniy123"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-25T23:07:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niyniy123"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-25T23:07:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-25T23:07:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T23:07:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niyniy123"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niyniy123"},"content":"     * @return true if there are no tasks in the list, false otherwise","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niyniy123"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-08-28T21:02:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niyniy123"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2025-08-28T21:02:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-28T21:02:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-28T21:02:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niyniy123"},"content":"     * Adds a new task to the end of the task list.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niyniy123"},"content":"     * @param task the Task object to be added to the list.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niyniy123"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niyniy123"},"content":"        assert task !\u003d null : \"Task to add must not be null\";","lastModifiedDate":"2025-09-06T13:00:07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niyniy123"},"content":"        this.tasks.add(task);","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niyniy123"},"content":"        assert this.tasks.get(this.tasks.size() - 1) \u003d\u003d task : \"Task should be appended at end\";","lastModifiedDate":"2025-09-06T13:00:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niyniy123"},"content":"     * Checks whether an equivalent task already exists in the list.","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niyniy123"},"content":"     * Equivalence is defined by Task.equals, which compares logical identity","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niyniy123"},"content":"     * (type + description [+ dates for Deadline/Event]) and ignores completion status.","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niyniy123"},"content":"     * @param task the task to check","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niyniy123"},"content":"     * @return true if a logically equivalent task is already present","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niyniy123"},"content":"    public boolean contains(Task task) {","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niyniy123"},"content":"        assert task !\u003d null : \"Task to check must not be null\";","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niyniy123"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niyniy123"},"content":"            if (t.equals(task)) {","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niyniy123"},"content":"                return true;","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niyniy123"},"content":"            }","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niyniy123"},"content":"        return false;","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"niyniy123"},"content":"     * Deletes a task from the list at the specified index.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"niyniy123"},"content":"     * @param idx the zero-based index of the task to be deleted","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"niyniy123"},"content":"    public Task deleteTask(int idx) {","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"niyniy123"},"content":"        assert idx \u003e\u003d 0 \u0026\u0026 idx \u003c this.tasks.size() : \"Delete index out of bounds\";","lastModifiedDate":"2025-09-06T13:00:07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"niyniy123"},"content":"        Task task \u003d this.tasks.get(idx);","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"niyniy123"},"content":"        this.tasks.remove(task);","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"niyniy123"},"content":"        return task;","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"niyniy123"},"content":"     * Marks a task at the specified index as completed.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"niyniy123"},"content":"     * @param idx the zero-based index of the task to mark as done","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"niyniy123"},"content":"    public Task markTaskAsDone(int idx) {","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"niyniy123"},"content":"        assert idx \u003e\u003d 0 \u0026\u0026 idx \u003c this.tasks.size() : \"Mark-done index out of bounds\";","lastModifiedDate":"2025-09-06T13:00:07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"niyniy123"},"content":"        Task task \u003d this.tasks.get(idx);","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"niyniy123"},"content":"        task.setDone();","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"niyniy123"},"content":"        return task;","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"niyniy123"},"content":"     * Marks a task at the specified index as not completed.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"niyniy123"},"content":"     * This can be used to revert a previously completed task back to undone status.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"niyniy123"},"content":"     * @param idx the zero-based index of the task to mark as not done","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"niyniy123"},"content":"    public Task markTaskAsNotDone(int idx) {","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"niyniy123"},"content":"        assert idx \u003e\u003d 0 \u0026\u0026 idx \u003c this.tasks.size() : \"Mark-not-done index out of bounds\";","lastModifiedDate":"2025-09-06T13:00:07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"niyniy123"},"content":"        Task task \u003d this.tasks.get(idx);","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"niyniy123"},"content":"        task.setNotDone();","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"niyniy123"},"content":"        return task;","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"niyniy123"},"content":"     * Finds tasks whose string representation contains the given keyword.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"niyniy123"},"content":"     * Prints a header and returns the matching tasks as a newline-separated list.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"niyniy123"},"content":"     * @param keyword substring to search for within each task\u0027s toString()","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"niyniy123"},"content":"     * @return newline-separated list of matching tasks; empty string if none match","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"niyniy123"},"content":"    public String findTasks(String keyword) {","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"niyniy123"},"content":"        int counter \u003d 1;","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"niyniy123"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"niyniy123"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"niyniy123"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"niyniy123"},"content":"                sb.append(counter).append(ITEM_NUMBER_SEPARATOR).append(task).append(NEWLINE);","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"niyniy123"},"content":"                counter++;","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"niyniy123"},"content":"            }","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"niyniy123"},"content":"        if (sb.length() \u003e 0) {","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"niyniy123"},"content":"            sb.setLength(sb.length() - 1);","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"niyniy123"},"content":"        return sb.toString();","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"niyniy123"},"content":"     * Returns the number of tasks currently in the list.","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"niyniy123"},"content":"    public int getSize() {","lastModifiedDate":"2025-09-07T15:43:20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"niyniy123"},"content":"        return this.tasks.size();","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"niyniy123"},"content":"     * Returns a string representation of all tasks in the list.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"niyniy123"},"content":"     * If the list is empty, returns a message indicating no tasks.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"niyniy123"},"content":"     * Otherwise, returns all tasks formatted with one task per line.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"niyniy123"},"content":"     * @return a string containing all tasks separated by newlines,","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"niyniy123"},"content":"     *         or a message indicating an empty list","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"niyniy123"},"content":"    @Override","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"niyniy123"},"content":"    public String toString() {","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"niyniy123"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-28T21:02:46","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"niyniy123"},"content":"            return EMPTY_LIST_MESSAGE;","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-09-06T15:57:37","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"niyniy123"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"niyniy123"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"niyniy123"},"content":"            sb.append(task).append(NEWLINE);","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"niyniy123"},"content":"        sb.setLength(sb.length() - 1);","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"niyniy123"},"content":"        return sb.toString();","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false}],"authorContributionMap":{"niyniy123":162}},{"path":"src/main/java/jibjab/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":" * Represents a simple task without any associated date/time.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"    private static final String TYPE_PREFIX \u003d \"[T]\";","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"     * Constructs a ToDo task with the given description.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"     * @param description details of the task to be done","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"        super(description);","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"     * Returns the string form prefixed with the ToDo marker [T].","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"     * @return formatted ToDo string","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"    @Override","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"    public String toString() {","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"        return TYPE_PREFIX + super.toString();","lastModifiedDate":"2025-09-06T14:44:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false}],"authorContributionMap":{"niyniy123":27}},{"path":"src/main/java/jibjab/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":" * Handles all console input and output interactions for the JibJab application.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":" * Provides helper methods to read user commands and common UI messages.","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"public class Ui {","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"    private Scanner input;","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-29T02:31:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"     * Creates a Ui instance backed by System.in for reading user input.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"    public Ui() {","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"        this.input \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"     * Returns the welcome banner shown when the application starts.","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"    public String showWelcome() {","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"        return \"Hello from JibJab\\nWhat can I do for you?\";","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"     * Returns the goodbye message shown when the application exits.","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"    public String showGoodbye() {","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niyniy123"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niyniy123"},"content":"     * Returns the message indicating loading tasks from storage failed and a new list will be created.","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niyniy123"},"content":"    public String showLoadingError() {","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niyniy123"},"content":"        return \"Failed to load tasks from file...creating new task list\";","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niyniy123"},"content":"     * Reads the next line command from the input stream, or returns an empty string if none is available.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niyniy123"},"content":"     * @return the next command line entered by the user, or an empty string when input is exhausted","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niyniy123"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niyniy123"},"content":"        if (input.hasNextLine()) {","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niyniy123"},"content":"            return input.nextLine();","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niyniy123"},"content":"        return \"\";","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niyniy123"},"content":"     * Returns a horizontal divider line used to separate sections of output.","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niyniy123"},"content":"    public String showLine() {","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niyniy123"},"content":"        return \"--------------------------------------\";","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niyniy123"},"content":"    // Task operation messages","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niyniy123"},"content":"    public String showTaskAdded(Task task, int count) {","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niyniy123"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task + \"\\nNow you have \" + count + \" tasks in the list\";","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niyniy123"},"content":"    public String showTaskDeleted(Task task, int count) {","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niyniy123"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + task + \"\\nNow you have \" + count + \" tasks in the list\";","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niyniy123"},"content":"    public String showTaskMarked(Task task) {","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niyniy123"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task;","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niyniy123"},"content":"    public String showTaskUnmarked(Task task) {","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niyniy123"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + task;","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-09-01T12:56:33","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false}],"authorContributionMap":{"niyniy123":75}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false}],"authorContributionMap":{"niyniy123":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"            fx:controller\u003d\"jibjab.MainWindow\"\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niyniy123"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niyniy123"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niyniy123"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niyniy123"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niyniy123"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niyniy123"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niyniy123"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niyniy123"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niyniy123"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niyniy123"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niyniy123"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niyniy123"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-01T12:14:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niyniy123"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-01T12:09:13","isFullCredit":false}],"authorContributionMap":{"niyniy123":43}},{"path":"src/test/java/jibjab/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":"    @Test","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"    public void testTaskComplete() {","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"        Deadline deadline \u003d new Deadline(\"test\", \"01/01/2077 18:00\");","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"        deadline.setDone();","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"        assertEquals(\"[D][X] test (by: Jan 01 2077 18:00)\", deadline.toString());","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false}],"authorContributionMap":{"niyniy123":14}},{"path":"src/test/java/jibjab/DuplicateTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":" * Tests for duplicate detection through JibJab.getResponse command handling.","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"public class DuplicateTaskTest {","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"    @Test","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"    public void testPreventToDoDuplicate() {","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"        JibJab bot \u003d new JibJab(\"test\");","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"        String first \u003d bot.getResponse(\"todo read book\");","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"        // Ensure first add succeeds and count is 1","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"        assertTrue(first.contains(\"Now you have 1 tasks in the list\"));","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"        String second \u003d bot.getResponse(\"todo read book\");","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"        assertEquals(\"This task already exists in your list!\", second);","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"        // list should still contain only one","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"        String list \u003d bot.getResponse(\"list\");","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"        assertEquals(\"[T][ ] read book\", list);","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"    @Test","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"    public void testPreventDeadlineDuplicate() {","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niyniy123"},"content":"        JibJab bot \u003d new JibJab(\"test\");","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"        String first \u003d bot.getResponse(\"deadline submit report /by Jan 01 2077 18:00\");","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niyniy123"},"content":"        assertTrue(first.contains(\"Now you have 1 tasks in the list\"));","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niyniy123"},"content":"        String dup \u003d bot.getResponse(\"deadline submit report /by Jan 01 2077 18:00\");","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niyniy123"},"content":"        assertEquals(\"This task already exists in your list!\", dup);","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niyniy123"},"content":"        String list \u003d bot.getResponse(\"list\");","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niyniy123"},"content":"        assertEquals(\"[D][ ] submit report (by: Jan 01 2077 18:00)\", list);","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niyniy123"},"content":"    @Test","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niyniy123"},"content":"    public void testPreventEventDuplicate() {","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niyniy123"},"content":"        JibJab bot \u003d new JibJab(\"test\");","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niyniy123"},"content":"        String first \u003d bot.getResponse(\"event party /from Jan 01 2077 18:00 /to Feb 01 2077 19:00\");","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niyniy123"},"content":"        assertTrue(first.contains(\"Now you have 1 tasks in the list\"));","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niyniy123"},"content":"        String dup \u003d bot.getResponse(\"event party /from Jan 01 2077 18:00 /to Feb 01 2077 19:00\");","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niyniy123"},"content":"        assertEquals(\"This task already exists in your list!\", dup);","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niyniy123"},"content":"        String list \u003d bot.getResponse(\"list\");","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niyniy123"},"content":"        assertEquals(\"[E][ ] party (from: Jan 01 2077 18:00 to: Feb 01 2077 19:00)\", list);","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-09-07T16:38:27","isFullCredit":false}],"authorContributionMap":{"niyniy123":53}},{"path":"src/test/java/jibjab/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"public class ParserTest {","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":"    @Test","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"    public void parseDeadline() {","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"        String input \u003d \"deadline test /by Jan 07 2077 18:00\";","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"        String actual \u003d Parser.parseDeadline(input)[1];","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"        assertEquals(\"Jan 07 2077 18:00\", actual);","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"    @Test","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"    public void parseEvent() {","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"        String input \u003d \"event blah /from Jan 01 2077 18:00 /to 01/02/2088 18:00\";","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"        String actualFrom \u003d Parser.parseEvent(input)[1];","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"        String actualTo \u003d Parser.parseEvent(input)[2];","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"        assertEquals(\"Jan 01 2077 18:00\", actualFrom);","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"        assertEquals(\"01/02/2088 18:00\", actualTo);","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false}],"authorContributionMap":{"niyniy123":23}},{"path":"src/test/java/jibjab/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"public class TaskListTest {","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":"    @Test","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"    public void testAdd() {","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"        taskList.addTask(new ToDo(\"task1\"));","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"        taskList.addTask(new Deadline(\"task2\", \"01/01/2077 18:00\"));","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"        taskList.addTask(new Event(\"task3\", \"01/01/2077 18:00\",","lastModifiedDate":"2025-09-16T02:15:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"                \"01/02/2077 19:00\"));","lastModifiedDate":"2025-09-16T02:15:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"        assertEquals(\"[T][ ] task1\\n[D][ ] task2 (by: Jan 01 2077 18:00)\\n\"","lastModifiedDate":"2025-08-31T20:23:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"                + \"[E][ ] task3 (from: Jan 01 2077 18:00 to: Feb 01 2077 19:00)\", taskList.toString());","lastModifiedDate":"2025-08-31T20:23:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"    @Test","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"    public void testRemove() {","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"        taskList.addTask(new ToDo(\"task1\"));","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"        taskList.addTask(new Deadline(\"task2\", \"01/01/2077 18:00\"));","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"        taskList.addTask(new Event(\"task3\", \"01/01/2077 18:00\",","lastModifiedDate":"2025-09-16T02:15:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"                \"01/02/2077 19:00\"));","lastModifiedDate":"2025-09-16T02:15:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"        taskList.deleteTask(2);","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"        assertEquals(\"[T][ ] task1\\n[D][ ] task2 (by: Jan 01 2077 18:00)\", taskList.toString());","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false}],"authorContributionMap":{"niyniy123":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"todo buy groceries","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"deadline do homework /by Sunday, 8pm","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"event party /from Monday, 12am /to Sunday, 12am","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"list","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"mark 1","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"mark 2","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"unmark 1","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":"mark 3","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"list","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"mark 1","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"bye","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false}],"authorContributionMap":{"niyniy123":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"java -classpath ../bin JibJab \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"niyniy123":1,"-":37}}]
