[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"# jibjab.JibJab","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"These are the project files for the JibJab chatbot. Given below are instructions on how to use it.","lastModifiedDate":"2025-08-18T08:41:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"1. After that, locate the `src/main/java/jibjab/JibJab.java` file, right-click it, and choose `Run JibJab.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"    Hello from JibJab","lastModifiedDate":"2025-08-18T08:41:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"    What can I do for you?","lastModifiedDate":"2025-08-18T08:41:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"niyniy123":5,"-":17}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"    mainClass.set(\"jibjab.JibJab\")","lastModifiedDate":"2025-08-26T22:32:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niyniy123"},"content":"    archiveBaseName \u003d \"jibjab\"","lastModifiedDate":"2025-08-26T22:32:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niyniy123"},"content":"    archiveFileName \u003d \u0027jibjab.jar\u0027","lastModifiedDate":"2025-08-28T21:00:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"niyniy123":3,"-":39}},{"path":"data/jibjab.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"[E][X] party (from: Oct 12 2020 12:00 to: Oct 12 2025 12:00)","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"[D][ ] get drunk (by: Dec 12 2012 23:59)","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"[T][ ] test","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false}],"authorContributionMap":{"niyniy123":3}},{"path":"src/main/java/jibjab/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":" * Represents a task with a specific deadline by which it must be completed.","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":" * A Deadline extends the Task class and includes a due date and time","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":" * to indicate when the task should be finished.","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":" *","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":" * @author niyniy123","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"     * Constructs a new Deadline task with the specified description and due date.","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"     * The constructor accepts flexible date-time formats for the deadline.","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"     * @param description the description of the task that needs to be completed","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"     * @param by the deadline date and time as a string. Accepted formats:","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"     *           \"dd/MM/yyyy HH:mm\" or \"MMM dd yyyy HH:mm\"","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"        super(description);","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"[dd/MM/yyyy HH:mm][MMM dd yyyy HH:mm]\");","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"        this.by \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niyniy123"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niyniy123"},"content":"     * The format includes the deadline type [D], the task status and description","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niyniy123"},"content":"     * and the formatted deadline date and time.","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niyniy123"},"content":"     * @return a formatted string representation of the deadline task including its type,","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niyniy123"},"content":"     *         status, description, and deadline in \"MMM dd yyyy HH:mm\" format","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:49:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niyniy123"},"content":"    @Override","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niyniy123"},"content":"    public String toString() {","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niyniy123"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niyniy123"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false}],"authorContributionMap":{"niyniy123":44}},{"path":"src/main/java/jibjab/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":" * Represents an event task with a specific duration defined by start and end times.","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":" *","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":" * @author niyniy123","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"     * Constructs a new Event with the given task description and time period.","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"     * @param description the description of the event task","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"     * @param from the starting date and time as a string. Accepted formats:","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"     *             \"dd/MM/yyyy HH:mm\" or \"MMM dd yyyy HH:mm\"","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"     * @param to the ending date and time as a string. Accepted formats:","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"     *           \"dd/MM/yyyy HH:mm\" or \"MMM dd yyyy HH:mm\"","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"     * @throws java.time.format.DateTimeParseException if the from or to strings","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"     *         cannot be parsed using the specified formats","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"        super(description);","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"[dd/MM/yyyy HH:mm][MMM dd yyyy HH:mm]\");","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"        this.from \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niyniy123"},"content":"        this.to \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niyniy123"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niyniy123"},"content":"     * The format includes the event type marker [E], the task status and description","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niyniy123"},"content":"     * and the formatted from/to times.","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niyniy123"},"content":"     * Example output: \"[E][X] Team meeting (from: Dec 25 2024 14:30 to: Dec 25 2024 16:00)\"","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niyniy123"},"content":"     * @return a formatted string representation of the event including its type marker,","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niyniy123"},"content":"     *         status, description, and time period in \"MMM dd yyyy HH:mm\" format","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:27:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niyniy123"},"content":"    @Override","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niyniy123"},"content":"    public String toString() {","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niyniy123"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niyniy123"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatter) + \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2025-08-25T00:16:32","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false}],"authorContributionMap":{"niyniy123":48}},{"path":"src/main/java/jibjab/JibJab.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":" * Entry point and main controller for the JibJab application.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":" * Wires together UI, storage and task list, and runs the command loop.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"public class JibJab {","lastModifiedDate":"2025-08-17T12:41:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"    private Ui ui;","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-24T12:54:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"     * Creates a JibJab instance using the given file path for persistence.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"     * Attempts to load existing tasks; if loading fails, starts with an empty list.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"     * @param filePath path to the data file used for saving/loading tasks","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"    public JibJab(String filePath) {","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"        try {","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"        } catch (JibJabException e) {","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-08-24T12:54:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-24T12:54:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-18T09:37:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"     * Launches the JibJab application.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niyniy123"},"content":"     * @param args command-line arguments (unused)","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niyniy123"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-29T02:31:30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niyniy123"},"content":"        new JibJab(\"data/jibjab.txt\").run();","lastModifiedDate":"2025-08-29T02:31:30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-29T02:31:30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-29T02:31:30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niyniy123"},"content":"     * Runs the main interactive command loop until the user exits.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niyniy123"},"content":"     * Reads commands, calls parser, and performs task operations and persistence.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niyniy123"},"content":"    public void run() {","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niyniy123"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niyniy123"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niyniy123"},"content":"        while (!isExit) {","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niyniy123"},"content":"            try {","lastModifiedDate":"2025-08-19T17:40:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niyniy123"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niyniy123"},"content":"                ui.showLine();","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niyniy123"},"content":"                String[] command \u003d Parser.parseCommand(fullCommand);","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niyniy123"},"content":"                switch (command[0]) {","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niyniy123"},"content":"                case \"bye\":","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niyniy123"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niyniy123"},"content":"                    ui.showGoodbye();","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niyniy123"},"content":"                    isExit \u003d true;","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niyniy123"},"content":"                    break;","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niyniy123"},"content":"                case \"todo\":","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niyniy123"},"content":"                    String taskDesc \u003d Parser.parseToDo(command);","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niyniy123"},"content":"                    tasks.addTask(new ToDo(taskDesc));","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niyniy123"},"content":"                    break;","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niyniy123"},"content":"                case \"deadline\":","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niyniy123"},"content":"                    String[] deadlineDetails \u003d Parser.parseDeadline(command[1]);","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niyniy123"},"content":"                    tasks.addTask(new Deadline(deadlineDetails[0], deadlineDetails[1]));","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niyniy123"},"content":"                    break;","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niyniy123"},"content":"                case \"event\":","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niyniy123"},"content":"                    String[] eventDetails \u003d Parser.parseEvent(command[1]);","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niyniy123"},"content":"                    tasks.addTask(new Event(eventDetails[0], eventDetails[1], eventDetails[2]));","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niyniy123"},"content":"                    break;","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niyniy123"},"content":"                case \"list\":","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niyniy123"},"content":"                    System.out.println(tasks);","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niyniy123"},"content":"                    break;","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niyniy123"},"content":"                case \"find\":","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niyniy123"},"content":"                    String keyword \u003d command[1];","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niyniy123"},"content":"                    System.out.println(tasks.findTasks(keyword));","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niyniy123"},"content":"                    break;","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"niyniy123"},"content":"                case \"mark\":","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"niyniy123"},"content":"                    tasks.markTaskAsDone(Parser.parseIndex(command[1]));","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"niyniy123"},"content":"                    break;","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"niyniy123"},"content":"                case \"unmark\":","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"niyniy123"},"content":"                    tasks.markTaskAsNotDone(Parser.parseIndex(command[1]));","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"niyniy123"},"content":"                    break;","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"niyniy123"},"content":"                case \"delete\":","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"niyniy123"},"content":"                    tasks.deleteTask(Parser.parseIndex(command[1]));","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"niyniy123"},"content":"                    break;","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"niyniy123"},"content":"                default:","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"niyniy123"},"content":"                    throw new JibJabException(\"I don\u0027t understand this command\");","lastModifiedDate":"2025-08-19T17:40:58","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"niyniy123"},"content":"                }","lastModifiedDate":"2025-08-19T17:40:58","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"niyniy123"},"content":"            } catch (JibJabException e) {","lastModifiedDate":"2025-08-19T17:40:58","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"niyniy123"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"niyniy123"},"content":"            } finally {","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"niyniy123"},"content":"                ui.showLine();","lastModifiedDate":"2025-08-26T00:43:00","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"niyniy123"},"content":"            }","lastModifiedDate":"2025-08-17T13:04:23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-08-17T13:04:23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false}],"authorContributionMap":{"niyniy123":93,"-":2}},{"path":"src/main/java/jibjab/JibJabException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":" * Custom checked exception used by the JibJab application to signal user and IO errors.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"public class JibJabException extends Exception {","lastModifiedDate":"2025-08-19T17:39:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":"     * Creates a new JibJabException with the specified detail message.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"     * @param message explanation of the problem","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"    public JibJabException(String message) {","lastModifiedDate":"2025-08-19T17:39:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"        super(message);","lastModifiedDate":"2025-08-19T17:39:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-19T17:39:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-19T17:39:39","isFullCredit":false}],"authorContributionMap":{"niyniy123":15}},{"path":"src/main/java/jibjab/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":" * Utility class for parsing user input commands in the JibJab application.","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":" * Provides static methods to parse different types of commands and extract","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":" * relevant information from user input strings.","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":" *","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":" * @author niyniy123","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"public class Parser {","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"     * Parses a command string by splitting it into command type and arguments.","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"     * The input is split at the first space, with the first part being the command","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"     * and the remainder being the arguments.","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"     * @param input the raw input string containing a command and its arguments","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"     * @return a String array where index 0 contains the command and index 1 contains","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"     *         the remaining arguments (if any).","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"    public static String[] parseCommand(String input) {","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"        return input.split(\" \", 2);","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"     * Extracts the task description from a parsed command array for a todo task.","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"     * Expects the description to be at index 1 of the input array.","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"     * @param input the parsed command array where index 0 is the command and","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"     *              index 1 should contain the task description","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niyniy123"},"content":"     * @return the task description string","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"     * @throws JibJabException if no task description is provided (array has insufficient elements)","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niyniy123"},"content":"    public static String parseToDo(String[] input) throws JibJabException {","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niyniy123"},"content":"        try {","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niyniy123"},"content":"            return input[1];","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niyniy123"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niyniy123"},"content":"            throw new JibJabException(\"You need to enter a task description\");","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niyniy123"},"content":"     * Parses a deadline task input string to separate the task description from the deadline.","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niyniy123"},"content":"     * The input format should be: \"task description /by deadline\"","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niyniy123"},"content":"     * @param input the deadline task string containing description and deadline separated by \" /by \"","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niyniy123"},"content":"     * @return a String array where index 0 contains the task description and","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niyniy123"},"content":"     *         index 1 contains the deadline","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niyniy123"},"content":"    public static String[] parseDeadline(String input) {","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niyniy123"},"content":"        return input.split(\" /by \");","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niyniy123"},"content":"     * Parses an event task input string to extract the task description, start datetime, and end datetime.","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niyniy123"},"content":"     * The input format should be: \"task description /from start_datetime /to end_datetime\"","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niyniy123"},"content":"     * @param input the event task string containing description, start datetime, and end datetime","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niyniy123"},"content":"     * @return a String array with three elements:","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niyniy123"},"content":"     *         [0] - task description,","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niyniy123"},"content":"     *         [1] - start datetime,","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niyniy123"},"content":"     *         [2] - end datetime","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niyniy123"},"content":"     * @throws ArrayIndexOutOfBoundsException if the input format is incorrect or missing required parts","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niyniy123"},"content":"    public static String[] parseEvent(String input) {","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niyniy123"},"content":"        String[] eventTask \u003d input.split(\" /from \");","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niyniy123"},"content":"        String[] fromTo \u003d eventTask[1].split(\" /to \");","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niyniy123"},"content":"        return new String[]{eventTask[0], fromTo[0], fromTo[1]};","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niyniy123"},"content":"     * Parses a user-provided index (1-based) and converts it to a 0-based array index.","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niyniy123"},"content":"     * Used for tasklist operations","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niyniy123"},"content":"     * @param input the string representation of a 1-based index","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niyniy123"},"content":"     * @return the corresponding 0-based index for tasklist access","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"niyniy123"},"content":"     * @throws NumberFormatException if the input string cannot be parsed as an integer","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:21:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"niyniy123"},"content":"    public static int parseIndex(String input) {","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"niyniy123"},"content":"        return Integer.parseInt(input) - 1;","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-26T00:38:49","isFullCredit":false}],"authorContributionMap":{"niyniy123":81}},{"path":"src/main/java/jibjab/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"import java.io.File;","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":" * Handles persistence of tasks to and from a file on disk.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":" * The file format matches the output of TaskList#toString() and is parsed back into Task objects.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"public class Storage {","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"    private Scanner sc;","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"    private String filePath;","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"     * Creates a Storage bound to the given file path.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"     * @param filePath absolute or relative path to the tasks data file","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"     * Saves all tasks to the configured file. If the list is empty, nothing is written.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"     * @param tasks the TaskList to persist","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niyniy123"},"content":"     * @throws JibJabException if writing fails, typically due to missing folders or IO errors","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niyniy123"},"content":"    public void saveTasks(TaskList tasks) throws JibJabException {","lastModifiedDate":"2025-08-28T21:02:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niyniy123"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-28T21:02:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niyniy123"},"content":"            return;","lastModifiedDate":"2025-08-28T21:02:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-08-28T21:02:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niyniy123"},"content":"        try {","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niyniy123"},"content":"            PrintWriter pw \u003d new PrintWriter(this.filePath);","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niyniy123"},"content":"            pw.print(tasks);","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niyniy123"},"content":"            pw.close();","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niyniy123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niyniy123"},"content":"            throw new JibJabException(e.getMessage() + \"\\nEnsure the data folder is present\");","lastModifiedDate":"2025-08-28T21:02:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niyniy123"},"content":"     * Loads tasks from the configured file, if it exists.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niyniy123"},"content":"     * Parses each line to reconstruct Task instances of the appropriate type.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niyniy123"},"content":"     * @return a list of tasks loaded from storage; empty if no file exists","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niyniy123"},"content":"     * @throws JibJabException if the file exists but cannot be read","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niyniy123"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws JibJabException {","lastModifiedDate":"2025-08-26T00:40:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niyniy123"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-08-25T23:07:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niyniy123"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niyniy123"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niyniy123"},"content":"            try {","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niyniy123"},"content":"                sc \u003d new Scanner(file);","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niyniy123"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-08-26T00:40:58","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niyniy123"},"content":"                throw new JibJabException(\"Failed to load from file!\");","lastModifiedDate":"2025-08-26T00:40:58","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niyniy123"},"content":"            }","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niyniy123"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niyniy123"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niyniy123"},"content":"                String taskType \u003d Character.toString(line.charAt(1));","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niyniy123"},"content":"                String taskStatus \u003d Character.toString(line.charAt(4));","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niyniy123"},"content":"                String taskDesc \u003d line.substring(7);","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niyniy123"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niyniy123"},"content":"                    ToDo task \u003d new ToDo(taskDesc);","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niyniy123"},"content":"                    if (taskStatus.equals(\"X\")) {","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niyniy123"},"content":"                        task.setDone();","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niyniy123"},"content":"                    }","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niyniy123"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-08-25T23:07:35","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niyniy123"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"niyniy123"},"content":"                    String[] split \u003d taskDesc.split(\" \\\\(by: \");","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"niyniy123"},"content":"                    String taskBy \u003d split[1].substring(0, split[1].indexOf(\")\"));","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"niyniy123"},"content":"                    Deadline task \u003d new Deadline(split[0], taskBy);","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"niyniy123"},"content":"                    if (taskStatus.equals(\"X\")) {","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"niyniy123"},"content":"                        task.setDone();","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"niyniy123"},"content":"                    }","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"niyniy123"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-08-25T23:07:35","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"niyniy123"},"content":"                } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"niyniy123"},"content":"                    String[] split \u003d taskDesc.split(\" \\\\(from: \");","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"niyniy123"},"content":"                    String[] fromTo \u003d split[1].split(\" to: \");","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"niyniy123"},"content":"                    String from \u003d fromTo[0];","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"niyniy123"},"content":"                    String to \u003d fromTo[1].substring(0, fromTo[1].indexOf(\")\"));","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"niyniy123"},"content":"                    Event task \u003d new Event(split[0], from, to);","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"niyniy123"},"content":"                    if (taskStatus.equals(\"X\")) {","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"niyniy123"},"content":"                        task.setDone();","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"niyniy123"},"content":"                    }","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"niyniy123"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-08-25T23:07:35","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"niyniy123"},"content":"                } else {","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"niyniy123"},"content":"                    System.err.println(\"Unknown task type: \" + taskType);","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"niyniy123"},"content":"                }","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"niyniy123"},"content":"            }","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"niyniy123"},"content":"        return tasks;","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false}],"authorContributionMap":{"niyniy123":100}},{"path":"src/main/java/jibjab/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":" * Represents a task in the JibJab application.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":" * This is the base class for all task types (ToDo, Deadline, Event) and provides","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":" * common functionality for task description and task completion.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":" *","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":" * @author niyniy123","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"public class Task {","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"    protected String description;","lastModifiedDate":"2025-08-18T08:42:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-17T14:46:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"     * The task is initially marked as not done (incomplete).","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"     * @param description the description of the task to be created.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-18T08:42:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-18T08:42:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"     * Marks the task as completed by setting its done status to true.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"    public void setDone() {","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niyniy123"},"content":"     * Marks the task as not completed by setting its done status to false.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niyniy123"},"content":"     * This method can be used to revert a task back to incomplete status.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niyniy123"},"content":"    public void setNotDone() {","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niyniy123"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-17T14:06:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niyniy123"},"content":"     * Returns the status icon representing the task\u0027s completion state.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niyniy123"},"content":"     * @return \"X\" if the task is completed, a space \" \" if the task is not completed.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niyniy123"},"content":"     *         This icon is typically used in text-based displays of the task.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niyniy123"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-17T14:46:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niyniy123"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-08-17T14:46:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-17T14:46:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-17T15:07:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niyniy123"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niyniy123"},"content":"     * The format includes the task\u0027s status icon in square brackets followed by","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niyniy123"},"content":"     * the task description.","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niyniy123"},"content":"     * @return a formatted string containing the task\u0027s status icon and description","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:37:40","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niyniy123"},"content":"    @Override","lastModifiedDate":"2025-08-18T08:42:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niyniy123"},"content":"    public String toString() {","lastModifiedDate":"2025-08-17T15:07:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niyniy123"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-08-18T08:42:45","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-17T15:07:46","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-17T14:02:12","isFullCredit":false}],"authorContributionMap":{"niyniy123":61}},{"path":"src/main/java/jibjab/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":" * Manages a collection of tasks in the JibJab application.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":" * This class provides functionality to store, add, delete, and modify tasks,","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":" * as well as track their completion status.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":" *","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":" * @author niyniy123","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"public class TaskList {","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"     * Initializes the internal task list with no tasks.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T23:07:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"     * Constructs a TaskList with an existing collection of tasks.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"     * This constructor can be used to initialize the TaskList with","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"     * pre-existing tasks, such as when loading from storage.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"     * @param tasks an ArrayList of Task objects to initialize the TaskList with.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niyniy123"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-25T23:07:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-25T23:07:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-25T23:07:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T23:07:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niyniy123"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niyniy123"},"content":"     * @return true if there are no tasks in the list, false otherwise","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niyniy123"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-08-28T21:02:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niyniy123"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2025-08-28T21:02:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-28T21:02:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-28T21:02:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niyniy123"},"content":"     * Adds a new task to the end of the task list.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niyniy123"},"content":"     * @param task the Task object to be added to the list.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niyniy123"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niyniy123"},"content":"        this.tasks.add(task);","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niyniy123"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niyniy123"},"content":"        System.out.println(task);","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niyniy123"},"content":"        System.out.println(\"Now you have \" + this.tasks.size() + \" tasks in the list\");","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niyniy123"},"content":"     * Deletes a task from the list at the specified index.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niyniy123"},"content":"     * @param idx the zero-based index of the task to be deleted","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niyniy123"},"content":"    public void deleteTask(int idx) {","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niyniy123"},"content":"        Task task \u003d this.tasks.get(idx);","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niyniy123"},"content":"        this.tasks.remove(task);","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niyniy123"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niyniy123"},"content":"        System.out.println(task);","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niyniy123"},"content":"        System.out.println(\"Now you have \" + this.tasks.size() + \" tasks in the list\");","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niyniy123"},"content":"     * Marks a task at the specified index as completed.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niyniy123"},"content":"     * @param idx the zero-based index of the task to mark as done","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niyniy123"},"content":"    public void markTaskAsDone(int idx) {","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niyniy123"},"content":"        Task task \u003d this.tasks.get(idx);","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niyniy123"},"content":"        task.setDone();","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"niyniy123"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + task);","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"niyniy123"},"content":"     * Marks a task at the specified index as not completed.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"niyniy123"},"content":"     * This can be used to revert a previously completed task back to undone status.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"niyniy123"},"content":"     * @param idx the zero-based index of the task to mark as not done","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"niyniy123"},"content":"    public void markTaskAsNotDone(int idx) {","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"niyniy123"},"content":"        Task task \u003d this.tasks.get(idx);","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"niyniy123"},"content":"        task.setNotDone();","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"niyniy123"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + task);","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"niyniy123"},"content":"     * Finds tasks whose string representation contains the given keyword.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"niyniy123"},"content":"     * Prints a header and returns the matching tasks as a newline-separated list.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"niyniy123"},"content":"     * @param keyword substring to search for within each task\u0027s toString()","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"niyniy123"},"content":"     * @return newline-separated list of matching tasks; empty string if none match","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"niyniy123"},"content":"    public String findTasks(String keyword) {","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"niyniy123"},"content":"        int counter \u003d 1;","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"niyniy123"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"niyniy123"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"niyniy123"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"niyniy123"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"niyniy123"},"content":"                sb.append(counter).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"niyniy123"},"content":"                counter++;","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"niyniy123"},"content":"            }","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"niyniy123"},"content":"        if (sb.length() \u003e 0) {","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"niyniy123"},"content":"            sb.setLength(sb.length() - 1);","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"niyniy123"},"content":"        return sb.toString();","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-29T02:44:50","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"niyniy123"},"content":"     * Returns a string representation of all tasks in the list.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"niyniy123"},"content":"     * If the list is empty, returns a message indicating no tasks.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"niyniy123"},"content":"     * Otherwise, returns all tasks formatted with one task per line.","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"niyniy123"},"content":"     * @return a string containing all tasks separated by newlines,","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"niyniy123"},"content":"     *         or a message indicating an empty list","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-28T23:46:02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"niyniy123"},"content":"    @Override","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"niyniy123"},"content":"    public String toString() {","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"niyniy123"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-28T21:02:46","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"niyniy123"},"content":"            return \"You have no tasks in the list\";","lastModifiedDate":"2025-08-28T21:02:46","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"niyniy123"},"content":"        } else {","lastModifiedDate":"2025-08-28T21:02:46","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"niyniy123"},"content":"            int counter \u003d 1;","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"niyniy123"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"niyniy123"},"content":"            //System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"niyniy123"},"content":"            for (Task task : this.tasks) {","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"niyniy123"},"content":"                sb.append(task).append(\"\\n\");","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"niyniy123"},"content":"                counter++;","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"niyniy123"},"content":"            }","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"niyniy123"},"content":"            sb.setLength(sb.length() - 1);","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"niyniy123"},"content":"            return sb.toString();","lastModifiedDate":"2025-08-25T22:58:33","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-25T20:51:35","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-28T21:02:46","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-28T21:02:46","isFullCredit":false}],"authorContributionMap":{"niyniy123":140}},{"path":"src/main/java/jibjab/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":" * Represents a simple task without any associated date/time.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":"     * Constructs a ToDo task with the given description.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"     * @param description details of the task to be done","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"        super(description);","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"     * Returns the string form prefixed with the ToDo marker [T].","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"     * @return formatted ToDo string","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"    @Override","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"    public String toString() {","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-18T09:35:03","isFullCredit":false}],"authorContributionMap":{"niyniy123":25}},{"path":"src/main/java/jibjab/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T22:12:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"/**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":" * Handles all console input and output interactions for the JibJab application.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":" * Provides helper methods to read user commands and print common UI messages.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":" */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"public class Ui {","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"    private Scanner input;","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-29T02:31:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"     * Creates a Ui instance backed by System.in for reading user input.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"    public Ui() {","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"        this.input \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"     * Prints the welcome banner shown when the application starts.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"        System.out.println(\"Hello from JibJab\");","lastModifiedDate":"2025-08-26T22:33:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"     * Prints the goodbye message shown when the application exits.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niyniy123"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niyniy123"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niyniy123"},"content":"     * Notifies the user that loading tasks from storage failed and a new list will be created.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niyniy123"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niyniy123"},"content":"        System.out.println(\"Failed to load tasks from file...creating new task list\");","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niyniy123"},"content":"     * Reads the next line command from the input stream, or returns an empty string if none is available.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niyniy123"},"content":"     * @return the next command line entered by the user, or an empty string when input is exhausted","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niyniy123"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niyniy123"},"content":"        if (input.hasNextLine()) {","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niyniy123"},"content":"            return input.nextLine();","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niyniy123"},"content":"        }","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niyniy123"},"content":"        return \"\";","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niyniy123"},"content":"     * Prints an error message to the error stream.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niyniy123"},"content":"     *","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niyniy123"},"content":"     * @param message the error details to display","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niyniy123"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niyniy123"},"content":"        System.err.println(message);","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niyniy123"},"content":"    /**","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niyniy123"},"content":"     * Prints a horizontal divider line used to separate sections of output.","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niyniy123"},"content":"     */","lastModifiedDate":"2025-08-31T16:18:58","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niyniy123"},"content":"    public void showLine() {","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niyniy123"},"content":"        System.out.println(\"--------------------------------------\");","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-26T00:39:19","isFullCredit":false}],"authorContributionMap":{"niyniy123":68}},{"path":"src/test/java/jibjab/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":"    @Test","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"    public void testTaskComplete() {","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"        Deadline deadline \u003d new Deadline(\"test\", \"01/01/2077 18:00\");","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"        deadline.setDone();","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"        assertEquals(\"[D][X] test (by: Jan 01 2077 18:00)\", deadline.toString());","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false}],"authorContributionMap":{"niyniy123":14}},{"path":"src/test/java/jibjab/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"public class ParserTest {","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":"    @Test","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"    public void parseDeadline() {","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"        String input \u003d \"deadline test /by Jan 07 2077 18:00\";","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"        String actual \u003d Parser.parseDeadline(input)[1];","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"        assertEquals(\"Jan 07 2077 18:00\", actual);","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"    @Test","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"    public void parseEvent() {","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"        String input \u003d \"event blah /from Jan 01 2077 18:00 /to 01/02/2088 18:00\";","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"        String actualFrom \u003d Parser.parseEvent(input)[1];","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"        String actualTo \u003d Parser.parseEvent(input)[2];","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"        assertEquals(\"Jan 01 2077 18:00\", actualFrom);","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"        assertEquals(\"01/02/2088 18:00\", actualTo);","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-28T19:38:21","isFullCredit":false}],"authorContributionMap":{"niyniy123":23}},{"path":"src/test/java/jibjab/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"package jibjab;","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"public class TaskListTest {","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":"    @Test","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"    public void testAdd() {","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"        taskList.addTask(new ToDo(\"task1\"));","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niyniy123"},"content":"        taskList.addTask(new Deadline(\"task2\", \"01/01/2077 18:00\"));","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niyniy123"},"content":"        taskList.addTask(new Event(\"task3\", \"01/01/2077 18:00\", \"01/02/2077 19:00\"));","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niyniy123"},"content":"        assertEquals(\"[T][ ] task1\\n[D][ ] task2 (by: Jan 01 2077 18:00)\\n\" +","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niyniy123"},"content":"                \"[E][ ] task3 (from: Jan 01 2077 18:00 to: Feb 01 2077 19:00)\", taskList.toString());","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niyniy123"},"content":"    @Test","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niyniy123"},"content":"    public void testRemove() {","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niyniy123"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niyniy123"},"content":"        taskList.addTask(new ToDo(\"task1\"));","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"        taskList.addTask(new Deadline(\"task2\", \"01/01/2077 18:00\"));","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niyniy123"},"content":"        taskList.addTask(new Event(\"task3\", \"01/01/2077 18:00\", \"01/02/2077 19:00\"));","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niyniy123"},"content":"        taskList.deleteTask(2);","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niyniy123"},"content":"        assertEquals(\"[T][ ] task1\\n[D][ ] task2 (by: Jan 01 2077 18:00)\", taskList.toString());","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niyniy123"},"content":"","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niyniy123"},"content":"    }","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niyniy123"},"content":"}","lastModifiedDate":"2025-08-26T23:28:53","isFullCredit":false}],"authorContributionMap":{"niyniy123":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"niyniy123"},"content":"todo buy groceries","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niyniy123"},"content":"deadline do homework /by Sunday, 8pm","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niyniy123"},"content":"event party /from Monday, 12am /to Sunday, 12am","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niyniy123"},"content":"list","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niyniy123"},"content":"mark 1","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niyniy123"},"content":"mark 2","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niyniy123"},"content":"unmark 1","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niyniy123"},"content":"mark 3","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niyniy123"},"content":"list","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niyniy123"},"content":"mark 1","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niyniy123"},"content":"bye","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false}],"authorContributionMap":{"niyniy123":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niyniy123"},"content":"java -classpath ../bin JibJab \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-19T11:45:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"niyniy123":1,"-":37}}]
